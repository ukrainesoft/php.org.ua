{"pageProps":{"page":{"slug":"domchildnode.after.md","content":"# DOMChildNode::after\n\n(PHP 8)\n\nDOMChildNode::after — Додає вузли після вузла\n\n### Опис\n\n```methodsynopsis\npublic DOMChildNode::after(DOMNode|string ...$nodes): void\n```\n\nДодає передані `nodes`после узла.\n\n### Список параметрів\n\n`nodes`\n\nВузли, які потрібно додати після вузла. Рядки автоматично перетворюються на текстові вузли.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Помилки\n\n**`DOM_HIERARCHY_REQUEST_ERR`**\n\nВиникає, якщо тип одного з переданих у параметрі `nodes` елементів не допускається в типі батьківського вузла, або якщо вузол, що додається, є одним з предків цього вузла або самим цим вузлом.\n\n**`DOM_WRONG_DOCUMENT_ERR`**\n\nВиникає, якщо один із переданих у параметрі `nodes` елементів було створено з документа, відмінного від цього, у якому було створено цей вузол.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Виклик цього методу на вузлі, у якого немає батьківського вузла, тепер нічого не робить, щоб привести поведінку у відповідність до специфікації DOM. Раніше це викидало виняток [DOMException](class.domexception.md) з кодом **`DOM_HIERARCHY_REQUEST_ERR`** |\n| 8.3.0 | Виклик цього методу на вузлі без документа власника працює. Раніше це викидало виняток [DOMException](class.domexception.md) з кодом **`DOM_HIERARCHY_REQUEST_ERR`** |\n\n### Дивіться також\n\n-   [DOMChildNode::before()](domchildnode.before.md) \\- Додає вузли перед вузлом\n-   [DOMChildNode::remove()](domchildnode.remove.md) \\- видаляє вузол\n-   [DOMChildNode::replaceWith()](domchildnode.replacewith.md) \\- Замінює вузол на нові вузли\n-   [DOMNode::appendChild()](domnode.appendchild.md) \\- Додає новий дочірній вузол до кінця списку нащадків\n","title":"DOMChildNode::after","contentType":2,"navigation":[{"class.domchildnode.md":"« DOMChildNode"},{"domchildnode.before.md":"DOMChildNode::before »"},{"index.md":"PHP Manual"},{"class.domchildnode.md":"DOMChildNode"}]}},"__N_SSG":true}