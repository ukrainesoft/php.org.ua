{"pageProps":{"page":{"slug":"userlandnaming.tips.md","content":"## Поради\n\nДля написання коду з прицілом на майбутнє, рекомендується не поміщати багато змінних, функцій та класів у глобальний простір імен. Це допоможе уникнути конфліктів із сторонніми бібліотеками, а також можливих майбутніх додатків до мови. яким може бути доданий у майбутньому.\n\nОдним із найпоширеніших способів уникнути конфліктів класів та функцій, це визначати їх у своєму власному, окремому [просторі імен](language.namespaces.md)\n\n```php\n<?php\n\nnamespace MyProject;\n\nfunction my_function() {\n    return true;\n}\n\n\\MyProject\\my_function();\n```\n\nВам все ще потрібно відстежувати вже використовувані простори імен, але одного разу визначившись з ним, ви можете додати до нього всі функції та класи, не думаючи про можливі проблеми.\n\nМаксимально обмежувати кількість змінних у глобальному просторі імен є гарною практикою. Це дозволить мінімізувати можливість конфліктів із стороннім кодом, який ви вирішите додати до свого проекту.\n\n> **Зауваження** **Область видимості змінних**\n> \n> Согласно правилам[області видимості](language.variables.scope.md) у PHP змінні, визначені всередині функцій та класів не можуть конфліктувати зі змінними, заданими у глобальній області видимості.\n","title":"Поради","contentType":2,"navigation":[{"userlandnaming.rules.md":"« Правила"},{"about.md":"Про це керівництво »"},{"index.md":"PHP Manual"},{"userlandnaming.md":"Посібник з іменування"}]}},"__N_SSG":true}