{"pageProps":{"page":{"slug":"configuration.file.md","content":"## Файл конфігурації\n\nФайл конфігурації (php.ini) зчитується під час запуску PHP. Для версій серверних модулів PHP це відбувається лише один раз під час запуску веб-сервера. Для CGI та CLI версій це відбувається під час кожного виклику.\n\nПошук php.ini провадиться в наступних місцях (по порядку пошуку):\n\n-   За місцем розташування модуля SAPI (`PHPIniDir`директива Apache 2,`-c`параметр командного рядка CGI та CLI)\n-   Змінне середовище PHPRC.\n-   Розташування файлу`php.ini`може бути вказано до різних версій PHP. Кореневий ключ реєстру залежить від розрядності операційної системи та встановлення PHP. Для 32-розрядного PHP на 32-розрядному Windows або 64-розрядному PHP та 64-розрядному Windows використовуйте`[(HKEY_LOCAL_MACHINE\\SOFTWARE\\PHP]`. Для 32-розрядного PHP на 64-розрядному Windows`[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\PHP]`. Наступні ключі реєстру досліджуються при пошуку для установок з розрядністю, що збігається:`[HKEY_LOCAL_MACHINE\\SOFTWARE\\PHP\\x.y.z]` `[HKEY_LOCAL_MACHINE\\SOFTWARE\\PHP\\x.y]`и`[HKEY_LOCAL_MACHINE\\SOFTWARE\\PHP\\x]`, де x, y і z мають на увазі major, minor і release версії PHP. Для 32-розрядного PHP на 64-розрядному Windows ключі реєстру будуть іншими:`[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6421Node\\PHP\\x.y.z]` `[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6421Node\\PHP\\x.y]`и`[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6421Node\\PHP\\x]`. Якщо також є значення`IniFilePath`у будь-якому з цих ключів, то місцезнаходження`php.ini`буде визначено першим ключем по порядку (тільки для Windows).\n-   `[HKEY_LOCAL_MACHINE\\SOFTWARE\\PHP]`или`[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\PHP]`, значение`IniFilePath`(лише для Windows).\n-   Поточна директорія (за винятком CLI).\n-   Директорія веб-сервера (для модулів SAPI) або директорія PHP (інакше Windows).\n-   У директорії Windows (C:\\\\windows або C:\\\\winnt) (для Windows) або`--with-config-file-path`з вибором під час компіляції.\n\nЯкщо файл php-SAPI.ini існує, де SAPI - це поточний інтерфейс, наприклад php-cli.ini або php-apache.ini, він буде обраний замість файлу php.ini. Назву SAPI-інтерфейсу між веб-сервером і PHP можна дізнатися через функцію [php\\_sapi\\_name()](function.php-sapi-name.md)\n\n> **Зауваження** :\n> \n> Веб-сервер Apache змінює поточну директорію на кореневу під час запуску, внаслідок чого PHP зчитує php.ini з кореневої файлової системи, якщо файл існує.\n\nУ файлі php.ini можна вказувати змінні оточення, як показано нижче.\n\n**Приклад #1 Змінні оточення у файлі php.ini**\n\n; PHP\\_MEMORY\\_LIMIT взята зі змінних оточення memory\\_limit = ${PHP\\_MEMORY\\_LIMIT}\n\nДирективи файлу php.ini, що обробляються модулями, описані на сторінках модулів. Список директив ядра наведено у додатку « [Директиви php.ini](ini.md) ». Не всі директиви PHP документовані у цьому посібнику: повний список доступних у встановленій версії PHP директив викладено у докладних коментарях у файлі php.ini. Як альтернатива, [»остання версія php.ini](https://github.com/php/php-src/blob/master/php.ini-production)доступна в репозитории Git.\n\n**Приклад #2 Приклад php.ini**\n\n; будь-який текст у рядку після крапки з комою (;) без лапок ігнорується\\[php\\] ; маркери розділів (текст у квадратних дужках) також ігнорується ; Можуть бути встановлені такі логічні значення: ; true, on, yes ; або false, off, no, none register\\_globals = off track\\_errors = yes\n\n; ви можете укладати рядки в подвійні лапки include\\_path = \".:/usr/local/lib/php\"\n\n; зворотний сліш обробляється так само, як будь-які інші символи include\\_path = \".;c:\\\\php\\\\lib\"\n\nМожливо звертатися до існуючих ini-змінних із ini-файлів. Приклад: `open_basedir = ${open_basedir} \":/new/dir\"`\n\n### Сканування директорій\n\nІснує можливість налаштувати PHP для сканування директорій у пошуках .ini-файлів після зчитування php.ini. Це можна зробити на момент компіляції, вказавши опцію **\\--with-config-file-scan-dir**. Сканування директорій може бути перевизначено під час виконання установкою змінного середовища PHP\\_INI\\_SCAN\\_DIR.\n\nМожна сканувати кілька директорій, розділяючи їх роздільником, який використовується у вашій операційній системі ( у Windows, NetWare та RISC OS; `:` на решті платформ; у PHP є константа **`PATH_SEPARATOR`**, яку можна використовувати) Якщо PHP\\_INI\\_SCAN\\_DIR порожня, то PHP також скануватиме директорію, задану на етапі компіляції за допомогою **\\--with-config-file-scan-dir**\n\nУ кожній директорії PHP сканує всі файли, що закінчуються на `.ini` в алфавітному порядку. Список усіх завантажених файлів у порядку, в якому вони були завантажені, доступний за допомогою функції [php\\_ini\\_scanned\\_files()](function.php-ini-scanned-files.md), либо при запуске PHP с опцией**\\--ini**\n\n```\nДопустим, что PHP сконфигурирован с --with-config-file-scan-dir=/etc/php.d,\nи разделитель путей :...\n\n$ php\n  PHP загрузит все файлы /etc/php.d/*.ini как конфигурационные.\n\n$ PHP_INI_SCAN_DIR=/usr/local/etc/php.d php\n  PHP загрузит все файлы /usr/local/etc/php.d/*.ini как конфигурационные.\n\n$ PHP_INI_SCAN_DIR=:/usr/local/etc/php.d php\n  PHP загрузит все файлы /etc/php.d/*.ini, а потом\n  /usr/local/etc/php.d/*.ini как конфигурационные.\n\n$ PHP_INI_SCAN_DIR=/usr/local/etc/php.d: php\n  PHP загрузит все файлы /usr/local/etc/php.d/*.ini, а потом\n  /etc/php.d/*.ini как конфигурационные.\n```\n","title":"Файл конфігурації","contentType":2,"navigation":[{"configuration.md":"« Конфігурація часу виконання"},{"configuration.file.per-user.md":"Файли .user.ini »"},{"index.md":"PHP Manual"},{"configuration.md":"Конфігурація часу виконання"}]}},"__N_SSG":true}