{"pageProps":{"page":{"slug":"datetime.diff.md","content":"# DateTimeInterface::diff\n\n# DateTimeImmutable::diff\n\n# DateTime::diff\n\n# date\\_diff\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nDateTimeInterface::diff -- DateTimeImmutable::diff -- DateTime::diff -- date\\_diff — Повертає різницю між двома об'єктами DateTime\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic DateTimeInterface::diff(DateTimeInterface $targetObject, bool $absolute = false): DateInterval\n```\n\n```methodsynopsis\npublic DateTimeImmutable::diff(DateTimeInterface $targetObject, bool $absolute = false): DateInterval\n```\n\n```methodsynopsis\npublic DateTime::diff(DateTimeInterface $targetObject, bool $absolute = false): DateInterval\n```\n\nПроцедурний стиль\n\n```methodsynopsis\ndate_diff(DateTimeInterface $baseObject, DateTimeInterface $targetObject, bool $absolute = false): DateInterval\n```\n\nПовертає різницю між двома об'єктами [DateTimeInterface](class.datetimeinterface.md)\n\n### Список параметрів\n\n`datetime`\n\nДата та час для порівняння.\n\n`absolute`\n\nВизначає, чи інтервал примусово переведений в абсолютну величину.\n\n### Значення, що повертаються\n\nПовертає об'єкт [DateInterval](class.dateinterval.md)який представляє різницю між двома датами.\n\nЗначення, що повертається, більш конкретно представляє часовий інтервал, який при застосуванні до вихідного об'єкта (`$this`или`$originObject`) призводить до об'єкту `$targetObject`. Цей процес не завжди оборотний.\n\nМетод враховує зміну часових поясів і тому може повертати інтервал `24 hours and 30 minutes`, як у одному з прикладів. Якщо потрібно розраховувати за абсолютним часом, необхідно спочатку перетворити об'єкти `$this` `$baseObject`и`$targetObject`в UTC.\n\n### Приклади\n\n**Приклад #1 Приклад использования метода**DateTimeInterface::diff()\\*\\* з діапазоном дат\\*\\*\n\nЗначення, яке повертає метод, - це точна кількість часу, яка необхідна для переходу від часу об'єкта `$this` на час об'єкта `$targetObject`. Тому порівняння 1 січня із 31 грудня повертає 364 дні, а не 365 днів (для невисокосних років).\n\n```php\n<?php\n$originalTime = new DateTimeImmutable(\"2023-01-01 UTC\");\n$targedTime = new DateTimeImmutable(\"2023-12-31 UTC\");\n$interval = $originalTime->diff($targedTime);\necho \"Полных дней: \", $interval->format(\"%a\"), \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПолных дней: 364\n```\n\n**Приклад #2 Приклад використання** DateTimeImmutable::diff()\\*\\*\\*\\*\n\nОб'єктно-орієнтований стиль\n\n```php\n<?php\n$origin = new DateTimeImmutable('2009-10-11');\n$target = new DateTimeImmutable('2009-10-13');\n$interval = $origin->diff($target);\necho $interval->format('%R%a дней');\n?>\n```\n\nПроцедурний стиль\n\n```php\n<?php\n$origin = date_create('2009-10-11');\n$target = date_create('2009-10-13');\n$interval = date_diff($origin, $target);\necho $interval->format('%R%a дней');\n?>\n```\n\nРезультат виконання наведених прикладів:\n\n```\n+2 days\n```\n\n**Приклад #3 Приклад використання** DateTimeInterface::diff()**во время перехода на летнее время**\n\n```php\n<?php\n$originalTime = new DateTimeImmutable(\"2021-10-30 09:00:00 Europe/London\");\n$targedTime = new DateTimeImmutable(\"2021-10-31 08:30:00 Europe/London\");\n$interval = $originalTime->diff($targedTime);\necho $interval->format(\"%H:%I:%S (Полных дней: %a)\"), \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n24:30:00 (Полных дней: 0)\n```\n\n**Приклад #4 Порівняння об'єктів [DateTime](class.datetime.md)**\n\n> **Зауваження** :\n> \n> Об'єкти [DateTimeImmutable](class.datetimeimmutable.md) і [DateTime](class.datetime.md) можна порівнювати [операторами порівняння](language.operators.comparison.md)\n\n```php\n<?php\n$date1 = new DateTime(\"now\");\n$date2 = new DateTime(\"tomorrow\");\n\nvar_dump($date1 == $date2);\nvar_dump($date1 < $date2);\nvar_dump($date1 > $date2);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(false)\nbool(true)\nbool(false)\n```\n\n### Дивіться також\n\n-   [DateInterval::format()](dateinterval.format.md) \\- Форматує інтервал\n-   [DateTime::add()](datetime.add.md) \\- Змінює об'єкт DateTime, додаючи кількість днів, місяців, років, годин, хвилин та секунд\n-   [DateTime::sub()](datetime.sub.md) \\- Віднімає дні, місяці, роки, години, хвилини та секунди з об'єкта DateTime\n","title":"DateTimeInterface::diff","contentType":2,"navigation":[{"class.datetimeinterface.md":"« DateTimeInterface"},{"datetime.format.md":"DateTimeInterface::format »"},{"index.md":"PHP Manual"},{"class.datetimeinterface.md":"DateTimeInterface"}]}},"__N_SSG":true}