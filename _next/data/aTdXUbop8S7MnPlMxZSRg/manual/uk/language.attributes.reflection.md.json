{"pageProps":{"page":{"slug":"language.attributes.reflection.md","content":"## Читання атрибутів за допомогою Reflection API\n\nДля доступу до атрибутів класів, методів, функцій, параметрів, властивостей та констант класу в Reflection API існує метод \\*\\*getAttributes()\\*\\*що визначено для кожного з перерахованих об'єктів рефлексії. Цей метод повертає масив об'єктів [ReflectionAttribute](class.reflectionattribute.md), у кожного з яких можна запросити ім'я та аргументи, а також створити об'єкт класу, який представляє атрибут.\n\nВідділення отриманого через рефлексію уявлення атрибута від явного створення об'єкта дає програмісту повніший контроль над обробкою помилок, пов'язаних з відсутніми класами атрибутів, друкарськими помилками або відсутніми аргументами. Об'єкт класу атрибуту буде створено та перевірено на коректність аргументів лише після виклику методу [ReflectionAttribute::newInstance()](reflectionattribute.newinstance.md), не раніше.\n\n**Приклад #1 Читання атрибутів засобами Reflection API**\n\n```php\n<?php\n\n#[Attribute]\nclass MyAttribute\n{\n    public $value;\n\n    public function __construct($value)\n    {\n        $this->value = $value;\n    }\n}\n\n#[MyAttribute(value: 1234)]\nclass Thing\n{\n}\n\nfunction dumpAttributeData($reflection) {\n    $attributes = $reflection->getAttributes();\n\n    foreach ($attributes as $attribute) {\n       var_dump($attribute->getName());\n       var_dump($attribute->getArguments());\n       var_dump($attribute->newInstance());\n    }\n}\n\ndumpAttributeData(new ReflectionClass(Thing::class));\n/*\nstring(11) \"MyAttribute\"\narray(1) {\n  [\"value\"]=>\n  int(1234)\n}\nobject(MyAttribute)#3 (1) {\n  [\"value\"]=>\n  int(1234)\n}\n*/\n```\n\nЩоб отримати атрибути тільки потрібного класу, замість послідовного перебору всіх атрибутів об'єкта рефлексії метод **getAttributes()** передають як аргумент ім'я шуканого класу атрибута.\n\n**Приклад #2 Читання конкретних атрибутів засобами Reflection API**\n\n```php\n<?php\n\nfunction dumpMyAttributeData($reflection) {\n    $attributes = $reflection->getAttributes(MyAttribute::class);\n\n    foreach ($attributes as $attribute) {\n       var_dump($attribute->getName());\n       var_dump($attribute->getArguments());\n       var_dump($attribute->newInstance());\n    }\n}\n\ndumpMyAttributeData(new ReflectionClass(Thing::class));\n```\n","title":"Читання атрибутів за допомогою Reflection API","contentType":2,"navigation":[{"language.attributes.syntax.md":"« Синтаксис атрибутів"},{"language.attributes.classes.md":"Оголошення класів атрибутів »"},{"index.md":"PHP Manual"},{"language.attributes.md":"Атрибути"}]}},"__N_SSG":true}