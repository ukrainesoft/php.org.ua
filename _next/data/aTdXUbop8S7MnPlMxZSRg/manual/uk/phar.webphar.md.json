{"pageProps":{"page":{"slug":"phar.webphar.md","content":"# Phar::webPhar\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL phar >= 2.0.0)\n\nPhar::webPhar — Надсилає запит із браузера у внутрішній файл у phar-архіві\n\n### Опис\n\n```methodsynopsis\nfinal public static Phar::webPhar(    ?string $alias = null,    ?string $index = null,    ?string $fileNotFoundScript = null,    array $mimeTypes = [],    ?callable $rewrite = null): void\n```\n\n**Phar::webPhar()** служить [Phar::mapPhar()](phar.mapphar.md) для веб-архівів phar. Метод аналізує [$\\_SERVER\\['REQUEST\\_URI'\\]](reserved.variables.server.md) і надсилає запит із браузера у внутрішній файл у phar-архіві. Він імітує веб-сервер, надсилає запити до потрібного файлу, відображає правильні заголовки та аналізує файли PHP у міру потреби. В поєднанні з [Phar::mungServer()](phar.mungserver.md) і [Phar::interceptFileFuncs()](phar.interceptfilefuncs.md), будь-який веб-додаток можна використовувати без змін із phar-архіву.\n\n**Phar::webPhar()** повинен викликатись тільки із заглушки (stub) phar-архіву (про те, що таке заглушка і як з ним працювати, читайте [тут](phar.fileformat.stub.md)\n\n### Список параметрів\n\n`alias`\n\nПсевдонім для використання в обгортках `phar://`\n\n`index`\n\nРозташування в phar-архіві індексного файлу.\n\n`fileNotFoundScript`\n\nРозташування скрипта, який відповідає за обробку помилки HTTP 404. Скрипт повинен повертати коректні заголовки для цієї помилки.\n\n`mimeTypes`\n\nМасив зіставлення розширень файлів типу MIME. Якщо достатньо порівняння за умовчанням, передайте сюди порожній масив. За замовчуванням використовуються такі зіставлення:\n\n```php\n<?php\n$mimes = array(\n    'phps' => Phar::PHPS, // передаётся в highlight_file()\n    'c' => 'text/plain',\n    'cc' => 'text/plain',\n    'cpp' => 'text/plain',\n    'c++' => 'text/plain',\n    'dtd' => 'text/plain',\n    'h' => 'text/plain',\n    'log' => 'text/plain',\n    'rng' => 'text/plain',\n    'txt' => 'text/plain',\n    'xsd' => 'text/plain',\n    'php' => Phar::PHP, // разбирается как PHP\n    'inc' => Phar::PHP, // разбирается как PHP\n    'avi' => 'video/avi',\n    'bmp' => 'image/bmp',\n    'css' => 'text/css',\n    'gif' => 'image/gif',\n    'htm' => 'text/html',\n    'html' => 'text/html',\n    'htmls' => 'text/html',\n    'ico' => 'image/x-ico',\n    'jpe' => 'image/jpeg',\n    'jpg' => 'image/jpeg',\n    'jpeg' => 'image/jpeg',\n    'js' => 'application/x-javascript',\n    'midi' => 'audio/midi',\n    'mid' => 'audio/midi',\n    'mod' => 'audio/mod',\n    'mov' => 'movie/quicktime',\n    'mp3' => 'audio/mp3',\n    'mpg' => 'video/mpeg',\n    'mpeg' => 'video/mpeg',\n    'pdf' => 'application/pdf',\n    'png' => 'image/png',\n    'swf' => 'application/shockwave-flash',\n    'tif' => 'image/tiff',\n    'tiff' => 'image/tiff',\n    'wav' => 'audio/wav',\n    'xbm' => 'image/xbm',\n    'xml' => 'text/xml',\n);\n?>\n```\n\n`rewrite`\n\nФункція перезапису, якою передається єдиний рядковий параметр і яка повинна також повернути рядок, або **`false`**\n\nЯкщо ви використовуєте fast-cgi або cgi, то параметром, що передається в цю функцію, буде значення змінної [$\\_SERVER\\['PATH\\_INFO'\\]](reserved.variables.server.md). В іншому випадку буде передаватися значення змінної [$\\_SERVER\\['REQUEST\\_URI'\\]](reserved.variables.server.md)\n\nЯкщо буде повернутий рядок, то він буде використаний як шлях до файлу всередині архіву. Якщо повернеться **`false`**, то webPhar() надішле код помилки HTTP 403.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Помилки\n\nВикине виняток [PharException](class.pharexception.md), якщо неможливо відкрити будь-який файл, або викликати її із заглушки. Якщо у параметрі `mimeTypes` вказати некоректний MIME-тип, або `rewrite` буде передана некоректна функція зворотного виклику, то буде викинуто виняток [UnexpectedValueException](class.unexpectedvalueexception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Параметр`fileNotFoundScript`и`rewrite` тепер припускають значення **`null`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** Phar::webPhar()\\*\\*\\*\\*\n\nУ прикладі нижче створений phar відобразить `Hello World`при обращении из браузера к`/myphar.phar/index.php`или к`/myphar.phar`, і відобразить вихідний код `index.phps`при обращении к`/myphar.phar/index.phps`\n\n```php\n<?php\n// создаём архив:\ntry {\n    $phar = new Phar('myphar.phar');\n    $phar['index.php'] = '<?php echo \"Hello World\"; ?>';\n    $phar['index.phps'] = '<?php echo \"Hello World\"; ?>';\n    $phar->setStub('<?php\nPhar::webPhar();\n__HALT_COMPILER(); ?>');\n} catch (Exception $e) {\n    // обработка ошибок\n}\n?>\n```\n\n### Дивіться також\n\n-   [Phar::mungServer()](phar.mungserver.md) \\- Визначити список до чотирьох $\\_SERVER-змінних, які мають бути змінені для запуску\n-   [Phar::interceptFileFuncs()](phar.interceptfilefuncs.md) \\- Вказує phar перехоплювати fopen, file\\_get\\_contents, opendir та всі stat-функції\n","title":"Phar::webPhar","contentType":2,"navigation":[{"phar.unlinkarchive.md":"« Phar::unlinkArchive"},{"class.phardata.md":"PharData »"},{"index.md":"PHP Manual"},{"class.phar.md":"Phar"}]}},"__N_SSG":true}