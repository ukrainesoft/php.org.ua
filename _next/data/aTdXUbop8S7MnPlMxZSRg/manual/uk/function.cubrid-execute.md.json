{"pageProps":{"page":{"slug":"function.cubrid-execute.md","content":"# cubrid\\_execute\n\n(PECL CUBRID >= 8.3.0)\n\ncubrid\\_execute - Виконує підготовлений SQL-оператор\n\n### Опис\n\n```methodsynopsis\ncubrid_execute(resource $conn_identifier, string $sql, int $option = 0): resource\n```\n\n```methodsynopsis\ncubrid_execute(resource $request_identifier, int $option = 0): bool\n```\n\nФункция**cubrid\\_execute()** використовується для виконання цього SQL-оператора. Вона виконує запит, використовуючи `conn_identifier` та SQL, а потім повертає створений ідентифікатор запиту. Функція використовується для простого виконання запиту, коли не потрібно. Крім того, функція **cubrid\\_execute()** використовується для виконання підготовленого оператора за допомогою [cubrid\\_prepare()](function.cubrid-prepare.md) і [cubrid\\_bind()](function.cubrid-bind.md). У цей час вам необхідно вказати аргументи `request_identifier`и`option`\n\nПараметр`option` використовується для визначення, чи слід отримувати OID після виконання запиту та чи слід виконувати запит у синхронному або асинхронному режимі. Константа **`CUBRID_INCLUDE_OID`** і **`CUBRID_ASYNC`**(или\\*\\*`CUBRID_EXEC_QUERY_ALL`\\*\\*Якщо необхідно виконати кілька SQL-операторів) можна вказати за допомогою побітового оператора АБО. Якщо не вказано, жодного з них не вибрано. Якщо встановлено прапор **`CUBRID_EXEC_QUERY_ALL`**, для отримання результатів запиту використовується синхронний режим (sync\\_mode) і в таких випадках застосовуються такі правила:\n\n-   Значення, що повертається - результат першого запиту.\n-   Якщо у будь-якому запиті виникає помилка, виконання обробляється як збій.\n-   У запиті, що складається з q1 q2 q3, якщо помилка виникає q2 після успішного виконання q1, результат q1 залишається дійсним. Тобто попереднє успішне виконання запиту не відкочується у разі помилки.\n-   У разі успішного виконання запиту, результат другого запиту можна отримати за допомогою[cubrid\\_next\\_result()](function.cubrid-next-result.md)\n\nЯкщо першим аргументом є `request_identifier` для виконання функції [cubrid\\_prepare()](function.cubrid-prepare.md) можна вказати тільки **`CUBRID_ASYNC`**\n\n### Список параметрів\n\n`conn_identifier`\n\nІдентифікатор з'єднання.\n\n`sql`\n\nSQL для виконання.\n\n`option`\n\nВаріант виконання запиту: **`CUBRID_INCLUDE_OID`** **`CUBRID_ASYNC`** **`CUBRID_EXEC_QUERY_ALL`**\n\n`request_identifier`\n\nІдентифікатор [cubrid\\_prepare()](function.cubrid-prepare.md)\n\n### Значення, що повертаються\n\nІдентифікатор запиту у разі успішного виконання запиту і якщо першим параметром є conn\\_identifier;**`true`**, у разі успішного виконання запиту та першим аргументом request\\_identifier или\\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.4.0 | Додано новий параметр **`CUBRID_EXEC_QUERY_ALL`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_execute()\\*\\*\\*\\*\n\n```php\n<?php\n$conn = cubrid_connect(\"localhost\", 33000, \"demodb\");\n\n$result = cubrid_execute($conn, \"SELECT code FROM event WHERE name='100m Butterfly' and gender='M'\", CUBRID_ASYNC);\n$row = cubrid_fetch_array($result, CUBRID_ASSOC);\n$event_code = $row[\"code\"];\n\ncubrid_close_request($result);\n\n$history_req = cubrid_prepare($conn, \"SELECT * FROM history WHERE event_code=?\");\ncubrid_bind($history_req, 1, $event_code, \"number\");\ncubrid_execute($history_req);\n\nprintf(\"%-20s %-9s %-10s %-5s\\n\", \"athlete\", \"host_year\", \"score\", \"unit\");\nwhile ($row = cubrid_fetch_array($history_req, CUBRID_ASSOC)) {\n    printf(\"%-20s %-9s %-10s %-5s\\n\",\n        $row[\"athlete\"], $row[\"host_year\"], $row[\"score\"], $row[\"unit\"]);\n}\n\ncubrid_close_request($history_req);\n\ncubrid_disconnect($conn);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nathlete              host_year score      unit\nPhelps Michael       2004      51.25      time\n```\n\n### Дивіться також\n\n-   [cubrid\\_prepare()](function.cubrid-prepare.md) \\- Підготовляє SQL-вираз до виконання\n-   [cubrid\\_bind()](function.cubrid-bind.md) \\- пов'язує змінні із підготовленим запитом\n-   [cubrid\\_next\\_result()](function.cubrid-next-result.md) \\- Отримує результат наступного запиту під час виконання кількох SQL-операторів\n-   [cubrid\\_close\\_request()](function.cubrid-close-request.md) \\- Закриває обробник запиту\n-   [cubrid\\_commit()](function.cubrid-commit.md) \\- підтвердження транзакції\n-   [cubrid\\_rollback()](function.cubrid-rollback.md) \\- Відкат транзакції\n","title":"cubrid\\_execute","contentType":2,"navigation":[{"function.cubrid-error-msg.md":"« cubrid\\_error\\_msg"},{"function.cubrid-fetch.md":"cubrid\\_fetch »"},{"index.md":"PHP Manual"},{"ref.cubrid.md":"Функції CUBRID"}]}},"__N_SSG":true}