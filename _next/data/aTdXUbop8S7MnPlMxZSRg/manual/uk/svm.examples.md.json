{"pageProps":{"page":{"slug":"svm.examples.md","content":"# Приклади\n\nПроцес досить простий: задаємо параметри, надаємо навчальні дані, на основі яких буде створена модель, а потім робимо прогнози, що базуються на цій моделі. Набір параметрів за замовчуванням гарантує отримання хоч якогось результату практично для будь-яких вхідних даних, так що на ньому не будемо зупинятись і відразу перейдемо до навчальних даних.\n\nЄ три шляхи надання навчальних даних: файл, потік та масив. Якщо дані надаються за допомогою файлу або потоку, то на кожному рядку повинен утримуватися один навчальний приклад, відформатований наступним чином: на початку має бути ціле число (зазвичай 1 або -1), це число позначається терміном \"клас\", а слідом за ним перерахування пар ознака: значення в порядку збільшення ознаки. Ознаки мають бути цілими числами, які значення раціональними, зазвичай, на діапазоні 0-1. Наприклад:\n\n\\-1 1:0.43 3:0.12 9284:0.2\n\nУ проблемі класифікації документів, наприклад, під час перевірки листа на спам, кожен рядок повинен представляти один документ. Для перевірки на спам нам знадобиться два класи, -1 для спаму і 1 для нормального листа. Кожна ознака має означати якесь слово, яке значення - важливість даного слова у документі (можливо, частота появи щодо довжини елемента). Ознаки зі значенням 0 (тобто слово в документі не зустрічається) просто не включаємо до набору.\n\nУ разі використання масиву дані повинні бути представлені у вигляді масиву масивів, в якому кожен вкладений масив повинен першим елементом містити клас, а всі наступні елементи містити пари \"ознака\" => \"значення\".\n\nЦі дані передаються навчальною функцією класу SVM, яка в результаті поверне модель (SVMModel).\n\nСтворена модель може використовуватися для побудови припущень про клас нових об'єктів, описаних ознаками та їх значеннями. Дані, на основі яких робляться припущення, повинні бути передані функції моделі в тому ж форматі, що описаний вище, але без вказівки їхнього класу (тобто без першого елемента), яка поверне передбачуваний клас, який підходить для цих даних.\n\nМодель згодом можна зберігати та завантажувати за допомогою функцій, що приймають шлях до файлу як параметр.\n\n**Приклад #1 Навчання з масиву**\n\n```php\n<?php\n$data = array(\n    array(-1, 1 => 0.43, 3 => 0.12, 9284 => 0.2),\n    array(1, 1 => 0.22, 5 => 0.01, 94 => 0.11),\n);\n\n$svm = new SVM();\n$model = $svm->train($data);\n\n$data = array(1 => 0.43, 3 => 0.12, 9284 => 0.2);\n$result = $model->predict($data);\nvar_dump($result);\n$model->save('model.svm');\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nint(-1)\n```\n\n**Приклад #2 Навчання з файлу**\n\n```php\n<?php\n$svm = new SVM();\n$model = $svm->train(\"traindata.txt\");\n?>\n```\n","title":"Приклади","contentType":2,"navigation":[{"svm.resources.md":"« Типи ресурсів"},{"class.svm.md":"SVM »"},{"index.md":"PHP Manual"},{"book.svm.md":"SVM"}]}},"__N_SSG":true}