{"pageProps":{"page":{"slug":"rarentry.extract.md","content":"# RarEntry::extract\n\n(PECL rar >= 0.1)\n\nRarEntry::extract — Витягує елемент з архіву\n\n### Опис\n\n```methodsynopsis\npublic RarEntry::extract(    string $dir,    string $filepath = \"\",    string $password = NULL,    bool $extended_data = false): bool\n```\n\n**RarEntry::extract()** витягує вміст елемента. При цьому створюється новий файл у зазначеній директорії `dir` з ім'ям, що збігається з ім'ям елемента, якщо тільки не заданий другий аргумент. Дивіться нижче.\n\n### Список параметрів\n\n`dir`\n\nШлях до директорії, куди потрібно витягти файли. Цей параметр враховується лише якщо не вказано `filepath`. Якщо обидва параметри не вказані, файли витягуються до поточної директорії.\n\n`filepath`\n\nШлях (повний або відносний) містить директорію та ім'я файлу, що видобувається. Цей параметр перевизначає параметр `dir` та оригінальне ім'я файлу.\n\n`password`\n\nПароль використовується для шифрування поточного елемента. Якщо елемент не зашифрований, цей параметр не буде використаний і його можна не вказувати. Якщо цей параметр не вказано, а елемент зашифрований, то буде використаний пароль, переданий функції [rar\\_open()](rararchive.open.md), Якщо її викликали. Якщо передано невірний пароль, явно чи неявно через [rar\\_open()](rararchive.open.md), то перевірка CRC буде невдалою і буде повернуто **`false`**. Ви можете перевірити, чи є елемент зашифрованим за допомогою [RarEntry::isEncrypted()](rarentry.isencrypted.md)\n\n`extended_data`\n\nЯкщо **`true`**, то до файлу буде додано додаткову інформацію, таку як NTFS ACL і власник у системі Unix, якщо вони були присутні в архіві.\n\n**Увага**\n\nДо версії 2.0.0 не обробляла відносні шляхи коректно. Використовуйте для цієї ситуації [realpath()](function.realpath.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL rar 3.0.0 | Було додано параметр `extended_data` |\n| PECL rar 3.0.0 | Виправлена ​​підтримка RAR архівів з іменами елементів, що повторюються. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** RarEntry::extract()\\*\\*\\*\\*\n\n```php\n<?php\n\n$rar_file = rar_open('example.rar') or die(\"Не удалось открыть Rar архив\");\n\n$entry = rar_entry_get($rar_file, 'Dir/file.txt') or die(\"Не удалось найти такую запись\");\n\n$entry->extract('/dir/to'); // создание /dir/to/Dir/file.txt\n$entry->extract(false, '/dir/to/new_name.txt'); // создание /dir/to/new_name.txt\n\n?>\n```\n\n**Приклад #2 Як отримати всі файли з архіву:**\n\n```php\n<?php\n\n/* Приклад от Erik Jenssen aka erix */\n\n$filename = \"foobar.rar\";\n$filepath = \"/home/foo/bar/\";\n\n$rar_file = rar_open($filepath.$filename);\n$list = rar_list($rar_file);\nforeach($list as $file) {\n    $entry = rar_entry_get($rar_file, $file);\n    $entry->extract(\".\"); // извлечь в текущий каталог\n}\nrar_close($rar_file);\n\n?>\n```\n\n### Дивіться також\n\n-   [RarEntry::getStream()](rarentry.getstream.md) \\- Отримати обробник для запису\n-   [`rar://`wrapper](wrappers.rar.md)\n","title":"RarEntry::extract","contentType":2,"navigation":[{"class.rarentry.md":"« RarEntry"},{"rarentry.getattr.md":"RarEntry::getAttr »"},{"index.md":"PHP Manual"},{"class.rarentry.md":"RarEntry"}]}},"__N_SSG":true}