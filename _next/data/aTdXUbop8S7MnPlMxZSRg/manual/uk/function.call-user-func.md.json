{"pageProps":{"page":{"slug":"function.call-user-func.md","content":"# call\\_user\\_func\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\ncall\\_user\\_func — Викликає callback-функцію, задану у першому параметрі\n\n### Опис\n\n```methodsynopsis\ncall_user_func(callable $callback, mixed ...$args): mixed\n```\n\nВикликає callback-функцію, передану першим параметром, і передає інші параметри як аргументи . `callback`\n\n### Список параметрів\n\n`callback`\n\nФункція типу, що викликається [callable](language.types.callable.md)\n\n`args`\n\nНуль або більше параметрів, що передаються в callback-функцію.\n\n> **Зауваження** :\n> \n> Врахуйте, що параметри для **call\\_user\\_func()** не передаються за посиланням.\n> \n> **Приклад #1 Приклад використання** call\\_user\\_func()\\*\\* та посилання\\*\\*\n> \n> ```php\n> <?php\n> error_reporting(E_ALL);\n> function increment(&$var)\n> {\n>     $var++;\n> }\n> \n> $a = 0;\n> call_user_func('increment', $a);\n> echo $a.\"\\n\";\n> \n> // Натомість можна використовувати цей спосіб\n> call_user_func_array('increment', array(&$a));\n> echo $a.\"\\n\";\n> \n> // Також можна використовувати функцію як змінну\n> $increment = 'increment';\n> $increment($a);\n> echo $a.\"\\n\";\n> ?>\n> ```\n> \n> Результат виконання наведеного прикладу:\n> \n> ```\n> Warning: Parameter 1 to increment() expected to be a reference, value given in …\n> 0\n> 1\n> 2\n> ```\n\n### Значення, що повертаються\n\nПовертає значення, повернене callback-функцією.\n\n### Приклади\n\n**Приклад #2 Приклад використання** call\\_user\\_func()\\*\\*\\*\\*\n\n```php\n<?php\nfunction barber($type)\n{\n    echo \"Вы хотели стрижку $type, без проблем\\n\";\n}\ncall_user_func('barber', \"под горшок\");\ncall_user_func('barber', \"наголо\");\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nВы хотели стрижку под горшок, без проблем\nВы хотели стрижку наголо, без проблем\n```\n\n**Приклад #3 Использование**call\\_user\\_func()**, використовуючи простір імен**\n\n```php\n<?php\n\nnamespace Foobar;\n\nclass Foo {\n    static public function test() {\n        print \"Привет, мир!\\n\";\n    }\n}\n\ncall_user_func(__NAMESPACE__ .'\\Foo::test');\ncall_user_func(array(__NAMESPACE__ .'\\Foo', 'test'));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПривет, мир!\nПривет, мир!\n```\n\n**Приклад #4 Виклик методу класу за допомогою **call\\_user\\_func()****\n\n```php\n<?php\n\nclass myclass {\n    static function say_hello()\n    {\n        echo \"Привет!\\n\";\n    }\n}\n\n$classname = \"myclass\";\n\ncall_user_func(array($classname, 'say_hello'));\ncall_user_func($classname .'::say_hello');\n\n$myobject = new myclass();\n\ncall_user_func(array($myobject, 'say_hello'));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПривет!\nПривет!\nПривет!\n```\n\n**Приклад #5 Использование лямбда-функции с**call\\_user\\_func()\\*\\*\\*\\*\n\n```php\n<?php\ncall_user_func(function($arg) { print \"[$arg]\\n\"; }, 'test');\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n[test]\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Callback-функції, зареєстровані такими функціями як \\*\\*call\\_user\\_func()\\*\\*и[call\\_user\\_func\\_array()](function.call-user-func-array.md), не будуть викликані за наявності не спійманого виключення, кинутого у попередній callback-функції.\n\n### Дивіться також\n\n-   [call\\_user\\_func\\_array()](function.call-user-func-array.md) \\- Викликає callback-функцію з масивом параметрів\n-   [is\\_callable()](function.is-callable.md) \\- Перевіряє, що значення може бути викликане як функція у поточній області видимості\n-   [Звернення до функцій через змінні](functions.variable-functions.md)\n-   [ReflectionFunction::invoke()](reflectionfunction.invoke.md) \\- Викликає функцію\n-   [ReflectionMethod::invoke()](reflectionmethod.invoke.md) \\- Виклик\n","title":"call\\_user\\_func","contentType":2,"navigation":[{"function.call-user-func-array.md":"« call\\_user\\_func\\_array"},{"function.create-function.md":"create\\_function »"},{"index.md":"PHP Manual"},{"ref.funchand.md":"Функції керування функціями"}]}},"__N_SSG":true}