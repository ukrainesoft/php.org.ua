{"pageProps":{"page":{"slug":"arrayiterator.asort.md","content":"# ArrayIterator::asort\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nArrayIterator::asort — Сортує елементи за значеннями\n\n### Опис\n\n```methodsynopsis\npublic ArrayIterator::asort(int $flags = SORT_REGULAR): true\n```\n\nСортує елементи за значеннями.\n\n> **Зауваження** :\n> \n> Якщо обидва порівнювані значення еквівалентні, вони зберігають свій початковий порядок. До PHP 8.0.0 їх відносний порядок у відсортованому масиві не було визначено.\n\n### Список параметрів\n\n`flags`\n\nНеобов'язковий другий параметр `flags` змінює поведінку сортування і може набувати таких значень:\n\nПрапори типів сортування:\n\n-   \\*\\*`SORT_REGULAR`\\*\\*- Звичайне порівняння елементів; подробиці описані в розділі[оператори порівняння](language.operators.comparison.md)\n-   \\*\\*`SORT_NUMERIC`\\*\\*- Чисельне порівняння елементів\n-   \\*\\*`SORT_STRING`\\*\\*- рядкове порівняння елементів\n-   \\*\\*`SORT_LOCALE_STRING`\\*\\*— Порівняти елементи як рядки на основі поточного мовного стандарту. Прапор використовує мовний стандарт, який можна змінити функцією[setlocale()](function.setlocale.md)\n-   **`SORT_NATURAL`** - Порівняння елементів як рядки, використовуючи \"природний порядок\", наприклад [natsort()](function.natsort.md)\n-   \\*\\*`SORT_FLAG_CASE`**\\- можна об'єднувати (побітове АБО) з**`SORT_STRING`** або **`SORT_NATURAL`\\*\\*для сортування рядків без урахування регістру\n\n### Значення, що повертаються\n\nФункція завжди повертає **`true`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Тип значення, що повертається тепер **`true`**; раніше було bool. |\n\n### Дивіться також\n\n-   [ArrayIterator::ksort()](arrayiterator.ksort.md) \\- Сортує елементи за ключами\n-   [ArrayIterator::natcasesort()](arrayiterator.natcasesort.md) - Сортує елементи \"натурально\", з урахуванням регістру\n-   [ArrayIterator::natsort()](arrayiterator.natsort.md) - Сортує елементи \"натурально\"\n-   [ArrayIterator::uasort()](arrayiterator.uasort.md) \\- Сортування за допомогою заданої користувачем функції та збереженням ключів\n-   [ArrayIterator::uksort()](arrayiterator.uksort.md) \\- Сортування за ключами за допомогою заданої функції порівняння\n-   [asort()](function.asort.md) \\- Сортує масив у порядку зростання, зберігаючи асоціацію індексів\n","title":"ArrayIterator::asort","contentType":2,"navigation":[{"arrayiterator.append.md":"« ArrayIterator::append"},{"arrayiterator.construct.md":"ArrayIterator::\\_\\_construct »"},{"index.md":"PHP Manual"},{"class.arrayiterator.md":"ArrayIterator"}]}},"__N_SSG":true}