{"pageProps":{"page":{"slug":"intlchar.tolower.md","content":"# IntlChar::tolower\n\n(PHP 7, PHP 8)\n\nIntlChar::tolower — Перетворює символ Unicode на нижній регістр\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::tolower(int|string $codepoint): int|string|null\n```\n\nПеретворює символ на його еквівалент у нижньому регістрі. Якщо немає, то повертається вихідний символ.\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nПовертає Simple\\_Lowercase\\_Mapping для символу, якщо існує. Якщо ні, повертає вихідний символ. У разі виникнення помилки повертає **`null`**\n\nТип, що повертається повинен бути int, якщо тільки символ не був переданий як рядок UTF-8 (string), у цьому випадку повернеться рядок (string). У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::tolower(\"A\"));\nvar_dump(IntlChar::tolower(\"a\"));\nvar_dump(IntlChar::tolower(\"Φ\"));\nvar_dump(IntlChar::tolower(\"φ\"));\nvar_dump(IntlChar::tolower(\"1\"));\nvar_dump(IntlChar::tolower(ord(\"A\")));\nvar_dump(IntlChar::tolower(ord(\"a\")));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(1) \"a\"\nstring(1) \"a\"\nstring(2) \"φ\"\nstring(2) \"φ\"\nstring(1) \"1\"\nint(97)\nint(97)\n```\n\n### Дивіться також\n\n-   [IntlChar::totitle()](intlchar.totitle.md) \\- Перетворює символ Unicode на титульний регістр (titlecase)\n-   [IntlChar::toupper()](intlchar.toupper.md) \\- Перетворює символ Unicode у верхній регістр\n-   [mb\\_strtolower()](function.mb-strtolower.md) \\- Наводить рядок до нижнього регістру\n","title":"IntlChar::tolower","contentType":2,"navigation":[{"intlchar.ord.md":"« IntlChar::ord"},{"intlchar.totitle.md":"IntlChar::totitle »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}