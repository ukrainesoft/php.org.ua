{"pageProps":{"page":{"slug":"function.str-ireplace.md","content":"# str\\_ireplace\n\n(PHP 5, PHP 7, PHP 8)\n\nstr\\_ireplace - Реєстронезалежний варіант функції [str\\_replace()](function.str-replace.md)\n\n### Опис\n\n```methodsynopsis\nstr_ireplace(    array|string $search,    array|string $replace,    string|array $subject,    int &$count = null): string|array\n```\n\nЦя функція повертає рядок або масив, в якому всі входження `search`в`subject` замінені на `replace` (без урахування регістру символів).\n\nЩоб замінити текст на основі шаблону, а не фіксованого рядка, скористайтеся функцією [preg\\_replace()](function.preg-replace.md)с[модифікатор шаблону](reference.pcre.pattern.modifiers.md) `i`\n\n### Список параметрів\n\nЯкщо `search`и`replace` - масиви, то **str\\_ireplace()** використовує кожне значення з відповідного масиву для пошуку та заміни в `subject`. Якщо в масиві `replace` менше елементів, ніж у `search`, як рядок заміни для значень, що залишилися, буде використаний порожній рядок. Якщо `search`\\- массив, а`replace` - рядок, то цей рядок заміни буде використаний для кожного елемента масиву `search`. Зворотний випадок не має сенсу.\n\nЯкщо `search`или`replace` є масивами, їх елементи будуть оброблені від першого до останнього.\n\n`search`\n\nШукане значення, також відоме як *needle* (голка). Для безлічі значень, що шукаються, можна використовувати масив.\n\n`replace`\n\nЗначення заміни, буде використано для заміни значень, що шукаються `search`. Для багатьох значень можна використовувати масив.\n\n`subject`\n\nРядок або масив, в якому проводиться пошук і заміна, також відомий як *haystack*(стог сена).\n\nЯкщо `subject` є масивом, то пошук із заміною буде здійснюватися над кожним елементом `subject`, а результатом функції також буде масив.\n\n`count`\n\nЯкщо передано, то буде встановлено кількість проведених замін.\n\n### Значення, що повертаються\n\nПовертає рядок або масив із заміненими значеннями.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Перетворення регістру більше не залежить від локалі, встановленої за допомогою функції [setlocale()](function.setlocale.md). . Буде перетворено лише символи ASCII. Байти не ASCII-кодування будуть порівнюватися за значенням байта. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** str\\_ireplace()\\*\\*\\*\\*\n\n```php\n<?php\n$bodytag = str_ireplace(\"%body%\", \"black\", \"<body text=%BODY%>\");\necho $bodytag; // <body text=black>\n?>\n```\n\n### Примітки\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n**Застереження**\n\n# Зауваження щодо порядку заміни\n\nТак как**str\\_ireplace()** здійснює заміну ліворуч, то при використанні множинних замін вона може замінити раніше вставлене значення на інше. Приклад №2 у документації [str\\_replace()](function.str-replace.md) пояснює, як це працює на практиці.\n\n### Дивіться також\n\n-   [str\\_replace()](function.str-replace.md) \\- Замінює всі входження рядка пошуку на рядок заміни\n-   [preg\\_replace()](function.preg-replace.md) \\- Виконує пошук та заміну за регулярним виразом\n-   [strtr()](function.strtr.md) \\- Перетворює задані символи або замінює підрядки\n","title":"str\\_ireplace","contentType":2,"navigation":[{"function.str-increment.md":"« str\\_increment"},{"function.str-pad.md":"str\\_pad »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}