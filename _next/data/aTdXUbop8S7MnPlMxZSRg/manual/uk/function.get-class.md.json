{"pageProps":{"page":{"slug":"function.get-class.md","content":"# get\\_class\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nget\\_class — Повертає ім'я класу, до якого належить об'єкт\n\n### Опис\n\n```methodsynopsis\nget_class(object $object = ?): string\n```\n\nПовертає ім'я класу, екземпляром якого є об'єкт `object`\n\n### Список параметрів\n\n`object`\n\nОб'єкт, що тестується. Всередині класу цей параметр можна опустити.\n\n> **Зауваження**: Починаючи з PHP 7.2.0, явна передача \\*\\*`null`\\*\\*в`object` заборонена та видає помилку рівня **`E_WARNING`**Начиная с PHP 8.0.0, при передаче**`null`**, викидається виняток [TypeError](class.typeerror.md)\n\n### Значення, що повертаються\n\nПовертає ім'я класу, до якого належить екземпляр `object`\n\nЯкщо параметр `object` опущений усередині класу, буде повернуто ім'я цього класу.\n\nЯкщо параметр `object` є екземпляром класу, що існує у просторі імен, то буде повернуто повне ім'я із зазначенням простору імен.\n\n### Помилки\n\nЯкщо функція **get\\_class()** викликається з чимось, крім об'єкта, викидається виняток [TypeError](class.typeerror.md). До PHP 8.0.0 видавалася помилка рівня **`E_WARNING`**\n\nЯкщо функція **get\\_class()** викликається без аргументів поза класом, викидається виняток [Error](class.error.md). До PHP 8.0.0 видавалася помилка рівня **`E_WARNING`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Виклик функції поза класом без жодних аргументів викликає виняток [Error](class.error.md). . Раніше видавалася помилка рівня **`E_WARNING`** та функція повертала значення **`false`** |\n| 7.2.0 | До цієї версії значення за замовчуванням для `object` було **`null`** з тим самим ефектом, як і відсутність передачі значення. Тепер **`null`** був видалений як значення за замовчуванням для `object` і більше не є допустимим значенням. |\n\n### Приклади\n\n**Приклад #1 Использование**get\\_class()\\*\\*\\*\\*\n\n```php\n<?php\n\nclass foo {\n    function name()\n    {\n        echo \"Меня зовут \" , get_class($this) , \"\\n\";\n    }\n}\n\n// создание объекта\n$bar = new foo();\n\n// внешний вызов\necho \"Его имя \" , get_class($bar) , \"\\n\";\n\n// внутренний вызов\n$bar->name();\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nЕго имя foo\nМеня зовут foo\n```\n\n**Приклад #2 Использование**get\\_class()\\*\\* у батьківському класі\\*\\*\n\n```php\n<?php\n\nabstract class bar {\n    public function __construct()\n    {\n        var_dump(get_class($this));\n        var_dump(get_class());\n    }\n}\n\nclass foo extends bar {\n}\n\nnew foo;\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(3) \"foo\"\nstring(3) \"bar\"\n```\n\n**Приклад #3 Использование**get\\_class()\\*\\* з класами у просторах імен\\*\\*\n\n```php\n<?php\n\nnamespace Foo\\Bar;\n\nclass Baz {\n    public function __construct()\n    {\n\n    }\n}\n\n$baz = new \\Foo\\Bar\\Baz;\n\nvar_dump(get_class($baz));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(11) \"Foo\\Bar\\Baz\"\n```\n\n### Дивіться також\n\n-   [get\\_called\\_class()](function.get-called-class.md) \\- Ім'я класу, отримане за допомогою пізнього статичного зв'язування\n-   [get\\_parent\\_class()](function.get-parent-class.md) \\- Повертає ім'я батьківського класу для об'єкта чи класу\n-   [gettype()](function.gettype.md) \\- Повертає тип змінної\n-   [get\\_debug\\_type()](function.get-debug-type.md) \\- Повертає ім'я типу змінної у вигляді, що підходить для налагодження\n-   [is\\_subclass\\_of()](function.is-subclass-of.md) \\- Перевіряє, чи містить об'єкт у своєму дереві предків зазначений клас чи прямо реалізує його\n","title":"get\\_class","contentType":2,"navigation":[{"function.get-class-vars.md":"« get\\_class\\_vars"},{"function.get-declared-classes.md":"get\\_declared\\_classes »"},{"index.md":"PHP Manual"},{"ref.classobj.md":"Функції роботи з класами та об'єктами"}]}},"__N_SSG":true}