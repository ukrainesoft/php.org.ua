{"pageProps":{"page":{"slug":"class.ds-set.md","content":"# Клас Set\n\n(PECL ds >= 1.0.0)\n\n## Вступ\n\nSet – це послідовність унікальних значень. Реалізація використовує ту ж хеш-таблицю, що й [Ds\\\\Map](class.ds-map.md), В якій значення використовуються як ключі, а зв'язані значення ігноруються.\n\n## Сильні сторони\n\n-   Значення можуть бути будь-якого типу, включаючи об'єкти.\n-   Підтримує синтаксис масиву (квадратні дужки).\n-   Зберігається порядок вставки.\n-   Автоматично звільняє пам'ять, коли кількість елементів значно зменшується.\n-   **add()** \\*\\*remove()** і **contains()\\*\\*мають складність O(1).\n\n## Слабкі сторони\n\n-   Не підтримує**push()** **pop()** **insert()** **shift()** і **unshift()**\n-   \\*\\*get()\\*\\*має складність O(n), якщо є віддалені значення буфері, до значення, до якого відбувається доступ. Інакше O(1).\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class Ds\\Set\n     \n\n     implements \n       Ds\\Collection,  ArrayAccess {\n    \n    /* Константы */\n    \n     const\n     int\n      MIN_CAPACITY = 16;\n\n\n    /* Методы */\n    \n   public add(mixed ...$values): void\npublic allocate(int $capacity): void\npublic capacity(): int\npublic clear(): void\npublic contains(mixed ...$values): bool\npublic copy(): Ds\\Set\npublic diff(Ds\\Set $set): Ds\\Set\npublic filter(callable $callback = ?): Ds\\Set\npublic first(): mixed\npublic get(int $index): mixed\npublic intersect(Ds\\Set $set): Ds\\Set\npublic isEmpty(): bool\npublic join(string $glue = ?): string\npublic last(): mixed\npublic merge(mixed $values): Ds\\Set\npublic reduce(callable $callback, mixed $initial = ?): mixed\npublic remove(mixed ...$values): void\npublic reverse(): void\npublic reversed(): Ds\\Set\npublic slice(int $index, int $length = ?): Ds\\Set\npublic sort(callable $comparator = ?): void\npublic sorted(callable $comparator = ?): Ds\\Set\npublic sum(): int|float\npublic toArray(): array\npublic union(Ds\\Set $set): Ds\\Set\npublic xor(Ds\\Set $set): Ds\\Set\n\n   }\n```\n\n## Обумовлені константи\n\n**`Ds\\Set::MIN_CAPACITY`**\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL ds 1.3.0 | Тепер клас реалізує [ArrayAccess](class.arrayaccess.md) |\n\n## Зміст\n\n-   [Ds\\\\Set::add](ds-set.add.md)— Додає значення до набору\n-   [Ds\\\\Set::allocate](ds-set.allocate.md)— Виділяє пам'ять під зазначену місткість\n-   [Ds\\\\Set::capacity](ds-set.capacity.md)— Повертає поточну місткість\n-   [Ds\\\\Set::clear](ds-set.clear.md)— Видаляє всі значення з колекції\n-   [Ds\\\\Set::\\_\\_construct](ds-set.construct.md) \\- Створює новий екземпляр класу\n-   [Ds\\\\Set::contains](ds-set.contains.md)— Перевіряє, чи міститься в колекції задані значення\n-   [Ds\\\\Set::copy](ds-set.copy.md)— Повертає поверхневу копію колекції\n-   [Ds\\\\Set::count](ds-set.count.md)— Повертає кількість елементів колекції\n-   [Ds\\\\Set::diff](ds-set.diff.md)— Створює новий набір із елементами, яких немає в іншому наборі\n-   [Ds\\\\Set::filter](ds-set.filter.md)— Створює новий список із елементів, вибраних за допомогою заданої callback-функції\n-   [Ds\\\\Set::first](ds-set.first.md)— Повертає перший елемент колекції\n-   [Ds\\\\Set::get](ds-set.get.md)— Повертає значення за індексом\n-   [Ds\\\\Set::intersect](ds-set.intersect.md)— Створює новий набір, створений перетином з іншим набором\n-   [Ds\\\\Set::isEmpty](ds-set.isempty.md)— Перевіряє, чи колекція порожня.\n-   [Ds\\\\Set::join](ds-set.join.md) \\- Склеює всі значення в рядок\n-   [Ds\\\\Set::jsonSerialize](ds-set.jsonserialize.md)— Повертає колекцію в JSON-представництві\n-   [Ds\\\\Set::last](ds-set.last.md)— Повертає останнє значення колекції\n-   [Ds\\\\Set::merge](ds-set.merge.md)— Повертає результат додавання всіх заданих значень до набору\n-   [Ds\\\\Set::reduce](ds-set.reduce.md) \\- Зменшує колекцію до одного значення, використовуючи callback-функцію\n-   [Ds\\\\Set::remove](ds-set.remove.md)— Видаляє всі задані значення набору\n-   [Ds\\\\Set::reverse](ds-set.reverse.md)— Перевертає поточну колекцію\n-   [Ds\\\\Set::reversed](ds-set.reversed.md)— Повертає перегорнуту копію колекції\n-   [Ds\\\\Set::slice](ds-set.slice.md)— Повертає піднабір із заданого діапазону\n-   [Ds\\\\Set::sort](ds-set.sort.md)— Сортує колекцію\n-   [Ds\\\\Set::sorted](ds-set.sorted.md)— Повертає копію колекції, відсортовану за значенням.\n-   [Ds\\\\Set::sum](ds-set.sum.md)— Повертає суму всіх значень колекції\n-   [Ds\\\\Set::toArray](ds-set.toarray.md)— Перетворює колекцію на масив (array)\n-   [Ds\\\\Set::union](ds-set.union.md)— Створює новий набір з елементів поточного та переданого наборів\n-   [Ds\\\\Set::xor](ds-set.xor.md)— Створює новий набір із значень, які є в одному з наборів, але не в обох одночасно\n","title":"Клас Set","contentType":2,"navigation":[{"ds-pair.toarray.md":"« Ds\\\\Pair::toArray"},{"ds-set.add.md":"Ds\\\\Set::add »"},{"index.md":"PHP Manual"},{"book.ds.md":"Структури даних"}]}},"__N_SSG":true}