{"pageProps":{"page":{"slug":"domxpath.query.md","content":"# DOMXPath::query\n\n(PHP 5, PHP 7, PHP 8)\n\nDOMXPath::query — Виконує заданий вираз XPath\n\n### Опис\n\n```methodsynopsis\npublic DOMXPath::query(string $expression, ?DOMNode $contextNode = null, bool $registerNodeNS = true): mixed\n```\n\nВиконує заданий XPath-вираз `expression`\n\n### Список параметрів\n\n`expression`\n\nВираз XPath для виконання.\n\n`contextNode`\n\nДодатковий параметр `contextNode` може бути вказаний до виконання відносних запитів XPath. За промовчанням запити виконуються щодо кореневого елемента.\n\n`registerNodeNS`\n\nЧи потрібно автоматично реєструвати префікси простору імен в області видимості контекстного вузла для об'єкта [DOMXPath](class.domxpath.md). Параметр допомагає уникати ручного виклику методу [DOMXPath::registerNamespace()](domxpath.registernamespace.md) для кожного простору імен у області видимості. Коли префікси простору імен конфліктують, реєструється лише префікс простору імен найближчого нащадка.\n\n### Значення, що повертаються\n\nПовертає об'єкт [DOMNodeList](class.domnodelist.md), що містить вузли, що відповідають виразу XPath `expression`. Будь-який вираз, що не повертає вузли, поверне порожній об'єкт [DOMNodeList](class.domnodelist.md)\n\nЯкщо `expression`построено неправильно или`contextNode`имеет неверное значение,**DOMXPath::query()** поверне **`false`**\n\n### Приклади\n\n**Приклад #1 Отримання списку всіх книг англійською**\n\n```php\n<?php\n\n$doc = new DOMDocument;\n\n// Не хотим возиться с пробелами\n$doc->preserveWhiteSpace = false;\n\n$doc->load('book.xml');\n\n$xpath = new DOMXPath($doc);\n\n// Начинаем с корневого элемента\n$query = '//book/chapter/para/informaltable/tgroup/tbody/row/entry[. = \"en\"]';\n\n$entries = $xpath->query($query);\n\nforeach ($entries as $entry) {\n    echo \"Найдена книга {$entry->previousSibling->previousSibling->nodeValue},\" .\n         \" автор {$entry->previousSibling->nodeValue}\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nНайдена книга The Grapes of Wrath, автор John Steinbeck\nНайдена книга The Pearl, автор John Steinbeck\n```\n\nМожна також використовувати параметр `contextNode` для більш короткого запису виразу:\n\n```php\n<?php\n\n$doc = new DOMDocument;\n$doc->preserveWhiteSpace = false;\n\n$doc->load('book.xml');\n\n$xpath = new DOMXPath($doc);\n\n$tbody = $doc->getElementsByTagName('tbody')->item(0);\n\n// запрос относительно узла tbody\n$query = 'row/entry[. = \"en\"]';\n\n$entries = $xpath->query($query, $tbody);\n\nforeach ($entries as $entry) {\n    echo \"Найдена книга {$entry->previousSibling->previousSibling->nodeValue},\" .\n         \" автор {$entry->previousSibling->nodeValue}\\n\";\n}\n?>\n```\n\n### Дивіться також\n\n-   [DOMXPath::evaluate()](domxpath.evaluate.md) \\- Обчислює переданий вираз XPath і повертає типізований результат, якщо можливо\n","title":"DOMXPath::query","contentType":2,"navigation":[{"domxpath.evaluate.md":"« DOMXPath::evaluate"},{"domxpath.registernamespace.md":"DOMXPath::registerNamespace »"},{"index.md":"PHP Manual"},{"class.domxpath.md":"DOMXPath"}]}},"__N_SSG":true}