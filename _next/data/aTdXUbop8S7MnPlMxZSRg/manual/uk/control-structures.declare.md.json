{"pageProps":{"page":{"slug":"control-structures.declare.md","content":"## declare\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nКонструкция`declare`используется для установки директив исполнения для блока кода. Синтаксис`declare` аналогічний із синтаксисом інших конструкцій управління виконанням:\n\n```\ndeclare (directive)\n    statement\n```\n\nСекция`directive`позволяет установить поведение блока`declare`. В даний час розпізнаються лише три директиви: директива `ticks` (Додаткова інформація про директиву [ticks](control-structures.declare.md#control-structures.declare.ticks) доступна нижче), директива `encoding` (Додаткова інформація про директиву [encoding](control-structures.declare.md#control-structures.declare.encoding) доступна нижче) та директива `strict_types` (подробиці у розділі про [строгу типізацію](language.types.declarations.md#language.types.declarations.strict) на сторінці аргументів функції)\n\nОскільки директиви обробляються при компіляції файлу, лише символьні дані можуть використовуватися як значення директиви. Не можна використовувати змінні та константи. Приклад:\n\n```php\n<?php\n// Правильно:\ndeclare(ticks=1);\n\n// Недопустимо:\nconst TICK_VALUE = 1;\ndeclare(ticks=TICK_VALUE);\n?>\n```\n\nЧастина `statement`блока`declare` буде виконано - як виконується і які побічні ефекти виникають під час виконання, може залежати від директиви, яка встановлена ​​в блоці `directive`\n\nКонструкция`declare` також може бути використана в глобальній області видимості, впливаючи на весь наступний за нею код (проте, якщо файл з `declare` був включений, то вона не діятиме на батьківський файл).\n\n```php\n<?php\n// это то же самое:\n\n// можно так:\ndeclare(ticks=1) {\n    // прочие действия\n}\n\n// или так:\ndeclare(ticks=1);\n// прочие действия\n?>\n```\n\n### Тікі\n\nТік - це подія, яка трапляється кожні N низькорівневих операцій, виконаних парсером усередині блоку `declare`. Значення N задається, використовуючи `ticks=N`внутри секции`directive`блока`declare`\n\nНе всі висловлювання підраховуються. Зазвичай, умовні висловлювання та висловлювання аргументів не підраховуються.\n\nПодія (або кілька подій), яка виникає на кожному тику визначається, використовуючи [register\\_tick\\_function()](function.register-tick-function.md). Дивіться нижче приклад для додаткової інформації. Майте на увазі, що для одного тику може виникати кілька подій.\n\n**Приклад #1 Приклад використання тику**\n\n```php\n<?php\n\ndeclare(ticks=1);\n\n// Функция, исполняемая при каждом тике\nfunction tick_handler()\n{\n    echo \"Вызывается tick_handler()\\n\";\n}\n\nregister_tick_function('tick_handler'); // вызывает событие тика\n\n$a = 1; // вызывает событие тика\n\nif ($a > 0) {\n    $a += 2; // вызывает событие тика\n    print $a; // вызывает событие тика\n}\n\n?>\n```\n\nСмотрите также[register\\_tick\\_function()](function.register-tick-function.md) і [unregister\\_tick\\_function()](function.unregister-tick-function.md)\n\n### Кодування\n\nКодування скрипта може бути вказане для кожного скрипта, використовуючи директиву `encoding`\n\n**Приклад #2 Визначення кодування скрипту.**\n\n```php\n<?php\ndeclare(encoding='ISO-8859-1');\n// прочий код\n?>\n```\n\n**Застереження**\n\nУ поєднанні з простором імен єдино допустимий синтаксис для declare є `declare(encoding='...');`где`...` це значення кодування . `declare(encoding='...') {}` приведе до помилки парсера, якщо використовується разом із простором імен.\n\nСмотрите также[zend.script\\_encoding](ini.core.md#ini.zend.script-encoding)\n","title":"declare","contentType":2,"navigation":[{"control-structures.match.md":"« match"},{"function.return.md":"return »"},{"index.md":"PHP Manual"},{"language.control-structures.md":"Керуючі конструкції"}]}},"__N_SSG":true}