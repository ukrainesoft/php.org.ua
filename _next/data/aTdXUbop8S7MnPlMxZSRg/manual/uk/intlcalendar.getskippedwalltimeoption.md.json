{"pageProps":{"page":{"slug":"intlcalendar.getskippedwalltimeoption.md","content":"# IntlCalendar::getSkippedWallTimeOption\n\n(PHP 5 >= 5.5.0, PHP 7, PHP 8, PECL >= 3.0.0a1)\n\nIntlCalendar::getSkippedWallTimeOption — Отримує поведінку для обробки пропущеного часу процесора\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic IntlCalendar::getSkippedWallTimeOption(): int\n```\n\nПроцедурний стиль\n\n```methodsynopsis\nintlcal_get_skipped_wall_time_option(IntlCalendar $calendar): int\n```\n\nОтримує поточну стратегію для роботи з часом процесора, що пропускається щоразу, коли годинник переводиться під час переходів часу на літній час. Значення за замовчуванням - **`IntlCalendar::WALLTIME_LAST`**\n\nЩоб ця опція мала якийсь ефект, календар має бути в [м'якому](intlcalendar.setlenient.md) режимі, в іншому випадку спроба встановити неіснуючий час викликає помилку.\n\nДля цієї функції потрібний ICU 4.9 або новіший.\n\n### Список параметрів\n\n`calendar`\n\nЕкземпляр [IntlCalendar](class.intlcalendar.md)\n\n### Значення, що повертаються\n\nОдна из констант:**`IntlCalendar::WALLTIME_FIRST`** **`IntlCalendar::WALLTIME_LAST`** або **`IntlCalendar::WALLTIME_NEXT_VALID`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** IntlCalendar::getSkippedWallTimeOption()\\*\\*\\*\\*\n\n```php\n<?php\nini_set('date.timezone', 'Europe/Lisbon');\nini_set('intl.default_locale', 'en_US');\nini_set('intl.error_level', E_WARNING);\n\n// 31 марта в 01:00 часы переводятся на 1 час вперёд и с GMT+00 на GMT+01.\n$cal = new IntlGregorianCalendar(2013, 2 /* March */, 31, 1, 30);\n\nvar_dump(\n    $cal->isLenient(),               // true\n    $cal->getSkippedWalltimeOption() // 0 WALLTIME_LAST\n);\n\n$formatter = IntlDateFormatter::create(\n    NULL,\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'UTC'\n);\nvar_dump($formatter->format($cal->getTime() / 1000));\n\n$cal->setSkippedWallTimeOption(IntlCalendar::WALLTIME_FIRST);\nvar_dump($cal->getSkippedWalltimeOption()); // 1 WALLTIME_FIRST\n$cal->set(IntlCalendar::FIELD_HOUR_OF_DAY, 1);\n\nvar_dump($formatter->format($cal->getTime() / 1000));\n\n$cal->setSkippedWallTimeOption(IntlCalendar::WALLTIME_NEXT_VALID);\nvar_dump($cal->getSkippedWalltimeOption()); // 2 WALLTIME_NEXT_VALID\n$cal->set(IntlCalendar::FIELD_HOUR_OF_DAY, 1);\n\nvar_dump($formatter->format($cal->getTime() / 1000));\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nint(0)\nstring(40) \"Sunday, March 31, 2013 at 1:30:00 AM GMT\"\nint(1)\nstring(41) \"Sunday, March 31, 2013 at 12:30:00 AM GMT\"\nint(2)\nstring(40) \"Sunday, March 31, 2013 at 1:00:00 AM GMT\"\n```\n\n### Дивіться також\n\n-   [IntlCalendar::getRepeatedWallTimeOption()](intlcalendar.getrepeatedwalltimeoption.md) \\- Отримує поведінку для обробки повторюваного часу процесора\n-   [IntlCalendar::setSkippedWallTimeOption()](intlcalendar.setskippedwalltimeoption.md) \\- Встановлює поведінку для обробки пропущеного часу процесора при позитивних переходах усунення часового поясу\n-   [IntlCalendar::setRepeatedWallTimeOption()](intlcalendar.setrepeatedwalltimeoption.md) \\- Встановлює поведінку для обробки часу процесора, що повторюється, при негативних переходах зміщення часового поясу\n","title":"IntlCalendar::getSkippedWallTimeOption","contentType":2,"navigation":[{"intlcalendar.getrepeatedwalltimeoption.md":"« IntlCalendar::getRepeatedWallTimeOption"},{"intlcalendar.gettime.md":"IntlCalendar::getTime »"},{"index.md":"PHP Manual"},{"class.intlcalendar.md":"IntlCalendar"}]}},"__N_SSG":true}