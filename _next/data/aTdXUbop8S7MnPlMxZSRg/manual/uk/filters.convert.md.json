{"pageProps":{"page":{"slug":"filters.convert.md","content":"## Перетворюючі фільтри\n\nЯк і фільтри string.\\*, фільтри convert.\\* вчиняють дії, що відповідають їхнім іменам. Для отримання додаткової інформації про конкретний фільтр зверніться до сторінки посібника відповідної функції.\n\n## convert.base64-encode та convert.base64-decode\n\nВикористання цих фільтрів еквівалентно обробці всіх даних потоку функціями [base64\\_encode()](function.base64-encode.md) і [base64\\_decode()](function.base64-decode.md)соответственно`convert.base64-encode` підтримує аргументи, передані як асоціативного масиву. Якщо вказано аргумент `line-length`, результат base64 буде поділено на шматки довгої `line-length` символи кожен. Якщо вказано аргумент `line-break-chars`, кожен шматок буде поділено вказаними символами. Ці параметри дають такий самий ефект, як і використання [base64\\_encode()](function.base64-encode.md)в паре с[chunk\\_split()](function.chunk-split.md)\n\n**Приклад #1 convert.base64-encode та convert.base64-decode**\n\n```php\n<?php\n$fp = fopen('php://output', 'w');\nstream_filter_append($fp, 'convert.base64-encode');\nfwrite($fp, \"This is a test.\\n\");\nfclose($fp);\n/* Выведет:  VGhpcyBpcyBhIHRlc3QuCg==  */\n\n$param = array('line-length' => 8, 'line-break-chars' => \"\\r\\n\");\n$fp = fopen('php://output', 'w');\nstream_filter_append($fp, 'convert.base64-encode', STREAM_FILTER_WRITE, $param);\nfwrite($fp, \"This is a test.\\n\");\nfclose($fp);\n/* Выведет:  VGhpcyBp\n          :  cyBhIHRl\n          :  c3QuCg==  */\n\n$fp = fopen('php://output', 'w');\nstream_filter_append($fp, 'convert.base64-decode');\nfwrite($fp, \"VGhpcyBpcyBhIHRlc3QuCg==\");\nfclose($fp);\n/* Выведет:  This is a test.  */\n?>\n```\n\n## convert.quoted-printable-encode та convert.quoted-printable-decode\n\nВикористання decode-версії цього фільтра еквівалентно обробці всіх даних потоку функцією [quoted\\_printable\\_decode()](function.quoted-printable-decode.md)У фильтра`convert.quoted-printable-encode` немає еквівалентної функції . `convert.quoted-printable-encode` підтримує аргументи, передані як асоціативного масиву. На додаток до аргументів, що підтримуються `convert.base64-encode` `convert.quoted-printable-encode` також підтримує boolean-аргументи `binary`и`force-encode-first`. . `convert.base64-decode` підтримує лише аргумент `line-break-chars` як підказка для чищення закодованих даних.\n\n**Приклад #2 convert.quoted-printable-encode & convert.quoted-printable-decode**\n\n```php\n<?php\n$fp = fopen('php://output', 'w');\nstream_filter_append($fp, 'convert.quoted-printable-encode');\nfwrite($fp, \"This is a test.\\n\");\n/* Выведет:  =This is a test.=0A  */\n?>\n```\n\n## convert.iconv.\\*\n\nФільтри `convert.iconv.*` доступні, якщо включена підтримка [iconv](book.iconv.md) та їх використання аналогічно обробці потокових даних за допомогою [iconv()](function.iconv.md). Ці фільтри не підтримують параметри. Натомість очікується, що вихідне та цільове кодування були задані в імені фільтра таким чином: `convert.iconv.<input-encoding>.<output-encoding>`или`convert.iconv.<input-encoding>/<output-encoding>` (обидва варіанти семантично еквівалентні).\n\n**Приклад # 3 convert.iconv.\\***\n\n```php\n<?php\n$fp = fopen('php://output', 'w');\nstream_filter_append($fp, 'convert.iconv.utf-16le.utf-8');\nfwrite($fp, \"T\\0h\\0i\\0s\\0 \\0i\\0s\\0 \\0a\\0 \\0t\\0e\\0s\\0t\\0.\\0\\n\\0\");\nfclose($fp);\n/* Выведет: This is a test. */\n?>\n```\n","title":"Перетворюючі фільтри","contentType":2,"navigation":[{"filters.string.md":"« Рядкові фільтри"},{"filters.compression.md":"Компресійні фільтри »"},{"index.md":"PHP Manual"},{"filters.md":"Список доступних фільтрів"}]}},"__N_SSG":true}