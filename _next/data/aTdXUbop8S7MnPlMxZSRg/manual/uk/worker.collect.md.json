{"pageProps":{"page":{"slug":"worker.collect.md","content":"# Worker::collect\n\n(PECL pthreads >= 3.0.0)\n\nWorker::collect — Зібрати посилання на завершені завдання\n\n### Опис\n\n```methodsynopsis\npublic Worker::collect(Callable $collector = ?): int\n```\n\nДозволяє Worker зібрати \"сміттєві\" посилання на завдання. Опціонально можна задати користувальницький збирач.\n\n### Список параметрів\n\n`collector`\n\nСкладальник типу Callable, який має повертати **`true`** або **`false`** залежно від цього, чи можна зібрати завдання. Випадки, коли вам може знадобитися власний збирач, дуже рідкісні.\n\n### Значення, що повертаються\n\nКількість завдань, що залишилися в стеку Worker, які будуть зібрані.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Worker::collect()\\*\\*\\*\\*\n\n```php\n<?php\n$worker = new Worker();\n\necho \"Сейчас на стеке {$worker->collect()} задач, которые нужно собрать\\n\";\n\nfor ($i = 0; $i < 15; ++$i) {\n    $worker->stack(new class extends Threaded {});\n}\n\necho \"На стеке {$worker->collect()} задач, которые нужно собрать\\n\";\n\n$worker->start();\n\nwhile ($worker->collect()); // ждём, пока все задачи не завершат исполнение\n\necho \"Теперь на стеке {$worker->collect()} задач, ждущих, когда их соберут\\n\";\n\n$worker->shutdown();\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nСейчас на стеке 0 задач, которые нужно собрать\nНа стеке 15 задач, которые нужно собрать\nТеперь на стеке 0 задач, ждущих, когда их соберут\n```\n","title":"Worker::collect","contentType":2,"navigation":[{"class.worker.md":"« Worker"},{"worker.getstacked.md":"Worker::getStacked »"},{"index.md":"PHP Manual"},{"class.worker.md":"Worker"}]}},"__N_SSG":true}