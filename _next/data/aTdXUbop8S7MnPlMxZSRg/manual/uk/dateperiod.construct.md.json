{"pageProps":{"page":{"slug":"dateperiod.construct.md","content":"# DatePeriod::\\_\\_construct\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nDatePeriod::\\_\\_construct — Створює новий об'єкт DatePeriod\n\n### Опис\n\npublic **DatePeriod::\\_\\_construct**  \n[DateTimeInterface](class.datetimeinterface.md) `$start`,  \n[DateInterval](class.dateinterval.md) `$interval`,  \nint`$recurrences`,  \nint`$options`  \n) .\n\npublic **DatePeriod::\\_\\_construct**  \n[DateTimeInterface](class.datetimeinterface.md) `$start`,  \n[DateInterval](class.dateinterval.md) `$interval`,  \n[DateTimeInterface](class.datetimeinterface.md) `$end`,  \nint`$options`  \n) .\n\n**Увага**\n\npublic **DatePeriod::\\_\\_construct**(string`$isostr`, int`$options`\n\nЦей варіант конструктора застарів, використовуйте замість нього метод [DatePeriod::createFromISO8601String()](dateperiod.createfromiso8601string.md)\n\nСтворює новий об'єкт DatePeriod.\n\nОб'єкти [DatePeriod](class.dateperiod.md) можна використовувати як ітератор для генерації ряду об'єктів [DateTimeImmutable](class.datetimeimmutable.md) або [DateTime](class.datetime.md) з дати `start` `interval`и`end` або числа `recurrences`\n\nКлас об'єктів, що повертаються, еквівалентний класу-батькові [DateTimeImmutable](class.datetimeimmutable.md) або [DateTime](class.datetime.md) об'єкта `start`\n\n### Список параметрів\n\n`start`\n\nПочаткова дата. За замовчуванням включається до набору результатів.\n\n`interval`\n\nІнтервал.\n\n`recurrences`\n\nКількість повторень. Число результатів, що повертаються на одиницю більше цього, так як дата початку включається в набір результатів за замовчуванням. Має бути більше, ніж\n\n`end`\n\nКінцева дата. За замовчуванням виключається із набору результатів.\n\n`isostr`\n\nПодмножество, содержащее интервал согласно[» спеціфікації ISO 8601](http://en.wikipedia.org/wiki/Iso8601#Repeating_intervals)\n\nПрикладами деяких особливостей специфікації інтервалів ISO 8601, які не підтримує PHP, є:\n\n1.  нульові входження (`R0/`) .\n2.  зсув часу, відмінне від UTC (`Z`), наприклад,`+02:00`\n\n`options`\n\nБітове поле, яке можна використовувати для керування певною поведінкою з початковою та кінцевою датами.\n\nВиключити початкову дату всередині періоду з набору дат, що повторюються, можна за допомогою константи **`DatePeriod::EXCLUDE_START_DATE`**\n\nВключити кінцеву дату всередині періоду в набір дат, що повторюються, можна за допомогою константи **`DatePeriod::INCLUDE_END_DATE`**\n\n### Помилки\n\nКогда значение параметра`isostr` не може бути розібрано аналізатором як допустимий стандартом ISO 8601 формат, викидається виняток [DateMalformedPeriodStringException](class.datemalformedperiodstringexception.md). До PHP 8.3 викидався виняток [Exception](class.exception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Тепер замість винятку [Exception](class.exception.md) викидається виняток [DateMalformedPeriodStringException](class.datemalformedperiodstringexception.md) |\n| 8.2.0 | Добавлена константа\\*\\*`DatePeriod::INCLUDE_END_DATE`\\*\\* |\n| 7.2.19, 7.3.6, 7.4.0 | `recurrences` має бути більше |\n\n### Приклади\n\n**Приклад #1 Приклад використання DatePeriod**\n\n```php\n<?php\n$start = new DateTime('2012-07-01');\n$interval = new DateInterval('P7D');\n$end = new DateTime('2012-07-31');\n$recurrences = 4;\n$iso = 'R4/2012-07-01T00:00:00Z/P7D';\n\n// Эти периоды эквивалентны.\n$period = new DatePeriod($start, $interval, $recurrences);\n$period = new DatePeriod($start, $interval, $end);\n$period = new DatePeriod($iso);\n\n// При переборе экземпляра DatePeriod в цикле будут отображены все отобранные даты\n// периода.\nforeach ($period as $date) {\n    echo $date->format('Y-m-d').\"\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n2012-07-01\n2012-07-08\n2012-07-15\n2012-07-22\n2012-07-29\n```\n\n**Приклад #2 Приклад использования DatePeriod с**`DatePeriod::EXCLUDE_START_DATE`\\*\\*\\*\\*\n\n```php\n<?php\n$start = new DateTime('2012-07-01');\n$interval = new DateInterval('P7D');\n$end = new DateTime('2012-07-31');\n\n$period = new DatePeriod($start, $interval, $end,\n                         DatePeriod::EXCLUDE_START_DATE);\n\n// При переборе экземпляра DatePeriod в цикле будут отображены все отобранные даты\n// периода.\n// Однако в этом случае 2012-07-01 не будет отображена.\nforeach ($period as $date) {\n    echo $date->format('Y-m-d').\"\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n2012-07-08\n2012-07-15\n2012-07-22\n2012-07-29\n```\n\n**Приклад #3 Приклад використання DatePeriod, що показує всі останні четверги на рік**\n\n```php\n<?php\n$begin = new DateTime('2021-12-31');\n$end = new DateTime('2022-12-31 23:59:59');\n\n$interval = DateInterval::createFromDateString('last thursday of next month');\n$period = new DatePeriod($begin, $interval, $end, DatePeriod::EXCLUDE_START_DATE);\n\nforeach ($period as $dt) {\n    echo $dt->format('l Y-m-d'), \"\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nThursday 2022-01-27\nThursday 2022-02-24\nThursday 2022-03-31\nThursday 2022-04-28\nThursday 2022-05-26\nThursday 2022-06-30\nThursday 2022-07-28\nThursday 2022-08-25\nThursday 2022-09-29\nThursday 2022-10-27\nThursday 2022-11-24\nThursday 2022-12-29\n```\n\n### Примітки\n\nНезв'язкова кількість повторень, визначених у секції 4.5 ISO 8601 \"Recurring time interval\", не підтримується, тобто ні передача `\"R/...\"`в`isostr`, ни\\*\\*`null`\\*\\*в`end`, не працюватимуть.\n","title":"DatePeriod::\\_\\_construct","contentType":2,"navigation":[{"class.dateperiod.md":"« DatePeriod"},{"dateperiod.createfromiso8601string.md":"DatePeriod::createFromISO8601String »"},{"index.md":"PHP Manual"},{"class.dateperiod.md":"DatePeriod"}]}},"__N_SSG":true}