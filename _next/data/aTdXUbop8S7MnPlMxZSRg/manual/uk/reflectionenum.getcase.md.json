{"pageProps":{"page":{"slug":"reflectionenum.getcase.md","content":"# ReflectionEnum::getCase\n\n(PHP 8 >= 8.1.0)\n\nReflectionEnum::getCase — Повертає певний варіант перерахування\n\n### Опис\n\n```methodsynopsis\npublic ReflectionEnum::getCase(string $name): ReflectionEnumUnitCase\n```\n\nПовертає Reflection-об'єкт для певного варіанта перерахування на ім'я. Якщо вибраний варіант не визначено, викидається [ReflectionException](class.reflectionexception.md)\n\n### Список параметрів\n\n`name`\n\nНазву варіанта, який потрібно отримати.\n\n### Значення, що повертаються\n\nЕкземпляр [ReflectionEnumUnitCase](class.reflectionenumunitcase.md) або [ReflectionEnumBackedCase](class.reflectionenumbackedcase.md)в зависимости от ситуации.\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionEnum::getCase()\\*\\*\\*\\*\n\n```php\n<?php\nenum Suit\n{\n    case Hearts;\n    case Diamonds;\n    case Clubs;\n    case Spades;\n}\n\n$rEnum = new ReflectionEnum(Suit::class);\n\n$rCase = $rEnum->getCase('Clubs');\n\nvar_dump($rCase->getValue());\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nenum(Suit::Clubs)\n```\n\n### Дивіться також\n\n-   [Перерахування](language.enumerations.md)\n-   [ReflectionEnum::getCases()](reflectionenum.getcases.md) \\- Повертає список усіх варіантів перерахування\n-   [ReflectionEnum::hasCase()](reflectionenum.hascase.md) \\- Перевіряє варіант перерахування\n-   [ReflectionEnum::isBacked()](reflectionenum.isbacked.md) \\- Визначає, чи є перерахування типовим\n","title":"ReflectionEnum::getCase","contentType":2,"navigation":[{"reflectionenum.getbackingtype.md":"« ReflectionEnum::getBackingType"},{"reflectionenum.getcases.md":"ReflectionEnum::getCases »"},{"index.md":"PHP Manual"},{"class.reflectionenum.md":"ReflectionEnum"}]}},"__N_SSG":true}