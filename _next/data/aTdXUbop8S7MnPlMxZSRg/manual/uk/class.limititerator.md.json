{"pageProps":{"page":{"slug":"class.limititerator.md","content":"# Клас LimitIterator\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\n## Вступ\n\nКласс**LimitIterator** дозволяє зробити перебір обмеженої кількості елементів у [Iterator](class.iterator.md)\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class LimitIterator\n    \n\n    \n     extends\n      IteratorIterator\n     {\n\n    /* Методы */\n    \n   public __construct(Iterator $iterator, int $offset = 0, int $limit = -1)\n\n    public current(): mixed\npublic getPosition(): int\npublic key(): mixed\npublic next(): void\npublic rewind(): void\npublic seek(int $offset): int\npublic valid(): bool\n\n\n    /* Наследуемые методы */\n    public IteratorIterator::current(): mixed\npublic IteratorIterator::getInnerIterator(): ?Iterator\npublic IteratorIterator::key(): mixed\npublic IteratorIterator::next(): void\npublic IteratorIterator::rewind(): void\npublic IteratorIterator::valid(): bool\n\n   }\n```\n\n## Приклади\n\n**Приклад #1 Приклад використання** LimitIterator\\*\\*\\*\\*\n\n```php\n<?php\n\n// Создать итератор для ограничения\n$fruits = new ArrayIterator(array(\n    'apple',\n    'banana',\n    'cherry',\n    'damson',\n    'elderberry'\n));\n\n// Цикл только по первым трём фруктам\nforeach (new LimitIterator($fruits, 0, 3) as $fruit) {\n    var_dump($fruit);\n}\n\necho \"\\n\";\n\n// Цикл, начиная с третьего фрукта и до конца\n// Примечание: смещение начинается с нуля для яблока\nforeach (new LimitIterator($fruits, 2) as $fruit) {\n    var_dump($fruit);\n}\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(5) \"apple\"\nstring(6) \"banana\"\nstring(6) \"cherry\"\n\nstring(6) \"cherry\"\nstring(6) \"damson\"\nstring(10) \"elderberry\"\n```\n\n## Зміст\n\n-   [LimitIterator::\\_\\_construct](limititerator.construct.md) \\- Конструктор класу LimitIterator\n-   [LimitIterator::current](limititerator.current.md)— Отримання поточного елемента\n-   [LimitIterator::getPosition](limititerator.getposition.md)— Повертає поточну позицію\n-   [LimitIterator::key](limititerator.key.md)— Отримання поточного ключа\n-   [LimitIterator::next](limititerator.next.md)— Переміщення до наступної позиції\n-   [LimitIterator::rewind](limititerator.rewind.md)— Переміщує покажчик на початкову позицію\n-   [LimitIterator::seek](limititerator.seek.md) \\- Переміщає ітератор на задану позицію\n-   [LimitIterator::valid](limititerator.valid.md) \\- Перевіряє валідність поточного елемента\n","title":"Клас LimitIterator","contentType":2,"navigation":[{"iteratoriterator.valid.md":"« IteratorIterator::valid"},{"limititerator.construct.md":"LimitIterator::\\_\\_construct »"},{"index.md":"PHP Manual"},{"spl.iterators.md":"Ітератори"}]}},"__N_SSG":true}