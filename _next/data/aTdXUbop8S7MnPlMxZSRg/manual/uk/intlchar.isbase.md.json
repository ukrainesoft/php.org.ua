{"pageProps":{"page":{"slug":"intlchar.isbase.md","content":"# IntlChar::isbase\n\n(PHP 7, PHP 8)\n\nIntlChar::isbase — Перевірити, чи символ є базовим\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::isbase(int|string $codepoint): ?bool\n```\n\nПеревіряє, чи є символ базовим . **`true`** для категорій \"L\" (літери), \"N\" (числа), \"Mc\" (позначкою позиціонування при комбінації символів) та \"Me\" (enclosing marks).\n\n> **Зауваження** :\n> \n> Відрізняється від визначення, заданого в розділі 3.5 статті D13 Unicode, що визначає базові символи як усі символи (не Cn), що графічно не поєднуються з попередніми символами (M) і не є керуючими (Cc) або форматуючими (Cf).\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо `codepoint` є базовим, **`false`** - якщо ні. У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::isbase(\"A\"));\nvar_dump(IntlChar::isbase(\"1\"));\nvar_dump(IntlChar::isbase(\"\\u{2603}\"));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nbool(true)\nbool(false)\n```\n\n### Дивіться також\n\n-   [IntlChar::isalpha()](intlchar.isalpha.md) \\- Перевірити, чи є символ літерою\n-   [IntlChar::isdigit()](intlchar.isdigit.md) \\- Перевірити, чи є символ цифрою\n","title":"IntlChar::isbase","contentType":2,"navigation":[{"intlchar.isalpha.md":"« IntlChar::isalpha"},{"intlchar.isblank.md":"IntlChar::isblank »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}