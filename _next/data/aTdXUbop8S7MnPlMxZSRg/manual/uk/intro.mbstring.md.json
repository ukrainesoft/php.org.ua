{"pageProps":{"page":{"slug":"intro.mbstring.md","content":"# Вступ\n\nХоча і існує безліч мов, у яких всі необхідні символи можна закодувати одним восьмибітним значенням, існують також і мови, що вимагають стільки символів, що вони не вміщаються в один байт (Байт складається з восьми біт. Кожен біт може містити одне з двох різних значень, одиницю або нуль Тому один байт може ставити тільки 256 унікальних значень (два у восьмому ступені). Схеми кодування, що використовують багатобайтові рядки, були розроблені для того, щоб можна було користуватися більш ніж 256 символами, при цьому продовжуючи працювати з рядками, начебто вони закодовані у звичайній побайтовій системі.\n\nКоли ви працюєте з багатобайтовими рядками (видаляєте пробільні символи за допомогою функції trim, розбиваєте рядок на масив за регулярним виразом за допомогою функції split, і т.д.), необхідно використовувати спеціальні функції, так як у таких кодуваннях два або більше послідовних байти можуть встановити один символ. Інакше, якщо застосувати функцію, яка не вміє працювати з багатобайтовими рядками, вона, ймовірно, не зможе визначити початок і кінець багатобайтових символів, і в результаті ви отримаєте рядок-сміття, який, швидше за все, втратить вихідне значення.\n\n`mbstring` надає функції для роботи з багатобайтовими рядками, які полегшують роботу з багатобайтовими кодуваннями PHP. Крім того, `mbstring` займається конвертацією рядків з одного кодування в інше . `mbstring` призначений для роботи з Unicode-кодуваннями, такими як UTF-8 і UCS-2, а також з багатьма однобайтовими кодуваннями для зручності (перерахованими в списку [Підтримуваних кодувань символів](mbstring.supported-encodings.md)\n","title":"Вступ","contentType":2,"navigation":[{"book.mbstring.md":"« Багатобайтові рядки"},{"mbstring.setup.md":"Встановлення та налаштування \""},{"index.md":"PHP Manual"},{"book.mbstring.md":"Багатобайтові рядки"}]}},"__N_SSG":true}