{"pageProps":{"page":{"slug":"functions.variable-functions.md","content":"## Звернення до функцій через змінні\n\nPHP підтримує концепцію змінних функцій. Це означає, що якщо до імені змінної приєднані круглі дужки, PHP шукає функцію з тим самим ім'ям, що й результат обчислення змінної і намагається її виконати. Цю можливість можна використовувати для реалізації зворотних викликів, таблиць функцій та безлічі інших речей.\n\nЗмінні функції не працюватимуть з такими мовними конструкціями, як [echo](function.echo.md) [print](function.print.md) [unset()](function.unset.md) [isset()](function.isset.md) [empty()](function.empty.md) [include](function.include.md) [require](function.require.md) і т.п. Вам необхідно реалізувати свою функцію-обертку для того, щоб наведені вище конструкції могли працювати зі змінними функціями.\n\n**Приклад #1 Робота з функціями за допомогою змінних**\n\n```php\n<?php\nfunction foo() {\n    echo \"В foo()<br />\\n\";\n}\n\nfunction bar($arg = '')\n{\n    echo \"В bar(); аргумент был '$arg'.<br />\\n\";\n}\n\n// Функция-обёртка для echo\nfunction echoit($string)\n{\n    echo $string;\n}\n\n$func = 'foo';\n$func();        // Вызывает функцию foo()\n\n$func = 'bar';\n$func('test');  // Вызывает функцию bar()\n\n$func = 'echoit';\n$func('test');  // Вызывает функцию echoit()\n?>\n```\n\nВи також можете викликати методи об'єкта, використовуючи можливості PHP для роботи зі змінними функціями.\n\n**Приклад #2 Звернення до методів класу за допомогою змінних**\n\n```php\n<?php\nclass Foo\n{\n    function Variable()\n    {\n        $name = 'Bar';\n        $this->$name(); // Вызываем метод Bar()\n    }\n\n    function Bar()\n    {\n        echo \"Это Bar\";\n    }\n}\n\n$foo = new Foo();\n$funcname = \"Variable\";\n$foo->$funcname();  // Обращаемся к $foo->Variable()\n\n?>\n```\n\nПри виклику статичних методів виклик функції \"сильніший\", ніж оператор доступу до статичної властивості:\n\n**Приклад #3 Приклад виклику змінного методу зі статичною властивістю**\n\n```php\n<?php\nclass Foo\n{\n    static $variable = 'статическое свойство';\n    static function Variable()\n    {\n        echo 'Вызов метода Variable';\n    }\n}\n\necho Foo::$variable; // Это выведет 'статическое свойство'. Переменная $variable будет разрешена в этой области видимости.\n$variable = \"Variable\";\nFoo::$variable();  // Это вызовет $foo->Variable(), прочитав $variable из этой области видимости.\n\n?>\n```\n\n**Приклад #4 Складні callable функції**\n\n```php\n<?php\nclass Foo\n{\n    static function bar()\n    {\n        echo \"bar\\n\";\n    }\n    function baz()\n    {\n        echo \"baz\\n\";\n    }\n}\n\n$func = array(\"Foo\", \"bar\");\n$func(); // выведет \"bar\"\n$func = array(new Foo, \"baz\");\n$func(); // выведет \"baz\"\n$func = \"Foo::bar\";\n$func(); // выведет \"bar\"\n?>\n```\n\n### Дивіться також\n\n-   [is\\_callable()](function.is-callable.md)\n-   [call\\_user\\_func()](function.call-user-func.md)\n-   [function\\_exists()](function.function-exists.md)\n-   [змінні змінних](language.variables.variable.md)\n","title":"Звернення до функцій через змінні","contentType":2,"navigation":[{"functions.returning-values.md":"« Повернення значень"},{"functions.internal.md":"Вбудовані функції »"},{"index.md":"PHP Manual"},{"language.functions.md":"Функції"}]}},"__N_SSG":true}