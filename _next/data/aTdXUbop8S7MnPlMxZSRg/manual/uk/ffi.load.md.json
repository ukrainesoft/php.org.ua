{"pageProps":{"page":{"slug":"ffi.load.md","content":"# FFI::load\n\n(PHP 7 >= 7.4.0, PHP 8)\n\nFFI::load — Завантажити декларації C із заголовного файлу\n\n### Опис\n\n```methodsynopsis\npublic static FFI::load(string $filename): ?FFI\n```\n\nЗавантажує декларації C із заголовного файлу. Можна вказати загальні бібліотеки для завантаження за допомогою спеціальної `#define` директиви `FFI_LIB` у заголовному файлі.\n\n### Список параметрів\n\n`filename`\n\nІм'я файлу заголовка C.\n\nДирективи співпроцесора не підтримуються. Тобто . `#include` `#define` і макроси CPP не працюватимуть, за винятком особливих випадків, перерахованих нижче.\n\nЗаголовний файл *повинен* утримувати оператор `#define`для переменной`FFI_SCOPE`, наПриклад,`#define FFI_SCOPE \"MYLIB\"`За подробностями обратитесь к[Введення до FFI](class.ffi.md#ffi.intro)\n\nЗаголовний файл *може* утримувати оператор `#define`для переменной`FFI_LIB`вказати бібліотеку, яку він розкриває. Якщо це системна бібліотека, потрібне лише ім'я файлу, наприклад: `#define FFI_LIB \"libc.so.6\"`. Якщо це бібліотека користувача, потрібен відносний шлях, наприклад: `#define FFI_LIB \"./mylib.so\"`\n\n### Значення, що повертаються\n\nПовертає новий об'єкт [FFI](class.ffi.md)или\\*\\*`null`\\*\\*в случае возникновения ошибки.\n\n### Дивіться також\n\n-   [FFI::scope()](ffi.scope.md) \\- інстанцує об'єкт FFI відповідно до декларації С, розібраної на етапі передзавантаження\n","title":"FFI::load","contentType":2,"navigation":[{"ffi.isnull.md":"« FFI::isNull"},{"ffi.memcmp.md":"FFI::memcmp »"},{"index.md":"PHP Manual"},{"class.ffi.md":"FFI"}]}},"__N_SSG":true}