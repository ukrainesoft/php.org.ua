{"pageProps":{"page":{"slug":"event.persistence.md","content":"# Про постійні (persistent) події\n\nЗа замовчуванням, коли подія, що очікує, стає активною (оскільки їх файловий дескриптор стає доступним для запису або читання, або закінчився період очікування), у нього знімається статус очікує рівно перед тим, як буде запущена його функція зворотного виклику. Таким чином, щоб знову перевести його у статус очікування, необхідно виконати для нього [Event::add()](event.add.md) з його callback-функції.\n\nЯкщо ж на події встановлено прапор **`Event::PERSIST`**, та подія стає *постійним*. Це означає, що подія залишається в статусі очікування, навіть якщо запущено її функцію зворотного виклику. Щоб прибрати у події прапор сталості, необхідно виконати для нього [Event::del()](event.del.md)\n\nЧас очікування постійної події скидається щоразу, коли запускається його callback-функція. Таким чином, якщо для події встановлено прапори **`Event::READ`** **`Event::PERSIST`** та час очікування в 5 секунд, подія стане активно у наступних випадках:\n\n1.  Щоразу, коли сокет або дескриптор файлу готовий до читання.\n    \n2.  Щоразу, коли минуло п'ять секунд з моменту останньої події.\n    \n\nСмотрите также[» Fast Швидке, переносне, неблокуюче мережне програмування з Libevent, про постійні події](http://www.wangafu.net/~nickm/libevent-book/Ref4_event.md#_about_event_persistence)\n","title":"Про постійні (persistent) події","contentType":2,"navigation":[{"event.flags.md":"« Прапори подій"},{"event.callbacks.md":"Callback-функції »"},{"index.md":"PHP Manual"},{"book.event.md":"Event"}]}},"__N_SSG":true}