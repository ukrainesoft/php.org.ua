{"pageProps":{"page":{"slug":"function.imagefilter.md","content":"# imagefilter\n\n(PHP 5, PHP 7, PHP 8)\n\nimagefilter — Застосовує фільтр до зображення\n\n### Опис\n\n```methodsynopsis\nimagefilter(GdImage $image, int $filter, array|int|float|bool ...$args): bool\n```\n\n**imagefilter()** застосовує заданий фільтр `filter`к изображению`image`\n\n### Список параметрів\n\n`image`\n\nОб'єкт [GdImage](class.gdimage.md), що повертається однією з функцій створення зображень, наприклад, такий як [imagecreatetruecolor()](function.imagecreatetruecolor.md)\n\n`filter`\n\n`filter` може бути одним з наступних:\n\n-   **`IMG_FILTER_NEGATE`**: Інвертує всі кольори зображення\n-   **`IMG_FILTER_GRAYSCALE`**: Перетворює кольори зображення в градації сірого шляхом перетворення компонентів червоного, зеленого та синього в їхню суму з урахуванням ваг, таких як при обчисленні яскравості (Y') по REC.601. Альфа-канал зберігається. Для зображень, що використовують палітру, результат може відрізнятися через обмеження, що накладаються палітрою.\n-   **`IMG_FILTER_BRIGHTNESS`**: Змінює яскравість зображення. Використовуйте аргумент`args`для завдання рівня яскравості. Діапазон яскравостей від -255 до 255.\n-   **`IMG_FILTER_CONTRAST`**: Змінює контрастність зображення. Використовуйте аргумент`args`для завдання рівня контрастності.\n-   **`IMG_FILTER_COLORIZE`**: Те саме, що і\\*\\*`IMG_FILTER_GRAYSCALE`\\*\\*, за винятком того, що можна встановити колір. Використовуйте аргументи`args` `arg2`и`arg3`для вказівки каналів`red` `green` `blue`, а`arg4`для`alpha`каналу. Діапазон кожного каналу кольору від 0 до 255.\n-   **`IMG_FILTER_EDGEDETECT`**: Використовує визначення меж для їх підсвічування\n-   **`IMG_FILTER_EMBOSS`**: Додає рельєф\n-   **`IMG_FILTER_GAUSSIAN_BLUR`**: Розмиває зображення за методом Гауса.\n-   **`IMG_FILTER_SELECTIVE_BLUR`**: Розмиває зображення.\n-   **`IMG_FILTER_MEAN_REMOVAL`**: Використовує усереднення для досягнення ефекту \"ескізу\"\n-   **`IMG_FILTER_SMOOTH`**: Робить межі більш плавними, а зображення менш чітким. Використовуйте аргумент`args`для завдання рівня гладкості.\n-   **`IMG_FILTER_PIXELATE`**: Застосовує ефект пікселювання. Використовуйте аргумент`args`для завдання розміру блоку та аргумент`arg2`для завдання режиму пікселювання.\n-   **`IMG_FILTER_SCATTER`**: Застосовує ефект розсіювання зображення, використовуйте`args`и`arg2`для визначення сили ефекту та додатково`arg3`для використання лише до вибраних кольорів пікселів.\n\n`args`\n\n-   **`IMG_FILTER_BRIGHTNESS`**: Рівень яскравості\n-   **`IMG_FILTER_CONTRAST`**: Рівень контрастності\n-   **`IMG_FILTER_COLORIZE`**: Значення червоного кольору.\n-   **`IMG_FILTER_SMOOTH`**: Рівень згладжування.\n-   **`IMG_FILTER_PIXELATE`**: Розмір блоку у пікселах.\n-   **`IMG_FILTER_SCATTER`**: Рівень зменшення ефекту Не повинен бути більшим або дорівнює рівню додавання ефекту, встановленому за допомогою`arg2`\n\n`arg2`\n\n-   **`IMG_FILTER_COLORIZE`**: Значення зеленого кольору.\n-   **`IMG_FILTER_PIXELATE`**: Використовувати вдосконалений ефект пікселювання чи ні (за замовчуванням\\*\\*`false`\\*\\*\n-   **`IMG_FILTER_SCATTER`**: Рівень додавання ефекту.\n\n`arg3`\n\n-   **`IMG_FILTER_COLORIZE`**: Значення синього кольору.\n-   **`IMG_FILTER_SCATTER`**: Необов'язковий масив значень індексації кольору для ефекту.\n\n`arg4`\n\n-   **`IMG_FILTER_COLORIZE`**: Альфа канал, значення між 0 та 127. 0 означає непрозорість, 127 відповідає абсолютній прозорості.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `image` тепер чекає екземпляр [GdImage](class.gdimage.md); раніше очікувався коректний `gd` ресурс (Resource). |\n| 7.4.0 | Додано підтримку розсіювання (**`IMG_FILTER_SCATTER`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** imagefilter()\\*\\* із фільтром grayscale\\*\\*\n\n```php\n<?php\n$im = imagecreatefrompng('dave.png');\n\nif($im && imagefilter($im, IMG_FILTER_GRAYSCALE))\n{\n    echo 'Изображение преобразовано к градациям серого.';\n\n    imagepng($im, 'dave.png');\n}\nelse\n{\n    echo 'Преобразование не удалось.';\n}\n\nimagedestroy($im);\n?>\n```\n\n**Приклад #2 Приклад використання** imagefilter()\\*\\* з фільтром яскравості\\*\\*\n\n```php\n<?php\n$im = imagecreatefrompng('sean.png');\n\nif($im && imagefilter($im, IMG_FILTER_BRIGHTNESS, 20))\n{\n    echo 'Яркость изображения изменена.';\n\n    imagepng($im, 'sean.png');\n    imagedestroy($im);\n}\nelse\n{\n    echo 'Изменить яркость не удалось.';\n}\n?>\n```\n\n**Приклад #3 Приклад використання** imagefilter()**с фильтром colorize**\n\n```php\n<?php\n$im = imagecreatefrompng('philip.png');\n\n/* R, G, B, so 0, 255, 0 is green */\nif($im && imagefilter($im, IMG_FILTER_COLORIZE, 0, 255, 0))\n{\n    echo 'Изображение преобразовано к оттенкам зеленого.';\n\n    imagepng($im, 'philip.png');\n    imagedestroy($im);\n}\nelse\n{\n    echo 'Преобразование не удалось.';\n}\n?>\n```\n\n**Приклад #4 Приклад використання** imagefilter()**с фильтром negate**\n\n```php\n<?php\n// Определим нашу функцию, которую можно использовать в PHP\n// без imagefilter()\nfunction negate($im)\n{\n    if(function_exists('imagefilter'))\n    {\n        return imagefilter($im, IMG_FILTER_NEGATE);\n    }\n\n    for($x = 0; $x < imagesx($im); ++$x)\n    {\n        for($y = 0; $y < imagesy($im); ++$y)\n        {\n            $index = imagecolorat($im, $x, $y);\n            $rgb = imagecolorsforindex($index);\n            $color = imagecolorallocate($im, 255 - $rgb['red'], 255 - $rgb['green'], 255 - $rgb['blue']);\n\n            imagesetpixel($im, $x, $y, $color);\n        }\n    }\n\n    return(true);\n}\n\n$im = imagecreatefromjpeg('kalle.jpg');\n\nif($im && negate($im))\n{\n    echo 'Изображение инвертировано успешно.';\n\n    imagejpeg($im, 'kalle.jpg', 100);\n    imagedestroy($im);\n}\nelse\n{\n    echo 'Инвертировать изображение не удалось.';\n}\n?>\n```\n\n**Приклад #5 Приклад використання** imagefilter()**с фильтром pixelate**\n\n```php\n<?php\n// загрузка PHP логотипа, нам нужно 2 штуки\n// для сравнения\n$logo1 = imagecreatefrompng('./php.png');\n$logo2 = imagecreatefrompng('./php.png');\n\n// подопытный экземпляр\n$output = imagecreatetruecolor(imagesx($logo1) * 2, imagesy($logo1));\n\n// Применение пикселирования к каждому изображению с размером блока в 3 пиксела\nimagefilter($logo1, IMG_FILTER_PIXELATE, 3);\nimagefilter($logo2, IMG_FILTER_PIXELATE, 3, true);\n\n// Совмещение различий в выходном изображении\nimagecopy($output, $logo1, 0, 0, 0, 0, imagesx($logo1) - 1, imagesy($logo1) - 1);\nimagecopy($output, $logo2, imagesx($logo2), 0, 0, 0, imagesx($logo2) - 1, imagesy($logo2) - 1);\nimagedestroy($logo1);\nimagedestroy($logo2);\n\n// Вывод различий\nheader('Content-Type: image/png');\nimagepng($output);\nimagedestroy($output);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n![Висновок прикладу: imagefilter() pixelate](images/21009b70229598c6a80eef8b45bf282b-imagefilterpixelate.png)\n\n**Приклад #6 Приклад використання** imagefilter()**с фильтром scatter**\n\n```php\n<?php\n// Загрузка изображения\n$logo = imagecreatefrompng('./php.png');\n\n// Применение очень мягкого эффекта рассеивания к изображению\nimagefilter($logo, IMG_FILTER_SCATTER, 3, 5);\n\n// Вывов изображения с эффектом рассеивания\nheader('Content-Type: image/png');\nimagepng($logo);\nimagedestroy($logo);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n![Висновок прикладу: imagefilter() scatter](images/21009b70229598c6a80eef8b45bf282b-scatter.png)\n\n### Примітки\n\n> **Зауваження**: Результат\\*\\*`IMG_FILTER_SCATTER`\\*\\* завжди випадковий.\n\n### Дивіться також\n\n-   [imageconvolution()](function.imageconvolution.md) \\- Накладання викривляючої матриці 3х3, використовуючи коефіцієнт та зміщення\n","title":"imagefilter","contentType":2,"navigation":[{"function.imagefilltoborder.md":"« imagefilltoborder"},{"function.imageflip.md":"imageflip »"},{"index.md":"PHP Manual"},{"ref.image.md":"Функції GD та функції для роботи із зображеннями"}]}},"__N_SSG":true}