{"pageProps":{"page":{"slug":"imagick.tintimage.md","content":"# Imagick::tintImage\n\n(PECL imagick 2, PECL imagick 3)\n\nImagick::tintImage — Застосовує вектор кольору до кожного пікселя зображення\n\n### Опис\n\n```methodsynopsis\npublic Imagick::tintImage(mixed $tint, mixed $opacity, bool $legacy = false): bool\n```\n\nЗастосовує вектор кольору до кожного пікселя зображення. Довжина вектора дорівнює 0 для чорного та білого та максимальна довжина для півтонів. Функція векторного зважування: f(x)=(1-(4.0)\\*((x-0.5)\\*(x-0.5)))).\n\n### Список параметрів\n\n`tint`\n\n`opacity`\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Помилки\n\nВикликає ImagickException у разі виникнення помилки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL imagick 2.1.0 | Тепер дозволяє рядок, що представляє колір, як перший параметр і число з точкою, що представляє значення непрозорості, як другий параметр. Попередні версії допускали лише об'єкти ImagickPixel. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::tintImage()\\*\\*\\*\\*\n\n```php\n<?php\nfunction tintImage($r, $g, $b, $a) {\n    $a = $a / 100;\n\n    $imagick = new \\Imagick();\n    $imagick->newPseudoImage(400, 400, 'gradient:black-white');\n\n    $tint = new \\ImagickPixel(\"rgb($r, $g, $b)\");\n    $opacity = new \\ImagickPixel(\"rgb(128, 128, 128, $a)\");\n    $imagick->tintImage($tint, $opacity);\n    $imagick->setImageFormat('png');\n    header(\"Content-Type: image/png\");\n    echo $imagick->getImageBlob();\n}\n\n?>\n```\n","title":"Imagick::tintImage","contentType":2,"navigation":[{"imagick.thumbnailimage.md":"« Imagick::thumbnailImage"},{"imagick.tostring.md":"Imagick::\\_\\_toString »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}