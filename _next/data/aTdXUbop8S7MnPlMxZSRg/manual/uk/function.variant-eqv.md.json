{"pageProps":{"page":{"slug":"function.variant-eqv.md","content":"# variant\\_eqv\n\n(PHP 5, PHP 7, PHP 8)\n\nvariant\\_eqv - Побітова еквіваленція двох варіантів\n\n### Опис\n\n```methodsynopsis\nvariant_eqv(mixed $left, mixed $right): variant\n```\n\nПобітова еквівалентність двох варіантів.\n\n### Список параметрів\n\n`left`\n\nЛівий операнд.\n\n`right`\n\nПравий операнд.\n\n> **Зауваження** :\n> \n> Як і з усіма варіантними арифметичними функціями, параметри цієї функції можуть бути як рідними типами PHP (integer, string, floating point, boolean або **`null`**), і екземплярами класів COM, VARIANT чи DOTNET. Рідні PHP типи будуть перетворені на варіанти (variants) за тими самими правилами, що і в конструкторі класу [variant](class.variant.md). У об'єктів COM і DOTNET буде взято та використано їх значення за замовчуванням як значення варіанта.\n> \n> Варіантні арифметичні функції є обертанням навколо однойменних функцій у бібліотеці COM; для більш детальної інформації про ці функції проконсультуйтеся з бібліотекою MSDN. Назви PHP-функцій дещо відрізняються; наприклад, [variant\\_add()](function.variant-add.md) у PHP відповідає `VarAdd()`в документации MSDN.\n\n### Значення, що повертаються\n\nБіти значення, що повертається, виставляться в 1, якщо відповідні біти операнда `left` будуть ідентичні відповідним бітам операнда `right` і в 0, якщо вони відрізнятимуться. Тобто, якщо застосувати цю функцію до значень 100(01100100) та 53(00110101) для однобайтових беззнакових варіантів, результат буде 174 (10101110).\n\n### Помилки\n\nВикидає виняток [com\\_exception](class.com-exception.md)в случае возникновения ошибки.\n","title":"variant\\_eqv","contentType":2,"navigation":[{"function.variant-div.md":"« variant\\_div"},{"function.variant-fix.md":"variant\\_fix »"},{"index.md":"PHP Manual"},{"ref.com.md":"Функції COM"}]}},"__N_SSG":true}