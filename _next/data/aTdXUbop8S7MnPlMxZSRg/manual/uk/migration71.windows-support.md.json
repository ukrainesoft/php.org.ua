{"pageProps":{"page":{"slug":"migration71.windows-support.md","content":"## Підтримка Windows\n\n### Підтримка довгих та UTF-8 шляхів\n\nЯкщо веб-програма працює з UTF-8, жодних додаткових дій не потрібно. Для додатків, що здійснюють введення/виведення по шляхах, заданих у кодуванні відмінному від UTF-8, необхідно явно задати значення в INI-файлі. Перевірка кодувань здійснюється у такому порядку:\n\n-   internal\\_encoding\n-   default\\_charset\n-   zend.multibyte\n\nБуло введено кілька функцій для обробки кодових сторінок:\n\n-   sapi\\_windows\\_cp\\_set() для встановлення кодування за замовчуванням\n-   sapi\\_windows\\_cp\\_get() для отримання поточного кодування\n-   sapi\\_windows\\_cp\\_is\\_utf8()\n-   sapi\\_windows\\_cp\\_conv() для конвертації між кодуваннями з використанням сигнатур аналогічним iconv()\n\nЦі функції є потокобезпечними.\n\nКодова сторінка, яка використовується для виведення в консолі, налаштовується в залежності від кодування, що використовується в PHP. Залежно від конкретного системного OEM-кодування, видимий результат може бути коректним чи ні. Наприклад, у стандартній консолі cmd.exe у системах з кодуванням 437 OEM-виведення у кодуваннях 1251, 1252, 1253 та деяких інших може відображатися правильно при використанні UTF-8. У тих самих системах символи кодування типу 20932 будуть показані некоректно. Це стосується конкретних системних правил для кодової сторінки, сумісності шрифтів і конкретної консолі. PHP автоматично встановлює кодову сторінку консолі відповідно до правил кодування з php.ini. У деяких випадках використання консолі, відмінної від стандартної cmd.exe, може покращити ситуацію.\n\nНе забувайте, що перемикання кодової сторінки під час виконання після запуску скрипту може призвести до несподіваних побічних ефектів CLI. Найкращий варіант - використовувати php.ini. При використанні PHP CLI в емуляторі консолі, який не підтримує Unicode, це може знадобитися, щоб уникнути зміни кодування консолі. Найкращий варіант - встановити кодування за умовчанням або внутрішнє кодування як ANSI. Також можна встановити директиви output\\_encoding та input\\_encoding у необхідні значення, але слід пам'ятати, що при відмінності внутрішнього кодування та кодування вводу/виводу ви, швидше за все, отримаєте кракозябри. У поодиноких випадках при падінні PHP, кодування консолі може не відновлюватися в початкове значення. У такому разі відновіть її самостійно за допомогою команди chcp.\n\nОсобое замечание для систем DBCS - переключение кодировки во время исполнения с помощью[ini\\_set()](function.ini-set.md) може викликати проблеми з відображенням. Різниця із системами без DBCS полягає в тому, що розширені символи вимагають двох осередків консолі для відображення. У деяких випадках може відбутися лише відображення символів у гліфи поточного шрифту без його зміни. Це у характері систем DBCS. Найпростіший спосіб уникнути проблем із відображенням - відмовитися від використання [ini\\_set()](function.ini-set.md) для зміни кодової сторінки.\n\nВ результаті підтримки UTF-8 у потоках, скрипти PHP більше не обмежені кодуванням ASCII та ANSI для імен файлів. Така підтримка доступна із коробки CLI. Для інших SAPI слід вивчити відповідну документацію.\n\nДовгі шляхи підтримуються прозоро. Шляхи довші за 260 байт автоматично доповнюються префіксом `\\\\?\\`. Максимальна довжина колії обмежена 2048 байт. Майте на увазі, що обмеження на довжину сегмента шляху (довжину базового імені), як і раніше, зберігаються.\n\nДля кращої переносимості рекомендується обробляти імена файлів, введення/виведення та інші, пов'язані з UTF-8 сутності. Крім того, для консольних програм рекомендується використовувати шрифти TrueType і не рекомендується змінювати кодування за допомогою ini\\_set().\n\n### readline\n\nМодуль[readline](book.readline.md) підтримується через бібліотеку [» WinEditLine](http://mingweditline.sourceforge.net/). Таким чином, інтерфейс оболонки CLI також підтримується (`php.exe -a`\n\n### PHP\\_FCGI\\_CHILDREN\n\nТепер береться до уваги PHP\\_FCGI\\_CHILDREN. Якщо задана ця змінна оточення, то перший процес php-cgi.exe породить вказану кількість нащадків, які розділятимуть ті ж TCP-сокети.\n\n### ftok()\n\nДобавлена поддержка для[ftok()](function.ftok.md)\n","title":"Підтримка Windows","contentType":2,"navigation":[{"migration71.other-changes.md":"« Інші зміни"},{"migration70.md":"Міграція з PHP 5.6.x на PHP 7.0.x »"},{"index.md":"PHP Manual"},{"migration71.md":"Міграція з PHP 7.0.x на PHP 7.1.x"}]}},"__N_SSG":true}