{"pageProps":{"page":{"slug":"svm.crossvalidate.md","content":"# SVM::crossvalidate\n\n(PECL svm >= 0.1.0)\n\nSVM::crossvalidate — Тестування навчальних параметрів на підмножинах навчальних даних\n\n### Опис\n\n```methodsynopsis\npublic svm::crossvalidate(array $problem, int $number_of_folds): float\n```\n\nПерехресна перевірка може бути використана для перевірки ефективності поточного набору параметрів для підмножини навчальних даних. Задано набір даних з проблеми та кількість \"згорток\", що фактично означає на скільки підмножин ділити заданий набір, щоб у циклі навчатися на одному підмножині та тестуватися на іншому. В цілому точність буде нижчою, ніж при навчанні на повному наборі даних, але оцінка, що повертається, буде корисна для порівняння якості навчання з використанням різних параметрів.\n\n### Список параметрів\n\n`problem`\n\nДані щодо проблеми. Можуть бути як масивом, так і посиланням на файл у форматі SVMLight або потік, що надає джерело даних у форматі SVMLight.\n\n`number_of_folds`\n\nКількість підмножин, на які буде поділено загальний набір навчальних даних. Чим більше це число, тим коротшими і менш надійними будуть навчальні набори. Хороше число для початку – 5.\n\n### Значення, що повертаються\n\nВідсоток коректної класифікації як числа в діапазоні від 0 до 1. У разі ядер NU\\_SVC та EPSILON\\_SVR буде повернуто середньоквадратичну помилку.\n\n### Дивіться також\n\n-   [SVM::train()](svm.train.md) \\- Створити SVMModel на основі навчальних даних\n","title":"SVM::crossvalidate","contentType":2,"navigation":[{"svm.construct.md":"« SVM::\\_\\_construct"},{"svm.getoptions.md":"SVM::getOptions »"},{"index.md":"PHP Manual"},{"class.svm.md":"SVM"}]}},"__N_SSG":true}