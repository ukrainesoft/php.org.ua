{"pageProps":{"page":{"slug":"intlchar.isuuppercase.md","content":"# IntlChar::isUUppercase\n\n(PHP 7, PHP 8)\n\nIntlChar::isUUppercase — Перевірити, чи символ є символом у верхньому регістрі\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::isUUppercase(int|string $codepoint): ?bool\n```\n\nПеревірити, чи символ є символом у верхньому регістрі.\n\nТе саме, що й `IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_UPPERCASE)`\n\n> **Зауваження** :\n> \n> Відрізняється від [IntlChar::isupper()](intlchar.isupper.md) і повертає **`true`** для більшої кількості символів.\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо `codepoint` має властивість \"Uppercase\", **`false`** - якщо ні. У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::isUUppercase(\"A\"));\nvar_dump(IntlChar::isUUppercase(\"a\"));\nvar_dump(IntlChar::isUUppercase(\"Φ\"));\nvar_dump(IntlChar::isUUppercase(\"φ\"));\nvar_dump(IntlChar::isUUppercase(\"1\"));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nbool(false)\nbool(true)\nbool(false)\nbool(false)\n```\n\n### Дивіться також\n\n-   [IntlChar::isupper()](intlchar.isupper.md) - Перевірити, чи входить символ у категорію \"Lu\" (літера у верхньому регістрі)\n-   [IntlChar::hasBinaryProperty()](intlchar.hasbinaryproperty.md) \\- Перевірити бінарну властивість Unicode для символу\n-   **`IntlChar::PROPERTY_UPPERCASE`**\n","title":"IntlChar::isUUppercase","contentType":2,"navigation":[{"intlchar.isupper.md":"« IntlChar::isupper"},{"intlchar.isuwhitespace.md":"IntlChar::isUWhiteSpace »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}