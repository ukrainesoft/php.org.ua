{"pageProps":{"page":{"slug":"function.html-entity-decode.md","content":"# html\\_entity\\_decode\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\nhtml\\_entity\\_decode — Перетворює HTML-сутності на символи\n\n### Опис\n\n```methodsynopsis\nhtml_entity_decode(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401, ?string $encoding = null): string\n```\n\nФункция**html\\_entity\\_decode()** протилежна функції [htmlentities()](function.mdentities.md). Вона перетворює HTML-сутності у рядку `string` символи.\n\nТочніше, ця функція перетворює всі сутності (включаючи числові), які, по-перше, точно допустимі для типу документа — тобто, для XML ця функція не перетворює іменовані сутності, які визначені в DTD, а по-друге, символ чи символи яких містяться в кодуванні, що відповідає вибраному, та дозволені у типі документа. Усі інші сутності не змінюються.\n\n### Список параметрів\n\n`string`\n\nВхідний рядок.\n\n`flags`\n\nБітова маска, що складається з одного або кількох прапорів, які вказують, як поводитися з лапками і який тип документа використовувати. За замовчуванням маска набуває значення `ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401`\n\n**Константи `flags`**\n\n| Имя константы | Опис |\n| --- | --- |\n| **`ENT_COMPAT`** | Перетворюються подвійні лапки, одинарні залишаються без змін. |\n| **`ENT_QUOTES`** | Перетворюються і подвійні, і одинарні лапки. |\n| **`ENT_NOQUOTES`** | Залишити як подвійні, так і одинарні лапки без змін. |\n| **`ENT_SUBSTITUTE`** | Замінює некоректні кодові послідовності символом заміни Юнікоду U+FFFD у разі використання UTF-8 та &#FFFD; при виборі іншого кодування замість повернення порожнього рядка. |\n| **`ENT_HTML401`** | Обробляти код як HTML 4.01. |\n| **`ENT_XML1`** | Обробляти код як XML 1. |\n| **`ENT_XHTML`** | Обробляти код як XHTML. |\n| **`ENT_HTML5`** | Обробляти код, як HTML 5. |\n\n`encoding`\n\nНеобов'язковий аргумент, що визначає кодування, яке використовується при конвертації символів.\n\nЕсли не указан, то значение по умолчанию для`encoding` залежить від конфігураційної опції [default\\_charset](ini.core.md#ini.default-charset)\n\nХоча цей аргумент є технічно необов'язковим, рекомендується вказати правильне значення для вашого коду, опція конфігурації [default\\_charset](ini.core.md#ini.default-charset) може бути задана неправильно для вхідних даних.\n\nПідтримуються такі кодування:\n\n**Підтримувані кодування**\n\n| Кодировка | Псевдонимы | Опис |\n| --- | --- | --- |\n| ISO-8859-1 | ISO8859-1 | Західноєвропейська Latin-1. |\n| ISO-8859-5 | ISO8859-5 | Рідко використовуване кириличне кодування (Latin/Cyrillic). |\n| ISO-8859-15 | ISO8859-15 | Західноєвропейська Latin-9. Додає символ євро, французькі та фінські літери до кодування Latin-1 (ISO-8859-1). |\n| UTF-8 |  | 8-бітна Unicode, сумісна з ASCII. |\n| cp866 | ibm866, 866 | Кирилічна кодування, що застосовується в DOS. |\n| cp1251 | Windows-1251, win-1251, 1251 | Кирилічна кодування, що використовується у Windows. |\n| cp1252 | Windows-1252, 1252 | Західно-європейське кодування, що використовується у Windows. |\n| KOI8-R | koi8-ru, koi8r | Російське кодування. |\n| BIG5 | 950 | Традиційний китайський, застосовується переважно на Тайвані. |\n| GB2312 | 936 | Спрощена китайська, стандартне національне кодування. |\n| BIG5-HKSCS |  | Розширена Big5, що застосовується в Гонконгу. |\n| Shift\\_JIS | SJIS, SJIS-win, cp932, 932 | Японське кодування. |\n| EUC-JP | EUCJP, eucJP-win | Японське кодування. |\n| MacRoman |  | Кодування, яке використовується в Mac OS. |\n| `''` |  | Порожній рядок активує режим визначення кодування із файлу скрипта (Zend multibyte), [default\\_charset](ini.core.md#ini.default-charset) та поточної локалі (дивіться [nl\\_langinfo()](function.nl-langinfo.md) і [setlocale()](function.setlocale.md)) у зазначеному порядку. Не рекомендується використовувати. |\n\n> **Зауваження**: Інші кодування не підтримуються, замість них буде застосовано кодування за замовчуванням та згенеровано попередження.\n\n### Значення, що повертаються\n\nПовертає розкодований рядок.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Значення за промовчанням `flags` змінено зі значення **`ENT_COMPAT`**на**`ENT_QUOTES`** |\n| 8.0.0 | Параметр`encoding` тепер може набувати значення null. |\n\n### Приклади\n\n**Приклад #1 Декодування HTML-сутностей**\n\n```php\n<?php\n$orig = \"I'll \\\"walk\\\" the <b>dog</b> now\";\n\n$a = htmlentities($orig);\n\n$b = html_entity_decode($a);\n\necho $a; // I'll &quot;walk&quot; the &lt;b&gt;dog&lt;/b&gt; now\n\necho $b; // I'll \"walk\" the <b>dog</b> now\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Може здатися дивним, що результат виклику функції trim(html\\_entity\\_decode(' ')); - Не порожній рядок. Причина в тому, що елемент ' ' перетворюється на символ з ASCII-кодом 32 (який видаляється функцією [trim()](function.trim.md)), а символ з ASCII-кодом 160 (0xa0) в кодуванні ISO-8859-1, що приймається за умовчанням.\n\n### Дивіться також\n\n-   [htmlentities()](function.mdentities.md) \\- Перетворює всі можливі символи у відповідні HTML-сутності\n-   [htmlspecialchars()](function.mdspecialchars.md) \\- Перетворює спеціальні символи в HTML-сутності\n-   [get\\_html\\_translation\\_table()](function.get-html-translation-table.md) \\- Повертає таблицю перетворень, використовувану функціями htmlspecialchars і htmlentities\n-   [urldecode()](function.urldecode.md) \\- Декодування URL-кодованого рядка\n","title":"html\\_entity\\_decode","contentType":2,"navigation":[{"function.hex2bin.md":"« hex2bin"},{"function.mdentities.md":"htmlentities »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}