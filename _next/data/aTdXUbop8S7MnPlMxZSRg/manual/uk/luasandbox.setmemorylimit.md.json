{"pageProps":{"page":{"slug":"luasandbox.setmemorylimit.md","content":"# LuaSandbox::setMemoryLimit\n\n(PECL luasandbox >= 1.0.0)\n\nLuaSandbox::setMemoryLimit — Встановлює межу пам'яті для середовища Lua\n\n### Опис\n\n```methodsynopsis\npublic LuaSandbox::setMemoryLimit(int $limit): void\n```\n\nВстановлює межу пам'яті для середовища Lua.\n\nЯкщо межа перевищена, буде викинуто виняток [LuaSandboxMemoryError](class.luasandboxmemoryerror.md)\n\n### Список параметрів\n\n`limit`\n\nМежа пам'яті в байтах.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Виклик функції Lua**\n\n```php\n<?php\n\n// Создание нового объекта LuaSandbox\n$sandbox = new LuaSandbox();\n\n// Установка предела памяти\n$sandbox->setMemoryLimit( 50 * 1024 * 1024 );\n\n// Запуск кода Lua\n$sandbox->loadString( 'local x = \"x\"; while true do x = x .. x; end' )->call();\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nPHP Fatal error:  Uncaught LuaSandboxMemoryError: not enough memory\n```\n\n### Дивіться також\n\n-   [LuaSandbox::getMemoryUsage()](luasandbox.getmemoryusage.md) \\- Повертає поточне використання пам'яті у середовищі Lua\n-   [LuaSandbox::getPeakMemoryUsage()](luasandbox.getpeakmemoryusage.md) \\- Повертає пікове використання пам'яті в середовищі Lua\n-   [LuaSandbox::setCPULimit()](luasandbox.setcpulimit.md) \\- Встановлює обмеження часу процесора для середовища Lua\n","title":"LuaSandbox::setMemoryLimit","contentType":2,"navigation":[{"luasandbox.setcpulimit.md":"« LuaSandbox::setCPULimit"},{"luasandbox.unpauseusagetimer.md":"LuaSandbox::unpauseUsageTimer »"},{"index.md":"PHP Manual"},{"class.luasandbox.md":"LuaSandbox"}]}},"__N_SSG":true}