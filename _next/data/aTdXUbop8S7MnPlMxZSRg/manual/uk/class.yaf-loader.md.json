{"pageProps":{"page":{"slug":"class.yaf-loader.md","content":"# Клас Yaf\\_Loader\n\n(Yaf >=1.0.0)\n\n## Вступ\n\n**Yaf\\_Loader**представляет комплексное решение для автозагрузки для Yaf.\n\nПри першому вилученні екземпляра [Yaf\\_Application](class.yaf-application.md) **Yaf\\_Loader** створює екземпляр-одиначок і реєструється за допомогою spl\\_autoload. Ви отримуєте екземпляр, використовуючи [Yaf\\_Loader::getInstance()](yaf-loader.getinstance.md)\n\n**Yaf\\_Loader** спробує завантажити клас лише один раз, у разі виникнення помилки, залежить від [yaf.use\\_spl\\_auload](yaf.configuration.md#ini.yaf.use-spl-autoload)якщо ця конфігурація включена [Yaf\\_Loader::autoload()](yaf-loader.autoload.md) поверне **`false`**, таким чином надаючи можливість іншої функції автозавантаження. Якщо вимкнено (за замовчуванням), [Yaf\\_Loader::autoload()](yaf-loader.autoload.md) поверне **`true`**, а також спрацює дуже корисне попередження (корисно з'ясувати, чому клас не може бути завантажений).\n\n> **Зауваження** :\n> \n> Будь ласка, залиште yaf.use\\_spl\\_autoload вимкненим, якщо в бібліотеці немає власного механізму автозавантаження і його неможливо переписати.\n\nПо умолчанию**Yaf\\_Loader** припускає, що вся бібліотека (сценарій, визначений класом) зберігається в [каталог глобальної бібліотеки](yaf.configuration.md#ini.yaf.library), який визначено у php.ini (yaf.library).\n\nЯкщо ви хочете за допомогою **Yaf\\_Loader** виконати пошук деяких класів (бібліотек) у [каталог локальних класів](class.yaf-loader.md#yaf-loader.props.library) (який визначений в application.ini, це за замовчуванням [application.directory](yaf.appconfig.md#configuration.yaf.directory). . \"/library\"), ви повинні зареєструвати префікс класу, використовуючи [Yaf\\_Loader::registerLocalNameSpace()](yaf-loader.registerlocalnamespace.md)\n\nДавайте подивимося кілька прикладів (за умови, що APPLICATION\\_PATH[application.directory](yaf.appconfig.md#configuration.yaf.directory)):\n\n**Приклад #1 Приклад конфігурації**\n\n// Передбачаються такі налаштування в php.ini: yaf.library = \"/global\\_dir\"\n\n/ / Передбачаються наступні налаштування в php.ini: application.library = APPLICATION\\_PATH \"/library\"\n\nПередбачається, що зареєстровано такий локальний простір імен:\n\n**Приклад #2 Зареєструвати локальний простір імен**\n\n```php\n<?php\nclass Bootstrap extends Yaf_Bootstrap_Abstract{\n     public function _initLoader($dispatcher) {\n          Yaf_Loader::getInstance()->registerLocalNameSpace(array(\"Foo\", \"Bar\"));\n     }\n?>\n```\n\nТоді приклад автозавантаження:\n\n**Приклад #3 Приклад завантаження класу**\n\nclass Foo\\_Bar\\_Test => // APPLICATION\\_PATH/library/Foo/Bar/Test.php\n\nclass GLO\\_Name => // /global\\_dir/Glo/Name.php\n\nclass BarNon\\_Test // /global\\_dir/Barnon/Test.php\n\n**Приклад #4 Приклад завантаження класу імен**\n\nclass\\\\Foo\\\\Bar\\\\Dummy => // APPLICATION\\_PATH/library/Foo/Bar/Dummy.php\n\nclass\\\\FooBar\\\\Bar\\\\Dummy => // /global\\_dir/FooBar/Bar/Dummy.php\n\nВи можете помітити, що всі папки з першою літерою заголовними, ви можете зробити їх малими, встановивши [yaf.lowcase\\_path](yaf.configuration.md#ini.yaf.lowcase-path)\\= On в php.ini.\n\n**Yaf\\_Loader** також призначений для завантаження класів MVC, і правило таке:\n\n**Приклад #5 Приклад завантаження класу MVC**\n\nController Classes => // APPLICATION\\_PATH/controllers/\n\nModel Classes => // APPLICATION\\_PATH/models/\n\nPlugin Classes => // APPLICATION\\_PATH/plugins/\n\nYaf ідентифікує суфікс класу (за умовчанням, ви також можете змінити його на префікс, змінивши конфігурацію [yaf.name\\_suffix](yaf.configuration.md#ini.yaf.name-suffix)), щоб вирішити, чи є він класом MVC:\n\n**Приклад #6 Класові відмінності MVC**\n\nController Classes => // \\*\\*\\*Controller\n\nModel Classes => // \\*\\*\\*Model\n\nPlugin Classes => // \\*\\*\\*Plugin\n\nкілька прикладів:\n\n**Приклад #7 Приклад завантаження MVC**\n\nclass IndexController // APPLICATION\\_PATH/controllers/Index.php\n\nclass DataModel => // APPLICATION\\_PATH/models/Data.php\n\nclass DummyPlugin => // APPLICATION\\_PATH/plugins/Dummy.php\n\nclass A\\_B\\_TestModel => // APPLICATION\\_PATH/models/A/B/Test.php\n\n> **Зауваження** :\n> \n> Починаючи з 2.1.18, Yaf підтримує автозавантаження контролерів для сторони скрипта користувача (що означає автозавантаження, що запускається користувальницьким скриптом php, наприклад: доступ до статичної властивості контролера в Bootstrap або плагінах). , яка називається \"APPLICATION\\_PATH/controllers/\".\n\nтакож на каталог буде впливати [yaf.lowcase\\_path](yaf.configuration.md#ini.yaf.lowcase-path)\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class Yaf_Loader\n     \n     {\n    \n    /* Свойства */\n    \n     protected\n      $_local_ns;\n\n    protected\n      $_library;\n\n    protected\n      $_global_library;\n\n    static\n      $_instance;\n\n\n\n    /* Методы */\n    \n   private __construct()\n\n    public autoload(): void\npublic clearLocalNamespace(): void\npublic static getInstance(): void\npublic getLibraryPath(bool $is_global = false): Yaf_Loader\npublic getLocalNamespace(): void\npublic getNamespacePath(string $namespaces): string\npublic getNamespaces(): array\npublic static import(): void\npublic isLocalName(): void\npublic registerLocalNamespace(mixed $prefix): void\npublic registerNamespace(string|array $namespaces, string $path = ?): bool\npublic setLibraryPath(string $directory, bool $is_global = false): Yaf_Loader\n\n   }\n```\n\n## Властивості\n\n\\_local\\_ns\n\n\\_library\n\nЗа умовчанням це значення дорівнює [application.directory](yaf.appconfig.md#configuration.yaf.directory) . \"/library\", ви можете змінити це або application.ini(application.library), або викликати [Yaf\\_Loader::setLibraryPath()](yaf-loader.setlibrarypath.md)\n\n\\_global\\_library\n\n\\_instance\n\n## Зміст\n\n-   [Yaf\\_Loader::autoload](yaf-loader.autoload.md) \\- Призначення autoload\n-   [Yaf\\_Loader::clearLocalNamespace](yaf-loader.clearlocalnamespace.md)— Призначення clearLocalNamespace\n-   [Yaf\\_Loader::\\_\\_construct](yaf-loader.construct.md) \\- Призначення\\_\\_construct\n-   [Yaf\\_Loader::getInstance](yaf-loader.getinstance.md)— Призначення getInstance\n-   [Yaf\\_Loader::getLibraryPath](yaf-loader.getlibrarypath.md)— Отримує шлях до бібліотеки\n-   [Yaf\\_Loader::getLocalNamespace](yaf-loader.getlocalnamespace.md)— Призначення getLocalNamespace\n-   [Yaf\\_Loader::getNamespacePath](yaf-loader.getnamespacepath.md)— Отримує шлях зареєстрованого простору імен\n-   [Yaf\\_Loader::getLocalNamespace](yaf-loader.getnamespaces.md)— Отримує всю інформацію про зареєстровані простори імен\n-   [Yaf\\_Loader::import](yaf-loader.import.md) \\- Призначення import\n-   [Yaf\\_Loader::isLocalName](yaf-loader.islocalname.md)— Призначення isLocalName\n-   [Yaf\\_Loader::registerLocalNamespace](yaf-loader.registerlocalnamespace.md) \\- Реєструє префікс локального класу\n-   [Yaf\\_Loader::registerNamespace](yaf-loader.registernamespace.md)— Реєструє простір імен шляхом пошуку\n-   [Yaf\\_Loader::setLibraryPath](yaf-loader.setlibrarypath.md)— Змінює шлях до бібліотеки\n","title":"Клас Yaf\\_Loader","contentType":2,"navigation":[{"yaf-view-simple.setscriptpath.md":"« Yaf\\_View\\_Simple::setScriptPath"},{"yaf-loader.autoload.md":"Yaf\\_Loader::autoload »"},{"index.md":"PHP Manual"},{"book.yaf.md":"Yaf"}]}},"__N_SSG":true}