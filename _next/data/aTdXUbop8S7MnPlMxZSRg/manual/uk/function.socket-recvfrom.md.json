{"pageProps":{"page":{"slug":"function.socket-recvfrom.md","content":"# socket\\_recvfrom\n\n(PHP 4 >= 4.1.0, PHP 5, PHP 7, PHP 8)\n\nsocket\\_recvfrom — Отримує дані із сокету, незалежно від того, під'єднаний він чи ні\n\n### Опис\n\n```methodsynopsis\nsocket_recvfrom(    Socket $socket,    string &$data,    int $length,    int $flags,    string &$address,    int &$port = null): int|false\n```\n\nФункция**socket\\_recvfrom()** отримує `length` байт даних у `data`из адреса`address`на порту`port` (якщо сокет не типу **`AF_UNIX`**) використовуючи сокет `socket`Функция**socket\\_recvfrom()** може бути використана для отримання даних як з підключених, так і з не підключених сокетів. Додатково один або більше прапорів можуть бути вказані для того, щоб змінити поведінку функції.\n\nПараметри `address`и`port` повинні бути передані за посиланням. Якщо сокет не орієнтований на з'єднання, `address` має бути встановлена ​​як адреса інтернет-протоколу віддаленого хоста, або як шлях до сокету UNIX. Якщо сокет не орієнтований на з'єднання, `address` повинен бути \\*\\*`null`\\*\\*Дополнительно,`port` повинен містити порт дистанційного хоста для не підключених сокетів типу **`AF_INET`** і **`AF_INET6`**\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n### Список параметрів\n\n`socket`\n\nПараметр`socket` має бути екземпляром [Socket](class.socket.md), попередньо створеним за допомогою функції socket\\_create().\n\n`data`\n\nОтримані дані будуть передані до змінної, вказаної за допомогою параметра `data`\n\n`length`\n\nЗ віддаленого хоста буде отримано до `length`байт.\n\n`flags`\n\nЗначение параметра`flags` може бути будь-якою комбінацією наступних прапорів, об'єднаних за допомогою бінарного оператора OR ( ) operator.\n\n**Можливі значення для параметра `flags`**\n\n| Флаг | Опис |\n| --- | --- |\n| **`MSG_OOB`** | Обробляти позасмугові (out-of-band) дані. |\n| **`MSG_PEEK`** | Отримувати дані із початку черги, не видаляючи їх. |\n| **`MSG_WAITALL`** | Блокувати виконання скрипту доти, доки як мінімум `length` не буде отримано. Однак, якщо буде отримано сигнал або віддалений хост від'єднається, функція може повернути менше даних. |\n| **`MSG_DONTWAIT`** | Якщо цей прапор встановлений, функція повернеться навіть якщо зазвичай блокуватиме виконання скрипта. |\n\n`address`\n\nЯкщо сокет типу **`AF_UNIX`** `address` - Це шлях до файлу. В іншому випадку, для непід'єднаних сокетів, параметр `address` - це IP-адреса, віддаленого хоста, або \\*\\*`null`\\*\\*якщо сокет орієнтований на з'єднання.\n\n`port`\n\nЦей аргумент застосовний тільки до сокетів **`AF_INET`** і **`AF_INET6`**, та вказує віддалений порт, з якого будуть отримані дані. Якщо сокет орієнтований на з'єднання, `port`будет\\*\\*`null`\\*\\*\n\n### Значення, що повертаються\n\n**socket\\_recvfrom()** повертає кількість отриманих байт або **`false`**, якщо сталася помилка. Фактичний код помилки можна отримати за допомогою виклику функції [socket\\_last\\_error()](function.socket-last-error.md). Цей код помилки може бути переданий функції [socket\\_strerror()](function.socket-strerror.md) для отримання текстового опису помилки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `socket` тепер екземпляр класу [Socket](class.socket.md); раніше був ресурсом (resource). |\n\n### Приклади\n\n**Приклад #1 Приклад використання** socket\\_recvfrom()\\*\\*\\*\\*\n\n```php\n<?php\n\n$socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);\nsocket_bind($socket, '127.0.0.1', 1223);\n\n$from = '';\n$port = 0;\nsocket_recvfrom($socket, $buf, 12, 0, $from, $port);\n\necho \"Получено $buf с удалённого адреса $from и удалённого порта $port\" . PHP_EOL;\n?>\n```\n\nЦей приклад відкриє UDP-сокет на порту 1223 за адресою 127.0.0.1 та виведе максимум 12 символів, отриманих з віддаленого хоста.\n\n### Дивіться також\n\n-   [socket\\_recv()](function.socket-recv.md) \\- Отримує дані із приєднаного сокету\n-   [socket\\_send()](function.socket-send.md) \\- Надсилає дані в приєднаний сокет\n-   [socket\\_sendto()](function.socket-sendto.md) \\- Надсилає повідомлення до сокету, незалежно від того, під'єднаний він чи ні\n-   [socket\\_create()](function.socket-create.md) \\- створює сокет (кінцеву точку для обміну інформацією)\n","title":"socket\\_recvfrom","contentType":2,"navigation":[{"function.socket-recv.md":"« socket\\_recv"},{"function.socket-recvmsg.md":"socket\\_recvmsg »"},{"index.md":"PHP Manual"},{"ref.sockets.md":"Опції сокету"}]}},"__N_SSG":true}