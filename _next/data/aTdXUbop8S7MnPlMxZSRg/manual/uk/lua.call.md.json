{"pageProps":{"page":{"slug":"lua.call.md","content":"# Lua::call\n\n# Lua::\\_\\_call\n\n(PECL lua >=0.9.0)\n\nLua::call -- Lua::\\_\\_call — Викликати функції Lua\n\n### Опис\n\n```methodsynopsis\npublic Lua::call(callable $lua_func, array $args = ?, int $use_self = 0): mixed\n```\n\n```methodsynopsis\npublic Lua::__call(callable $lua_func, array $args = ?, int $use_self = 0): mixed\n```\n\n**Увага**\n\nФункція поки що не документована; для знайомства доступний лише перелік аргументів.\n\n### Список параметрів\n\n`lua_func`\n\nІм'я функції lua\n\n`args`\n\nПередані аргументи\n\n`use_self`\n\nЧи використовувати `self`\n\n### Значення, що повертаються\n\nПовертає результат функції, що виконалася, **`null`** у разі некоректних аргументів, або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Lua::call()\\*\\*\\*\\*\n\n```php\n<?php\n$lua = new Lua();\n$lua->eval(<<<CODE\n    function dummy(foo, bar)\n        print(foo, \",\", bar)\n    end\nCODE\n);\n$lua->call(\"dummy\", array(\"Lua\", \"geiliable\\n\"));\n$lua->dummy(\"Lua\", \"geiliable\"); // __call()\nvar_dump($lua->call(array(\"table\", \"concat\"), array(array(1=>1, 2=>2, 3=>3), \"-\")));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nLua,geiliable\nLua,geiliable\nstring(5) \"1-2-3\"\n```\n\n### Дивіться також\n\n-   [\\_\\_call()](language.oop5.overloading.md#object.call)\n","title":"Lua::call","contentType":2,"navigation":[{"lua.assign.md":"« Lua::assign"},{"lua.construct.md":"Lua::\\_\\_construct »"},{"index.md":"PHP Manual"},{"class.lua.md":"Lua"}]}},"__N_SSG":true}