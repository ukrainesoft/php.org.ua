{"pageProps":{"page":{"slug":"imagick.functionimage.md","content":"# Imagick::functionImage\n\n(PECL imagick 2 >= 2.3.0, PECL imagick 3)\n\nImagick::functionImage — Застосовує функцію зображення\n\n### Опис\n\n```methodsynopsis\npublic Imagick::functionImage(int $function, array $arguments, int $channel = Imagick::CHANNEL_DEFAULT): bool\n```\n\nЗастосовує арифметичний, реляційний чи логічний вираз до псевдозображення.\n\nСмотрите также[» ImageMagick v6 Examples - Image Transformations — Function, Multi-Argument Evaluate](http://www.imagemagick.org/Usage/transform/#function)\n\nЦей метод доступний, якщо Imagick був скомпільований з версією ImageMagick 6.4.9 або старшим.\n\n### Список параметрів\n\n`function`\n\nОбратитесь к списку[констант FUNCTION](imagick.constants.md#imagick.constants.function)\n\n`arguments`\n\nМасив аргументів передачі у цю функцію.\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Помилки\n\nВикликає ImagickException у разі виникнення помилки.\n\n### Приклади\n\n**Приклад #1 Створення синусоїдального градієнта**\n\n```php\n<?php\n$imagick = new Imagick();\n$imagick->newPseudoImage(200, 200, 'gradient:black-white');\n$arguments = array(3, -90);\n$imagick->functionImage(Imagick::FUNCTION_SINUSOID, $arguments);\n\nheader(\"Content-Type: image/png\");\n$imagick->setImageFormat(\"png\");\necho $imagick->getImageBlob();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n![Результат створення синусоїдального градієнта](images/c0d23d2d6769e53e24a1b3136c064577-functionImage_sinusoidal.png)\n\n**Приклад #2 Створення поліномного градієнта (4x^2 - 4x + 1)**\n\n```php\n<?php\n$imagick = new Imagick();\n$imagick->newPseudoImage(200, 200, 'gradient:black-white');\n$arguments = array(4, -4, 1);\n$imagick->functionImage(Imagick::FUNCTION_POLYNOMIAL, $arguments);\n\nheader(\"Content-Type: image/png\");\n$imagick->setimageformat(\"png\");\necho $imagick->getImageBlob();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n![Результат створення поліноміального градієнта](images/c0d23d2d6769e53e24a1b3136c064577-functionImage_polynomial.png)\n\n**Приклад #3 Створення складного градієнта з полінома (4x^2 - 4x^2 + 1), модульованого синусоїдальним градієнтом**\n\n```php\n<?php\n$imagick1 = new Imagick();\n$imagick1->newPseudoImage(200, 200, 'gradient:black-white');\n$arguments = array(9, -90);\n$imagick1->functionImage(Imagick::FUNCTION_SINUSOID, $arguments);\n\n$imagick2 = new Imagick();\n$imagick2->newPseudoImage(200, 200, 'gradient:black-white');\n$arguments = array(0.5, 0);\n$imagick2->functionImage(Imagick::FUNCTION_SINUSOID, $arguments);\n$imagick1->compositeimage($imagick2, Imagick::COMPOSITE_MULTIPLY, 0, 0);\n\nheader(\"Content-Type: image/png\");\n$imagick1->setImageFormat(\"png\");\necho $imagick1->getImageBlob();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n![Результат створення складного градієнта](images/c0d23d2d6769e53e24a1b3136c064577-functionImage_multiplied.png)\n","title":"Imagick::functionImage","contentType":2,"navigation":[{"imagick.frameimage.md":"« Imagick::frameImage"},{"imagick.fximage.md":"Imagick::fxImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}