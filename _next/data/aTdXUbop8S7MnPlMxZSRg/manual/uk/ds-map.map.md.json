{"pageProps":{"page":{"slug":"ds-map.map.md","content":"# Ds\\\\Map::map\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Map::map — Повертає результат застосування callback-функції до всіх значень колекції\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Map::map(callable $callback): Ds\\Map\n```\n\nПовертає результат застосування callback-функції, переданої в `callback`до всіх значень колекції.\n\n### Список параметрів\n\n`callback`\n\n```methodsynopsis\ncallback(mixed $key, mixed $value): mixed\n```\n\nАргумент типа[callable](language.types.callable.md)\n\nЦя функція повинна повертати нове значення для кожного елемента колекції.\n\n### Значення, що повертаються\n\nРезультат применения`callback` до кожного значення колекції.\n\n> **Зауваження** :\n> \n> Значення поточної колекції залишаться незмінними.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Map::map()\\*\\*\\*\\*\n\n```php\n<?php\n$map = new \\Ds\\Map([\"a\" => 1, \"b\" => 2, \"c\" => 3]);\n\nprint_r($map->map(function($key, $value) { return $value * 2; }));\nprint_r($map);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n(\n    [0] => Ds\\Pair Object\n        (\n            [key] => a\n            [value] => 2\n        )\n\n    [1] => Ds\\Pair Object\n        (\n            [key] => b\n            [value] => 4\n        )\n\n    [2] => Ds\\Pair Object\n        (\n            [key] => c\n            [value] => 6\n        )\n\n)\nDs\\Map Object\n(\n    [0] => Ds\\Pair Object\n        (\n            [key] => a\n            [value] => 1\n        )\n\n    [1] => Ds\\Pair Object\n        (\n            [key] => b\n            [value] => 2\n        )\n\n    [2] => Ds\\Pair Object\n        (\n            [key] => c\n            [value] => 3\n        )\n\n)\n```\n","title":"Ds\\\\Map::map","contentType":2,"navigation":[{"ds-map.last.md":"« Ds\\\\Map::last"},{"ds-map.merge.md":"Ds\\\\Map::merge »"},{"index.md":"PHP Manual"},{"class.ds-map.md":"Ds\\\\Map"}]}},"__N_SSG":true}