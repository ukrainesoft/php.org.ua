{"pageProps":{"page":{"slug":"function.cubrid-lob2-seek.md","content":"# cubrid\\_lob2\\_seek\n\n(PECL CUBRID >= 8.4.1)\n\ncubrid\\_lob2\\_seek — Переміщує курсор об'єкта LOB\n\n### Опис\n\n```methodsynopsis\ncubrid_lob2_seek(resource $lob_identifier, int $offset, int $origin = CUBRID_CURSOR_CURRENT): bool\n```\n\nФункция**cubrid\\_lob2\\_seek()** використовується для переміщення позиції курсора LOB-об'єкта на значення, задане у параметрі `offset`, в направлении, заданном в параметре`origin`\n\nЩоб встановити параметр `origin`, Ви можете використовувати **`CUBRID_CURSOR_FIRST`**, щоб встановити позицію курсора, що переміщається вперед `offset` одиниць від початку LOB-об'єкта. У цьому випадку параметр `offset` має бути позитивним значенням.\n\nЯкщо ви використовуєте \\*\\*`CUBRID_CURSOR_CURRENT`\\*\\*для`origin`, Ви можете рухатися вперед або назад, `offset` може бути позитивним чи негативним.\n\nЯкщо ви використовуєте \\*\\*`CUBRID_CURSOR_LAST`\\*\\*для`origin`Ви можете переміщати назад на одиницю `offset` з кінця LOB-об'єкта. У цьому випадку параметр `offset` має бути позитивним значенням.\n\n### Список параметрів\n\n`lob_identifier`\n\nІдентифікатор LOB внаслідок роботи функції [cubrid\\_lob2\\_new()](function.cubrid-lob2-new.md) або отриманий із набору результатів.\n\n`offset`\n\nКількість одиниць, яку потрібно перемістити курсор.\n\n`origin`\n\nПараметр може мати такі значення:\n\nCUBRID\\_CURSOR\\_FIRST: рухатись вперед від початку LOB-об'єкта.\n\nCUBRID\\_CURSOR\\_CURRENT: рухатись вперед або назад від поточної позиції.\n\nCUBRID\\_CURSOR\\_LAST: рухатись назад з кінця LOB-об'єкта.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_lob2\\_seek()\\*\\*\\*\\*\n\n```php\n<?php\n// test_lob (id INT, contents CLOB)\n$conn = cubrid_connect(\"localhost\", 33000, \"demodb\", \"dba\", \"\");\n\ncubrid_execute($conn,\"DROP TABLE if exists test_lob\");\ncubrid_execute($conn,\"CREATE TABLE test_lob (id INT, contents CLOB)\");\n$req = cubrid_prepare($conn, \"INSERT INTO test_lob VALUES(2, ?)\");\n\n$lob = cubrid_lob2_new($conn, 'CLOB');\n$len = cubrid_lob2_write($lob, \"Hello world\");\n\ncubrid_lob2_seek($lob, 0, CUBRID_CURSOR_LAST);\ncubrid_lob2_write($lob, \"beautiful\");\n\ncubrid_lob2_seek($lob, 15, CUBRID_CURSOR_FIRST);\n$data = cubrid_lob2_read($lob, 5);\n\necho $data.\"\\n\";\n\ncubrid_lob2_bind($req, 1, $lob);\ncubrid_execute($req);\n\ncubrid_disconnect($conn);\n?>\n```\n\n### Дивіться також\n\n-   [cubrid\\_lob2\\_read()](function.cubrid-lob2-read.md) \\- Здійснює читання з даних BLOB/CLOB\n-   [cubrid\\_lob2\\_write()](function.cubrid-lob2-write.md) \\- Записує до LOB-об'єкту\n-   [cubrid\\_lob2\\_seek64()](function.cubrid-lob2-seek64.md) \\- Переміщує курсор LOB-об'єкта\n-   [cubrid\\_lob2\\_tell()](function.cubrid-lob2-tell.md) \\- Повідомляє положення курсору LOB-об'єкта\n-   [cubrid\\_lob2\\_tell64()](function.cubrid-lob2-tell64.md) \\- Повідомляє положення курсору LOB-об'єкта\n-   [cubrid\\_lob2\\_size()](function.cubrid-lob2-size.md) \\- Отримує розмір LOB-об'єкта\n-   [cubrid\\_lob2\\_size64()](function.cubrid-lob2-size64.md) \\- Отримує розмір LOB-об'єкта\n","title":"cubrid\\_lob2\\_seek","contentType":2,"navigation":[{"function.cubrid-lob2-seek64.md":"« cubrid\\_lob2\\_seek64"},{"function.cubrid-lob2-size64.md":"cubrid\\_lob2\\_size64 »"},{"index.md":"PHP Manual"},{"ref.cubrid.md":"Функції CUBRID"}]}},"__N_SSG":true}