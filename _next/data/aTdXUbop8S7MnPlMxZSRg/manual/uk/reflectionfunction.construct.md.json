{"pageProps":{"page":{"slug":"reflectionfunction.construct.md","content":"# ReflectionFunction::\\_\\_construct\n\n(PHP 5, PHP 7, PHP 8)\n\nReflectionFunction::\\_\\_construct - Конструктор класу ReflectionFunction\n\n### Опис\n\npublic **ReflectionFunction::\\_\\_construct** [Closure](class.closure.md)|string`$function`) .\n\nСтворює об'єкт класу [ReflectionFunction](class.reflectionfunction.md)\n\n### Список параметрів\n\n`function`\n\nІм'я функції для відображення або [замикання](functions.anonymous.md)\n\n### Помилки\n\nОб'єкт класу [ReflectionException](class.reflectionexception.md), якщо аргумент `function` не містить допустимої функції.\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionFunction::\\_\\_construct()\\*\\*\\*\\*\n\n```php\n<?php\n/**\n * Простой счётчик\n *\n * @return    int\n */\nfunction counter1()\n{\n    static $c = 0;\n    return ++$c;\n}\n\n/**\n * Другой счётчик\n *\n * @return    int\n */\n$counter2 = function()\n{\n    static $d = 0;\n    return ++$d;\n\n};\n\nfunction dumpReflectionFunction($func)\n{\n    // Вывод основной информации\n    printf(\n        \"\\n\\n===> %s функция '%s'\\n\".\n        \"     объявлена в %s\\n\".\n        \"     строки с %d по %d\\n\",\n        $func->isInternal() ? 'internal' : 'user-defined',\n        $func->getName(),\n        $func->getFileName(),\n        $func->getStartLine(),\n        $func->getEndline()\n    );\n\n    // Печать документации\n    printf(\"---> Документация:\\n %s\\n\", var_export($func->getDocComment(), 1));\n\n    // Вывод статических переменных\n    if ($statics = $func->getStaticVariables())\n    {\n        printf(\"---> Статические переменные: %s\\n\", var_export($statics, 1));\n    }\n}\n\n// Создание объекта класса ReflectionFunction\ndumpReflectionFunction(new ReflectionFunction('counter1'));\ndumpReflectionFunction(new ReflectionFunction($counter2));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n===> user-defined функция 'counter1'\n     объявлена в Z:\\reflectcounter.php\n     строки с 7 по 11\n---> Документация:\n '/**\n * Простой счётчик\n *\n * @return    int\n */'\n---> Статические переменные: array (\n  'c' => 0,\n)\n\n\n===> user-defined функция '{closure}'\n     объявлена в Z:\\reflectcounter.php\n     строки с 18 по 23\n---> Документация:\n '/**\n * Другой счётчик\n *\n * @return    int\n */'\n---> Статические переменные: array (\n  'd' => 0,\n)\n```\n\n### Дивіться також\n\n-   [ReflectionMethod::\\_\\_construct()](reflectionmethod.construct.md) \\- Конструктор класу ReflectionMethod\n-   [Конструктори](language.oop5.decon.md#language.oop5.decon.constructor)\n","title":"ReflectionFunction::\\_\\_construct","contentType":2,"navigation":[{"class.reflectionfunction.md":"« ReflectionFunction"},{"reflectionfunction.export.md":"ReflectionFunction::export »"},{"index.md":"PHP Manual"},{"class.reflectionfunction.md":"ReflectionFunction"}]}},"__N_SSG":true}