{"pageProps":{"page":{"slug":"language.namespaces.basics.md","content":"## Простори імен: основи\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nНа початку обговорення того, як працюють простори імен, важливо зрозуміти, як PHP дізнається, які елементи із простору імен запитуються в коді. Можна провести аналогію між просторами імен PHP та файловою системою. Є три способи звернутися до файлу у файловій системі:\n\n1.  Відносне ім'я файлу на кшталт`foo.txt`вирішиться у`currentdirectory/foo.txt`, где`currentdirectory`— поточна директорія, де ми знаходимося. Тоді, якщо поточна директорія`/home/foo`, то ім'я перетворюється на`/home/foo/foo.txt`\n2.  Відносне ім'я шляху на кшталт`subdirectory/foo.txt`вирішиться у`currentdirectory/subdirectory/foo.txt`\n3.  Абсолютне ім'я шляху на кшталт`/main/foo.txt`залишиться таким самим:`/main/foo.txt`\n\nТой самий принцип збережеться під час вирішення елементів з просторів імен PHP. Наприклад, ім'я класу можна вказати трьома способами:\n\n1.  Неповне ім'я або ім'я класу без префікса, на кшталт`$a = new foo();`или`foo::staticmethod();`. Якщо поточний простір імен`currentnamespace`, то це ім'я дозволиться у`currentnamespace\\foo`. У коді в глобальному просторі імен ім'я залишиться таким самим:`foo`. Застереження: неповні імена функцій та констант будуть дозволені на глобальні функції та константи, якщо вони не визначені в поточному просторі імен. Докладніше про це розказано у розділі «[Простори імен: доступ до глобальних функцій та класів](language.namespaces.fallback.md)».\n2.  Повне ім'я, або ім'я класу з префіксами, на зразок`$a = new subnamespace\\foo();`или`subnamespace\\foo::staticmethod();`. Якщо поточний простір імен`currentnamespace`, то це ім'я дозволиться у`currentnamespace\\subnamespace\\foo`. У коді в глобальному просторі імен ім'я дозволиться в`subnamespace\\foo`\n3.  Абсолютне ім'я або ім'я з префіксом на початку, який вказує на глобальний простір імен, на кшталт`$a = new \\currentnamespace\\foo();`или`\\currentnamespace\\foo::staticmethod();`. Таке ім'я дозволяється буквальне ім'я, задане в коді:`currentnamespace\\foo`\n\nОсь приклад трьох видів синтаксису у реальному коді:\n\nfile1.php\n\n```php\n<?php\n\nnamespace Foo\\Bar\\subnamespace;\n\nconst FOO = 1;\nfunction foo() {}\nclass foo\n{\n    static function staticmethod() {}\n}\n?>\n```\n\nfile2.php\n\n```php\n<?php\n\nnamespace Foo\\Bar;\ninclude 'file1.php';\n\nconst FOO = 2;\nfunction foo() {}\nclass foo\n{\n    static function staticmethod() {}\n}\n\n/* Неполные имена */\nfoo(); // разрешается в функцию Foo\\Bar\\foo\nfoo::staticmethod(); // разрешается в метод staticmethod класса Foo\\Bar\\foo\necho FOO; // разрешается в константу Foo\\Bar\\FOO\n\n/* Полные имена */\nsubnamespace\\foo(); // разрешается в функцию Foo\\Bar\\subnamespace\\foo\nsubnamespace\\foo::staticmethod(); // разрешается в метод staticmethod класса Foo\\Bar\\subnamespace\\foo\necho subnamespace\\FOO; // разрешается в константу Foo\\Bar\\subnamespace\\FOO\n\n/* Абсолютные имена */\n\\Foo\\Bar\\foo(); // разрешается в функцию Foo\\Bar\\foo\n\\Foo\\Bar\\foo::staticmethod(); // разрешается в метод staticmethod класса Foo\\Bar\\foo\necho \\Foo\\Bar\\FOO; // разрешается в константу Foo\\Bar\\FOO\n\n?>\n```\n\nЗверніть увагу, що для доступу до глобальних класів, функцій або константів можна вказати абсолютне ім'я, наприклад, **\\\\strlen()** **\\\\Exception**или\\\\**`INI_ALL`**\n\n**Приклад #1 Доступ до глобальних класів, функцій та константів із простору імен**\n\n```php\n<?php\n\nnamespace Foo;\n\nfunction strlen() {}\nconst INI_ALL = 3;\nclass Exception {}\n\n$a = \\strlen('hi'); // Вызывает глобальную функцию strlen\n$b = \\INI_ALL; // Получает доступ к глобальной константе INI_ALL\n$c = new \\Exception('error'); // Создаёт экземпляр глобального класса Exception\n\n?>\n```\n","title":"Простори імен: основи","contentType":2,"navigation":[{"language.namespaces.definitionmultiple.md":"« Опис кількох просторів імен в одному файлі"},{"language.namespaces.dynamic.md":"Простір імен та динамічні особливості мови »"},{"index.md":"PHP Manual"},{"language.namespaces.md":"Простори імен"}]}},"__N_SSG":true}