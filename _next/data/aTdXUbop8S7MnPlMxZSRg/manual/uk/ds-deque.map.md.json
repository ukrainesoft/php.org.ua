{"pageProps":{"page":{"slug":"ds-deque.map.md","content":"# Ds\\\\Deque::map\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Deque::map — Повертає результат застосування callback-функції до всіх значень двосторонньої черги\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Deque::map(callable $callback): Ds\\Deque\n```\n\nПовертає результат застосування callback-функції, переданої в `callback`до всіх значень двосторонньої черги.\n\n### Список параметрів\n\n`callback`\n\n```methodsynopsis\ncallback(mixed $value): mixed\n```\n\nАргумент типа[callable](language.types.callable.md)\n\nЦя функція повинна повертати нове значення для кожного елемента двосторонньої черги.\n\n### Значення, що повертаються\n\nРезультат применения`callback`\\-функції до кожного значення двосторонньої черги.\n\n> **Зауваження** :\n> \n> Значення поточної двосторонньої черги залишаться незмінними.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Deque::map()\\*\\*\\*\\*\n\n```php\n<?php\n$deque = new \\Ds\\Deque([1, 2, 3]);\n\nprint_r($deque->map(function($value) { return $value * 2; }));\nprint_r($deque);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nDs\\Deque Object\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\nDs\\Deque Object\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n```\n","title":"Ds\\\\Deque::map","contentType":2,"navigation":[{"ds-deque.last.md":"« Ds\\\\Deque::last"},{"ds-deque.merge.md":"Ds\\\\Deque::merge »"},{"index.md":"PHP Manual"},{"class.ds-deque.md":"Ds\\\\Deque"}]}},"__N_SSG":true}