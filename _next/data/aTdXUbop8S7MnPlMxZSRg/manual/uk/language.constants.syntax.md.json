{"pageProps":{"page":{"slug":"language.constants.syntax.md","content":"## Синтаксис\n\nКонстанту можна визначити за допомогою ключового слова `const` або за допомогою функції [define()](function.define.md). В той час як [define()](function.define.md) дозволяє задати константу через вираз, конструкція `const` обмежена як описано у наступному параграфі. Після того, як константа визначена, її значення може бути змінено чи анульовано.\n\nПри использовании ключевого слова`const` допускаються тільки скалярні вирази (bool, int, float і string) та константи array, що містять лише скалярні вирази. Можна визначити константи з типом ресурсу, але не рекомендується, оскільки це може призвести до несподіваних результатів.\n\nОтримати значення константи можна, вказавши її ім'я. На відміну від змінних, вам *не потрібно* попереджувати ім'я константи символом `$`. Також можна використовувати функцію [constant()](function.constant.md) для отримання константи, якщо ви формуєте ім'я константи динамічно. Використовуйте функцію [get\\_defined\\_constants()](function.get-defined-constants.md) для отримання списку всіх констант.\n\n> **Зауваження**: Константи та (глобальні) змінні знаходяться у різних просторах імен. Це означає, що, наприклад, **`true`** і $TRUE загалом відрізняються.\n\nЯкщо використовується невизначена константа, викидається [Error](class.error.md). . До PHP 8.0.0 невизначені константи інтерпретувалися як просте слово string, тобто (CONSTANT vs \"CONSTANT\"). Цей резервний варіант оголошено застарілим з PHP 7.2.0, при цьому буде згенеровано помилку рівня **`E_WARNING`**. До PHP 7.2.0 натомість видавалася помилка рівня [E\\_NOTICE](ref.errorfunc.md). Дивіться також розділ керівництва, який пояснює, чому [$foo\\[bar\\]](language.types.array.md#language.types.array.foo-bar) - це неправильно (якщо `bar` не є константою). Це не стосується [(повністю) певним константам](language.namespaces.rules.md), які завжди викидатимуть [Error](class.error.md)якщо вони не визначені.\n\n> **Зауваження**: Щоб перевірити, чи встановлено константу, використовуйте функцію [defined()](function.defined.md)\n\nВідмінності між константами та змінними:\n\n-   Констант не має приставки у вигляді знака долара (`$`);\n-   Константи можуть бути визначені та доступні в будь-якому місці без урахування області видимості;\n-   Константи не можуть бути перевизначені або видалені після об'яви; і\n-   Константи можуть мати лише скалярні значення чи масиви.\n\n**Приклад #1 Визначення констант**\n\n```php\n<?php\ndefine(\"CONSTANT\", \"Здравствуй, мир.\");\necho CONSTANT; // выводит \"Здравствуй, мир.\"\necho Constant; // Выбросит ошибку: Неопределённая константа \"Constant\"\n               // До PHP 8.0.0 выводит \"Constant\" и выдаёт предупреждение.\n?>\n```\n\n**Приклад #2 Определение констант с помощью ключевого слова`const`**\n\n```php\n<?php\n// Простое скалярное значение\nconst CONSTANT = 'Здравствуй, мир.';\n\necho CONSTANT;\n\n// Скалярное выражение\nconst ANOTHER_CONST = CONSTANT . ' Прощай, мир.';\necho ANOTHER_CONST;\n\nconst ANIMALS = array('dog', 'cat', 'bird');\necho ANIMALS[1]; // выводит \"cat\"\n\n// Массивы в константе\ndefine('ANIMALS', array(\n    'dog',\n    'cat',\n    'bird'\n));\necho ANIMALS[1]; // выводит \"cat\"\n?>\n```\n\n> **Зауваження** :\n> \n> В отличие от определения констант с помощью функции[define()](function.define.md), константи, оголошені за допомогою ключового слова `const` повинні бути оголошені у верхній області видимості, тому що вони визначаються при компілюванні скрипта. Це означає, що їх не можна оголошувати всередині функцій, циклів, виразів `if` та блоків `try` `catch`\n\n### Дивіться також\n\n-   [Константи класів](language.oop5.constants.md)\n","title":"Синтаксис","contentType":2,"navigation":[{"language.constants.md":"« Константи"},{"language.constants.predefined.md":"Обумовлені константи »"},{"index.md":"PHP Manual"},{"language.constants.md":"Константи"}]}},"__N_SSG":true}