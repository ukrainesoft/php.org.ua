{"pageProps":{"page":{"slug":"function.db2-connect.md","content":"# db2\\_connect\n\n(PECL ibm\\_db2 >= 1.0.0)\n\ndb2\\_connect — Повертає з'єднання з базою даних\n\n### Опис\n\n```methodsynopsis\ndb2_connect(    string $database,    ?string $username,    ?string $password,    array $options = []): resource|false\n```\n\nСтворення нового з'єднання з базою даних IBM DB2 Universal Database, IBM Cloudscape або Apache Derby database.\n\n### Список параметрів\n\n`database`\n\nДля каталогізованого з'єднання з базою даних `database` є псевдонім бази даних у клієнтському каталозі DB2.\n\nДля некаталогізованого підключення до бази даних `database`представляет собой полную строку подключения в следующем формате:\n\nDATABASE=`database`;HOSTNAME=`hostname`;PORT=`port`;PROTOCOL=TCPIP;UID=`username`;PWD=`password`\n\nде параметри становлять такі значення:\n\n`database`\n\nНазва бази даних.\n\n`hostname`\n\nІм'я хоста або IP-адреса сервера бази даних.\n\n`port`\n\nПорт TCP/IP, який використовується базою даних прийняття запитів.\n\n`username`\n\nІм'я користувача, під яким відбувається підключення до бази даних.\n\n`password`\n\nПароль, з яким відбувається підключення до бази даних.\n\n`username`\n\nІм'я користувача, під яким відбувається підключення до бази даних.\n\nДля некаталогізованих з'єднань необхідно передати значення **`null`** або порожній рядок.\n\n`password`\n\nПароль, з яким відбувається підключення до бази даних.\n\nДля некаталогізованих з'єднань необхідно передати значення **`null`** або порожній рядок.\n\n`options`\n\nАсоціативний масив параметрів підключення, які впливають на поведінку підключення, де допустимі ключі масиву включають:\n\n`autocommit`\n\nПередача значения`DB2_AUTOCOMMIT_ON` включає автоматичну фіксацію (autocommit) цього дескриптора з'єднання.\n\nПередача значения`DB2_AUTOCOMMIT_OFF` вимикає автоматичну фіксацію (autocommit) для цього дескриптора з'єднання.\n\n`DB2_ATTR_CASE`\n\nПередача значения`DB2_CASE_NATURAL` показує, що імена стовпців повертаються у природному регістрі.\n\nПередача значения`DB2_CASE_LOWER` вказує, що імена стовпців повертаються у нижньому регістрі.\n\nПередача значения`DB2_CASE_UPPER` вказує, що імена стовпців повертаються у верхньому регістрі.\n\n`CURSOR`\n\nПередача значения`DB2_FORWARD_ONLY` задає курсор, який рухається лише вперед для ресурсу оператора. Цей тип курсору використовується за замовчуванням, він підтримується всіма серверами баз даних.\n\nПередача значения`DB2_SCROLLABLE` задає курсор, що прокручується, для ресурсу оператора. Цей режим включає довільний доступ до рядків у наборі результатів, але наразі підтримується лише IBM DB2 Universal Database.\n\nЦя нова опція доступна в ibm\\_db2 версії 1.7.0 та новіші.\n\n`trustedcontext`\n\nПередача значення DB2\\_TRUSTED\\_CONTEXT\\_ENABLE включає довірений контекст цього дескриптора з'єднання. Цей параметр не можна встановити за допомогою [db2\\_set\\_option()](function.db2-set-option.md)\n\nЦей ключ працює тільки в тому випадку, якщо база даних каталогізована (навіть якщо база даних є локальною) або якщо буде створено повний DSN під час створення з'єднання.\n\nЩоб каталогізувати базу даних, використовуйте такі команди:\n\ndb2 catalog tcpip node loopback remoteserverdb2 catalog databaseas at node loopback db2 \"update dbm cfg using svcename \" db2set DB2COMM=TCPIP\n\nДані нові опції i5/OS доступні в ibm\\_db2 версії 1.5.1 та новіші.\n\n`i5_lib`\n\nСимвольне значення, що вказує стандартну бібліотеку, яка буде використовуватися для дозволу некваліфікованих посилань на файли. Це неприпустимо, якщо з'єднання використовує режим назви системи.\n\n`i5_naming`\n\nЗначение`DB2_I5_NAMING_ON` включає режим назви системи DB2 UDB CLI iSeries. Файли кваліфікуються за допомогою косої риси (/) як роздільник. Некваліфіковані файли дозволяються за допомогою списку бібліотек для роботи.\n\nЗначение`DB2_I5_NAMING_OFF` вимикає стандартний режим іменування DB2 UDB CLI, який є іменем SQL. Файли кваліфікуються за допомогою точки (.) як роздільника. Некваліфіковані файли дозволяються за допомогою або бібліотеки за промовчанням, або поточного ідентифікатора користувача.\n\n`i5_commit`\n\nАтрибут`i5_commit` має бути встановлений перед викликом **db2\\_connect()**. Якщо значення змінюється після встановлення з'єднання та з'єднання з віддаленим джерелом даних, зміна не набуде чинності до наступного успішного виклику. **db2\\_connect()** для дескриптора з'єднання.\n\n> **Зауваження** :\n> \n> Параметр php.ini`ibm_db2.i5_allow_commit`\\==0 или`DB2_I5_TXN_NO_COMMIT` використовується за замовчуванням, але може бути змінено за допомогою параметра `i5_commit`\n\n`DB2_I5_TXN_NO_COMMIT` - Контроль транзакцій не використовується.\n\n`DB2_I5_TXN_READ_UNCOMMITTED` - Можливі брудні читання, неповторні читання та фантоми.\n\n`DB2_I5_TXN_READ_COMMITTED` - Брудне читання неможливе. Можливі неповторні читання та фантоми\n\n`DB2_I5_TXN_REPEATABLE_READ` - Брудні читання та неповторні читання неможливі. Можливі фантоми.\n\n`DB2_I5_TXN_SERIALIZABLE` - Транзакції серіалізуються. Брудні читання, неповторні читання та фантоми неможливі.\n\n`i5_query_optimize`\n\n`DB2_FIRST_IO` - Всі запити оптимізовані для максимально швидкого повернення першої сторінки виводу. Ця мета добре працює, коли висновок контролюється користувачем, який швидше за все скасує запит після перегляду першої сторінки вихідних даних. Запити, закодовані з пропозицією OPTIMIZE FOR nnn ROWS, враховують мету, вказану у реченні.\n\n`DB2_ALL_IO` - Усі запити оптимізовані з метою виконати весь запит до завершення у найкоротший термін. Це хороший варіант, коли вихідні дані запиту записуються у файл або звіт, або коли інтерфейс ставить вихідні дані у чергу. Запити, закодовані з пропозицією OPTIMIZE FOR nnn ROWS, враховують мету, вказану у реченні. Це значення за промовчанням.\n\n`i5_dbcs_alloc`\n\nЗначение`DB2_I5_DBCS_ALLOC_ON`включает схему распределения DB2 6X для увеличения размера столбца преобразования DBCS.\n\nЗначение`DB2_I5_DBCS_ALLOC_OFF`отключает схему распределения DB2 6X для увеличения размера столбца преобразования DBCS.\n\nЗамечание: параметр php.ini`ibm_db2.i5_dbcs_alloc`\\== 0 или`DB2_I5_DBCS_ALLOC_OFF` є значенням за промовчанням, але його можна змінити за допомогою параметра `i5_dbcs_alloc`\n\n`i5_date_fmt`\n\n`DB2_I5_FMT_ISO` - Використовується формат дати Міжнародної організації стандартизації (ISO) (yyyy-mm-dd). Це значення за промовчанням.\n\n`DB2_I5_FMT_USA` - Використовується формат дати США (mm/dd/yyyy).\n\n`DB2_I5_FMT_EUR` - Використовується європейський формат дати (dd.mm.yyyy).\n\n`DB2_I5_FMT_JIS` - Використовується формат дати японського промислового стандарту (yyyy-mm-dd).\n\n`DB2_I5_FMT_MDY` - Використовується формат дати mm/dd/yyyy.\n\n`DB2_I5_FMT_DMY` - Використовується формат дати dd/mm/yyyy.\n\n`DB2_I5_FMT_YMD` - Використовується формат дати yy/mm/dd.\n\n`DB2_I5_FMT_JUL` - Використовується юліанський формат дати (yy/ddd).\n\n`DB2_I5_FMT_JOB`\\- Используется задание по умолчанию.\n\n`i5_date_sep`\n\n`DB2_I5_SEP_SLASH` - Як роздільник дати використовується коса риса ( / ). Це значення за промовчанням.\n\n`DB2_I5_SEP_DASH` - Як роздільник дати використовується тире ( - ).\n\n`DB2_I5_SEP_PERIOD` - Як роздільник дати використовується точка ( . ).\n\n`DB2_I5_SEP_COMMA` - Як роздільник дати використовується кома ( , ).\n\n`DB2_I5_SEP_BLANK` - Як роздільник дати використовується пробіл.\n\n`DB2_I5_SEP_JOB`\\- Используется задание по умолчанию.\n\n`i5_time_fmt`\n\n`DB2_I5_FMT_ISO` - Використовується формат часу Міжнародної організації стандартизації (ISO) (hh.mm.ss). Це значення за промовчанням.\n\n`DB2_I5_FMT_USA` - Використовується формат часу США (hh:mmxx, де xx – це AM або PM).\n\n`DB2_I5_FMT_EUR`\\- Используется европейский формат времени (hh.mm.ss).\n\n`DB2_I5_FMT_JIS` - Використовується японський промисловий стандартний формат часу (hh:mm:ss).\n\n`DB2_I5_FMT_HMS`\\- Используется формат hh:mm:ss.\n\n`i5_time_sep`\n\n`DB2_I5_SEP_COLON` - Як роздільник часу використовується двокрапка ( : ). Це значення за промовчанням.\n\n`DB2_I5_SEP_PERIOD` - Як роздільник часу використовується точка ( . ).\n\n`DB2_I5_SEP_COMMA`\\- В качестве разделителя времени используется запятая ( , ).\n\n`DB2_I5_SEP_BLANK`\\- В качестве разделителя времени используется пробел.\n\n`DB2_I5_SEP_JOB`\\- Используется задание по умолчанию.\n\n`i5_decimal_sep`\n\n`DB2_I5_SEP_PERIOD` - Як десятковий роздільник використовується точка ( . ). Це значення за промовчанням.\n\n`DB2_I5_SEP_COMMA` - Як десятковий роздільник використовується кома ( , ).\n\n`DB2_I5_SEP_JOB`\\- Используется задание по умолчанию.\n\nЦя нова опція i5/OS доступна в ibm\\_db2 версії 1.8.0 та новіші.\n\n`i5_libl`\n\nСимвольне значення, що вказує на список бібліотек, який буде використовуватися для дозволу некваліфікованих посилань на файли. Вкажіть елементи списку бібліотек, розділені пробілами 'i5\\_libl'=>\"MYLIB YOURLIB ANYLIB\".\n\n> **Зауваження** :\n> \n> `i5_libl` викликає qsys2/qcmdexc('cmd',cmdlen), який доступний тільки в i5/OS V5R4 та новіший.\n\n### Значення, що повертаються\n\nПовернення ресурсу дескриптора підключення, якщо спроба підключення успішна. Якщо спроба підключення зазнала невдачі, **db2\\_connect()** повертає **`false`**\n\n### Приклади\n\n**Приклад #1 Створення каталогізованого з'єднання**\n\nКаталогізовані з'єднання вимагають, щоб цільова база даних була попередньо каталогізована за допомогою DB2 Command Line Processor (CLP) або DB2 Configuration Assistant.\n\n```php\n<?php\n$database = 'SAMPLE';\n$user = 'db2inst1';\n$password = 'ibmdb2';\n\n$conn = db2_connect($database, $user, $password);\n\nif ($conn) {\n    echo \"Connection succeeded.\";\n    db2_close($conn);\n}\nelse {\n    echo \"Connection failed.\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nConnection succeeded.\n```\n\n**Приклад #2 Створення некаталогізованого з'єднання**\n\nНекаталогізоване з'єднання дозволяє динамічно підключатися до бази даних.\n\n```php\n<?php\n$database = 'SAMPLE';\n$user = 'db2inst1';\n$password = 'ibmdb2';\n$hostname = 'localhost';\n$port = 50000;\n\n$conn_string = \"DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;\" .\n  \"HOSTNAME=$hostname;PORT=$port;PROTOCOL=TCPIP;UID=$user;PWD=$password;\";\n$conn = db2_connect($conn_string, '', '');\n\nif ($conn) {\n    echo \"Connection succeeded.\";\n    db2_close($conn);\n}\nelse {\n    echo \"Connection failed.\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nConnection succeeded.\n```\n\n**Приклад #3 Створення з'єднання з відключеним автокоммітом за замовчуванням**\n\nПередача массива параметров в\\*\\*db2\\_connect()\\*\\*позволяет изменять поведение дескриптора соединения по умолчанию.\n\n```php\n<?php\n$database = 'SAMPLE';\n$user = 'db2inst1';\n$password = 'ibmdb2';\n$options = array('autocommit' => DB2_AUTOCOMMIT_OFF);\n\n$conn = db2_connect($database, $user, $password, $options);\n\nif ($conn) {\n    echo \"Connection succeeded.\\n\";\n    if (db2_autocommit($conn)) {\n         echo \"Autocommit is on.\\n\";\n    }\n    else {\n         echo \"Autocommit is off.\\n\";\n    }\n    db2_close($conn);\n}\nelse {\n    echo \"Connection failed.\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nConnection succeeded.\nAutocommit is off.\n```\n\n**Приклад #4 Найкраща продуктивність i5/OS**\n\nДля досягнення максимальної продуктивності вашої програми PHP i5/OS ibm\\_db2 1.5.1 використовуйте стандартний хост, ідентифікатор користувача та пароль для **db2\\_connect()**\n\n```php\n<?php\n  $library = \"ADC\";\n  $i5 = db2_connect(\"\", \"\", \"\", array(\"i5_lib\"=>\"qsys2\"));\n  $result = db2_exec($i5,\n       \"select * from systables where table_schema = '$library'\");\n  while ($row = db2_fetch_both($result)) {\n     echo $row['TABLE_NAME'].\"</br>\";\n  }\n  db2_close($i5);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nANIMALS\nNAMES\nPICTURES\n```\n\n**Приклад #5 Використання довіреного контексту**\n\nУ цьому прикладі показано, як увімкнути довірений контекст, переключити користувачів та отримати поточний ідентифікатор користувача.\n\n```php\n<?php\n\n$database = \"SAMPLE\";\n$hostname = \"localhost\";\n$port = 50000;\n$authID = \"db2inst1\";\n$auth_pass = \"ibmdb2\";\n\n$tc_user = \"tcuser\";\n$tc_pass = \"tcpassword\";\n\n$dsn = \"DATABASE=$database;HOSTNAME=$hostname;PORT=$port;\n  PROTOCOL=TCPIP;UID=$authID;PWD=$auth_pass;\";\n$options = array (\"trustedcontext\" => DB2_TRUSTED_CONTEXT_ENABLE);\n\n$tc_conn = db2_connect($dsn, \"\", \"\", $options);\nif($tc_conn) {\n    echo \"Explicit trusted connection succeeded.\\n\";\n\n    if(db2_get_option($tc_conn, \"trustedcontext\")) {\n        $userBefore = db2_get_option($tc_conn, \"trusted_user\");\n\n        // Выполнение работы в качестве пользователя 1\n\n        // Переключение на доверенного пользователя\n        $parameters = array(\"trusted_user\" => $tc_user,\n          \"trusted_password\" => $tcuser_pass);\n        $res = db2_set_option ($tc_conn, $parameters, 1);\n\n        $userAfter = db2_get_option($tc_conn, \"trusted_user\");\n        // Продолжение выполнения работы в качестве доверенного пользователя\n\n        if($userBefore != $userAfter) {\n            echo \"User has been switched.\" . \"\\n\";\n        }\n    }\n\n    db2_close($tc_conn);\n}\nelse {\n    echo \"Explicit trusted connection failed.\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nExplicit trusted connection succeeded.\nUser has been switched.\n```\n\n### Дивіться також\n\n-   [db2\\_close()](function.db2-close.md) \\- Закриває з'єднання з базою даних\n-   [db2\\_pconnect()](function.db2-pconnect.md) \\- Повертає постійне з'єднання з базою даних\n","title":"db2\\_connect","contentType":2,"navigation":[{"function.db2-conn-errormsg.md":"« db2\\_conn\\_errormsg"},{"function.db2-cursor-type.md":"db2\\_cursor\\_type »"},{"index.md":"PHP Manual"},{"ref.ibm-db2.md":"Функції IBM DB2"}]}},"__N_SSG":true}