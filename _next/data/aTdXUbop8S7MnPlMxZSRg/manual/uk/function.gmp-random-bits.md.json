{"pageProps":{"page":{"slug":"function.gmp-random-bits.md","content":"# gmp\\_random\\_bits\n\n(PHP 5 >= 5.6.3, PHP 7, PHP 8)\n\ngmp\\_random\\_bits - Генерує випадкове число\n\n### Опис\n\n```methodsynopsis\ngmp_random_bits(int $bits): GMP\n```\n\nГенерирует случайное число. Число будет находиться в диапазоне между и`2$bits - 1`\n\nЗначение параметра`bits` має бути більше 0, а максимальне значення обмежено розміром доступної пам'яті.\n\n**Застереження**\n\nФункція не створює криптографічно захищені значення та *не повинна* використовуватися для криптографічних цілей або цілей, що вимагають, щоб значення, що повертаються, були недоступні для розгадування.\n\nЯкщо потрібна криптографічно безпечна випадкова послідовність, можна використати клас [Random\\\\Randomizer](class.random-randomizer.md) з двигуном [Random\\\\Engine\\\\Secure](class.random-engine-secure.md). Для простих сценаріїв є функції [random\\_int()](function.random-int.md) і [random\\_bytes()](function.random-bytes.md) із зручним API криптографічно безпечного генератора псевдовипадкових чисел (CSPRNG), що підтримується операційною системою.\n\n### Список параметрів\n\n`bits`\n\nКількість бітів для створення.\n\n### Значення, що повертаються\n\nВипадкове число GMP.\n\n### Помилки\n\nЕсли значение параметра`bits`будет меньше , буде викинуто виняток [ValueError](class.valueerror.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** gmp\\_random\\_bits()\\*\\*\\*\\*\n\n```php\n<?php\n\n$rand1 = gmp_random_bits(3); // случайное число от 0 до 7\n$rand2 = gmp_random_bits(5); // случайное число от 0 до 31\n\necho gmp_strval($rand1) . \"\\n\";\necho gmp_strval($rand2) . \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n3\n15\n```\n","title":"gmp\\_random\\_bits","contentType":2,"navigation":[{"function.gmp-prob-prime.md":"« gmp\\_prob\\_prime"},{"function.gmp-random-range.md":"gmp\\_random\\_range »"},{"index.md":"PHP Manual"},{"ref.gmp.md":"GMP Функції"}]}},"__N_SSG":true}