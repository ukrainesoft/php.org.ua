{"pageProps":{"page":{"slug":"function.random-bytes.md","content":"# random\\_bytes\n\n(PHP 7, PHP 8)\n\nrandom\\_bytes — Отримує криптографічно безпечні випадкові байти\n\n### Опис\n\n```methodsynopsis\nrandom_bytes(int $length): string\n```\n\nСтворює рядок, що містить рівномірно вибрані випадкові байти із запитаною довжиною `length`\n\nОскільки байти, що повертаються, вибираються цілком випадково, отриманий рядок може містити недруковані символи або неприпустимі послідовності UTF-8. Перед передачею або відображенням може знадобитися її кодування.\n\nВипадкова послідовність, що створюється функцією, підходить для всіх програм, включаючи генерацію довгострокових секретів, таких як ключі шифрування.\n\nДжерела випадкових величин у порядку пріоритету:\n\n-   Linux:[» getrandom()](http://man7.org/linux/man-pages/man2/getrandom.2.md), /dev/urandom\n    \n-   FreeBSD >= 12 (PHP >= 7.3): [» getrandom()](http://man7.org/linux/man-pages/man2/getrandom.2.md), /dev/urandom\n    \n-   Windows (PHP >= 7.2): [» CNG-API](https://docs.microsoft.com/en-us/windows/desktop/SecCNG/cng-portal)\n    \n    Windows:[» CryptGenRandom](https://msdn.microsoft.com/en-us/library/windows/desktop/aa379942(v=vs.85).aspx)\n    \n-   macOS (PHP >= 8.2; >= 8.1.9; >= 8.0.22, якщо CCRandomGenerateBytes доступний під час компіляції): CCRandomGenerateBytes()\n    \n    macOS (PHP >= 8.1; >= 8.0.2): arc4random\\_buf(), /dev/urandom\n    \n-   NetBSD >= 7 (PHP >= 7.1; >= 7.0.1): arc4random\\_buf(), /dev/urandom\n    \n-   OpenBSD >= 5.5 (PHP >= 7.1; >= 7.0.1): arc4random\\_buf(), /dev/urandom\n    \n-   DragonflyBSD (PHP >= 8.1): [» getrandom()](http://man7.org/linux/man-pages/man2/getrandom.2.md), /dev/urandom\n    \n-   Solaris (PHP >= 8.1): [» getrandom()](http://man7.org/linux/man-pages/man2/getrandom.2.md), /dev/urandom\n    \n-   Будь-яка комбінація операційної системи та версії PHP, не вказана раніше: /dev/urandom\n    \n-   Якщо жодне з джерел не доступне або всі вони не генерують випадкову величину, то буде викинуто виняток[Random\\\\RandomException](class.random-randomexception.md)\n    \n\n> **Зауваження**: Ця функція була додана в PHP 7.0, а для версій з 5.2 до 5.6 включно доступна [» користувацька реалізація](https://github.com/paragonie/random_compat)\n\n### Список параметрів\n\n`length`\n\nДовжина рядка, що генерується в байтах; повинно бути или больше.\n\n### Значення, що повертаються\n\nПовертає рядок, що складається із заданої кількості криптографічно безпечних байт.\n\n### Помилки\n\n-   Якщо відповідних джерел випадкових величин відсутні, то викидається виняток[Random\\\\RandomException](class.random-randomexception.md)\n-   Если значение параметра`length`меньше , буде викинута помилка [ValueError](class.valueerror.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | У разі помилки CSPRNG, функція тепер буде викидати виняток [Random\\\\RandomException](class.random-randomexception.md). . Раніше викидався виняток [Exception](class.exception.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** random\\_bytes()\\*\\*\\*\\*\n\n```php\n<?php\n$bytes = random_bytes(5);\nvar_dump(bin2hex($bytes));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nstring(10) \"385e33f741\"\n```\n\n### Дивіться також\n\n-   [Random\\\\Randomizer::getBytes()](random-randomizer.getbytes.md) \\- Отримує випадкові байти\n-   [random\\_int()](function.random-int.md) \\- Отримує криптографічно безпечне, рівномірно вибране ціле число\n-   [bin2hex()](function.bin2hex.md) \\- Перетворює бінарні дані на шістнадцяткове подання\n-   [base64\\_encode()](function.base64-encode.md) \\- Кодує дані у формат MIME base64\n","title":"random\\_bytes","contentType":2,"navigation":[{"function.rand.md":"« rand"},{"function.random-int.md":"random\\_int »"},{"index.md":"PHP Manual"},{"ref.random.md":"Функції Random"}]}},"__N_SSG":true}