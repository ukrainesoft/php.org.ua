{"pageProps":{"page":{"slug":"function.trim.md","content":"# trim\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\ntrim — Видалення пробілів (або інших символів) з початку та кінця рядка\n\n### Опис\n\n```methodsynopsis\ntrim(string $string, string $characters = \" \\n\\r\\t\\v\\x00\"): string\n```\n\nЦя функція повертає рядок `string` з віддаленими з початку та кінця рядка пробілами. Якщо другий параметр не передано, **trim()** видаляє такі символи:\n\n-   \" \" (ASCII `32` `0x20`)), звичайний пробіл.\n-   \"\\\\t\" (ASCII `9` `0x09`)), символ табуляції.\n-   \"\\\\n\" (ASCII `10` `0x0A`)), символ перекладу рядка.\n-   \"\\\\r\" (ASCII `13` `0x0D`)), символ повернення каретки.\n-   \"\\\\0\" (ASCII `0x00`)), `NUL`\\-байт.\n-   \"\\\\v\" (ASCII `11` `0x0B`)), вертикальна табуляція.\n\n### Список параметрів\n\n`string`\n\nОбрізний рядок (string).\n\n`characters`\n\nМожна також встановити список символів для видалення за допомогою необов'язкового аргументу `characters`. Просто перерахуйте всі символи, які потрібно видалити. Можна вказати конструкцію `.. .` для обозначения диапазона символов.\n\n### Значення, що повертаються\n\nОбрізний рядок.\n\n### Приклади\n\n**Приклад #1 Приклад використання** trim()\\*\\*\\*\\*\n\n```php\n<?php\n\n$text   = \"\\t\\tThese are a few words :) ...  \";\n$binary = \"\\x09Example string\\x0A\";\n$hello  = \"Hello World\";\nvar_dump($text, $binary, $hello);\n\nprint \"\\n\";\n\n$trimmed = trim($text);\nvar_dump($trimmed);\n\n$trimmed = trim($text, \" \\t.\");\nvar_dump($trimmed);\n\n$trimmed = trim($hello, \"Hdle\");\nvar_dump($trimmed);\n\n$trimmed = trim($hello, 'HdWr');\nvar_dump($trimmed);\n\n// удаляем управляющие ASCII-символы с начала и конца $binary\n// (от 0 до 31 включительно)\n$clean = trim($binary, \"\\x00..\\x1F\");\nvar_dump($clean);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(32) \"        These are a few words :) ...  \"\nstring(16) \"    Example string\n\"\nstring(11) \"Hello World\"\n\nstring(28) \"These are a few words :) ...\"\nstring(24) \"These are a few words :)\"\nstring(5) \"o Wor\"\nstring(9) \"ello Worl\"\nstring(14) \"Example string\"\n```\n\n**Приклад #2 Обрезание значений массива с помощью**trim()\\*\\*\\*\\*\n\n```php\n<?php\nfunction trim_value(&$value)\n{\n    $value = trim($value);\n}\n\n$fruit = array('apple','banana ', ' cranberry ');\nvar_dump($fruit);\n\narray_walk($fruit, 'trim_value');\nvar_dump($fruit);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(3) {\n  [0]=>\n  string(5) \"apple\"\n  [1]=>\n  string(7) \"banana \"\n  [2]=>\n  string(11) \" cranberry \"\n}\narray(3) {\n  [0]=>\n  string(5) \"apple\"\n  [1]=>\n  string(6) \"banana\"\n  [2]=>\n  string(9) \"cranberry\"\n}\n```\n\n### Примітки\n\n> **Зауваження** **Можливі трюки: видалення символів із середини рядка**\n> \n> Так как**trim()** видаляє символи з початку і кінця рядка string, то видалення (або не видалення) символів з середини рядка може здивувати . `trim('abc', 'bad')` видалить як 'a', так і 'b', тому що видалення 'a' зрушить 'b' до початку рядка, що також дозволить її видалити. Ось чому це \"працює\", тоді як `trim('abc', 'b')` очевидно ні.\n\n### Дивіться також\n\n-   [ltrim()](function.ltrim.md) \\- Видаляє прогалини (або інші символи) з початку рядка\n-   [rtrim()](function.rtrim.md) \\- Видаляє прогалини (або інші символи) з кінця рядка\n-   [str\\_replace()](function.str-replace.md) \\- Замінює всі входження рядка пошуку на рядок заміни\n","title":"trim","contentType":2,"navigation":[{"function.substr.md":"« substr"},{"function.ucfirst.md":"ucfirst »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}