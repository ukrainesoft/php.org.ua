{"pageProps":{"page":{"slug":"functions.arrow.md","content":"## Стрілочні функції\n\nСтрілецькі функції з'явилися в PHP 7.4, як більш лаконічний синтаксис для [анонімних функцій](functions.anonymous.md)\n\nІ анонімні, і стрілочні функції реалізовані з використанням класу [](class.closure.md)[Closure](class.closure.md)\n\nОсновний вид запису стрілочних функцій: `fn (argument_list) => expr`\n\nСтрілецькі функції підтримують ті ж можливості, що й [анонімні функції](functions.anonymous.md), за винятком того, що використання змінних із батьківської області завжди виконується автоматично.\n\nКоли змінну, що використовується у виразі, визначено в батьківській області, вона буде неявно захоплена за значенням. У прикладі функції $fn1 і $fn2 поводяться однаково.\n\n**Приклад #1 Стрілецькі функції захоплюють змінні за значенням автоматично**\n\n```php\n<?php\n\n$y = 1;\n\n$fn1 = fn($x) => $x + $y;\n// эквивалентно использованию $y по значению:\n$fn2 = function ($x) use ($y) {\n    return $x + $y;\n};\n\nvar_export($fn1(3));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n4\n```\n\nЦе також працює у вкладених стрілочних функціях:\n\n**Приклад #2 Стрілецькі функції захоплюють змінні за значенням автоматично, навіть коли вони вкладені**\n\n```php\n<?php\n\n$z = 1;\n$fn = fn($x) => fn($y) => $x * $y + $z;\n// Выведет 51\nvar_export($fn(5)(10));\n?>\n```\n\nПодібно до анонімних функцій, синтаксис стрілочних функцій допускає довільні сигнатури функцій, включаючи типи параметрів і значень, що повертаються, значення за замовчуванням, змінні, а також передачу і повернення за посиланням. Нижче наведено коректні приклади стрілочних функцій:\n\n**Приклад #3 Приклади використання стрілочних функцій**\n\n```php\n<?php\n\nfn(array $x) => $x;\nstatic fn(): int => $x;\nfn($x = 42) => $x;\nfn(&$x) => $x;\nfn&($x) => $x;\nfn($x, ...$rest) => $rest;\n\n?>\n```\n\nСтрілецькі функції використовують прив'язку змінних за значенням. Це приблизно еквівалентно виконанню `use($x)` для кожної змінної $x, яка використовується всередині стрілочної функції. Прив'язка за значенням означає, що неможливо змінити будь-які значення із зовнішньої області. Натомість можна використовувати [анонімні функції](functions.anonymous.md) для прив'язок за посиланнями.\n\n**Приклад #4 Значення із зовнішньої області видимості не можуть бути змінені стрілочними функціями**\n\n```php\n<?php\n\n$x = 1;\n$fn = fn() => $x++; // Ничего не изменит\n$fn();\nvar_export($x);  // Выведет 1\n\n?>\n```\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.4.0 | Стали доступні стрілочні функції. |\n\n### Примітки\n\n> **Зауваження**: Можна використовувати [func\\_num\\_args()](function.func-num-args.md) [func\\_get\\_arg()](function.func-get-arg.md) і [func\\_get\\_args()](function.func-get-args.md) у стрілочній функції.\n","title":"Стрілочні функції","contentType":2,"navigation":[{"functions.anonymous.md":"« Анонімні функції"},{"functions.first_class_callable_syntax.md":"Callback-функції як об'єкти першого класу »"},{"index.md":"PHP Manual"},{"language.functions.md":"Функції"}]}},"__N_SSG":true}