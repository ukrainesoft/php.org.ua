{"pageProps":{"page":{"slug":"function.unlink.md","content":"# unlink\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nunlink — Видалення файлу\n\n### Опис\n\n```methodsynopsis\nunlink(string $filename, ?resource $context = null): bool\n```\n\nУдаляет файл`filename`. Функція схожа на функцію unlink() Unix у C. При невдалому виконанні буде викликана помилка рівня **`E_WARNING`**\n\n### Список параметрів\n\n`filename`\n\nШлях до файлу.\n\nЯкщо файл є символічним посиланням, символічне посилання буде видалено. У Windows для видалення символічного посилання на каталог замість цього має використовуватися функція [rmdir()](function.rmdir.md)\n\n`context`\n\nРесурс (resource) с[контекстом потоку](stream.contexts.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.3.0 | У Windows тепер можна видалити файли функцією **unlink()** з використанням дескрипторів, хоча раніше це не вдавалося. Тим не менш, все ще неможливо повторно створити віддалений файл, доки всі дескриптори до нього не будуть закриті. |\n\n### Приклади\n\n**Приклад #1 Приклад простого використання **unlink()****\n\n```php\n<?php\n$fh = fopen('test.md', 'a');\nfwrite($fh, '<h1>Привет, мир!</h1>');\nfclose($fh);\n\nunlink('test.md');\n?>\n```\n\n### Дивіться також\n\n-   [rmdir()](function.rmdir.md) \\- видаляє директорію\n","title":"unlink","contentType":2,"navigation":[{"function.umask.md":"« umask"},{"book.inotify.md":"Inotify »"},{"index.md":"PHP Manual"},{"ref.filesystem.md":"Функції файлової системи"}]}},"__N_SSG":true}