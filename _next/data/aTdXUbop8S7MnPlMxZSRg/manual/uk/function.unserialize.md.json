{"pageProps":{"page":{"slug":"function.unserialize.md","content":"# unserialize\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nunserialize — Створює PHP-значення зі збереженого уявлення\n\n### Опис\n\n```methodsynopsis\nunserialize(string $data, array $options = []): mixed\n```\n\nФункция**unserialize()** приймає одну серіалізовану змінну та конвертує її назад у значення PHP.\n\n**Увага**\n\nНе рекомендовано передавати ненадійні дані користувача в функцію **unserialize()**, навіть якщо параметр `options`задано значение`allowed_classes`. Десеріалізація вміє створити код, який виконається при інстанціюванні об'єкта або автоматичному завантаженні коду, що можуть використовувати несумлінні користувачі. Краще викликати більш безпечні стандартні формати обміну даними, наприклад, JSON (функціями [json\\_decode()](function.json-decode.md) і [json\\_encode()](function.json-encode.md)), якщо потрібно передати серіалізовані дані користувачеві.\n\nКоли потрібно десеріалізувати дані із зовнішніх джерел, користуються функцією [hash\\_hmac()](function.hash-hmac.md), щоб перевірити ці дані. Перевіряють, щоб дані були змінені ніким, крім розробника.\n\n### Список параметрів\n\n`data`\n\nСеріалізований рядок.\n\nЯкщо змінна об'єкт, що вимагає десеріалізації, то після успішного відновлення об'єкта PHP автоматично спробує викликати магічні методи. [\\_\\_unserialize()](language.oop5.magic.md#object.unserialize) або [\\_\\_wakeup()](language.oop5.magic.md#object.wakeup) (якщо визначено).\n\n> **Зауваження** **Директива unserialize\\_callback\\_func**\n> \n> Дозволено встановлювати callback-функцію, яка буде викликана, якщо при десеріалізації потрібно проініціалізувати невизначений клас (щоб унеможливити отримання неповного об'єкта (object) «\\_\\_PHP\\_Incomplete\\_Class»). Щоб визначити функцію для директиви [unserialize\\_callback\\_func](var.configuration.md#ini.unserialize-callback-func), користуються файлом php.ini, функцією [ini\\_set()](function.ini-set.md) або файлом .htaccess. Функція буде викликатися щоразу, коли має бути проініціалізований невизначений клас. Для відключення цієї поведінки значення директиви залишають порожнім.\n\n`options`\n\nБудь-які опції у вигляді асоціативного масиву, які можна передавати в функцію **unserialize()**\n\n**Коректні опції**\n\n| Имя | Тип | Опис |\n| --- | --- | --- |\n| `allowed_classes` | [mixed](language.types.declarations.md#language.types.declarations.mixed) | Або масив імен класів, які мають бути прийняті, **`false`** для вказівки не приймати жодних класів, або **`true`**, щоб приймати все. Якщо ця опція задана та функція **unserialize()** виявить об'єкт неприйнятного класу, то він не буде прийнятий, а натомість інстанцується як об'єкт класу **\\_\\_PHP\\_Incomplete\\_Class**. . Якщо опція не задана, вважатиметься, що їй встановлено значення **`true`**: PHP спробує інстанцувати об'єкти будь-якого класу |\n| `max_depth` | int | Максимальна глибина структур, дозволена при десеріалізації та призначена для запобігання переповненню стека. За умовчанням обмеження глибини становить `4096` та вимикається встановленням опції `max_depth`значення |\n\n### Значення, що повертаються\n\nПовертає перетворене значення, яке набуває одного з типів bool, int, float, string, array або object.\n\nЯкщо переданий рядок не піддається десеріалізації, повертає **`false`** та видає помилку рівня **`E_WARNING`**\n\n### Помилки\n\nОб'єктам дозволено викидати винятки [Throwable](class.throwable.md) у своїх оброблювачах десеріалізації.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Тепер видає помилку рівня **`E_WARNING`**, якщо переданий рядок несеріалізується; раніше видавалася помилка рівня **`E_NOTICE`** |\n| 7.4.0 | Доданий елемент `max_depth`в параметр`options` для встановлення максимальної глибини структур, дозволених під час десеріалізації. |\n| 7.1.0 | Тепер елемент `allowed_classes`параметра`options` строго типізований, тобто якщо що-небудь передано, крім array і bool, **unserialize()** поверне **`false`** та викличе помилку **`E_WARNING`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** unserialize()\\*\\*\\*\\*\n\n```php\n<?php\n\n// Используем функцию unserialize() для загрузки сессионных данных в массив\n// $session_data из строки, извлекаемой из базы данных.\n// Приклад дополняет Приклад, описывающий вызов функции serialize().\n\n$conn = odbc_connect(\"webdb\", \"php\", \"chicken\");\n$stmt = odbc_prepare($conn, \"SELECT data FROM sessions WHERE id = ?\");\n$sqldata = array($_SERVER['PHP_AUTH_USER']);\nif (!odbc_execute($stmt, $sqldata) || !odbc_fetch_into($stmt, $tmp)) {\n    // Если процедура извлечения данных не удалась, то инициализируем пустой массив\n    $session_data = array();\n} else {\n    // Сейчас в элементе $tmp[0] должны быть сериализованные данные.\n    $session_data = unserialize($tmp[0]);\n    if (!is_array($session_data)) {\n        // Что-то пошло не так, инициализируем пустой массив\n        $session_data = array();\n    }\n}\n\n?>\n```\n\n**Приклад #2 Приклад використання директиви unserialize\\_callback\\_func**\n\n```php\n<?php\n\n$serialized_object='O:1:\"a\":1:{s:5:\"value\";s:3:\"100\";}';\n\nini_set('unserialize_callback_func', 'mycallback'); // определяем свою callback-функцию\n\nfunction mycallback($classname)\n{\n    // просто подключаете файл, содержащий определение класса\n    // переменная $classname указывает, для какого класса требуется определение\n}\n\n?>\n```\n\n### Примітки\n\n**Увага**\n\nЗначение\\*\\*`false`\\*\\* повертається як у разі помилки, так і при десеріалізації серіалізованого значення **`false`**. Цей особливий випадок можна відловити, порівнявши значення параметра `data` зі значенням, яке повертає виклик `serialize(false)`, або перехопивши видану помилку рівня **`E_NOTICE`**\n\n### Дивіться також\n\n-   [json\\_encode()](function.json-encode.md) \\- Повертає JSON-подання даних\n-   [json\\_decode()](function.json-decode.md) \\- Декодує рядок JSON\n-   [hash\\_hmac()](function.hash-hmac.md) \\- Генерація хеш-коду на основі ключа, використовуючи метод HMAC\n-   [serialize()](function.serialize.md) \\- Генерує придатне для зберігання уявлення змінної\n-   [Автоматичне завантаження класів](language.oop5.autoload.md)\n-   [unserialize\\_callback\\_func](var.configuration.md#ini.unserialize-callback-func)\n-   [unserialize\\_max\\_depth](var.configuration.md#ini.unserialize-max-depth)\n-   [\\_\\_wakeup()](language.oop5.magic.md#object.wakeup)\n-   [\\_\\_serialize()](language.oop5.magic.md#object.serialize)\n-   [\\_\\_unserialize()](language.oop5.magic.md#object.unserialize)\n","title":"unserialize","contentType":2,"navigation":[{"function.strval.md":"« strval"},{"function.unset.md":"unset »"},{"index.md":"PHP Manual"},{"ref.var.md":"Функції для роботи зі змінними"}]}},"__N_SSG":true}