{"pageProps":{"page":{"slug":"datetimezone.getlocation.md","content":"# DateTimeZone::getLocation\n\n# timezone\\_location\\_get\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nDateTimeZone::getLocation -- timezone\\_location\\_get — Повертає інформацію про місцезнаходження для часового поясу\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic DateTimeZone::getLocation(): array|false\n```\n\nПроцедурний стиль\n\n```methodsynopsis\ntimezone_location_get(DateTimeZone $object): array|false\n```\n\nПовертає інформацію про місцезнаходження часового поясу, включаючи код країни, широту/довготу та коментарі.\n\n### Список параметрів\n\n`object`\n\nТільки для процедурного стилю: об'єкт [DateTimeZone](class.datetimezone.md), що повертається [timezone\\_open()](function.timezone-open.md)\n\n### Значення, що повертаються\n\nМассив, содержащий информацию о местоположении часового пояса или\\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** DateTimeZone::getLocation()\\*\\*\\*\\*\n\n```php\n<?php\n$tz = new DateTimeZone(\"Europe/Prague\");\nprint_r($tz->getLocation());\nprint_r(timezone_location_get($tz));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [country_code] => CZ\n    [latitude] => 50.08333\n    [longitude] => 14.43333\n    [comments] =>\n)\nArray\n(\n    [country_code] => CZ\n    [latitude] => 50.08333\n    [longitude] => 14.43333\n    [comments] =>\n)\n```\n\n### Дивіться також\n\n-   Функция[DateTimeZone::listIdentifiers()](datetimezone.listidentifiers.md) \\- Повертає чисельно індексований масив з усіма ідентифікаторами часових поясів для отримання повного або часткового списку всіх ідентифікаторів часових поясів, що підтримуються.\n","title":"DateTimeZone::getLocation","contentType":2,"navigation":[{"datetimezone.construct.md":"« DateTimeZone::\\_\\_construct"},{"datetimezone.getname.md":"DateTimeZone::getName »"},{"index.md":"PHP Manual"},{"class.datetimezone.md":"DateTimeZone"}]}},"__N_SSG":true}