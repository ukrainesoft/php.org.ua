{"pageProps":{"page":{"slug":"ffi.examples-basic.md","content":"## Прості приклади використання FFI\n\nПеред зануренням у деталі FFI API, давайте розглянемо кілька прикладів спрощеного використання FFI API у стандартних задачах.\n\n> **Зауваження** :\n> \n> Для деяких прикладів знадобиться бібліотека libc.so.6. Вони не працюватимуть у системах, де її немає.\n\n**Приклад #1 Виклик функції загальної бібліотеки**\n\n```php\n<?php\n// создаём объект FFI, загружаем libc и экспортируем функцию printf()\n$ffi = FFI::cdef(\n    \"int printf(const char *format, ...);\", // это стандартная декларация C\n    \"libc.so.6\");\n// вызываем printf()\n$ffi->printf(\"Привет, %s!\\n\", \"мир\");\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПривет, мир!\n```\n\n> **Зауваження** :\n> \n> Зверніть увагу, що деякі функції C потребують певних угод про виклики, наприклад: `__fastcall` `__stdcall`или`,__vectorcall`\n\n**Приклад #2 Виклик функції та повернення структури через аргумент**\n\n```php\n<?php\n// создаём привязку gettimeofday()\n$ffi = FFI::cdef(\"\n    typedef unsigned int time_t;\n    typedef unsigned int suseconds_t;\n\n    struct timeval {\n        time_t      tv_sec;\n        suseconds_t tv_usec;\n    };\n\n    struct timezone {\n        int tz_minuteswest;\n        int tz_dsttime;\n    };\n\n    int gettimeofday(struct timeval *tv, struct timezone *tz);\n\", \"libc.so.6\");\n// создаём структуры данных C\n$tv = $ffi->new(\"struct timeval\");\n$tz = $ffi->new(\"struct timezone\");\n// вызываем gettimeofday()\nvar_dump($ffi->gettimeofday(FFI::addr($tv), FFI::addr($tz)));\n// получаем доступ к полю структуры данных C\nvar_dump($tv->tv_sec);\n// печатаем всю структуру данных\nvar_dump($tz);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nint(0)\nint(1555946835)\nobject(FFI\\CData:struct timezone)#3 (2) {\n  [\"tz_minuteswest\"]=>\n  int(0)\n  [\"tz_dsttime\"]=>\n  int(0)\n}\n```\n\n**Приклад #3 Доступ до існуючих змінних C**\n\n```php\n<?php\n// создаём объект FFI, загружаем libc и экспортируем переменную errno\n$ffi = FFI::cdef(\n    \"int errno;\", // это стандартная декларация C\n    \"libc.so.6\");\n// печатаем errno\nvar_dump($ffi->errno);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(0)\n```\n\n**Приклад #4 Створення та модифікація змінної C**\n\n```php\n<?php\n// создаём переменную C типа int\n$x = FFI::new(\"int\");\nvar_dump($x->cdata);\n\n// простое присваивание\n$x->cdata = 5;\nvar_dump($x->cdata);\n\n// не простое присвоение\n$x->cdata += 2;\nvar_dump($x->cdata);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(0)\nint(5)\nint(7)\n```\n\n**Приклад #5 Робота з масивами C**\n\n```php\n<?php\n// создаём структуру данных\n$a = FFI::new(\"long[1024]\");\n// работаем с ней как с обычным массивом PHP\nfor ($i = 0; $i < count($a); $i++) {\n    $a[$i] = $i;\n}\nvar_dump($a[25]);\n$sum = 0;\nforeach ($a as $n) {\n    $sum += $n;\n}\nvar_dump($sum);\nvar_dump(count($a));\nvar_dump(FFI::sizeof($a));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(25)\nint(523776)\nint(1024)\nint(8192)\n```\n\n**Приклад #6 Робота з переліками C**\n\n```php\n<?php\n$a = FFI::cdef('typedef enum _zend_ffi_symbol_kind {\n    ZEND_FFI_SYM_TYPE,\n    ZEND_FFI_SYM_CONST = 2,\n    ZEND_FFI_SYM_VAR,\n    ZEND_FFI_SYM_FUNC\n} zend_ffi_symbol_kind;\n');\nvar_dump($a->ZEND_FFI_SYM_TYPE);\nvar_dump($a->ZEND_FFI_SYM_CONST);\nvar_dump($a->ZEND_FFI_SYM_VAR);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(0)\nint(2)\nint(3)\n```\n","title":"Прості приклади використання FFI","contentType":2,"navigation":[{"ffi.examples.md":"« Приклади"},{"ffi.examples-callback.md":"Callback-функції PHP »"},{"index.md":"PHP Manual"},{"ffi.examples.md":"Приклади"}]}},"__N_SSG":true}