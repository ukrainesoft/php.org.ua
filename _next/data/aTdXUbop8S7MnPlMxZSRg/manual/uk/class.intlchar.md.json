{"pageProps":{"page":{"slug":"class.intlchar.md","content":"# IntlChar\n\n(PHP 7, PHP 8)\n\n## Вступ\n\n**IntlChar** надає доступ до деяких утилітарних методів, які можна використовувати для доступу до інформації про символи Unicode.\n\nІмена методів і констант, представлені тут, близькі до імен та методів бібліотеки ICU, що знаходиться нижче.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class IntlChar\n     {\n\n    /* Константы */\n    \n     public\n     const\n     string\n      UNICODE_VERSION;\n\n    public\n     const\n     int\n      CODEPOINT_MIN;\n\n    public\n     const\n     int\n      CODEPOINT_MAX;\n\n    public\n     const\n     float\n      NO_NUMERIC_VALUE;\n\n    public\n     const\n     int\n      PROPERTY_ALPHABETIC;\n\n    public\n     const\n     int\n      PROPERTY_BINARY_START;\n\n    public\n     const\n     int\n      PROPERTY_ASCII_HEX_DIGIT;\n\n    public\n     const\n     int\n      PROPERTY_BIDI_CONTROL;\n\n    public\n     const\n     int\n      PROPERTY_BIDI_MIRRORED;\n\n    public\n     const\n     int\n      PROPERTY_DASH;\n\n    public\n     const\n     int\n      PROPERTY_DEFAULT_IGNORABLE_CODE_POINT;\n\n    public\n     const\n     int\n      PROPERTY_DEPRECATED;\n\n    public\n     const\n     int\n      PROPERTY_DIACRITIC;\n\n    public\n     const\n     int\n      PROPERTY_EXTENDER;\n\n    public\n     const\n     int\n      PROPERTY_FULL_COMPOSITION_EXCLUSION;\n\n    public\n     const\n     int\n      PROPERTY_GRAPHEME_BASE;\n\n    public\n     const\n     int\n      PROPERTY_GRAPHEME_EXTEND;\n\n    public\n     const\n     int\n      PROPERTY_GRAPHEME_LINK;\n\n    public\n     const\n     int\n      PROPERTY_HEX_DIGIT;\n\n    public\n     const\n     int\n      PROPERTY_HYPHEN;\n\n    public\n     const\n     int\n      PROPERTY_ID_CONTINUE;\n\n    public\n     const\n     int\n      PROPERTY_ID_START;\n\n    public\n     const\n     int\n      PROPERTY_IDEOGRAPHIC;\n\n    public\n     const\n     int\n      PROPERTY_IDS_BINARY_OPERATOR;\n\n    public\n     const\n     int\n      PROPERTY_IDS_TRINARY_OPERATOR;\n\n    public\n     const\n     int\n      PROPERTY_JOIN_CONTROL;\n\n    public\n     const\n     int\n      PROPERTY_LOGICAL_ORDER_EXCEPTION;\n\n    public\n     const\n     int\n      PROPERTY_LOWERCASE;\n\n    public\n     const\n     int\n      PROPERTY_MATH;\n\n    public\n     const\n     int\n      PROPERTY_NONCHARACTER_CODE_POINT;\n\n    public\n     const\n     int\n      PROPERTY_QUOTATION_MARK;\n\n    public\n     const\n     int\n      PROPERTY_RADICAL;\n\n    public\n     const\n     int\n      PROPERTY_SOFT_DOTTED;\n\n    public\n     const\n     int\n      PROPERTY_TERMINAL_PUNCTUATION;\n\n    public\n     const\n     int\n      PROPERTY_UNIFIED_IDEOGRAPH;\n\n    public\n     const\n     int\n      PROPERTY_UPPERCASE;\n\n    public\n     const\n     int\n      PROPERTY_WHITE_SPACE;\n\n    public\n     const\n     int\n      PROPERTY_XID_CONTINUE;\n\n    public\n     const\n     int\n      PROPERTY_XID_START;\n\n    public\n     const\n     int\n      PROPERTY_CASE_SENSITIVE;\n\n    public\n     const\n     int\n      PROPERTY_S_TERM;\n\n    public\n     const\n     int\n      PROPERTY_VARIATION_SELECTOR;\n\n    public\n     const\n     int\n      PROPERTY_NFD_INERT;\n\n    public\n     const\n     int\n      PROPERTY_NFKD_INERT;\n\n    public\n     const\n     int\n      PROPERTY_NFC_INERT;\n\n    public\n     const\n     int\n      PROPERTY_NFKC_INERT;\n\n    public\n     const\n     int\n      PROPERTY_SEGMENT_STARTER;\n\n    public\n     const\n     int\n      PROPERTY_PATTERN_SYNTAX;\n\n    public\n     const\n     int\n      PROPERTY_PATTERN_WHITE_SPACE;\n\n    public\n     const\n     int\n      PROPERTY_POSIX_ALNUM;\n\n    public\n     const\n     int\n      PROPERTY_POSIX_BLANK;\n\n    public\n     const\n     int\n      PROPERTY_POSIX_GRAPH;\n\n    public\n     const\n     int\n      PROPERTY_POSIX_PRINT;\n\n    public\n     const\n     int\n      PROPERTY_POSIX_XDIGIT;\n\n    public\n     const\n     int\n      PROPERTY_CASED;\n\n    public\n     const\n     int\n      PROPERTY_CASE_IGNORABLE;\n\n    public\n     const\n     int\n      PROPERTY_CHANGES_WHEN_LOWERCASED;\n\n    public\n     const\n     int\n      PROPERTY_CHANGES_WHEN_UPPERCASED;\n\n    public\n     const\n     int\n      PROPERTY_CHANGES_WHEN_TITLECASED;\n\n    public\n     const\n     int\n      PROPERTY_CHANGES_WHEN_CASEFOLDED;\n\n    public\n     const\n     int\n      PROPERTY_CHANGES_WHEN_CASEMAPPED;\n\n    public\n     const\n     int\n      PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED;\n\n    public\n     const\n     int\n      PROPERTY_BINARY_LIMIT;\n\n    public\n     const\n     int\n      PROPERTY_BIDI_CLASS;\n\n    public\n     const\n     int\n      PROPERTY_INT_START;\n\n    public\n     const\n     int\n      PROPERTY_BLOCK;\n\n    public\n     const\n     int\n      PROPERTY_CANONICAL_COMBINING_CLASS;\n\n    public\n     const\n     int\n      PROPERTY_DECOMPOSITION_TYPE;\n\n    public\n     const\n     int\n      PROPERTY_EAST_ASIAN_WIDTH;\n\n    public\n     const\n     int\n      PROPERTY_GENERAL_CATEGORY;\n\n    public\n     const\n     int\n      PROPERTY_JOINING_GROUP;\n\n    public\n     const\n     int\n      PROPERTY_JOINING_TYPE;\n\n    public\n     const\n     int\n      PROPERTY_LINE_BREAK;\n\n    public\n     const\n     int\n      PROPERTY_NUMERIC_TYPE;\n\n    public\n     const\n     int\n      PROPERTY_SCRIPT;\n\n    public\n     const\n     int\n      PROPERTY_HANGUL_SYLLABLE_TYPE;\n\n    public\n     const\n     int\n      PROPERTY_NFD_QUICK_CHECK;\n\n    public\n     const\n     int\n      PROPERTY_NFKD_QUICK_CHECK;\n\n    public\n     const\n     int\n      PROPERTY_NFC_QUICK_CHECK;\n\n    public\n     const\n     int\n      PROPERTY_NFKC_QUICK_CHECK;\n\n    public\n     const\n     int\n      PROPERTY_LEAD_CANONICAL_COMBINING_CLASS;\n\n    public\n     const\n     int\n      PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS;\n\n    public\n     const\n     int\n      PROPERTY_GRAPHEME_CLUSTER_BREAK;\n\n    public\n     const\n     int\n      PROPERTY_SENTENCE_BREAK;\n\n    public\n     const\n     int\n      PROPERTY_WORD_BREAK;\n\n    public\n     const\n     int\n      PROPERTY_BIDI_PAIRED_BRACKET_TYPE;\n\n    public\n     const\n     int\n      PROPERTY_INT_LIMIT;\n\n    public\n     const\n     int\n      PROPERTY_GENERAL_CATEGORY_MASK;\n\n    public\n     const\n     int\n      PROPERTY_MASK_START;\n\n    public\n     const\n     int\n      PROPERTY_MASK_LIMIT;\n\n    public\n     const\n     int\n      PROPERTY_NUMERIC_VALUE;\n\n    public\n     const\n     int\n      PROPERTY_DOUBLE_START;\n\n    public\n     const\n     int\n      PROPERTY_DOUBLE_LIMIT;\n\n    public\n     const\n     int\n      PROPERTY_AGE;\n\n    public\n     const\n     int\n      PROPERTY_STRING_START;\n\n    public\n     const\n     int\n      PROPERTY_BIDI_MIRRORING_GLYPH;\n\n    public\n     const\n     int\n      PROPERTY_CASE_FOLDING;\n\n    public\n     const\n     int\n      PROPERTY_ISO_COMMENT;\n\n    public\n     const\n     int\n      PROPERTY_LOWERCASE_MAPPING;\n\n    public\n     const\n     int\n      PROPERTY_NAME;\n\n    public\n     const\n     int\n      PROPERTY_SIMPLE_CASE_FOLDING;\n\n    public\n     const\n     int\n      PROPERTY_SIMPLE_LOWERCASE_MAPPING;\n\n    public\n     const\n     int\n      PROPERTY_SIMPLE_TITLECASE_MAPPING;\n\n    public\n     const\n     int\n      PROPERTY_SIMPLE_UPPERCASE_MAPPING;\n\n    public\n     const\n     int\n      PROPERTY_TITLECASE_MAPPING;\n\n    public\n     const\n     int\n      PROPERTY_UNICODE_1_NAME;\n\n    public\n     const\n     int\n      PROPERTY_UPPERCASE_MAPPING;\n\n    public\n     const\n     int\n      PROPERTY_BIDI_PAIRED_BRACKET;\n\n    public\n     const\n     int\n      PROPERTY_STRING_LIMIT;\n\n    public\n     const\n     int\n      PROPERTY_SCRIPT_EXTENSIONS;\n\n    public\n     const\n     int\n      PROPERTY_OTHER_PROPERTY_START;\n\n    public\n     const\n     int\n      PROPERTY_OTHER_PROPERTY_LIMIT;\n\n    public\n     const\n     int\n      PROPERTY_INVALID_CODE;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_UNASSIGNED;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_GENERAL_OTHER_TYPES;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_UPPERCASE_LETTER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_LOWERCASE_LETTER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_TITLECASE_LETTER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_MODIFIER_LETTER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_OTHER_LETTER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_NON_SPACING_MARK;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_ENCLOSING_MARK;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_COMBINING_SPACING_MARK;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_LETTER_NUMBER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_OTHER_NUMBER;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_SPACE_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_LINE_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_PARAGRAPH_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_CONTROL_CHAR;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_FORMAT_CHAR;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_PRIVATE_USE_CHAR;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_SURROGATE;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_DASH_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_START_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_END_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_CONNECTOR_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_OTHER_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_MATH_SYMBOL;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_CURRENCY_SYMBOL;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_MODIFIER_SYMBOL;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_OTHER_SYMBOL;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_INITIAL_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_FINAL_PUNCTUATION;\n\n    public\n     const\n     int\n      CHAR_CATEGORY_CHAR_CATEGORY_COUNT;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_LEFT_TO_RIGHT;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_RIGHT_TO_LEFT;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_EUROPEAN_NUMBER;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_ARABIC_NUMBER;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_BLOCK_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_SEGMENT_SEPARATOR;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_WHITE_SPACE_NEUTRAL;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_OTHER_NEUTRAL;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_DIR_NON_SPACING_MARK;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_BOUNDARY_NEUTRAL;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_FIRST_STRONG_ISOLATE;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE;\n\n    public\n     const\n     int\n      CHAR_DIRECTION_CHAR_DIRECTION_COUNT;\n\n    public\n     const\n     int\n      BLOCK_CODE_NO_BLOCK;\n\n    public\n     const\n     int\n      BLOCK_CODE_BASIC_LATIN;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_1_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_EXTENDED_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_EXTENDED_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_IPA_EXTENSIONS;\n\n    public\n     const\n     int\n      BLOCK_CODE_SPACING_MODIFIER_LETTERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_COMBINING_DIACRITICAL_MARKS;\n\n    public\n     const\n     int\n      BLOCK_CODE_GREEK;\n\n    public\n     const\n     int\n      BLOCK_CODE_CYRILLIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARMENIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_HEBREW;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARABIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_SYRIAC;\n\n    public\n     const\n     int\n      BLOCK_CODE_THAANA;\n\n    public\n     const\n     int\n      BLOCK_CODE_DEVANAGARI;\n\n    public\n     const\n     int\n      BLOCK_CODE_BENGALI;\n\n    public\n     const\n     int\n      BLOCK_CODE_GURMUKHI;\n\n    public\n     const\n     int\n      BLOCK_CODE_GUJARATI;\n\n    public\n     const\n     int\n      BLOCK_CODE_ORIYA;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAMIL;\n\n    public\n     const\n     int\n      BLOCK_CODE_TELUGU;\n\n    public\n     const\n     int\n      BLOCK_CODE_KANNADA;\n\n    public\n     const\n     int\n      BLOCK_CODE_MALAYALAM;\n\n    public\n     const\n     int\n      BLOCK_CODE_SINHALA;\n\n    public\n     const\n     int\n      BLOCK_CODE_THAI;\n\n    public\n     const\n     int\n      BLOCK_CODE_LAO;\n\n    public\n     const\n     int\n      BLOCK_CODE_TIBETAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_MYANMAR;\n\n    public\n     const\n     int\n      BLOCK_CODE_GEORGIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_HANGUL_JAMO;\n\n    public\n     const\n     int\n      BLOCK_CODE_ETHIOPIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_CHEROKEE;\n\n    public\n     const\n     int\n      BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS;\n\n    public\n     const\n     int\n      BLOCK_CODE_OGHAM;\n\n    public\n     const\n     int\n      BLOCK_CODE_RUNIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_KHMER;\n\n    public\n     const\n     int\n      BLOCK_CODE_MONGOLIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL;\n\n    public\n     const\n     int\n      BLOCK_CODE_GREEK_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_GENERAL_PUNCTUATION;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CURRENCY_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_LETTERLIKE_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_NUMBER_FORMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARROWS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MATHEMATICAL_OPERATORS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MISCELLANEOUS_TECHNICAL;\n\n    public\n     const\n     int\n      BLOCK_CODE_CONTROL_PICTURES;\n\n    public\n     const\n     int\n      BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION;\n\n    public\n     const\n     int\n      BLOCK_CODE_ENCLOSED_ALPHANUMERICS;\n\n    public\n     const\n     int\n      BLOCK_CODE_BOX_DRAWING;\n\n    public\n     const\n     int\n      BLOCK_CODE_BLOCK_ELEMENTS;\n\n    public\n     const\n     int\n      BLOCK_CODE_GEOMETRIC_SHAPES;\n\n    public\n     const\n     int\n      BLOCK_CODE_MISCELLANEOUS_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_DINGBATS;\n\n    public\n     const\n     int\n      BLOCK_CODE_BRAILLE_PATTERNS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_RADICALS_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_KANGXI_RADICALS;\n\n    public\n     const\n     int\n      BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION;\n\n    public\n     const\n     int\n      BLOCK_CODE_HIRAGANA;\n\n    public\n     const\n     int\n      BLOCK_CODE_KATAKANA;\n\n    public\n     const\n     int\n      BLOCK_CODE_BOPOMOFO;\n\n    public\n     const\n     int\n      BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO;\n\n    public\n     const\n     int\n      BLOCK_CODE_KANBUN;\n\n    public\n     const\n     int\n      BLOCK_CODE_BOPOMOFO_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_COMPATIBILITY;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS;\n\n    public\n     const\n     int\n      BLOCK_CODE_YI_SYLLABLES;\n\n    public\n     const\n     int\n      BLOCK_CODE_YI_RADICALS;\n\n    public\n     const\n     int\n      BLOCK_CODE_HANGUL_SYLLABLES;\n\n    public\n     const\n     int\n      BLOCK_CODE_HIGH_SURROGATES;\n\n    public\n     const\n     int\n      BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES;\n\n    public\n     const\n     int\n      BLOCK_CODE_LOW_SURROGATES;\n\n    public\n     const\n     int\n      BLOCK_CODE_PRIVATE_USE_AREA;\n\n    public\n     const\n     int\n      BLOCK_CODE_PRIVATE_USE;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_COMBINING_HALF_MARKS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_COMPATIBILITY_FORMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_SMALL_FORM_VARIANTS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_SPECIALS;\n\n    public\n     const\n     int\n      BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_OLD_ITALIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_GOTHIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_DESERET;\n\n    public\n     const\n     int\n      BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MUSICAL_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAGS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CYRILLIC_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_CYRILLIC_SUPPLEMENTARY;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAGALOG;\n\n    public\n     const\n     int\n      BLOCK_CODE_HANUNOO;\n\n    public\n     const\n     int\n      BLOCK_CODE_BUHID;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAGBANWA;\n\n    public\n     const\n     int\n      BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTAL_ARROWS_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTAL_ARROWS_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS;\n\n    public\n     const\n     int\n      BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS;\n\n    public\n     const\n     int\n      BLOCK_CODE_VARIATION_SELECTORS;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_LIMBU;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAI_LE;\n\n    public\n     const\n     int\n      BLOCK_CODE_KHMER_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_PHONETIC_EXTENSIONS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS;\n\n    public\n     const\n     int\n      BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_LINEAR_B_SYLLABARY;\n\n    public\n     const\n     int\n      BLOCK_CODE_LINEAR_B_IDEOGRAMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_AEGEAN_NUMBERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_UGARITIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_SHAVIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_OSMANYA;\n\n    public\n     const\n     int\n      BLOCK_CODE_CYPRIOT_SYLLABARY;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAI_XUAN_JING_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION;\n\n    public\n     const\n     int\n      BLOCK_CODE_ANCIENT_GREEK_NUMBERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARABIC_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_BUGINESE;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_STROKES;\n\n    public\n     const\n     int\n      BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_COPTIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_ETHIOPIC_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_ETHIOPIC_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_GEORGIAN_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_GLAGOLITIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_KHAROSHTHI;\n\n    public\n     const\n     int\n      BLOCK_CODE_MODIFIER_TONE_LETTERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_NEW_TAI_LUE;\n\n    public\n     const\n     int\n      BLOCK_CODE_OLD_PERSIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION;\n\n    public\n     const\n     int\n      BLOCK_CODE_SYLOTI_NAGRI;\n\n    public\n     const\n     int\n      BLOCK_CODE_TIFINAGH;\n\n    public\n     const\n     int\n      BLOCK_CODE_VERTICAL_FORMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_NKO;\n\n    public\n     const\n     int\n      BLOCK_CODE_BALINESE;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_EXTENDED_C;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_EXTENDED_D;\n\n    public\n     const\n     int\n      BLOCK_CODE_PHAGS_PA;\n\n    public\n     const\n     int\n      BLOCK_CODE_PHOENICIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_CUNEIFORM;\n\n    public\n     const\n     int\n      BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION;\n\n    public\n     const\n     int\n      BLOCK_CODE_COUNTING_ROD_NUMERALS;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUNDANESE;\n\n    public\n     const\n     int\n      BLOCK_CODE_LEPCHA;\n\n    public\n     const\n     int\n      BLOCK_CODE_OL_CHIKI;\n\n    public\n     const\n     int\n      BLOCK_CODE_CYRILLIC_EXTENDED_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_VAI;\n\n    public\n     const\n     int\n      BLOCK_CODE_CYRILLIC_EXTENDED_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_SAURASHTRA;\n\n    public\n     const\n     int\n      BLOCK_CODE_KAYAH_LI;\n\n    public\n     const\n     int\n      BLOCK_CODE_REJANG;\n\n    public\n     const\n     int\n      BLOCK_CODE_CHAM;\n\n    public\n     const\n     int\n      BLOCK_CODE_ANCIENT_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_PHAISTOS_DISC;\n\n    public\n     const\n     int\n      BLOCK_CODE_LYCIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_CARIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_LYDIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_MAHJONG_TILES;\n\n    public\n     const\n     int\n      BLOCK_CODE_DOMINO_TILES;\n\n    public\n     const\n     int\n      BLOCK_CODE_SAMARITAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAI_THAM;\n\n    public\n     const\n     int\n      BLOCK_CODE_VEDIC_EXTENSIONS;\n\n    public\n     const\n     int\n      BLOCK_CODE_LISU;\n\n    public\n     const\n     int\n      BLOCK_CODE_BAMUM;\n\n    public\n     const\n     int\n      BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS;\n\n    public\n     const\n     int\n      BLOCK_CODE_DEVANAGARI_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_HANGUL_JAMO_EXTENDED_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_JAVANESE;\n\n    public\n     const\n     int\n      BLOCK_CODE_MYANMAR_EXTENDED_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAI_VIET;\n\n    public\n     const\n     int\n      BLOCK_CODE_MEETEI_MAYEK;\n\n    public\n     const\n     int\n      BLOCK_CODE_HANGUL_JAMO_EXTENDED_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_IMPERIAL_ARAMAIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_OLD_SOUTH_ARABIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_AVESTAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_INSCRIPTIONAL_PARTHIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_INSCRIPTIONAL_PAHLAVI;\n\n    public\n     const\n     int\n      BLOCK_CODE_OLD_TURKIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_RUMI_NUMERAL_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_KAITHI;\n\n    public\n     const\n     int\n      BLOCK_CODE_EGYPTIAN_HIEROGLYPHS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C;\n\n    public\n     const\n     int\n      BLOCK_CODE_MANDAIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_BATAK;\n\n    public\n     const\n     int\n      BLOCK_CODE_ETHIOPIC_EXTENDED_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_BRAHMI;\n\n    public\n     const\n     int\n      BLOCK_CODE_BAMUM_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_KANA_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_PLAYING_CARDS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS;\n\n    public\n     const\n     int\n      BLOCK_CODE_EMOTICONS;\n\n    public\n     const\n     int\n      BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_ALCHEMICAL_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARABIC_EXTENDED_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_CHAKMA;\n\n    public\n     const\n     int\n      BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MEROITIC_CURSIVE;\n\n    public\n     const\n     int\n      BLOCK_CODE_MEROITIC_HIEROGLYPHS;\n\n    public\n     const\n     int\n      BLOCK_CODE_MIAO;\n\n    public\n     const\n     int\n      BLOCK_CODE_SHARADA;\n\n    public\n     const\n     int\n      BLOCK_CODE_SORA_SOMPENG;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUNDANESE_SUPPLEMENT;\n\n    public\n     const\n     int\n      BLOCK_CODE_TAKRI;\n\n    public\n     const\n     int\n      BLOCK_CODE_BASSA_VAH;\n\n    public\n     const\n     int\n      BLOCK_CODE_CAUCASIAN_ALBANIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_COPTIC_EPACT_NUMBERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_DUPLOYAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_ELBASAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_GEOMETRIC_SHAPES_EXTENDED;\n\n    public\n     const\n     int\n      BLOCK_CODE_GRANTHA;\n\n    public\n     const\n     int\n      BLOCK_CODE_KHOJKI;\n\n    public\n     const\n     int\n      BLOCK_CODE_KHUDAWADI;\n\n    public\n     const\n     int\n      BLOCK_CODE_LATIN_EXTENDED_E;\n\n    public\n     const\n     int\n      BLOCK_CODE_LINEAR_A;\n\n    public\n     const\n     int\n      BLOCK_CODE_MAHAJANI;\n\n    public\n     const\n     int\n      BLOCK_CODE_MANICHAEAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_MENDE_KIKAKUI;\n\n    public\n     const\n     int\n      BLOCK_CODE_MODI;\n\n    public\n     const\n     int\n      BLOCK_CODE_MRO;\n\n    public\n     const\n     int\n      BLOCK_CODE_MYANMAR_EXTENDED_B;\n\n    public\n     const\n     int\n      BLOCK_CODE_NABATAEAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_OLD_NORTH_ARABIAN;\n\n    public\n     const\n     int\n      BLOCK_CODE_OLD_PERMIC;\n\n    public\n     const\n     int\n      BLOCK_CODE_ORNAMENTAL_DINGBATS;\n\n    public\n     const\n     int\n      BLOCK_CODE_PAHAWH_HMONG;\n\n    public\n     const\n     int\n      BLOCK_CODE_PALMYRENE;\n\n    public\n     const\n     int\n      BLOCK_CODE_PAU_CIN_HAU;\n\n    public\n     const\n     int\n      BLOCK_CODE_PSALTER_PAHLAVI;\n\n    public\n     const\n     int\n      BLOCK_CODE_SHORTHAND_FORMAT_CONTROLS;\n\n    public\n     const\n     int\n      BLOCK_CODE_SIDDHAM;\n\n    public\n     const\n     int\n      BLOCK_CODE_SINHALA_ARCHAIC_NUMBERS;\n\n    public\n     const\n     int\n      BLOCK_CODE_SUPPLEMENTAL_ARROWS_C;\n\n    public\n     const\n     int\n      BLOCK_CODE_TIRHUTA;\n\n    public\n     const\n     int\n      BLOCK_CODE_WARANG_CITI;\n\n    public\n     const\n     int\n      BLOCK_CODE_COUNT;\n\n    public\n     const\n     int\n      BLOCK_CODE_INVALID_CODE;\n\n    public\n     const\n     int\n      BPT_NONE;\n\n    public\n     const\n     int\n      BPT_OPEN;\n\n    public\n     const\n     int\n      BPT_CLOSE;\n\n    public\n     const\n     int\n      BPT_COUNT;\n\n    public\n     const\n     int\n      EA_NEUTRAL;\n\n    public\n     const\n     int\n      EA_AMBIGUOUS;\n\n    public\n     const\n     int\n      EA_HALFWIDTH;\n\n    public\n     const\n     int\n      EA_FULLWIDTH;\n\n    public\n     const\n     int\n      EA_NARROW;\n\n    public\n     const\n     int\n      EA_WIDE;\n\n    public\n     const\n     int\n      EA_COUNT;\n\n    public\n     const\n     int\n      UNICODE_CHAR_NAME;\n\n    public\n     const\n     int\n      UNICODE_10_CHAR_NAME;\n\n    public\n     const\n     int\n      EXTENDED_CHAR_NAME;\n\n    public\n     const\n     int\n      CHAR_NAME_ALIAS;\n\n    public\n     const\n     int\n      CHAR_NAME_CHOICE_COUNT;\n\n    public\n     const\n     int\n      SHORT_PROPERTY_NAME;\n\n    public\n     const\n     int\n      LONG_PROPERTY_NAME;\n\n    public\n     const\n     int\n      PROPERTY_NAME_CHOICE_COUNT;\n\n    public\n     const\n     int\n      DT_NONE;\n\n    public\n     const\n     int\n      DT_CANONICAL;\n\n    public\n     const\n     int\n      DT_COMPAT;\n\n    public\n     const\n     int\n      DT_CIRCLE;\n\n    public\n     const\n     int\n      DT_FINAL;\n\n    public\n     const\n     int\n      DT_FONT;\n\n    public\n     const\n     int\n      DT_FRACTION;\n\n    public\n     const\n     int\n      DT_INITIAL;\n\n    public\n     const\n     int\n      DT_ISOLATED;\n\n    public\n     const\n     int\n      DT_MEDIAL;\n\n    public\n     const\n     int\n      DT_NARROW;\n\n    public\n     const\n     int\n      DT_NOBREAK;\n\n    public\n     const\n     int\n      DT_SMALL;\n\n    public\n     const\n     int\n      DT_SQUARE;\n\n    public\n     const\n     int\n      DT_SUB;\n\n    public\n     const\n     int\n      DT_SUPER;\n\n    public\n     const\n     int\n      DT_VERTICAL;\n\n    public\n     const\n     int\n      DT_WIDE;\n\n    public\n     const\n     int\n      DT_COUNT;\n\n    public\n     const\n     int\n      JT_NON_JOINING;\n\n    public\n     const\n     int\n      JT_JOIN_CAUSING;\n\n    public\n     const\n     int\n      JT_DUAL_JOINING;\n\n    public\n     const\n     int\n      JT_LEFT_JOINING;\n\n    public\n     const\n     int\n      JT_RIGHT_JOINING;\n\n    public\n     const\n     int\n      JT_TRANSPARENT;\n\n    public\n     const\n     int\n      JT_COUNT;\n\n    public\n     const\n     int\n      JG_NO_JOINING_GROUP;\n\n    public\n     const\n     int\n      JG_AIN;\n\n    public\n     const\n     int\n      JG_ALAPH;\n\n    public\n     const\n     int\n      JG_ALEF;\n\n    public\n     const\n     int\n      JG_BEH;\n\n    public\n     const\n     int\n      JG_BETH;\n\n    public\n     const\n     int\n      JG_DAL;\n\n    public\n     const\n     int\n      JG_DALATH_RISH;\n\n    public\n     const\n     int\n      JG_E;\n\n    public\n     const\n     int\n      JG_FEH;\n\n    public\n     const\n     int\n      JG_FINAL_SEMKATH;\n\n    public\n     const\n     int\n      JG_GAF;\n\n    public\n     const\n     int\n      JG_GAMAL;\n\n    public\n     const\n     int\n      JG_HAH;\n\n    public\n     const\n     int\n      JG_TEH_MARBUTA_GOAL;\n\n    public\n     const\n     int\n      JG_HAMZA_ON_HEH_GOAL;\n\n    public\n     const\n     int\n      JG_HE;\n\n    public\n     const\n     int\n      JG_HEH;\n\n    public\n     const\n     int\n      JG_HEH_GOAL;\n\n    public\n     const\n     int\n      JG_HETH;\n\n    public\n     const\n     int\n      JG_KAF;\n\n    public\n     const\n     int\n      JG_KAPH;\n\n    public\n     const\n     int\n      JG_KNOTTED_HEH;\n\n    public\n     const\n     int\n      JG_LAM;\n\n    public\n     const\n     int\n      JG_LAMADH;\n\n    public\n     const\n     int\n      JG_MEEM;\n\n    public\n     const\n     int\n      JG_MIM;\n\n    public\n     const\n     int\n      JG_NOON;\n\n    public\n     const\n     int\n      JG_NUN;\n\n    public\n     const\n     int\n      JG_PE;\n\n    public\n     const\n     int\n      JG_QAF;\n\n    public\n     const\n     int\n      JG_QAPH;\n\n    public\n     const\n     int\n      JG_REH;\n\n    public\n     const\n     int\n      JG_REVERSED_PE;\n\n    public\n     const\n     int\n      JG_SAD;\n\n    public\n     const\n     int\n      JG_SADHE;\n\n    public\n     const\n     int\n      JG_SEEN;\n\n    public\n     const\n     int\n      JG_SEMKATH;\n\n    public\n     const\n     int\n      JG_SHIN;\n\n    public\n     const\n     int\n      JG_SWASH_KAF;\n\n    public\n     const\n     int\n      JG_SYRIAC_WAW;\n\n    public\n     const\n     int\n      JG_TAH;\n\n    public\n     const\n     int\n      JG_TAW;\n\n    public\n     const\n     int\n      JG_TEH_MARBUTA;\n\n    public\n     const\n     int\n      JG_TETH;\n\n    public\n     const\n     int\n      JG_WAW;\n\n    public\n     const\n     int\n      JG_YEH;\n\n    public\n     const\n     int\n      JG_YEH_BARREE;\n\n    public\n     const\n     int\n      JG_YEH_WITH_TAIL;\n\n    public\n     const\n     int\n      JG_YUDH;\n\n    public\n     const\n     int\n      JG_YUDH_HE;\n\n    public\n     const\n     int\n      JG_ZAIN;\n\n    public\n     const\n     int\n      JG_FE;\n\n    public\n     const\n     int\n      JG_KHAPH;\n\n    public\n     const\n     int\n      JG_ZHAIN;\n\n    public\n     const\n     int\n      JG_BURUSHASKI_YEH_BARREE;\n\n    public\n     const\n     int\n      JG_FARSI_YEH;\n\n    public\n     const\n     int\n      JG_NYA;\n\n    public\n     const\n     int\n      JG_ROHINGYA_YEH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_ALEPH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_AYIN;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_BETH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_DALETH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_DHAMEDH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_FIVE;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_GIMEL;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_HETH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_HUNDRED;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_KAPH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_LAMEDH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_MEM;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_NUN;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_ONE;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_PE;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_QOPH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_RESH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_SADHE;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_SAMEKH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_TAW;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_TEN;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_TETH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_THAMEDH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_TWENTY;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_WAW;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_YODH;\n\n    public\n     const\n     int\n      JG_MANICHAEAN_ZAYIN;\n\n    public\n     const\n     int\n      JG_STRAIGHT_WAW;\n\n    public\n     const\n     int\n      JG_COUNT;\n\n    public\n     const\n     int\n      GCB_OTHER;\n\n    public\n     const\n     int\n      GCB_CONTROL;\n\n    public\n     const\n     int\n      GCB_CR;\n\n    public\n     const\n     int\n      GCB_EXTEND;\n\n    public\n     const\n     int\n      GCB_L;\n\n    public\n     const\n     int\n      GCB_LF;\n\n    public\n     const\n     int\n      GCB_LV;\n\n    public\n     const\n     int\n      GCB_LVT;\n\n    public\n     const\n     int\n      GCB_T;\n\n    public\n     const\n     int\n      GCB_V;\n\n    public\n     const\n     int\n      GCB_SPACING_MARK;\n\n    public\n     const\n     int\n      GCB_PREPEND;\n\n    public\n     const\n     int\n      GCB_REGIONAL_INDICATOR;\n\n    public\n     const\n     int\n      GCB_COUNT;\n\n    public\n     const\n     int\n      WB_OTHER;\n\n    public\n     const\n     int\n      WB_ALETTER;\n\n    public\n     const\n     int\n      WB_FORMAT;\n\n    public\n     const\n     int\n      WB_KATAKANA;\n\n    public\n     const\n     int\n      WB_MIDLETTER;\n\n    public\n     const\n     int\n      WB_MIDNUM;\n\n    public\n     const\n     int\n      WB_NUMERIC;\n\n    public\n     const\n     int\n      WB_EXTENDNUMLET;\n\n    public\n     const\n     int\n      WB_CR;\n\n    public\n     const\n     int\n      WB_EXTEND;\n\n    public\n     const\n     int\n      WB_LF;\n\n    public\n     const\n     int\n      WB_MIDNUMLET;\n\n    public\n     const\n     int\n      WB_NEWLINE;\n\n    public\n     const\n     int\n      WB_REGIONAL_INDICATOR;\n\n    public\n     const\n     int\n      WB_HEBREW_LETTER;\n\n    public\n     const\n     int\n      WB_SINGLE_QUOTE;\n\n    public\n     const\n     int\n      WB_DOUBLE_QUOTE;\n\n    public\n     const\n     int\n      WB_COUNT;\n\n    public\n     const\n     int\n      SB_OTHER;\n\n    public\n     const\n     int\n      SB_ATERM;\n\n    public\n     const\n     int\n      SB_CLOSE;\n\n    public\n     const\n     int\n      SB_FORMAT;\n\n    public\n     const\n     int\n      SB_LOWER;\n\n    public\n     const\n     int\n      SB_NUMERIC;\n\n    public\n     const\n     int\n      SB_OLETTER;\n\n    public\n     const\n     int\n      SB_SEP;\n\n    public\n     const\n     int\n      SB_SP;\n\n    public\n     const\n     int\n      SB_STERM;\n\n    public\n     const\n     int\n      SB_UPPER;\n\n    public\n     const\n     int\n      SB_CR;\n\n    public\n     const\n     int\n      SB_EXTEND;\n\n    public\n     const\n     int\n      SB_LF;\n\n    public\n     const\n     int\n      SB_SCONTINUE;\n\n    public\n     const\n     int\n      SB_COUNT;\n\n    public\n     const\n     int\n      LB_UNKNOWN;\n\n    public\n     const\n     int\n      LB_AMBIGUOUS;\n\n    public\n     const\n     int\n      LB_ALPHABETIC;\n\n    public\n     const\n     int\n      LB_BREAK_BOTH;\n\n    public\n     const\n     int\n      LB_BREAK_AFTER;\n\n    public\n     const\n     int\n      LB_BREAK_BEFORE;\n\n    public\n     const\n     int\n      LB_MANDATORY_BREAK;\n\n    public\n     const\n     int\n      LB_CONTINGENT_BREAK;\n\n    public\n     const\n     int\n      LB_CLOSE_PUNCTUATION;\n\n    public\n     const\n     int\n      LB_COMBINING_MARK;\n\n    public\n     const\n     int\n      LB_CARRIAGE_RETURN;\n\n    public\n     const\n     int\n      LB_EXCLAMATION;\n\n    public\n     const\n     int\n      LB_GLUE;\n\n    public\n     const\n     int\n      LB_HYPHEN;\n\n    public\n     const\n     int\n      LB_IDEOGRAPHIC;\n\n    public\n     const\n     int\n      LB_INSEPARABLE;\n\n    public\n     const\n     int\n      LB_INSEPERABLE;\n\n    public\n     const\n     int\n      LB_INFIX_NUMERIC;\n\n    public\n     const\n     int\n      LB_LINE_FEED;\n\n    public\n     const\n     int\n      LB_NONSTARTER;\n\n    public\n     const\n     int\n      LB_NUMERIC;\n\n    public\n     const\n     int\n      LB_OPEN_PUNCTUATION;\n\n    public\n     const\n     int\n      LB_POSTFIX_NUMERIC;\n\n    public\n     const\n     int\n      LB_PREFIX_NUMERIC;\n\n    public\n     const\n     int\n      LB_QUOTATION;\n\n    public\n     const\n     int\n      LB_COMPLEX_CONTEXT;\n\n    public\n     const\n     int\n      LB_SURROGATE;\n\n    public\n     const\n     int\n      LB_SPACE;\n\n    public\n     const\n     int\n      LB_BREAK_SYMBOLS;\n\n    public\n     const\n     int\n      LB_ZWSPACE;\n\n    public\n     const\n     int\n      LB_NEXT_LINE;\n\n    public\n     const\n     int\n      LB_WORD_JOINER;\n\n    public\n     const\n     int\n      LB_H2;\n\n    public\n     const\n     int\n      LB_H3;\n\n    public\n     const\n     int\n      LB_JL;\n\n    public\n     const\n     int\n      LB_JT;\n\n    public\n     const\n     int\n      LB_JV;\n\n    public\n     const\n     int\n      LB_CLOSE_PARENTHESIS;\n\n    public\n     const\n     int\n      LB_CONDITIONAL_JAPANESE_STARTER;\n\n    public\n     const\n     int\n      LB_HEBREW_LETTER;\n\n    public\n     const\n     int\n      LB_REGIONAL_INDICATOR;\n\n    public\n     const\n     int\n      LB_COUNT;\n\n    public\n     const\n     int\n      NT_NONE;\n\n    public\n     const\n     int\n      NT_DECIMAL;\n\n    public\n     const\n     int\n      NT_DIGIT;\n\n    public\n     const\n     int\n      NT_NUMERIC;\n\n    public\n     const\n     int\n      NT_COUNT;\n\n    public\n     const\n     int\n      HST_NOT_APPLICABLE;\n\n    public\n     const\n     int\n      HST_LEADING_JAMO;\n\n    public\n     const\n     int\n      HST_VOWEL_JAMO;\n\n    public\n     const\n     int\n      HST_TRAILING_JAMO;\n\n    public\n     const\n     int\n      HST_LV_SYLLABLE;\n\n    public\n     const\n     int\n      HST_LVT_SYLLABLE;\n\n    public\n     const\n     int\n      HST_COUNT;\n\n    public\n     const\n     int\n      FOLD_CASE_DEFAULT;\n\n    public\n     const\n     int\n      FOLD_CASE_EXCLUDE_SPECIAL_I;\n\n\n    /* Методы */\n    \n   public static charAge(int|string $codepoint): ?array\npublic static charDigitValue(int|string $codepoint): ?int\npublic static charDirection(int|string $codepoint): ?int\npublic static charFromName(string $name, int $type = IntlChar::UNICODE_CHAR_NAME): ?int\npublic static charMirror(int|string $codepoint): int|string|null\npublic static charName(int|string $codepoint, int $type = IntlChar::UNICODE_CHAR_NAME): ?string\npublic static charType(int|string $codepoint): ?int\npublic static chr(int|string $codepoint): ?string\npublic static digit(int|string $codepoint, int $base = 10): int|false|null\npublic static enumCharNames(    int|string $start,    int|string $end,    callable $callback,    int $type = IntlChar::UNICODE_CHAR_NAME): bool\npublic static enumCharTypes(callable $callback): void\npublic static foldCase(int|string $codepoint, int $options = IntlChar::FOLD_CASE_DEFAULT): int|string|null\npublic static forDigit(int $digit, int $base = 10): int\npublic static getBidiPairedBracket(int|string $codepoint): int|string|null\npublic static getBlockCode(int|string $codepoint): ?int\npublic static getCombiningClass(int|string $codepoint): ?int\npublic static getFC_NFKC_Closure(int|string $codepoint): string|false|null\npublic static getIntPropertyMaxValue(int $property): int\npublic static getIntPropertyMinValue(int $property): int\npublic static getIntPropertyValue(int|string $codepoint, int $property): ?int\npublic static getNumericValue(int|string $codepoint): ?float\npublic static getPropertyEnum(string $alias): int\npublic static getPropertyName(int $property, int $type = IntlChar::LONG_PROPERTY_NAME): string|false\npublic static getPropertyValueEnum(int $property, string $name): int\npublic static getPropertyValueName(int $property, int $value, int $type = IntlChar::LONG_PROPERTY_NAME): string|false\npublic static getUnicodeVersion(): array\npublic static hasBinaryProperty(int|string $codepoint, int $property): ?bool\npublic static isalnum(int|string $codepoint): ?bool\npublic static isalpha(int|string $codepoint): ?bool\npublic static isbase(int|string $codepoint): ?bool\npublic static isblank(int|string $codepoint): ?bool\npublic static iscntrl(int|string $codepoint): ?bool\npublic static isdefined(int|string $codepoint): ?bool\npublic static isdigit(int|string $codepoint): ?bool\npublic static isgraph(int|string $codepoint): ?bool\npublic static isIDIgnorable(int|string $codepoint): ?bool\npublic static isIDPart(int|string $codepoint): ?bool\npublic static isIDStart(int|string $codepoint): ?bool\npublic static isISOControl(int|string $codepoint): ?bool\npublic static isJavaIDPart(int|string $codepoint): ?bool\npublic static isJavaIDStart(int|string $codepoint): ?bool\npublic static isJavaSpaceChar(int|string $codepoint): ?bool\npublic static islower(int|string $codepoint): ?bool\npublic static isMirrored(int|string $codepoint): ?bool\npublic static isprint(int|string $codepoint): ?bool\npublic static ispunct(int|string $codepoint): ?bool\npublic static isspace(int|string $codepoint): ?bool\npublic static istitle(int|string $codepoint): ?bool\npublic static isUAlphabetic(int|string $codepoint): ?bool\npublic static isULowercase(int|string $codepoint): ?bool\npublic static isupper(int|string $codepoint): ?bool\npublic static isUUppercase(int|string $codepoint): ?bool\npublic static isUWhiteSpace(int|string $codepoint): ?bool\npublic static isWhitespace(int|string $codepoint): ?bool\npublic static isxdigit(int|string $codepoint): ?bool\npublic static ord(int|string $character): ?int\npublic static tolower(int|string $codepoint): int|string|null\npublic static totitle(int|string $codepoint): int|string|null\npublic static toupper(int|string $codepoint): int|string|null\n\n   }\n```\n\n## Обумовлені константи\n\n**`IntlChar::UNICODE_VERSION`**\n\n**`IntlChar::CODEPOINT_MIN`**\n\n**`IntlChar::CODEPOINT_MAX`**\n\n**`IntlChar::NO_NUMERIC_VALUE`**\n\nSpecial value that is returned by[IntlChar::getNumericValue()](intlchar.getnumericvalue.md)when no numeric value is defined for a code point.\n\n**`IntlChar::PROPERTY_ALPHABETIC`**\n\n**`IntlChar::PROPERTY_BINARY_START`**\n\n**`IntlChar::PROPERTY_ASCII_HEX_DIGIT`**\n\n**`IntlChar::PROPERTY_BIDI_CONTROL`**\n\n**`IntlChar::PROPERTY_BIDI_MIRRORED`**\n\n**`IntlChar::PROPERTY_DASH`**\n\n**`IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT`**\n\n**`IntlChar::PROPERTY_DEPRECATED`**\n\n**`IntlChar::PROPERTY_DIACRITIC`**\n\n**`IntlChar::PROPERTY_EXTENDER`**\n\n**`IntlChar::PROPERTY_FULL_COMPOSITION_EXCLUSION`**\n\n**`IntlChar::PROPERTY_GRAPHEME_BASE`**\n\n**`IntlChar::PROPERTY_GRAPHEME_EXTEND`**\n\n**`IntlChar::PROPERTY_GRAPHEME_LINK`**\n\n**`IntlChar::PROPERTY_HEX_DIGIT`**\n\n**`IntlChar::PROPERTY_HYPHEN`**\n\n**`IntlChar::PROPERTY_ID_CONTINUE`**\n\n**`IntlChar::PROPERTY_ID_START`**\n\n**`IntlChar::PROPERTY_IDEOGRAPHIC`**\n\n**`IntlChar::PROPERTY_IDS_BINARY_OPERATOR`**\n\n**`IntlChar::PROPERTY_IDS_TRINARY_OPERATOR`**\n\n**`IntlChar::PROPERTY_JOIN_CONTROL`**\n\n**`IntlChar::PROPERTY_LOGICAL_ORDER_EXCEPTION`**\n\n**`IntlChar::PROPERTY_LOWERCASE`**\n\n**`IntlChar::PROPERTY_MATH`**\n\n**`IntlChar::PROPERTY_NONCHARACTER_CODE_POINT`**\n\n**`IntlChar::PROPERTY_QUOTATION_MARK`**\n\n**`IntlChar::PROPERTY_RADICAL`**\n\n**`IntlChar::PROPERTY_SOFT_DOTTED`**\n\n**`IntlChar::PROPERTY_TERMINAL_PUNCTUATION`**\n\n**`IntlChar::PROPERTY_UNIFIED_IDEOGRAPH`**\n\n**`IntlChar::PROPERTY_UPPERCASE`**\n\n**`IntlChar::PROPERTY_WHITE_SPACE`**\n\n**`IntlChar::PROPERTY_XID_CONTINUE`**\n\n**`IntlChar::PROPERTY_XID_START`**\n\n**`IntlChar::PROPERTY_CASE_SENSITIVE`**\n\n**`IntlChar::PROPERTY_S_TERM`**\n\n**`IntlChar::PROPERTY_VARIATION_SELECTOR`**\n\n**`IntlChar::PROPERTY_NFD_INERT`**\n\n**`IntlChar::PROPERTY_NFKD_INERT`**\n\n**`IntlChar::PROPERTY_NFC_INERT`**\n\n**`IntlChar::PROPERTY_NFKC_INERT`**\n\n**`IntlChar::PROPERTY_SEGMENT_STARTER`**\n\n**`IntlChar::PROPERTY_PATTERN_SYNTAX`**\n\n**`IntlChar::PROPERTY_PATTERN_WHITE_SPACE`**\n\n**`IntlChar::PROPERTY_POSIX_ALNUM`**\n\n**`IntlChar::PROPERTY_POSIX_BLANK`**\n\n**`IntlChar::PROPERTY_POSIX_GRAPH`**\n\n**`IntlChar::PROPERTY_POSIX_PRINT`**\n\n**`IntlChar::PROPERTY_POSIX_XDIGIT`**\n\n**`IntlChar::PROPERTY_CASED`**\n\n**`IntlChar::PROPERTY_CASE_IGNORABLE`**\n\n**`IntlChar::PROPERTY_CHANGES_WHEN_LOWERCASED`**\n\n**`IntlChar::PROPERTY_CHANGES_WHEN_UPPERCASED`**\n\n**`IntlChar::PROPERTY_CHANGES_WHEN_TITLECASED`**\n\n**`IntlChar::PROPERTY_CHANGES_WHEN_CASEFOLDED`**\n\n**`IntlChar::PROPERTY_CHANGES_WHEN_CASEMAPPED`**\n\n**`IntlChar::PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED`**\n\n**`IntlChar::PROPERTY_BINARY_LIMIT`**\n\n**`IntlChar::PROPERTY_BIDI_CLASS`**\n\n**`IntlChar::PROPERTY_INT_START`**\n\n**`IntlChar::PROPERTY_BLOCK`**\n\n**`IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS`**\n\n**`IntlChar::PROPERTY_DECOMPOSITION_TYPE`**\n\n**`IntlChar::PROPERTY_EAST_ASIAN_WIDTH`**\n\n**`IntlChar::PROPERTY_GENERAL_CATEGORY`**\n\n**`IntlChar::PROPERTY_JOINING_GROUP`**\n\n**`IntlChar::PROPERTY_JOINING_TYPE`**\n\n**`IntlChar::PROPERTY_LINE_BREAK`**\n\n**`IntlChar::PROPERTY_NUMERIC_TYPE`**\n\n**`IntlChar::PROPERTY_SCRIPT`**\n\n**`IntlChar::PROPERTY_HANGUL_SYLLABLE_TYPE`**\n\n**`IntlChar::PROPERTY_NFD_QUICK_CHECK`**\n\n**`IntlChar::PROPERTY_NFKD_QUICK_CHECK`**\n\n**`IntlChar::PROPERTY_NFC_QUICK_CHECK`**\n\n**`IntlChar::PROPERTY_NFKC_QUICK_CHECK`**\n\n**`IntlChar::PROPERTY_LEAD_CANONICAL_COMBINING_CLASS`**\n\n**`IntlChar::PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS`**\n\n**`IntlChar::PROPERTY_GRAPHEME_CLUSTER_BREAK`**\n\n**`IntlChar::PROPERTY_SENTENCE_BREAK`**\n\n**`IntlChar::PROPERTY_WORD_BREAK`**\n\n**`IntlChar::PROPERTY_BIDI_PAIRED_BRACKET_TYPE`**\n\n**`IntlChar::PROPERTY_INT_LIMIT`**\n\n**`IntlChar::PROPERTY_GENERAL_CATEGORY_MASK`**\n\n**`IntlChar::PROPERTY_MASK_START`**\n\n**`IntlChar::PROPERTY_MASK_LIMIT`**\n\n**`IntlChar::PROPERTY_NUMERIC_VALUE`**\n\n**`IntlChar::PROPERTY_DOUBLE_START`**\n\n**`IntlChar::PROPERTY_DOUBLE_LIMIT`**\n\n**`IntlChar::PROPERTY_AGE`**\n\n**`IntlChar::PROPERTY_STRING_START`**\n\n**`IntlChar::PROPERTY_BIDI_MIRRORING_GLYPH`**\n\n**`IntlChar::PROPERTY_CASE_FOLDING`**\n\n**`IntlChar::PROPERTY_ISO_COMMENT`**\n\n**`IntlChar::PROPERTY_LOWERCASE_MAPPING`**\n\n**`IntlChar::PROPERTY_NAME`**\n\n**`IntlChar::PROPERTY_SIMPLE_CASE_FOLDING`**\n\n**`IntlChar::PROPERTY_SIMPLE_LOWERCASE_MAPPING`**\n\n**`IntlChar::PROPERTY_SIMPLE_TITLECASE_MAPPING`**\n\n**`IntlChar::PROPERTY_SIMPLE_UPPERCASE_MAPPING`**\n\n**`IntlChar::PROPERTY_TITLECASE_MAPPING`**\n\n**`IntlChar::PROPERTY_UNICODE_1_NAME`**\n\n**`IntlChar::PROPERTY_UPPERCASE_MAPPING`**\n\n**`IntlChar::PROPERTY_BIDI_PAIRED_BRACKET`**\n\n**`IntlChar::PROPERTY_STRING_LIMIT`**\n\n**`IntlChar::PROPERTY_SCRIPT_EXTENSIONS`**\n\n**`IntlChar::PROPERTY_OTHER_PROPERTY_START`**\n\n**`IntlChar::PROPERTY_OTHER_PROPERTY_LIMIT`**\n\n**`IntlChar::PROPERTY_INVALID_CODE`**\n\n**`IntlChar::CHAR_CATEGORY_UNASSIGNED`**\n\n**`IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES`**\n\n**`IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER`**\n\n**`IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER`**\n\n**`IntlChar::CHAR_CATEGORY_TITLECASE_LETTER`**\n\n**`IntlChar::CHAR_CATEGORY_MODIFIER_LETTER`**\n\n**`IntlChar::CHAR_CATEGORY_OTHER_LETTER`**\n\n**`IntlChar::CHAR_CATEGORY_NON_SPACING_MARK`**\n\n**`IntlChar::CHAR_CATEGORY_ENCLOSING_MARK`**\n\n**`IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK`**\n\n**`IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER`**\n\n**`IntlChar::CHAR_CATEGORY_LETTER_NUMBER`**\n\n**`IntlChar::CHAR_CATEGORY_OTHER_NUMBER`**\n\n**`IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR`**\n\n**`IntlChar::CHAR_CATEGORY_LINE_SEPARATOR`**\n\n**`IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR`**\n\n**`IntlChar::CHAR_CATEGORY_CONTROL_CHAR`**\n\n**`IntlChar::CHAR_CATEGORY_FORMAT_CHAR`**\n\n**`IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR`**\n\n**`IntlChar::CHAR_CATEGORY_SURROGATE`**\n\n**`IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_START_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_END_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_MATH_SYMBOL`**\n\n**`IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL`**\n\n**`IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL`**\n\n**`IntlChar::CHAR_CATEGORY_OTHER_SYMBOL`**\n\n**`IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION`**\n\n**`IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT`**\n\n**`IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT`**\n\n**`IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT`**\n\n**`IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER`**\n\n**`IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR`**\n\n**`IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR`**\n\n**`IntlChar::CHAR_DIRECTION_ARABIC_NUMBER`**\n\n**`IntlChar::CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR`**\n\n**`IntlChar::CHAR_DIRECTION_BLOCK_SEPARATOR`**\n\n**`IntlChar::CHAR_DIRECTION_SEGMENT_SEPARATOR`**\n\n**`IntlChar::CHAR_DIRECTION_WHITE_SPACE_NEUTRAL`**\n\n**`IntlChar::CHAR_DIRECTION_OTHER_NEUTRAL`**\n\n**`IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING`**\n\n**`IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE`**\n\n**`IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC`**\n\n**`IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING`**\n\n**`IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE`**\n\n**`IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT`**\n\n**`IntlChar::CHAR_DIRECTION_DIR_NON_SPACING_MARK`**\n\n**`IntlChar::CHAR_DIRECTION_BOUNDARY_NEUTRAL`**\n\n**`IntlChar::CHAR_DIRECTION_FIRST_STRONG_ISOLATE`**\n\n**`IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE`**\n\n**`IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE`**\n\n**`IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE`**\n\n**`IntlChar::CHAR_DIRECTION_CHAR_DIRECTION_COUNT`**\n\n**`IntlChar::BLOCK_CODE_NO_BLOCK`**\n\n**`IntlChar::BLOCK_CODE_BASIC_LATIN`**\n\n**`IntlChar::BLOCK_CODE_LATIN_1_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_LATIN_EXTENDED_A`**\n\n**`IntlChar::BLOCK_CODE_LATIN_EXTENDED_B`**\n\n**`IntlChar::BLOCK_CODE_IPA_EXTENSIONS`**\n\n**`IntlChar::BLOCK_CODE_SPACING_MODIFIER_LETTERS`**\n\n**`IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS`**\n\n**`IntlChar::BLOCK_CODE_GREEK`**\n\n**`IntlChar::BLOCK_CODE_CYRILLIC`**\n\n**`IntlChar::BLOCK_CODE_ARMENIAN`**\n\n**`IntlChar::BLOCK_CODE_HEBREW`**\n\n**`IntlChar::BLOCK_CODE_ARABIC`**\n\n**`IntlChar::BLOCK_CODE_SYRIAC`**\n\n**`IntlChar::BLOCK_CODE_THAANA`**\n\n**`IntlChar::BLOCK_CODE_DEVANAGARI`**\n\n**`IntlChar::BLOCK_CODE_BENGALI`**\n\n**`IntlChar::BLOCK_CODE_GURMUKHI`**\n\n**`IntlChar::BLOCK_CODE_GUJARATI`**\n\n**`IntlChar::BLOCK_CODE_ORIYA`**\n\n**`IntlChar::BLOCK_CODE_TAMIL`**\n\n**`IntlChar::BLOCK_CODE_TELUGU`**\n\n**`IntlChar::BLOCK_CODE_KANNADA`**\n\n**`IntlChar::BLOCK_CODE_MALAYALAM`**\n\n**`IntlChar::BLOCK_CODE_SINHALA`**\n\n**`IntlChar::BLOCK_CODE_THAI`**\n\n**`IntlChar::BLOCK_CODE_LAO`**\n\n**`IntlChar::BLOCK_CODE_TIBETAN`**\n\n**`IntlChar::BLOCK_CODE_MYANMAR`**\n\n**`IntlChar::BLOCK_CODE_GEORGIAN`**\n\n**`IntlChar::BLOCK_CODE_HANGUL_JAMO`**\n\n**`IntlChar::BLOCK_CODE_ETHIOPIC`**\n\n**`IntlChar::BLOCK_CODE_CHEROKEE`**\n\n**`IntlChar::BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS`**\n\n**`IntlChar::BLOCK_CODE_OGHAM`**\n\n**`IntlChar::BLOCK_CODE_RUNIC`**\n\n**`IntlChar::BLOCK_CODE_KHMER`**\n\n**`IntlChar::BLOCK_CODE_MONGOLIAN`**\n\n**`IntlChar::BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL`**\n\n**`IntlChar::BLOCK_CODE_GREEK_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_GENERAL_PUNCTUATION`**\n\n**`IntlChar::BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS`**\n\n**`IntlChar::BLOCK_CODE_CURRENCY_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_LETTERLIKE_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_NUMBER_FORMS`**\n\n**`IntlChar::BLOCK_CODE_ARROWS`**\n\n**`IntlChar::BLOCK_CODE_MATHEMATICAL_OPERATORS`**\n\n**`IntlChar::BLOCK_CODE_MISCELLANEOUS_TECHNICAL`**\n\n**`IntlChar::BLOCK_CODE_CONTROL_PICTURES`**\n\n**`IntlChar::BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION`**\n\n**`IntlChar::BLOCK_CODE_ENCLOSED_ALPHANUMERICS`**\n\n**`IntlChar::BLOCK_CODE_BOX_DRAWING`**\n\n**`IntlChar::BLOCK_CODE_BLOCK_ELEMENTS`**\n\n**`IntlChar::BLOCK_CODE_GEOMETRIC_SHAPES`**\n\n**`IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_DINGBATS`**\n\n**`IntlChar::BLOCK_CODE_BRAILLE_PATTERNS`**\n\n**`IntlChar::BLOCK_CODE_CJK_RADICALS_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_KANGXI_RADICALS`**\n\n**`IntlChar::BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS`**\n\n**`IntlChar::BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION`**\n\n**`IntlChar::BLOCK_CODE_HIRAGANA`**\n\n**`IntlChar::BLOCK_CODE_KATAKANA`**\n\n**`IntlChar::BLOCK_CODE_BOPOMOFO`**\n\n**`IntlChar::BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO`**\n\n**`IntlChar::BLOCK_CODE_KANBUN`**\n\n**`IntlChar::BLOCK_CODE_BOPOMOFO_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS`**\n\n**`IntlChar::BLOCK_CODE_CJK_COMPATIBILITY`**\n\n**`IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A`**\n\n**`IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS`**\n\n**`IntlChar::BLOCK_CODE_YI_SYLLABLES`**\n\n**`IntlChar::BLOCK_CODE_YI_RADICALS`**\n\n**`IntlChar::BLOCK_CODE_HANGUL_SYLLABLES`**\n\n**`IntlChar::BLOCK_CODE_HIGH_SURROGATES`**\n\n**`IntlChar::BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES`**\n\n**`IntlChar::BLOCK_CODE_LOW_SURROGATES`**\n\n**`IntlChar::BLOCK_CODE_PRIVATE_USE_AREA`**\n\n**`IntlChar::BLOCK_CODE_PRIVATE_USE`**\n\n**`IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS`**\n\n**`IntlChar::BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS`**\n\n**`IntlChar::BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A`**\n\n**`IntlChar::BLOCK_CODE_COMBINING_HALF_MARKS`**\n\n**`IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_FORMS`**\n\n**`IntlChar::BLOCK_CODE_SMALL_FORM_VARIANTS`**\n\n**`IntlChar::BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B`**\n\n**`IntlChar::BLOCK_CODE_SPECIALS`**\n\n**`IntlChar::BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS`**\n\n**`IntlChar::BLOCK_CODE_OLD_ITALIC`**\n\n**`IntlChar::BLOCK_CODE_GOTHIC`**\n\n**`IntlChar::BLOCK_CODE_DESERET`**\n\n**`IntlChar::BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_MUSICAL_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B`**\n\n**`IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_TAGS`**\n\n**`IntlChar::BLOCK_CODE_CYRILLIC_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_CYRILLIC_SUPPLEMENTARY`**\n\n**`IntlChar::BLOCK_CODE_TAGALOG`**\n\n**`IntlChar::BLOCK_CODE_HANUNOO`**\n\n**`IntlChar::BLOCK_CODE_BUHID`**\n\n**`IntlChar::BLOCK_CODE_TAGBANWA`**\n\n**`IntlChar::BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_A`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_B`**\n\n**`IntlChar::BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS`**\n\n**`IntlChar::BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS`**\n\n**`IntlChar::BLOCK_CODE_VARIATION_SELECTORS`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B`**\n\n**`IntlChar::BLOCK_CODE_LIMBU`**\n\n**`IntlChar::BLOCK_CODE_TAI_LE`**\n\n**`IntlChar::BLOCK_CODE_KHMER_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_PHONETIC_EXTENSIONS`**\n\n**`IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS`**\n\n**`IntlChar::BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_LINEAR_B_SYLLABARY`**\n\n**`IntlChar::BLOCK_CODE_LINEAR_B_IDEOGRAMS`**\n\n**`IntlChar::BLOCK_CODE_AEGEAN_NUMBERS`**\n\n**`IntlChar::BLOCK_CODE_UGARITIC`**\n\n**`IntlChar::BLOCK_CODE_SHAVIAN`**\n\n**`IntlChar::BLOCK_CODE_OSMANYA`**\n\n**`IntlChar::BLOCK_CODE_CYPRIOT_SYLLABARY`**\n\n**`IntlChar::BLOCK_CODE_TAI_XUAN_JING_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION`**\n\n**`IntlChar::BLOCK_CODE_ANCIENT_GREEK_NUMBERS`**\n\n**`IntlChar::BLOCK_CODE_ARABIC_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_BUGINESE`**\n\n**`IntlChar::BLOCK_CODE_CJK_STROKES`**\n\n**`IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_COPTIC`**\n\n**`IntlChar::BLOCK_CODE_ETHIOPIC_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_ETHIOPIC_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_GEORGIAN_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_GLAGOLITIC`**\n\n**`IntlChar::BLOCK_CODE_KHAROSHTHI`**\n\n**`IntlChar::BLOCK_CODE_MODIFIER_TONE_LETTERS`**\n\n**`IntlChar::BLOCK_CODE_NEW_TAI_LUE`**\n\n**`IntlChar::BLOCK_CODE_OLD_PERSIAN`**\n\n**`IntlChar::BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION`**\n\n**`IntlChar::BLOCK_CODE_SYLOTI_NAGRI`**\n\n**`IntlChar::BLOCK_CODE_TIFINAGH`**\n\n**`IntlChar::BLOCK_CODE_VERTICAL_FORMS`**\n\n**`IntlChar::BLOCK_CODE_NKO`**\n\n**`IntlChar::BLOCK_CODE_BALINESE`**\n\n**`IntlChar::BLOCK_CODE_LATIN_EXTENDED_C`**\n\n**`IntlChar::BLOCK_CODE_LATIN_EXTENDED_D`**\n\n**`IntlChar::BLOCK_CODE_PHAGS_PA`**\n\n**`IntlChar::BLOCK_CODE_PHOENICIAN`**\n\n**`IntlChar::BLOCK_CODE_CUNEIFORM`**\n\n**`IntlChar::BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION`**\n\n**`IntlChar::BLOCK_CODE_COUNTING_ROD_NUMERALS`**\n\n**`IntlChar::BLOCK_CODE_SUNDANESE`**\n\n**`IntlChar::BLOCK_CODE_LEPCHA`**\n\n**`IntlChar::BLOCK_CODE_OL_CHIKI`**\n\n**`IntlChar::BLOCK_CODE_CYRILLIC_EXTENDED_A`**\n\n**`IntlChar::BLOCK_CODE_VAI`**\n\n**`IntlChar::BLOCK_CODE_CYRILLIC_EXTENDED_B`**\n\n**`IntlChar::BLOCK_CODE_SAURASHTRA`**\n\n**`IntlChar::BLOCK_CODE_KAYAH_LI`**\n\n**`IntlChar::BLOCK_CODE_REJANG`**\n\n**`IntlChar::BLOCK_CODE_CHAM`**\n\n**`IntlChar::BLOCK_CODE_ANCIENT_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_PHAISTOS_DISC`**\n\n**`IntlChar::BLOCK_CODE_LYCIAN`**\n\n**`IntlChar::BLOCK_CODE_CARIAN`**\n\n**`IntlChar::BLOCK_CODE_LYDIAN`**\n\n**`IntlChar::BLOCK_CODE_MAHJONG_TILES`**\n\n**`IntlChar::BLOCK_CODE_DOMINO_TILES`**\n\n**`IntlChar::BLOCK_CODE_SAMARITAN`**\n\n**`IntlChar::BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_TAI_THAM`**\n\n**`IntlChar::BLOCK_CODE_VEDIC_EXTENSIONS`**\n\n**`IntlChar::BLOCK_CODE_LISU`**\n\n**`IntlChar::BLOCK_CODE_BAMUM`**\n\n**`IntlChar::BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS`**\n\n**`IntlChar::BLOCK_CODE_DEVANAGARI_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_HANGUL_JAMO_EXTENDED_A`**\n\n**`IntlChar::BLOCK_CODE_JAVANESE`**\n\n**`IntlChar::BLOCK_CODE_MYANMAR_EXTENDED_A`**\n\n**`IntlChar::BLOCK_CODE_TAI_VIET`**\n\n**`IntlChar::BLOCK_CODE_MEETEI_MAYEK`**\n\n**`IntlChar::BLOCK_CODE_HANGUL_JAMO_EXTENDED_B`**\n\n**`IntlChar::BLOCK_CODE_IMPERIAL_ARAMAIC`**\n\n**`IntlChar::BLOCK_CODE_OLD_SOUTH_ARABIAN`**\n\n**`IntlChar::BLOCK_CODE_AVESTAN`**\n\n**`IntlChar::BLOCK_CODE_INSCRIPTIONAL_PARTHIAN`**\n\n**`IntlChar::BLOCK_CODE_INSCRIPTIONAL_PAHLAVI`**\n\n**`IntlChar::BLOCK_CODE_OLD_TURKIC`**\n\n**`IntlChar::BLOCK_CODE_RUMI_NUMERAL_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_KAITHI`**\n\n**`IntlChar::BLOCK_CODE_EGYPTIAN_HIEROGLYPHS`**\n\n**`IntlChar::BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C`**\n\n**`IntlChar::BLOCK_CODE_MANDAIC`**\n\n**`IntlChar::BLOCK_CODE_BATAK`**\n\n**`IntlChar::BLOCK_CODE_ETHIOPIC_EXTENDED_A`**\n\n**`IntlChar::BLOCK_CODE_BRAHMI`**\n\n**`IntlChar::BLOCK_CODE_BAMUM_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_KANA_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_PLAYING_CARDS`**\n\n**`IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS`**\n\n**`IntlChar::BLOCK_CODE_EMOTICONS`**\n\n**`IntlChar::BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_ALCHEMICAL_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D`**\n\n**`IntlChar::BLOCK_CODE_ARABIC_EXTENDED_A`**\n\n**`IntlChar::BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS`**\n\n**`IntlChar::BLOCK_CODE_CHAKMA`**\n\n**`IntlChar::BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS`**\n\n**`IntlChar::BLOCK_CODE_MEROITIC_CURSIVE`**\n\n**`IntlChar::BLOCK_CODE_MEROITIC_HIEROGLYPHS`**\n\n**`IntlChar::BLOCK_CODE_MIAO`**\n\n**`IntlChar::BLOCK_CODE_SHARADA`**\n\n**`IntlChar::BLOCK_CODE_SORA_SOMPENG`**\n\n**`IntlChar::BLOCK_CODE_SUNDANESE_SUPPLEMENT`**\n\n**`IntlChar::BLOCK_CODE_TAKRI`**\n\n**`IntlChar::BLOCK_CODE_BASSA_VAH`**\n\n**`IntlChar::BLOCK_CODE_CAUCASIAN_ALBANIAN`**\n\n**`IntlChar::BLOCK_CODE_COPTIC_EPACT_NUMBERS`**\n\n**`IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_DUPLOYAN`**\n\n**`IntlChar::BLOCK_CODE_ELBASAN`**\n\n**`IntlChar::BLOCK_CODE_GEOMETRIC_SHAPES_EXTENDED`**\n\n**`IntlChar::BLOCK_CODE_GRANTHA`**\n\n**`IntlChar::BLOCK_CODE_KHOJKI`**\n\n**`IntlChar::BLOCK_CODE_KHUDAWADI`**\n\n**`IntlChar::BLOCK_CODE_LATIN_EXTENDED_E`**\n\n**`IntlChar::BLOCK_CODE_LINEAR_A`**\n\n**`IntlChar::BLOCK_CODE_MAHAJANI`**\n\n**`IntlChar::BLOCK_CODE_MANICHAEAN`**\n\n**`IntlChar::BLOCK_CODE_MENDE_KIKAKUI`**\n\n**`IntlChar::BLOCK_CODE_MODI`**\n\n**`IntlChar::BLOCK_CODE_MRO`**\n\n**`IntlChar::BLOCK_CODE_MYANMAR_EXTENDED_B`**\n\n**`IntlChar::BLOCK_CODE_NABATAEAN`**\n\n**`IntlChar::BLOCK_CODE_OLD_NORTH_ARABIAN`**\n\n**`IntlChar::BLOCK_CODE_OLD_PERMIC`**\n\n**`IntlChar::BLOCK_CODE_ORNAMENTAL_DINGBATS`**\n\n**`IntlChar::BLOCK_CODE_PAHAWH_HMONG`**\n\n**`IntlChar::BLOCK_CODE_PALMYRENE`**\n\n**`IntlChar::BLOCK_CODE_PAU_CIN_HAU`**\n\n**`IntlChar::BLOCK_CODE_PSALTER_PAHLAVI`**\n\n**`IntlChar::BLOCK_CODE_SHORTHAND_FORMAT_CONTROLS`**\n\n**`IntlChar::BLOCK_CODE_SIDDHAM`**\n\n**`IntlChar::BLOCK_CODE_SINHALA_ARCHAIC_NUMBERS`**\n\n**`IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_C`**\n\n**`IntlChar::BLOCK_CODE_TIRHUTA`**\n\n**`IntlChar::BLOCK_CODE_WARANG_CITI`**\n\n**`IntlChar::BLOCK_CODE_COUNT`**\n\n**`IntlChar::BLOCK_CODE_INVALID_CODE`**\n\n**`IntlChar::BPT_NONE`**\n\n**`IntlChar::BPT_OPEN`**\n\n**`IntlChar::BPT_CLOSE`**\n\n**`IntlChar::BPT_COUNT`**\n\n**`IntlChar::EA_NEUTRAL`**\n\n**`IntlChar::EA_AMBIGUOUS`**\n\n**`IntlChar::EA_HALFWIDTH`**\n\n**`IntlChar::EA_FULLWIDTH`**\n\n**`IntlChar::EA_NARROW`**\n\n**`IntlChar::EA_WIDE`**\n\n**`IntlChar::EA_COUNT`**\n\n**`IntlChar::UNICODE_CHAR_NAME`**\n\n**`IntlChar::UNICODE_10_CHAR_NAME`**\n\n**`IntlChar::EXTENDED_CHAR_NAME`**\n\n**`IntlChar::CHAR_NAME_ALIAS`**\n\n**`IntlChar::CHAR_NAME_CHOICE_COUNT`**\n\n**`IntlChar::SHORT_PROPERTY_NAME`**\n\n**`IntlChar::LONG_PROPERTY_NAME`**\n\n**`IntlChar::PROPERTY_NAME_CHOICE_COUNT`**\n\n**`IntlChar::DT_NONE`**\n\n**`IntlChar::DT_CANONICAL`**\n\n**`IntlChar::DT_COMPAT`**\n\n**`IntlChar::DT_CIRCLE`**\n\n**`IntlChar::DT_FINAL`**\n\n**`IntlChar::DT_FONT`**\n\n**`IntlChar::DT_FRACTION`**\n\n**`IntlChar::DT_INITIAL`**\n\n**`IntlChar::DT_ISOLATED`**\n\n**`IntlChar::DT_MEDIAL`**\n\n**`IntlChar::DT_NARROW`**\n\n**`IntlChar::DT_NOBREAK`**\n\n**`IntlChar::DT_SMALL`**\n\n**`IntlChar::DT_SQUARE`**\n\n**`IntlChar::DT_SUB`**\n\n**`IntlChar::DT_SUPER`**\n\n**`IntlChar::DT_VERTICAL`**\n\n**`IntlChar::DT_WIDE`**\n\n**`IntlChar::DT_COUNT`**\n\n**`IntlChar::JT_NON_JOINING`**\n\n**`IntlChar::JT_JOIN_CAUSING`**\n\n**`IntlChar::JT_DUAL_JOINING`**\n\n**`IntlChar::JT_LEFT_JOINING`**\n\n**`IntlChar::JT_RIGHT_JOINING`**\n\n**`IntlChar::JT_TRANSPARENT`**\n\n**`IntlChar::JT_COUNT`**\n\n**`IntlChar::JG_NO_JOINING_GROUP`**\n\n**`IntlChar::JG_AIN`**\n\n**`IntlChar::JG_ALAPH`**\n\n**`IntlChar::JG_ALEF`**\n\n**`IntlChar::JG_BEH`**\n\n**`IntlChar::JG_BETH`**\n\n**`IntlChar::JG_DAL`**\n\n**`IntlChar::JG_DALATH_RISH`**\n\n**`IntlChar::JG_E`**\n\n**`IntlChar::JG_FEH`**\n\n**`IntlChar::JG_FINAL_SEMKATH`**\n\n**`IntlChar::JG_GAF`**\n\n**`IntlChar::JG_GAMAL`**\n\n**`IntlChar::JG_HAH`**\n\n**`IntlChar::JG_TEH_MARBUTA_GOAL`**\n\n**`IntlChar::JG_HAMZA_ON_HEH_GOAL`**\n\n**`IntlChar::JG_HE`**\n\n**`IntlChar::JG_HEH`**\n\n**`IntlChar::JG_HEH_GOAL`**\n\n**`IntlChar::JG_HETH`**\n\n**`IntlChar::JG_KAF`**\n\n**`IntlChar::JG_KAPH`**\n\n**`IntlChar::JG_KNOTTED_HEH`**\n\n**`IntlChar::JG_LAM`**\n\n**`IntlChar::JG_LAMADH`**\n\n**`IntlChar::JG_MEEM`**\n\n**`IntlChar::JG_MIM`**\n\n**`IntlChar::JG_NOON`**\n\n**`IntlChar::JG_NUN`**\n\n**`IntlChar::JG_PE`**\n\n**`IntlChar::JG_QAF`**\n\n**`IntlChar::JG_QAPH`**\n\n**`IntlChar::JG_REH`**\n\n**`IntlChar::JG_REVERSED_PE`**\n\n**`IntlChar::JG_SAD`**\n\n**`IntlChar::JG_SADHE`**\n\n**`IntlChar::JG_SEEN`**\n\n**`IntlChar::JG_SEMKATH`**\n\n**`IntlChar::JG_SHIN`**\n\n**`IntlChar::JG_SWASH_KAF`**\n\n**`IntlChar::JG_SYRIAC_WAW`**\n\n**`IntlChar::JG_TAH`**\n\n**`IntlChar::JG_TAW`**\n\n**`IntlChar::JG_TEH_MARBUTA`**\n\n**`IntlChar::JG_TETH`**\n\n**`IntlChar::JG_WAW`**\n\n**`IntlChar::JG_YEH`**\n\n**`IntlChar::JG_YEH_BARREE`**\n\n**`IntlChar::JG_YEH_WITH_TAIL`**\n\n**`IntlChar::JG_YUDH`**\n\n**`IntlChar::JG_YUDH_HE`**\n\n**`IntlChar::JG_ZAIN`**\n\n**`IntlChar::JG_FE`**\n\n**`IntlChar::JG_KHAPH`**\n\n**`IntlChar::JG_ZHAIN`**\n\n**`IntlChar::JG_BURUSHASKI_YEH_BARREE`**\n\n**`IntlChar::JG_FARSI_YEH`**\n\n**`IntlChar::JG_NYA`**\n\n**`IntlChar::JG_ROHINGYA_YEH`**\n\n**`IntlChar::JG_MANICHAEAN_ALEPH`**\n\n**`IntlChar::JG_MANICHAEAN_AYIN`**\n\n**`IntlChar::JG_MANICHAEAN_BETH`**\n\n**`IntlChar::JG_MANICHAEAN_DALETH`**\n\n**`IntlChar::JG_MANICHAEAN_DHAMEDH`**\n\n**`IntlChar::JG_MANICHAEAN_FIVE`**\n\n**`IntlChar::JG_MANICHAEAN_GIMEL`**\n\n**`IntlChar::JG_MANICHAEAN_HETH`**\n\n**`IntlChar::JG_MANICHAEAN_HUNDRED`**\n\n**`IntlChar::JG_MANICHAEAN_KAPH`**\n\n**`IntlChar::JG_MANICHAEAN_LAMEDH`**\n\n**`IntlChar::JG_MANICHAEAN_MEM`**\n\n**`IntlChar::JG_MANICHAEAN_NUN`**\n\n**`IntlChar::JG_MANICHAEAN_ONE`**\n\n**`IntlChar::JG_MANICHAEAN_PE`**\n\n**`IntlChar::JG_MANICHAEAN_QOPH`**\n\n**`IntlChar::JG_MANICHAEAN_RESH`**\n\n**`IntlChar::JG_MANICHAEAN_SADHE`**\n\n**`IntlChar::JG_MANICHAEAN_SAMEKH`**\n\n**`IntlChar::JG_MANICHAEAN_TAW`**\n\n**`IntlChar::JG_MANICHAEAN_TEN`**\n\n**`IntlChar::JG_MANICHAEAN_TETH`**\n\n**`IntlChar::JG_MANICHAEAN_THAMEDH`**\n\n**`IntlChar::JG_MANICHAEAN_TWENTY`**\n\n**`IntlChar::JG_MANICHAEAN_WAW`**\n\n**`IntlChar::JG_MANICHAEAN_YODH`**\n\n**`IntlChar::JG_MANICHAEAN_ZAYIN`**\n\n**`IntlChar::JG_STRAIGHT_WAW`**\n\n**`IntlChar::JG_COUNT`**\n\n**`IntlChar::GCB_OTHER`**\n\n**`IntlChar::GCB_CONTROL`**\n\n**`IntlChar::GCB_CR`**\n\n**`IntlChar::GCB_EXTEND`**\n\n**`IntlChar::GCB_L`**\n\n**`IntlChar::GCB_LF`**\n\n**`IntlChar::GCB_LV`**\n\n**`IntlChar::GCB_LVT`**\n\n**`IntlChar::GCB_T`**\n\n**`IntlChar::GCB_V`**\n\n**`IntlChar::GCB_SPACING_MARK`**\n\n**`IntlChar::GCB_PREPEND`**\n\n**`IntlChar::GCB_REGIONAL_INDICATOR`**\n\n**`IntlChar::GCB_COUNT`**\n\n**`IntlChar::WB_OTHER`**\n\n**`IntlChar::WB_ALETTER`**\n\n**`IntlChar::WB_FORMAT`**\n\n**`IntlChar::WB_KATAKANA`**\n\n**`IntlChar::WB_MIDLETTER`**\n\n**`IntlChar::WB_MIDNUM`**\n\n**`IntlChar::WB_NUMERIC`**\n\n**`IntlChar::WB_EXTENDNUMLET`**\n\n**`IntlChar::WB_CR`**\n\n**`IntlChar::WB_EXTEND`**\n\n**`IntlChar::WB_LF`**\n\n**`IntlChar::WB_MIDNUMLET`**\n\n**`IntlChar::WB_NEWLINE`**\n\n**`IntlChar::WB_REGIONAL_INDICATOR`**\n\n**`IntlChar::WB_HEBREW_LETTER`**\n\n**`IntlChar::WB_SINGLE_QUOTE`**\n\n**`IntlChar::WB_DOUBLE_QUOTE`**\n\n**`IntlChar::WB_COUNT`**\n\n**`IntlChar::SB_OTHER`**\n\n**`IntlChar::SB_ATERM`**\n\n**`IntlChar::SB_CLOSE`**\n\n**`IntlChar::SB_FORMAT`**\n\n**`IntlChar::SB_LOWER`**\n\n**`IntlChar::SB_NUMERIC`**\n\n**`IntlChar::SB_OLETTER`**\n\n**`IntlChar::SB_SEP`**\n\n**`IntlChar::SB_SP`**\n\n**`IntlChar::SB_STERM`**\n\n**`IntlChar::SB_UPPER`**\n\n**`IntlChar::SB_CR`**\n\n**`IntlChar::SB_EXTEND`**\n\n**`IntlChar::SB_LF`**\n\n**`IntlChar::SB_SCONTINUE`**\n\n**`IntlChar::SB_COUNT`**\n\n**`IntlChar::LB_UNKNOWN`**\n\n**`IntlChar::LB_AMBIGUOUS`**\n\n**`IntlChar::LB_ALPHABETIC`**\n\n**`IntlChar::LB_BREAK_BOTH`**\n\n**`IntlChar::LB_BREAK_AFTER`**\n\n**`IntlChar::LB_BREAK_BEFORE`**\n\n**`IntlChar::LB_MANDATORY_BREAK`**\n\n**`IntlChar::LB_CONTINGENT_BREAK`**\n\n**`IntlChar::LB_CLOSE_PUNCTUATION`**\n\n**`IntlChar::LB_COMBINING_MARK`**\n\n**`IntlChar::LB_CARRIAGE_RETURN`**\n\n**`IntlChar::LB_EXCLAMATION`**\n\n**`IntlChar::LB_GLUE`**\n\n**`IntlChar::LB_HYPHEN`**\n\n**`IntlChar::LB_IDEOGRAPHIC`**\n\n**`IntlChar::LB_INSEPARABLE`**\n\n**`IntlChar::LB_INSEPERABLE`**\n\n**`IntlChar::LB_INFIX_NUMERIC`**\n\n**`IntlChar::LB_LINE_FEED`**\n\n**`IntlChar::LB_NONSTARTER`**\n\n**`IntlChar::LB_NUMERIC`**\n\n**`IntlChar::LB_OPEN_PUNCTUATION`**\n\n**`IntlChar::LB_POSTFIX_NUMERIC`**\n\n**`IntlChar::LB_PREFIX_NUMERIC`**\n\n**`IntlChar::LB_QUOTATION`**\n\n**`IntlChar::LB_COMPLEX_CONTEXT`**\n\n**`IntlChar::LB_SURROGATE`**\n\n**`IntlChar::LB_SPACE`**\n\n**`IntlChar::LB_BREAK_SYMBOLS`**\n\n**`IntlChar::LB_ZWSPACE`**\n\n**`IntlChar::LB_NEXT_LINE`**\n\n**`IntlChar::LB_WORD_JOINER`**\n\n**`IntlChar::LB_H2`**\n\n**`IntlChar::LB_H3`**\n\n**`IntlChar::LB_JL`**\n\n**`IntlChar::LB_JT`**\n\n**`IntlChar::LB_JV`**\n\n**`IntlChar::LB_CLOSE_PARENTHESIS`**\n\n**`IntlChar::LB_CONDITIONAL_JAPANESE_STARTER`**\n\n**`IntlChar::LB_HEBREW_LETTER`**\n\n**`IntlChar::LB_REGIONAL_INDICATOR`**\n\n**`IntlChar::LB_COUNT`**\n\n**`IntlChar::NT_NONE`**\n\n**`IntlChar::NT_DECIMAL`**\n\n**`IntlChar::NT_DIGIT`**\n\n**`IntlChar::NT_NUMERIC`**\n\n**`IntlChar::NT_COUNT`**\n\n**`IntlChar::HST_NOT_APPLICABLE`**\n\n**`IntlChar::HST_LEADING_JAMO`**\n\n**`IntlChar::HST_VOWEL_JAMO`**\n\n**`IntlChar::HST_TRAILING_JAMO`**\n\n**`IntlChar::HST_LV_SYLLABLE`**\n\n**`IntlChar::HST_LVT_SYLLABLE`**\n\n**`IntlChar::HST_COUNT`**\n\n**`IntlChar::FOLD_CASE_DEFAULT`**\n\n**`IntlChar::FOLD_CASE_EXCLUDE_SPECIAL_I`**\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.0.6 | Добавлена константа\\*\\*`IntlChar::NO_NUMERIC_VALUE`\\*\\* |\n\n## Зміст\n\n-   [IntlChar::charAge](intlchar.charage.md) — Отримати \"вік\" символьного коду\n-   [IntlChar::charDigitValue](intlchar.chardigitvalue.md)— Отримати десяткову цифру із символу десяткової цифри\n-   [IntlChar::charDirection](intlchar.chardirection.md)— Отримати категорію напряму листа для символу\n-   [IntlChar::charFromName](intlchar.charfromname.md)— Знайти символ Unicode на його ім'я та повернути його код\n-   [IntlChar::charMirror](intlchar.charmirror.md) — Отримати \"дзеркальний\" символ за кодом\n-   [IntlChar::charName](intlchar.charname.md)— Отримати ім'я Unicode\n-   [IntlChar::charType](intlchar.chartype.md)— Отримати головну категорію, до якої входить символ\n-   [IntlChar::chr](intlchar.chr.md)— Отримати символ Unicode за його кодом\n-   [IntlChar::digit](intlchar.digit.md)— Отримати десяткове число із символу Unicode із заданою основою\n-   [IntlChar::enumCharNames](intlchar.enumcharnames.md)— Перелічує всі присвоєні символи Unicode у заданому діапазоні\n-   [IntlChar::enumCharTypes](intlchar.enumchartypes.md)— Перелік послідовностей символів Unicode згрупованих за ними.\n-   [IntlChar::foldCase](intlchar.foldcase.md)— Перетворює регістр заданого символу.\n-   [IntlChar::forDigit](intlchar.fordigit.md)— Отримати символ, який представляє задане число в заданій основі\n-   [IntlChar::getBidiPairedBracket](intlchar.getbidipairedbracket.md)— Отримати парну дужку для символу\n-   [IntlChar::getBlockCode](intlchar.getblockcode.md)— Отримати блок розміщення символу Unicode\n-   [IntlChar::getCombiningClass](intlchar.getcombiningclass.md)— Отримати комбінуючий клас для символу\n-   [IntlChar::getFC\\_NFKC\\_Closure](intlchar.getfc-nfkc-closure.md) \\- Отримати властивість FC\\_NFKC\\_Closure для символу\n-   [IntlChar::getIntPropertyMaxValue](intlchar.getintpropertymaxvalue.md)— Отримати мінімальне значення для властивості Unicode\n-   [IntlChar::getIntPropertyMinValue](intlchar.getintpropertyminvalue.md)— Отримати мінімальне значення для властивості Unicode\n-   [IntlChar::getIntPropertyValue](intlchar.getintpropertyvalue.md)— Отримати значення властивості Unicode для символу\n-   [IntlChar::getNumericValue](intlchar.getnumericvalue.md)— Отримати числову виставу для символу Unicode\n-   [IntlChar::getPropertyEnum](intlchar.getpropertyenum.md)— Отримати значення константи властивості на його ім'я\n-   [IntlChar::getPropertyName](intlchar.getpropertyname.md) \\- Отримати Unicode ім'я властивості\n-   [IntlChar::getPropertyValueEnum](intlchar.getpropertyvalueenum.md)— Повернути числовий ідентифікатор властивості на його ім'я\n-   [IntlChar::getPropertyValueName](intlchar.getpropertyvaluename.md)— Отримати ім'я Unicode для значення властивості\n-   [IntlChar::getUnicodeVersion](intlchar.getunicodeversion.md)— Отримати версію Unicode\n-   [IntlChar::hasBinaryProperty](intlchar.hasbinaryproperty.md)— Перевірити бінарну властивість Unicode для символу\n-   [IntlChar::isalnum](intlchar.isalnum.md)— Перевірити, чи є символ буквою чи цифрою\n-   [IntlChar::isalpha](intlchar.isalpha.md)— Перевірити, чи є символ літерою\n-   [IntlChar::isbase](intlchar.isbase.md)— Перевірити, чи символ є базовим\n-   [IntlChar::isblank](intlchar.isblank.md) - Перевірити, чи є символ \"порожнім\" або \"горизонтальним пропуском\"\n-   [IntlChar::iscntrl](intlchar.iscntrl.md)— Перевірити, чи є символ керуючим\n-   [IntlChar::isdefined](intlchar.isdefined.md)— Перевірити, чи є символ.\n-   [IntlChar::isdigit](intlchar.isdigit.md)— Перевірити, чи символ є цифрою\n-   [IntlChar::isgraph](intlchar.isgraph.md)— Перевірити, чи є символом графічним символом\n-   [IntlChar::isIDIgnorable](intlchar.isidignorable.md)— Перевірити, чи символ ігнорується\n-   [IntlChar::isIDPart](intlchar.isidpart.md)— Перевірити, чи можна використовувати символ в ідентифікаторі\n-   [IntlChar::isIDStart](intlchar.isidstart.md)— Перевірити, чи можна використовувати символ на початку ідентифікатора\n-   [IntlChar::isISOControl](intlchar.isisocontrol.md)— Перевірити, чи є символ керуючим відповідно до ISO\n-   [IntlChar::isJavaIDPart](intlchar.isjavaidpart.md)— Перевірити, чи символ допустимий в ідентифікаторі Java\n-   [IntlChar::isJavaIDStart](intlchar.isjavaidstart.md)— Перевірити, чи символ може бути першим в ідентифікаторі Java\n-   [IntlChar::isJavaSpaceChar](intlchar.isjavaspacechar.md)— Перевірити, чи є символ пробельним з точки зору Java\n-   [IntlChar::islower](intlchar.islower.md)— Перевірити, чи у нижньому регістрі символ\n-   [IntlChar::isMirrored](intlchar.ismirrored.md)— Перевірити, якщо символ має властивість Bidi\\_Mirrored\n-   [IntlChar::isprint](intlchar.isprint.md)— Перевіряє, чи символ відображається.\n-   [IntlChar::ispunct](intlchar.ispunct.md)— Перевіряє, чи є символом пунктуації.\n-   [IntlChar::isspace](intlchar.isspace.md)— Перевіряє, чи символ є пробельним.\n-   [IntlChar::istitle](intlchar.istitle.md)— Перевірити, чи символ є титульним (Titlecase)\n-   [IntlChar::isUAlphabetic](intlchar.isualphabetic.md)— Перевірити, чи встановлено символ символу Alphabetic\n-   [IntlChar::isULowercase](intlchar.isulowercase.md)— Перевірити, чи символ є символом у нижньому регістрі\n-   [IntlChar::isupper](intlchar.isupper.md) — Перевірити, чи входить символ у категорію \"Lu\" (літера у верхньому регістрі)\n-   [IntlChar::isUUppercase](intlchar.isuuppercase.md)— Перевірити, чи символ є символом у верхньому регістрі\n-   [IntlChar::isUWhiteSpace](intlchar.isuwhitespace.md)— Перевірити, чи має символ властивість White\\_Space (пробіловий символ)\n-   [IntlChar::isWhitespace](intlchar.iswhitespace.md)— Перевірити, чи символ є пробільним з точки зору ICU\n-   [IntlChar::isxdigit](intlchar.isxdigit.md)— Перевіряє, чи кодова точка відноситься до шістнадцяткової цифри.\n-   [IntlChar::ord](intlchar.ord.md)— Отримати код символ Unicode\n-   [IntlChar::tolower](intlchar.tolower.md)— Перетворює символ Unicode на нижній регістр\n-   [IntlChar::totitle](intlchar.totitle.md)— Перетворює символ Unicode на титульний регістр (titlecase)\n-   [IntlChar::toupper](intlchar.toupper.md)— Перетворює символ Unicode у верхній регістр\n","title":"IntlChar","contentType":2,"navigation":[{"function.idn-to-utf8.md":"« idn\\_to\\_utf8"},{"intlchar.charage.md":"IntlChar::charAge »"},{"index.md":"PHP Manual"},{"book.intl.md":"intl"}]}},"__N_SSG":true}