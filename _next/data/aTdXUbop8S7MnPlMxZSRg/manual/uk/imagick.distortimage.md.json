{"pageProps":{"page":{"slug":"imagick.distortimage.md","content":"# Imagick::distortImage\n\n(PECL imagick 2 >= 2.0.1, PECL imagick 3)\n\nImagick::distortImage — Спотворює зображення, використовуючи різні методи спотворення\n\n### Опис\n\n```methodsynopsis\npublic Imagick::distortImage(int $method, array $arguments, bool $bestfit): bool\n```\n\nСпотворює зображення, використовуючи різні методи спотворення, зіставляючи пошукові запити кольору вихідного зображення з новим цільовим зображенням, зазвичай того ж розміру, що й вихідне зображення, якщо для параметра \"bestfit\" встановлено значення **`true`**\n\nЯкщо параметр \"bestfit\" увімкнений і це дозволяє спотворення, цільове зображення налаштовується таким чином, щоб вихідне зображення повністю відповідало кінцевому цільовому зображенню, яке матиме відповідний розмір та зміщення. Також у багатьох випадках при порівнянні враховуватиметься віртуальне зміщення вихідного зображення.\n\nЦей метод доступний, якщо Imagick був скомпільований з версією ImageMagick 6.3.6 або старшим.\n\n### Список параметрів\n\n`method`\n\nМетод искажения изображения. Смотрите[константи спотворення](imagick.constants.md#imagick.constants.distortion)\n\n`arguments`\n\nАргументи обраного методу спотворення.\n\n`bestfit`\n\nСпроба змінити розмір призначення, щоб він відповідав спотвореному джерелу.\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Помилки\n\nВикликає ImagickException у разі виникнення помилки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::distortImage()\\*\\* :\\*\\*\n\nСпотворення зображення та відображення у браузері.\n\n```php\n<?php\n/* Создание нового объекта */\n$im = new Imagick();\n\n/* Создание нового узора в виде шахматной доски */\n$im->newPseudoImage(100, 100, \"pattern:checkerboard\");\n\n/* Установка формата изображения на png */\n$im->setImageFormat('png');\n\n/* Заполнение новых видимых областей прозрачным цветом */\n$im->setImageVirtualPixelMethod(Imagick::VIRTUALPIXELMETHOD_TRANSPARENT);\n\n/* Активация матовости */\n$im->setImageMatte(true);\n\n/* Контрольные точки для искажения */\n$controlPoints = array( 10, 10,\n                        10, 5,\n\n                        10, $im->getImageHeight() - 20,\n                        10, $im->getImageHeight() - 5,\n\n                        $im->getImageWidth() - 10, 10,\n                        $im->getImageWidth() - 10, 20,\n\n                        $im->getImageWidth() - 10, $im->getImageHeight() - 10,\n                        $im->getImageWidth() - 10, $im->getImageHeight() - 30);\n\n/* Выполнение искажения */\n$im->distortImage(Imagick::DISTORTION_PERSPECTIVE, $controlPoints, true);\n\n/* Вывод изображения */\nheader(\"Content-Type: image/png\");\necho $im;\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n![Приклад використання Imagick::distortImage()](images/c0d23d2d6769e53e24a1b3136c064577-distortImage.png)\n\n### Дивіться також\n\n-   [Imagick::blurImage()](imagick.blurimage.md) \\- Додає фільтр розмиття до зображення\n-   [Imagick::motionBlurImage()](imagick.motionblurimage.md) \\- Імітує розмиття у русі\n-   [Imagick::radialBlurImage()](imagick.radialblurimage.md) \\- Радіальне розмиття зображення\n","title":"Imagick::distortImage","contentType":2,"navigation":[{"imagick.displayimages.md":"« Imagick::displayImages"},{"imagick.drawimage.md":"Imagick::drawImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}