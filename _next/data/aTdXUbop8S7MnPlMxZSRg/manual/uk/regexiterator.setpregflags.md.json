{"pageProps":{"page":{"slug":"regexiterator.setpregflags.md","content":"# RegexIterator::setPregFlags\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nRegexIterator::setPregFlags — Завдання прапорів регулярного виразу\n\n### Опис\n\n```methodsynopsis\npublic RegexIterator::setPregFlags(int $pregFlags): void\n```\n\nВстановлює прапори регулярного виразу.\n\n### Список параметрів\n\n`pregFlags`\n\nПрапори налаштування регулярного виразу. Список можливих прапорів наведено в описі методу [RegexIterator::\\_\\_construct()](regexiterator.construct.md)\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Приклад використання** RegexIterator::setPregFlags()\\*\\*\\*\\*\n\nСтворює новий об'єкт RegexIterator, який відбирає елементи масиву, ключі яких починаються зі слова 'test'.\n\n```php\n<?php\n$test = array ('test 1', 'another test', 'test 123');\n\n$arrayIterator = new ArrayIterator($test);\n$regexIterator = new RegexIterator($arrayIterator, '/^test/', RegexIterator::GET_MATCH);\n\n$regexIterator->setPregFlags(PREG_OFFSET_CAPTURE);\n\nforeach ($regexIterator as $key => $value) {\n    var_dump($value);\n}\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(1) {\n  [0]=>\n  array(2) {\n    [0]=>\n    string(4) \"test\"\n    [1]=>\n    int(0)\n  }\n}\narray(1) {\n  [0]=>\n  array(2) {\n    [0]=>\n    string(4) \"test\"\n    [1]=>\n    int(0)\n  }\n}\n```\n\n### Дивіться також\n\n-   [RegexIterator::getPregFlags()](regexiterator.getpregflags.md) \\- Повертає прапори регулярного вираження\n","title":"RegexIterator::setPregFlags","contentType":2,"navigation":[{"regexiterator.setmode.md":"« RegexIterator::setMode"},{"spl.interfaces.md":"Інтерфейси »"},{"index.md":"PHP Manual"},{"class.regexiterator.md":"RegexIterator"}]}},"__N_SSG":true}