{"pageProps":{"page":{"slug":"function.db2-pconnect.md","content":"# db2\\_pconnect\n\n(PECL ibm\\_db2 >= 1.0.0)\n\ndb2\\_pconnect — Повертає постійне з'єднання з базою даних\n\n### Опис\n\n```methodsynopsis\ndb2_pconnect(    string $database,    ?string $username,    ?string $password,    array $options = []): resource|false\n```\n\nПовертає постійне з'єднання з базою даних IBM DB2 Universal Database, IBM Cloudscape або Apache Derby.\n\nДля отримання додаткової інформації про постійні з'єднання дивіться [Постійні з'єднання з базами даних](features.persistent-connections.md)\n\nВиклик [db2\\_close()](function.db2-close.md) у постійному з'єднанні завжди повертає **`true`**, але базове клієнтське з'єднання DB2 залишається відкритим і чекає на обслуговування наступного відповідного запиту **db2\\_pconnect()**\n\nКористувачі, які використовують ibm\\_db2 версії 1.9.0 або пізнішої повинні знати, що модуль виконає відкат транзакції для постійних з'єднань в кінці запиту, тим самим завершивши транзакцію. Це запобігає перенесенню блоку транзакції на наступний запит, який використовує це з'єднання, якщо виконання скрипта завершується раніше, ніж блок транзакції.\n\n### Список параметрів\n\n`database`\n\nПсевдонім бази даних у клієнтському каталозі DB2.\n\n`username`\n\nІм'я користувача, під яким здійснюється підключення до бази даних.\n\n`password`\n\nПароль, який використовується для підключення до бази даних.\n\n`options`\n\nАсоціативний масив параметрів підключення, які впливають на поведінку підключення, де допустимими ключами масиву є:\n\n`autocommit`\n\nПередача значения`DB2_AUTOCOMMIT_ON` включає автоматичну фіксацію цього дескриптора з'єднання.\n\nПередача значения`DB2_AUTOCOMMIT_OFF` вимикає автоматичну фіксацію цього дескриптора з'єднання.\n\n`DB2_ATTR_CASE`\n\nПередача значения`DB2_CASE_NATURAL` показує, що імена стовпців повертаються у природному регістрі.\n\nПередача значения`DB2_CASE_LOWER` вказує, що імена стовпців повертаються у нижньому регістрі.\n\nПередача значения`DB2_CASE_UPPER` вказує, що імена стовпців повертаються у верхньому регістрі.\n\n`CURSOR`\n\nПередача значения`DB2_FORWARD_ONLY` задає курсор лише вперед для ресурсу оператора. Це тип курсору, який підтримується на всіх серверах баз даних.\n\nПередача значения`DB2_SCROLLABLE` задає курсор, що прокручується, для ресурсу оператора. Цей режим включає довільний доступ до рядків у наборі результатів, але наразі підтримується лише IBM DB2 Universal Database.\n\nНаступна нова опція доступна в ibm\\_db2 версії 1.7.0 та новіші.\n\n`trustedcontext`\n\nПередача значення DB2\\_TRUSTED\\_CONTEXT\\_ENABLE включає довірений контекст цього дескриптора з'єднання. Параметр не можна встановити за допомогою [db2\\_set\\_option()](function.db2-set-option.md)\n\nКлюч працює лише в тому випадку, якщо база даних каталогізована (навіть якщо база даних є локальною) або якщо ви вкажете повний DSN під час створення з'єднання.\n\nЩоб каталогізувати базу даних, використовуйте такі команди:\n\ndb2 catalog tcpip node loopback remoteserverdb2 catalog databaseas at node loopback db2 \"update dbm cfg using svcename \" db2set DB2COMM=TCPIP\n\nНаступні нові параметри i5/OS доступні в ibm\\_db2 версії 1.5.1 та новіші.\n\n**Підказка**\n\nКонфліктуючі атрибути сполуки, що використовуються разом із постійними сполуками, можуть призвести до невизначених результатів у i5/OS. Політики сайту мають бути встановлені для всіх програм, які використовують кожен профіль користувача з постійним підключенням. При використанні постійних з'єднань пропонується значення за замовчуванням DB2\\_AUTOCOMMIT\\_ON.\n\n`i5_lib`\n\nСимвольне значення, що вказує стандартну бібліотеку, яка буде використовуватися для дозволу некваліфікованих посилань на файли. Неможливо, якщо з'єднання використовує режим іменування системи.\n\n`i5_naming`\n\nЗначение`DB2_I5_NAMING_ON` включає режим назви системи DB2 UDB CLI iSeries. Файли кваліфікуються за допомогою роздільника косої межі (/). Некваліфіковані файли дозволяються за допомогою списку бібліотек для завдання.\n\nЗначение`DB2_I5_NAMING_OFF` вимикає стандартний режим іменування CLI DB2 UDB, який є іменем SQL. Файли кваліфікуються за допомогою роздільника точки (.). Некваліфіковані файли дозволяються за допомогою або бібліотеки за промовчанням, або поточного ідентифікатора користувача.\n\n`i5_commit`\n\nАтрибут`i5_commit` має бути встановлений до виклику **db2\\_pconnect()**. Якщо значення змінюється після того, як з'єднання було встановлено та з'єднання встановлено з віддаленим джерелом даних, зміна не набуде чинності до наступного успішного **db2\\_pconnect()** для дескриптора з'єднання.\n\n> **Зауваження** :\n> \n> Параметр php.ini`ibm_db2.i5_allow_commit`\\==0 или`DB2_I5_TXN_NO_COMMIT` є значенням за промовчанням, але його можна змінити за допомогою параметра `i5_commit`\n\n`DB2_I5_TXN_NO_COMMIT` - Контроль фіксації не використовується.\n\n`DB2_I5_TXN_READ_UNCOMMITTED` - Брудне читання, неповторні reads, and phantoms are possible.\n\n`DB2_I5_TXN_READ_COMMITTED` - Брудне читання неможливе. Можливі неповторне читання та фантоми.\n\n`DB2_I5_TXN_REPEATABLE_READ` - Брудне читання та неповторні читання неможливі. Можливі фантоми.\n\n`DB2_I5_TXN_SERIALIZABLE` - Транзакції серіалізуються. Брудне читання, неповторне читання та фантоми неможливі.\n\n`i5_query_optimize`\n\n`DB2_FIRST_IO` Всі запити оптимізовані для максимально швидкого повернення першої сторінки виводу. Ця мета добре працює, коли висновок контролюється користувачем, який швидше за все скасує запит після перегляду першої сторінки вихідних даних. Запити, закодовані з пропозицією OPTIMIZE FOR nnn ROWS, відповідають меті, зазначеній у реченні.\n\n`DB2_ALL_IO` Усі запити оптимізовані з метою виконати весь запит про завершення у найкоротший термін. Це хороший варіант, коли вихідні дані запиту записуються у файл або звіт або коли інтерфейс ставить вихідні дані у чергу. Запити, закодовані з пропозицією OPTIMIZE FOR nnn ROWS, відповідають меті, зазначеній у реченні. Це значення за промовчанням.\n\n`i5_dbcs_alloc`\n\n`DB2_I5_DBCS_ALLOC_ON`Значение включает схему распределения DB2 6X для увеличения размера столбца преобразования DBCS.\n\n`DB2_I5_DBCS_ALLOC_OFF` Значення вимикає схему розподілу DB2 6X збільшення розміру стовпця перетворення DBCS.\n\n> **Зауваження** :\n> \n> Параметр php.ini`ibm_db2.i5_dbcs_alloc`\\==0 или`DB2_I5_DBCS_ALLOC_OFF` є значенням за промовчанням, але його можна змінити за допомогою параметра `i5_dbcs_alloc`\n\n`i5_date_fmt`\n\n`DB2_I5_FMT_ISO` - Використовується формат дати Міжнародної організації стандартизації (ISO) yyyy-mm-dd. Це значення за промовчанням.\n\n`DB2_I5_FMT_USA` - Використовується формат дати США mm/dd/yyyy.\n\n`DB2_I5_FMT_EUR` - Використовується європейський формат дати dd.mm.yyyy.\n\n`DB2_I5_FMT_JIS` - Використовується японський формат дати yyyy-mm-dd.\n\n`DB2_I5_FMT_MDY` - Використовується формат дати mm/dd/yyyy.\n\n`DB2_I5_FMT_DMY` - Використовується формат дати dd/mm/yyyy.\n\n`DB2_I5_FMT_YMD` - Використовується формат дати yy/mm/dd.\n\n`DB2_I5_FMT_JUL` - Використовується юліанський формат дати yy/ddd.\n\n`DB2_I5_FMT_JOB`\\- Используется задание по умолчанию.\n\n`i5_date_sep`\n\n`DB2_I5_SEP_SLASH` -В якості роздільника дати використовується коса характеристика (/). Це значення за промовчанням.\n\n`DB2_I5_SEP_DASH` - Як роздільник дати використовується тире (-).\n\n`DB2_I5_SEP_PERIOD` - Як роздільник дати використовується точка (.).\n\n`DB2_I5_SEP_COMMA` - Як роздільник дати використовується кома (,).\n\n`DB2_I5_SEP_BLANK` - Як роздільник дати використовується пробіл.\n\n`DB2_I5_SEP_JOB`\\- Используется задание по умолчанию.\n\n`i5_time_fmt`\n\n`DB2_I5_FMT_ISO` - Використовується формат часу Міжнародної організації стандартизації (ISO) hh.mm.ss. Це значення за промовчанням.\n\n`DB2_I5_FMT_USA` - Використовується формат часу США hh:mmxx, де xx це AM або PM.\n\n`DB2_I5_FMT_EUR`\\- Используется европейский формат времени hh.mm.ss.\n\n`DB2_I5_FMT_JIS` - Використовується японський промисловий стандартний формат hh:mm:ss.\n\n`DB2_I5_FMT_HMS`\\- Используется формат hh:mm:ss.\n\n`i5_time_sep`\n\n`DB2_I5_SEP_COLON` - Двокрапка (:) використовується як роздільник часу. Це значення за промовчанням.\n\n`DB2_I5_SEP_PERIOD` - Точка (.) використовується як роздільник часу.\n\n`DB2_I5_SEP_COMMA` - Кома (,) використовується як роздільник часу.\n\n`DB2_I5_SEP_BLANK` - Пробіл використовується як роздільник часу.\n\n`DB2_I5_SEP_JOB`\\- Используется задание по умолчанию.\n\n`i5_decimal_sep`\n\n`DB2_I5_SEP_PERIOD` - Як десятковий роздільник використовується точка (.). Це значення за промовчанням.\n\n`DB2_I5_SEP_COMMA` - Як десятковий роздільник використовується кома (,).\n\n`DB2_I5_SEP_JOB`\\- Используется задание по умолчанию.\n\nНаступна нова опція i5/OS доступна в ibm\\_db2 версії 1.8.0 та новіші.\n\n`i5_libl`\n\nСимвольне значення, що вказує на список бібліотек, який буде використовуватися для дозволу некваліфікованих посилань на файли. Вкажіть елементи списку бібліотек, розділені пробілами 'i5\\_libl'=>\"MYLIB YOURLIB ANYLIB\".\n\n> **Зауваження** :\n> \n> i5\\_libl викликає qsys2/qcmdexc ('cmd',cmdlen), який доступний тільки в i5/OS V5R4 та новіший.\n\n### Значення, що повертаються\n\nПовертає ресурс дескриптора підключення у разі успішної спроби підключення . **db2\\_pconnect()** намагається повторно використовувати існуючий ресурс підключення, який точно відповідає параметрам `database` `username`и`password`. Якщо спроба підключення не вдалася, **db2\\_pconnect()** поверне **`false`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| ibm\\_db2 1.9.0 | Активні транзакції у постійному з'єднанні будуть відкочуватися наприкінці кожного запиту. |\n| ibm\\_db2 1.8.0 | Параметр`i5_libl` доступний для користувачів i5/OS. |\n| ibm\\_db2 1.7.0 | Доступний параметр `trustedcontext` |\n| ibm\\_db2 1.5.1 | Параметри `i5_lib` `i5_naming` `i5_commit` `i5_query_optimize` `i5_dbcs_alloc` `i5_date_fmt` `i5_date_sep` `i5_time_fmt` `i5_time_sep`и`i5_decimal_sep` доступні для користувачів i5/OS. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** db2\\_pconnect()\\*\\*\\*\\*\n\nУ наступному прикладі перший виклик **db2\\_pconnect()** повертає новий ресурс постійного з'єднання. Другий виклик **db2\\_pconnect()** повертає ресурс постійного з'єднання, який просто повторно використовує перший ресурс постійного з'єднання.\n\n```php\n<?php\n$database = 'SAMPLE';\n$user = 'db2inst1';\n$password = 'ibmdb2';\n\n$pconn = db2_pconnect($database, $user, $password);\n\nif ($pconn) {\n    echo \"Постоянное соединение успешно установлено.\";\n}\nelse {\n    echo \"Постоянное соединение завершилось ошибкой.\";\n}\n\n$pconn2 = db2_pconnect($database, $user, $password);\nif ($pconn) {\n    echo \"Второе постоянное соединение успешно установлено.\";\n}\nelse {\n    echo \"Второе постоянное соединение завершилось ошибкой\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПостоянное соединение успешно установлено.\nВторое постоянное соединение успешно установлено.\n```\n\n**Приклад #2 Використання довіреного контексту**\n\nУ наступному прикладі показано, як увімкнути довірений контекст, переключити користувачів та отримати поточний ідентифікатор користувача.\n\n```php\n<?php\n\n$database = \"SAMPLE\";\n$hostname = \"localhost\";\n$port = 50000;\n$authID = \"db2inst1\";\n$auth_pass = \"ibmdb2\";\n\n$tc_user = \"tcuser\";\n$tc_pass = \"tcpassword\";\n\n$dsn = \"DATABASE=$database;HOSTNAME=$hostname;PORT=$port;\n  PROTOCOL=TCPIP;UID=$authID;PWD=$auth_pass;\";\n$options = array (\"trustedcontext\" => DB2_TRUSTED_CONTEXT_ENABLE);\n\n$tc_conn = db2_pconnect($dsn, \"\", \"\", $options);\nif($tc_conn) {\n    echo \"Явное доверенное соединение успешно установлено.\\n\";\n\n    if(db2_get_option($tc_conn, \"trustedcontext\")) {\n        $userBefore = db2_get_option($tc_conn, \"trusted_user\");\n\n        // Поработайте как пользователь 1.\n\n        // Переход на доверенного пользователя.Switching to trusted user.\n        $parameters = array(\"trusted_user\" => $tc_user,\n          \"trusted_password\" => $tcuser_pass);\n        $res = db2_set_option ($tc_conn, $parameters, 1);\n\n        $userAfter = db2_get_option($tc_conn, \"trusted_user\");\n        // Сделайте больше в качестве доверенного пользователя.\n\n        if($userBefore != $userAfter) {\n            echo \"Пользователь был переключён.\" . \"\\n\";\n        }\n    }\n\n    db2_close($tc_conn);\n}\nelse {\n    echo \"Явное доверенное соединение завершилось ошибкой.\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nЯвное доверенное соединение успешно установлено\nПользователь был переключён.\n```\n\n### Дивіться також\n\n-   [db2\\_connect()](function.db2-connect.md) \\- Повертає з'єднання з базою даних\n","title":"db2\\_pconnect","contentType":2,"navigation":[{"function.db2-pclose.md":"« db2\\_pclose"},{"function.db2-prepare.md":"db2\\_prepare »"},{"index.md":"PHP Manual"},{"ref.ibm-db2.md":"Функції IBM DB2"}]}},"__N_SSG":true}