{"pageProps":{"page":{"slug":"function.strcspn.md","content":"# strcspn\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nstrcspn — Повертає довжину ділянки на початку рядка, що не відповідає масці\n\n### Опис\n\n```methodsynopsis\nstrcspn(    string $string,    string $characters,    int $offset = 0,    ?int $length = null): int\n```\n\nПовертає довжину ділянки на початку рядка `string`, Котрий *не містить* жодного символу з рядка `characters`\n\nЯкщо параметри `offset`и`length` не вказано, то весь вміст `string` буде досліджено. Якщо ці параметри вказані, то ефект буде таким самим, як при виклику `strcspn(substr($string, $offset, $length), $characters)`(смотрите[substr](function.substr.md) для додаткової інформації).\n\n### Список параметрів\n\n`string`\n\nРядок для дослідження.\n\n`characters`\n\nРядок, що містить кожен із заборонених символів.\n\n`offset`\n\nПозиция в строке`string`, З якої починається пошук.\n\nЯкщо `offset` вказано і не є негативним значенням, тоді **strcspn()** почне обстеження рядка `string` з позиції, зазначеної в `offset`. . Наприклад: у рядку '`abcdef`', символ у позиції це '`a`', символ у позиції це '`c`', і так далі.\n\nЯкщо `offset` вказано, але є негативним числом, то [strspn()](function.strspn.md) почне обстеження рядка `string` з позиції, зазначеної у параметрі `offset`, починаючи з кінця рядка `string`\n\n`length`\n\nДлина фрагмента из`string`для обследования.\n\nЯкщо параметр `length` вказано і не є негативним значенням, тоді буде обстежено `length` символів з `string`відраховуючи від стартової позиції.\n\nЯкщо `length` передано і значення негативне, то перевірятимуться символи, починаючи зі стартової позиції до `length` з кінця `string`\n\n### Значення, що повертаються\n\nВозвращает длину начального фрагмента строки`string`, Що складається повністю з символів, *не* включених до параметра `characters`\n\n> **Зауваження** :\n> \n> Когда параметр`offset` вказано, довжина, що повертається визначається, починаючи з цієї позиції, а не з початку рядка `string`\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `length` тепер допускає значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** strcspn()\\*\\*\\*\\*\n\n```php\n<?php\n$a = strcspn('abcd',  'apple');\n$b = strcspn('abcd',  'banana');\n$c = strcspn('hello', 'l');\n$d = strcspn('hello', 'world');\n$e = strcspn('abcdhelloabcd', 'abcd', -9);\n$f = strcspn('abcdhelloabcd', 'abcd', -9, -5);\n\nvar_dump($a);\nvar_dump($b);\nvar_dump($c);\nvar_dump($d);\nvar_dump($e);\nvar_dump($f);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(0)\nint(0)\nint(2)\nint(2)\nint(5)\nint(4)\n```\n\n### Примітки\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n### Дивіться також\n\n-   [strspn()](function.strspn.md) \\- Повертає довжину ділянки на початку рядка, що повністю відповідає масці\n","title":"strcspn","contentType":2,"navigation":[{"function.strcoll.md":"« strcoll"},{"function.strip-tags.md":"strip\\_tags »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}