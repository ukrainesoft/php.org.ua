{"pageProps":{"page":{"slug":"jsonserializable.jsonserialize.md","content":"# JsonSerializable::jsonSerialize\n\n(PHP 5 >= 5.4.0, PHP 7, PHP 8)\n\nJsonSerializable::jsonSerialize — Задає дані, які мають бути серіалізовані в JSON\n\n### Опис\n\n```methodsynopsis\npublic JsonSerializable::jsonSerialize(): mixed\n```\n\nСеріалізує об'єкт значення, яке спочатку може бути серіалізоване функцією [json\\_encode()](function.json-encode.md)\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає дані, які можуть бути серіалізовані [json\\_encode()](function.json-encode.md), які є значенням будь-якого типу, крім [resource](language.types.resource.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** JsonSerializable::jsonSerialize()**, що повертає масив (array)**\n\n```php\n<?php\n\nclass ArrayValue implements JsonSerializable {\n    private $array;\n    public function __construct(array $array) {\n        $this->array = $array;\n    }\n\n    public function jsonSerialize(): mixed {\n        return $this->array;\n    }\n}\n\n$array = [1, 2, 3];\necho json_encode(new ArrayValue($array), JSON_PRETTY_PRINT);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n[\n    1,\n    2,\n    3\n]\n```\n\n**Приклад #2 Приклад використання** JsonSerializable::jsonSerialize()**, що повертає асоціативний масив (array)**\n\n```php\n<?php\n\nclass ArrayValue implements JsonSerializable {\n    private $array;\n    public function __construct(array $array) {\n        $this->array = $array;\n    }\n\n    public function jsonSerialize() {\n        return $this->array;\n    }\n}\n\n$array = ['foo' => 'bar', 'quux' => 'baz'];\necho json_encode(new ArrayValue($array), JSON_PRETTY_PRINT);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n{\n    \"foo\": \"bar\",\n    \"quux\": \"baz\"\n}\n```\n\n**Приклад #3 Приклад використання** JsonSerializable::jsonSerialize()**, що повертає ціле значення (int)**\n\n```php\n<?php\n\nclass IntegerValue implements JsonSerializable {\n    private $number;\n    public function __construct($number) {\n        $this->number = (int) $number;\n    }\n\n    public function jsonSerialize() {\n        return $this->number;\n    }\n}\n\necho json_encode(new IntegerValue(1), JSON_PRETTY_PRINT);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n1\n```\n\n**Приклад #4 Приклад використання** JsonSerializable::jsonSerialize()**, що повертає рядок (string)**\n\n```php\n<?php\n\nclass StringValue implements JsonSerializable {\n    private $string;\n    public function __construct($string) {\n        $this->string = (string) $string;\n    }\n\n    public function jsonSerialize() {\n        return $this->string;\n    }\n}\n\necho json_encode(new StringValue('Hello!'), JSON_PRETTY_PRINT);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n\"Hello!\"\n```\n","title":"JsonSerializable::jsonSerialize","contentType":2,"navigation":[{"class.jsonserializable.md":"« JsonSerializable"},{"ref.json.md":"Функції JSON »"},{"index.md":"PHP Manual"},{"class.jsonserializable.md":"JsonSerializable"}]}},"__N_SSG":true}