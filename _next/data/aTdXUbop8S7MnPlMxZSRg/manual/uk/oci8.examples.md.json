{"pageProps":{"page":{"slug":"oci8.examples.md","content":"# Приклади\n\nЦі приклади виконуються під користувачем `HR`, Який є зразком з \"Human Resources\" схеми, що поставляється разом з базою даних Oracle. Можливо, потрібно розблокувати цей обліковий запис і перевстановити для нього пароль, щоб використовувати його.\n\nПриклади підключаються до бази даних `XE` на вашому комп'ютері. Ви можете замінити рядки з підключенням для використання баз даних.\n\n**Приклад #1 Простий запит**\n\nДаний приклад показує запит та результат. Вирази в OCI8 використовують послідовність з кроків підготовка-виконання-вибірка.\n\n```php\n<?php\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n// Подготовка выражения\n$stid = oci_parse($conn, 'SELECT * FROM departments');\nif (!$stid) {\n    $e = oci_error($conn);\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n// Выполним логику запроса\n$r = oci_execute($stid);\nif (!$r) {\n    $e = oci_error($stid);\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n// Получим результат запроса\nprint \"<table border='1'>\\n\";\nwhile ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {\n    print \"<tr>\\n\";\n    foreach ($row as $item) {\n        print \"    <td>\" . ($item !== null ? htmlentities($item, ENT_QUOTES) : \"\") . \"</td>\\n\";\n    }\n    print \"</tr>\\n\";\n}\nprint \"</table>\\n\";\n\noci_free_statement($stid);\noci_close($conn);\n\n?>\n```\n\n**Приклад #2 Вставка з використанням прив'язаних змінних**\n\nПрив'язування змінних підвищують продуктивність рахунок повторного використання контексту запиту і кешування. Також вони підвищують безпеку, блокуючи деякі типи SQL-ін'єкцій.\n\n```php\n<?php\n\n// Создайте таблицу перед выполнением:\n//   CREATE TABLE MYTABLE (mid NUMBER, myd VARCHAR2(20));\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$stid = oci_parse($conn, 'INSERT INTO MYTABLE (mid, myd) VALUES(:myid, :mydata)');\n\n$id = 60;\n$data = 'Some data';\n\noci_bind_by_name($stid, ':myid', $id);\noci_bind_by_name($stid, ':mydata', $data);\n\n$r = oci_execute($stid);  // выполнение и фиксация\n\nif ($r) {\n    print \"Была вставлена одна строка\";\n}\n\noci_free_statement($stid);\noci_close($conn);\n\n?>\n```\n\n**Приклад #3 Прив'язка у WHERE виразі запиту**\n\nПриклад одиничного прив'язування скаляра.\n\n```php\n<?php\n\n$conn = oci_connect(\"hr\", \"hrpwd\", \"localhost/XE\");\nif (!$conn) {\n    $m = oci_error();\n    trigger_error(htmlentities($m['message']), E_USER_ERROR);\n}\n\n$sql = 'SELECT last_name FROM employees WHERE department_id = :didbv ORDER BY last_name';\n$stid = oci_parse($conn, $sql);\n$didbv = 60;\noci_bind_by_name($stid, ':didbv', $didbv);\noci_execute($stid);\nwhile (($row = oci_fetch_array($stid, OCI_ASSOC)) != false) {\n    echo $row['LAST_NAME'] .\"<br>\\n\";\n}\n\n// Выведет\n//    Austin\n//    Ernst\n//    Hunold\n//    Lorentz\n//    Pataballa\n\noci_free_statement($stid);\noci_close($conn);\n\n?>\n```\n\n**Приклад #4 Вставлення даних у поле типу CLOB**\n\nВикористовуйте довгі двійкові об'єкти (BLOB) або довгі символьні об'єкти (CLOB). Цей приклад використовує тип даних CLOB.\n\n```php\n<?php\n\n// Создайте таблицу перед выполнением:\n//     CREATE TABLE MYTABLE (mykey NUMBER, myclob CLOB);\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$mykey = 12343;  // произвольный ключ для данного Приклада;\n\n$sql = \"INSERT INTO mytable (mykey, myclob)\n        VALUES (:mykey, EMPTY_CLOB())\n        RETURNING myclob INTO :myclob\";\n\n$stid = oci_parse($conn, $sql);\n$clob = oci_new_descriptor($conn, OCI_D_LOB);\noci_bind_by_name($stid, \":mykey\", $mykey, 5);\noci_bind_by_name($stid, \":myclob\", $clob, -1, OCI_B_CLOB);\noci_execute($stid, OCI_NO_AUTO_COMMIT);\n$clob->save(\"A very long string\");\n\noci_commit($conn);\n\n// Получение CLOB данных\n\n$query = 'SELECT myclob FROM mytable WHERE mykey = :mykey';\n\n$stid = oci_parse ($conn, $query);\noci_bind_by_name($stid, \":mykey\", $mykey, 5);\noci_execute($stid);\n\nprint '<table border=\"1\">';\nwhile ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_LOBS)) {\n    print '<tr><td>'.$row['MYCLOB'].'</td></tr>';\n    // В цикле, очищение больших переменных перед повторным получением данных, уменьшает пиковое потребление памяти PHP\n    unset($row);\n}\nprint '</table>';\n\n?>\n```\n\n**Приклад #5 Використання PL/SQL процедур, що зберігаються**\n\nВи повинні прив'язувати змінну для кожного значення, що повертається, і опціонально для кожного аргументу функції.\n\n```php\n<?php\n\n/*\n  До выполнения PHP-скрипта сойздайте хранимую процедуру в\n  SQL*Plus или SQL Developer:\n\n  CREATE OR REPLACE FUNCTION myfunc(p IN NUMBER) RETURN NUMBER AS\n  BEGIN\n      RETURN p * 3;\n  END;\n\n*/\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$p = 8;\n\n$stid = oci_parse($conn, 'begin :r := myfunc(:p); end;');\noci_bind_by_name($stid, ':p', $p);\noci_bind_by_name($stid, ':r', $r, 40);\n\noci_execute($stid);\n\nprint \"$r\\n\";   // выведет 24\n\noci_free_statement($stid);\noci_close($conn);\n\n?>\n```\n\n**Приклад #6 Використання PL/SQL процедур, що зберігаються**\n\nПри використанні процедур, що зберігаються, бажано прив'язувати змінні до кожного аргументу.\n\n```php\n<?php\n\n/*\n  До выполнения PHP-скрипта сойздайте хранимую процедуру в\n  SQL*Plus или SQL Developer:\n\n  CREATE OR REPLACE PROCEDURE myproc(p1 IN NUMBER, p2 OUT NUMBER) AS\n  BEGIN\n      p2 := p1 * 2;\n  END;\n\n*/\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$p1 = 8;\n\n$stid = oci_parse($conn, 'begin myproc(:p1, :p2); end;');\noci_bind_by_name($stid, ':p1', $p1);\noci_bind_by_name($stid, ':p2', $p2, 40);\n\noci_execute($stid);\n\nprint \"$p2\\n\";   // выведет 16\n\noci_free_statement($stid);\noci_close($conn);\n\n?>\n```\n\n**Приклад #7 Виклик PL/SQL процедур, що повертають `REF CURSOR`**\n\nКаждое возвращаемое значение из запроса является`REF CURSOR`\n\n```php\n<?php\n/*\n  Создайте PL/SQL хранимую процедуру:\n\n  CREATE OR REPLACE FUNCTION myfunc(p1 IN NUMBER) RETURN SYS_REFCURSOR AS\n      rc SYS_REFCURSOR;\n  BEGIN\n      OPEN rc FOR SELECT city FROM locations WHERE ROWNUM < p1;\n      RETURN rc;\n  END;\n*/\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\n\n$stid = oci_parse($conn, 'SELECT myfunc(5) AS mfrc FROM dual');\noci_execute($stid);\n\necho \"<table border='1'>\\n\";\nwhile (($row = oci_fetch_array($stid, OCI_ASSOC))) {\n    echo \"<tr>\\n\";\n    $rc = $row['MFRC'];\n    oci_execute($rc);  // возвращает значение поля из запроса в виде указателя\n    while (($rc_row = oci_fetch_array($rc, OCI_ASSOC))) {\n        echo \"    <td>\" . $rc_row['CITY'] . \"</td>\\n\";\n    }\n    oci_free_statement($rc);\n    echo \"</tr>\\n\";\n}\necho \"</table>\\n\";\n\n// Выведет:\n//   Beijing\n//   Bern\n//   Bombay\n//   Geneva\n\noci_free_statement($stid);\noci_close($conn);\n\n?>\n```\n","title":"Приклади","contentType":2,"navigation":[{"oci8.constants.md":"« Зумовлені константи"},{"oci8.connection.md":"Робота зі з'єднаннями OCI8 та Connection Pooling »"},{"index.md":"PHP Manual"},{"book.oci8.md":"OCI8"}]}},"__N_SSG":true}