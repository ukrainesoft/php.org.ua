{"pageProps":{"page":{"slug":"language.oop5.references.md","content":"## Об'єкти та посилання\n\nОдним із ключових моментів об'єктно-орієнтованої парадигми PHP, який часто обговорюється, є \"передача об'єктів за посиланням за умовчанням\". Це не зовсім правильно. Цей розділ уточнює це поняття, використовуючи деякі приклади.\n\nПосилання в PHP - це псевдонім (аліас), який дозволяє присвоїти двом змінним однакове значення. У PHP об'єктна змінна не містить сам об'єкт як значення. Така змінна містить лише ідентифікатор об'єкта, який дозволяє знайти конкретний об'єкт під час звернення до нього. Коли об'єкт передається як аргумент функції, повертається або присвоюється інший змінної, ці різні змінні не є псевдонімами (аліасами): вони містять копію ідентифікатора, який вказує на той самий об'єкт.\n\n**Приклад #1 Посилання та об'єкти**\n\n```php\n<?php\nclass A {\n    public $foo = 1;\n}\n\n$a = new A;\n$b = $a;     // $a и $b - копии одного идентификатора\n             // ($a) = ($b) = <id>\n$b->foo = 2;\necho $a->foo.\"\\n\";\n\n\n$c = new A;\n$d = &$c;    // $c и $d - ссылки\n             // ($c,$d) = <id>\n\n$d->foo = 2;\necho $c->foo.\"\\n\";\n\n\n$e = new A;\n\nfunction foo($obj) {\n    // ($obj) = ($e) = <id>\n    $obj->foo = 2;\n}\n\nfoo($e);\necho $e->foo.\"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n2\n2\n2\n```\n","title":"Об'єкти та посилання","contentType":2,"navigation":[{"language.oop5.late-static-bindings.md":"« Пізніше статичне зв'язування"},{"language.oop5.serialization.md":"Серіалізація об'єктів »"},{"index.md":"PHP Manual"},{"language.oop5.md":"Класи та об'єкти"}]}},"__N_SSG":true}