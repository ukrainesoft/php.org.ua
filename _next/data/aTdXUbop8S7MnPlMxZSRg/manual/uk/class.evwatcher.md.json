{"pageProps":{"page":{"slug":"class.evwatcher.md","content":"# Клас EvWatcher\n\n(PECL ev >= 0.2.0)\n\n## Вступ\n\n**EvWatcher** є базовим класом для всіх спостерігачів( [EvCheck](class.evcheck.md) [EvChild](class.evchild.md) і т.д.). Оскільки конструктор **EvWatcher** має модифікатор abstract, ви не повинні (і не зможете) створювати об'єкти цього класу безпосередньо.\n\n## Огляд класів\n\n```classsynopsis\n\n     \n    \n    \n    \n     \n      abstract\n      class EvWatcher\n     \n     {\n    \n    /* Свойства */\n    \n     public\n      $is_active;\n\n    public\n      $data;\n\n    public\n      $is_pending;\n\n    public\n      $priority;\n\n    /* Методы */\n    \n   abstract\n   public\n   __construct()\n\n    public\n   clear(): int\npublic\n   feed(\n    int\n     $revents\n   ): void\npublic\n   getLoop(): EvLoop\npublic\n   invoke(\n    int\n     $revents\n   ): void\npublic\n   keepalive(\n    bool\n     $value\n    = ?): bool\npublic\n   setCallback(\n    callable\n     $callback\n   ): void\npublic\n   start(): void\npublic\n   stop(): void\n\n   }\n```\n\n## Властивості\n\nis\\_active\n\n*Тільки читання*. Якщо спостерігач активний, то **`true`**, Якщо ні, то **`false`**\n\ndata\n\nДовільні дані користувача.\n\nis\\_pending\n\n*Тільки читання*. якщо спостерігач у режимі очікування, тобто має нерозібрані повідомлення, а callback-функція ще не запускалася, то **`true`**. В іншому випадку **`false`**. Поки спостерігач перебуває в режимі очікування (але не активний), ви *не повинні* змінювати його пріоритет.\n\npriority\n\nЦелое число (int) в диапазоне от\\*\\*`Ev::MINPRI`**до**`Ev::MAXPRI`\\*\\*. Очікуючі спостерігачі з більш високим пріоритетом будуть викликані раніше спостерігачів з нижчим пріоритетом, але пріоритет не перешкоджатиме запуску спостерігача (за винятком спостерігачів [EvIdle](class.evidle.md)). Спостерігачі [EvIdle](class.evidle.md) надають функціонал, що запобігає виклику, якщо є очікувані високопріоритетні повідомлення.\n\n## Зміст\n\n-   [EvWatcher::clear](evwatcher.clear.md)— Очистити статус очікування спостерігача\n-   [EvWatcher::\\_\\_construct](evwatcher.construct.md) \\- Абстрактний конструктор об'єкта спостерігача\n-   [EvWatcher::feed](evwatcher.feed.md)— Подає зазначені події у цикл подій\n-   [EvWatcher::getLoop](evwatcher.getloop.md)— Повертає цикл, який відповідає за спостерігача\n-   [EvWatcher::invoke](evwatcher.invoke.md) \\- Викликає callback-функцію спостерігача із заданою бітовою маскою прийнятих подій\n-   [EvWatcher::keepalive](evwatcher.keepalive.md)— Налаштовує, чи повертатиметься цикл\n-   [EvWatcher::setCallback](evwatcher.setcallback.md) \\- Встановлює нову callback-функцію для спостерігача\n-   [EvWatcher::start](evwatcher.start.md) \\- Запускає спостерігача\n-   [EvWatcher::stop](evwatcher.stop.md) \\- Зупиняє спостерігача\n","title":"Клас EvWatcher","contentType":2,"navigation":[{"evtimer.set.md":"« EvTimer::set"},{"evwatcher.clear.md":"EvWatcher::clear »"},{"index.md":"PHP Manual"},{"book.ev.md":"Ev"}]}},"__N_SSG":true}