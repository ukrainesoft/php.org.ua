{"pageProps":{"page":{"slug":"function.oci-connect.md","content":"# oci\\_connect\n\n(PHP 5, PHP 7, PHP 8, PECL OCI8 >= 1.1.0)\n\noci\\_connect — Встановлює з'єднання з базою даних Oracle\n\n### Опис\n\n```methodsynopsis\noci_connect(    string $username,    string $password,    ?string $connection_string = null,    string $encoding = \"\",    int $session_mode = OCI_DEFAULT): resource|false\n```\n\nПовертає ідентифікатор з'єднання, який використовується більшістю функцій модуля.\n\nДля підвищення продуктивності більшість програм повинні використовувати постійні з'єднання за допомогою [oci\\_pconnect()](function.oci-pconnect.md) замість \\*\\*oci\\_connect()\\*\\*Смотрите[Управління з'єднанням](oci8.connection.md) для більш детальної інформації з управління з'єднаннями та створення пулів підключень.\n\nДругий та наступні виклики функції **oci\\_connect()** з тими ж параметрами повернуть ідентифікатор відкритого з'єднання. Це означає, що транзакції використовують *одне і теж* базове з'єднання із базою даних. При необхідності поділу транзакцій рекомендується використовувати функцію [oci\\_new\\_connect()](function.oci-new-connect.md)\n\n### Список параметрів\n\n`username`\n\nІм'я користувача Oracle.\n\n`password`\n\nПароль`username`\n\n`connection_string`\n\nМістить `екземпляр Oracle` для підключення. Це може бути [» Easy Connect string](https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-E5358DEA-D619-4B7B-A799-3D2F802500F1), або Connect Name з файлу tnsnames.ora, або ім'я локального екземпляра Oracle.\n\nЯкщо не вказано окремо або **`null`**, PHP використовує змінні оточення, такі як **`TWO_TASK`**(на Linux) или\\*\\*`LOCAL`**(на Windows) и**`ORACLE_SID`\\*\\*для определения`екземпляра Oracle`для соединения.\n\nДля використання методу Easy Connect, PHP має бути з'єднаний з клієнтськими бібліотеками версії Oracle 10*g*или старше. Easy Connect string для Oracle 10*g*принимает следующую форму:*\\[//\\]host\\_name\\[:port\\]\\[/service\\_name\\]*. Починаючи з Oracle 11*g* синтаксис такий: *\\[//\\]host\\_name\\[:port\\]\\[/service\\_name\\]\\[:server\\_type\\]\\[/instance\\_name\\]*. У Oracle 19c було введено додаткові параметри, включаючи налаштування часу очікування та перевірки активності. Зверніться до документації Oracle. Назви служб можуть бути визначені за допомогою запуску Oracle утиліти `lsnrctl status` на сервері бази даних.\n\nФайл tnsnames.ora може знаходитись у пошуковому шляху Oracle Net, який включає /your/path/to/instantclient/network/admin, $ORACLE\\_HOME/network/admin та /etc. Як альтернативний варіант можна встановити `TNS_ADMIN` таким чином, щоб шлях $TNS\\_ADMIN/tnsnames.ora читав. Переконайтеся, що веб-сервер має доступ до файлу.\n\n`encoding`\n\nВизначає кодування, яке використовуватимуть клієнтські бібліотеки Oracle. Це кодування не обов'язково має збігатися з кодуванням, яке використовується в самій базі даних. Якщо вона не збігається, Oracle зробить все можливе для конвертування даних з-і в це кодування. Залежно від використовуваних кодувань, це може не завжди давати прийнятні результати. Перетворення також створює деякі додаткові витрати часу.\n\nЯкщо кодування не вказано, клієнтські бібліотеки Oracle будуть визначати його зі змінного оточення. **`NLS_LANG`**\n\nПередача цього параметра може зменшити час, що витрачається на з'єднання.\n\n`session_mode`\n\nЦей параметр доступний починаючи з версії PHP 5 (PECL OCI8 1.1) і набуває наступних значень: **`OCI_DEFAULT`** **`OCI_SYSOPER`** і **`OCI_SYSDBA`**. Якщо були вказані \\*\\*`OCI_SYSOPER`** або **`OCI_SYSDBA`\\*\\*ця функція спробує встановити привілейоване з'єднання, використовуючи зовнішні дані авторизації. За замовчуванням привілейовані з'єднання вимкнено. Щоб їх увімкнути, необхідно встановити [oci8.privileged\\_connect](oci8.configuration.md#ini.oci8.privileged-connect)в`On`\n\nУ версії PHP 5.3 (PECL OCI8 1.3.4) з'явилося значення **`OCI_CRED_EXT`**. Воно вказує Oracle використовувати зовнішню автентифікацію або автентифікацію за допомогою операційної системи, що має бути налаштовано у базі даних. Прапор **`OCI_CRED_EXT`** може бути використаний лише з ім'ям користувача \"/\" та порожнім паролем. . [oci8.privileged\\_connect](oci8.configuration.md#ini.oci8.privileged-connect) може набувати значення `On`или`Off`\n\n**`OCI_CRED_EXT`** може використовуватися спільно з режимами **`OCI_SYSOPER`** і **`OCI_SYSDBA`**\n\n**`OCI_CRED_EXT`** не підтримується у Windows через безпеку.\n\n### Значення, що повертаються\n\nПовертає ідентифікатор з'єднання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0, PECL OCI8 3.0.0 | `connection_string` тепер допускає значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** oci\\_connect()**с синтаксисом Easy Connect**\n\n```php\n<?php\n\n// Подключается к XE сервису (т.е. к базе данных) на \"localhost\"\n$conn = oci_connect('hr', 'welcome', 'localhost/XE');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$stid = oci_parse($conn, 'SELECT * FROM employees');\noci_execute($stid);\n\necho \"<table border='1'>\\n\";\nwhile ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {\n    echo \"<tr>\\n\";\n    foreach ($row as $item) {\n        echo \"    <td>\" . ($item !== null ? htmlentities($item, ENT_QUOTES) : \"\") . \"</td>\\n\";\n    }\n    echo \"</tr>\\n\";\n}\necho \"</table>\\n\";\n\n?>\n```\n\n**Приклад #2 Приклад використання** oci\\_connect()**используя имя Network Connect**\n\n```php\n<?php\n\n// Соединяется с базой данных MYDB описанной в файле tnsnames.ora,\n// Приклад записи в tnsnames.ora для MYDB:\n//   MYDB =\n//     (DESCRIPTION =\n//       (ADDRESS = (PROTOCOL = TCP)(HOST = mymachine.oracle.com)(PORT = 1521))\n//       (CONNECT_DATA =\n//         (SERVER = DEDICATED)\n//         (SERVICE_NAME = XE)\n//       )\n//     )\n\n$conn = oci_connect('hr', 'welcome', 'MYDB');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$stid = oci_parse($conn, 'SELECT * FROM employees');\noci_execute($stid);\n\necho \"<table border='1'>\\n\";\nwhile ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {\n    echo \"<tr>\\n\";\n    foreach ($row as $item) {\n        echo \"    <td>\" . ($item !== null ? htmlentities($item, ENT_QUOTES) : \"\") . \"</td>\\n\";\n    }\n    echo \"</tr>\\n\";\n}\necho \"</table>\\n\";\n\n?>\n```\n\n**Приклад #3 Приклад використання** oci\\_connect()\\*\\* з використанням певного набору символів\\*\\*\n\n```php\n<?php\n\n$conn = oci_connect('hr', 'welcome', 'localhost/XE', 'AL32UTF8');\nif (!$conn) {\n    $e = oci_error();\n    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);\n}\n\n$stid = oci_parse($conn, 'SELECT * FROM employees');\noci_execute($stid);\n\necho \"<table border='1'>\\n\";\nwhile ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {\n    echo \"<tr>\\n\";\n    foreach ($row as $item) {\n        echo \"    <td>\" . ($item !== null ? htmlentities($item, ENT_QUOTES) : \"\") . \"</td>\\n\";\n    }\n    echo \"</tr>\\n\";\n}\necho \"</table>\\n\";\n\n?>\n```\n\n**Приклад #4 Приклад використання багаторазових дзвінків **oci\\_connect()****\n\n```php\n<?php\n\n$c1 = oci_connect(\"hr\", \"welcome\", 'localhost/XE');\n$c2 = oci_connect(\"hr\", \"welcome\", 'localhost/XE');\n\n// $c1 и $c2 содержат одинаковый PHP id ресурса, что означает, что\n// они используют одинаковое базовое соединение\necho \"c1 is $c1<br>\\n\";\necho \"c2 is $c2<br>\\n\";\n\nfunction create_table($conn)\n{\n    $stmt = oci_parse($conn, \"create table hallo (test varchar2(64))\");\n    oci_execute($stmt);\n    echo \"Created table<br>\\n\";\n}\n\nfunction drop_table($conn)\n{\n    $stmt = oci_parse($conn, \"drop table hallo\");\n    oci_execute($stmt);\n    echo \"Dropped table<br>\\n\";\n}\n\nfunction insert_data($connname, $conn)\n{\n    $stmt = oci_parse($conn, \"insert into hallo\n              values(to_char(sysdate,'DD-MON-YY HH24:MI:SS'))\");\n    oci_execute($stmt, OCI_DEFAULT);\n    echo \"$connname inserted row without committing<br>\\n\";\n}\n\nfunction rollback($connname, $conn)\n{\n    oci_rollback($conn);\n    echo \"$connname rollback<br>\\n\";\n}\n\nfunction select_data($connname, $conn)\n{\n    $stmt = oci_parse($conn, \"select * from hallo\");\n    oci_execute($stmt, OCI_DEFAULT);\n    echo \"$connname ----selecting<br>\\n\";\n    while (oci_fetch($stmt)) {\n        echo \"    \" . oci_result($stmt, \"TEST\") . \"<br>\\n\";\n    }\n    echo \"$connname ----done<br>\\n\";\n}\n\ncreate_table($c1);\n\ninsert_data('c1', $c1);   // Вставить строку используя c1\nsleep(2);                 // остановиться для записи другой временной метки для следующей строки\ninsert_data('c2', $c2);   // Вставить строку используя c2\n\nselect_data('c1', $c1);   // Возврат результата обоих вставок\nselect_data('c2', $c2);   // Возврат результата обоих вставок\n\nrollback('c1', $c1);      // Откат используя c1\n\nselect_data('c1', $c1);   // Откат был произведён для обоих вставок\nselect_data('c2', $c2);\n\ndrop_table($c1);\n\n// Закрытие одного из соединений делает переменную PHP недоступной, но\n// другие могут быть использованы\noci_close($c1);\necho \"c1 is $c1<br>\\n\";\necho \"c2 is $c2<br>\\n\";\n\n\n// Вывод is:\n//    c1 is Resource id #5\n//    c2 is Resource id #5\n//    Created table\n//    c1 inserted row without committing\n//    c2 inserted row without committing\n//    c1 ----selecting\n//        09-DEC-09 12:14:43\n//        09-DEC-09 12:14:45\n//    c1 ----done\n//    c2 ----selecting\n//        09-DEC-09 12:14:43\n//        09-DEC-09 12:14:45\n//    c2 ----done\n//    c1 rollback\n//    c1 ----selecting\n//    c1 ----done\n//    c2 ----selecting\n//    c2 ----done\n//    Dropped table\n//    c1 is\n//    c2 is Resource id #5\n\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Некоректно встановлений або налаштований модуль OCI8 часто повідомлятиме про проблеми з'єднання або помилки. Дивіться [Встановлення/Налаштування](oci8.setup.md)для решения проблем.\n\n### Дивіться також\n\n-   [oci\\_pconnect()](function.oci-pconnect.md) \\- Встановлює постійне з'єднання із сервером Oracle\n-   [oci\\_new\\_connect()](function.oci-new-connect.md) \\- Встановлює нове з'єднання із сервером Oracle\n-   [oci\\_close()](function.oci-close.md) \\- Закриває з'єднання із сервером Oracle\n","title":"oci\\_connect","contentType":2,"navigation":[{"function.oci-commit.md":"« oci\\_commit"},{"function.oci-define-by-name.md":"oci\\_define\\_by\\_name »"},{"index.md":"PHP Manual"},{"ref.oci8.md":"OCI8 Функції"}]}},"__N_SSG":true}