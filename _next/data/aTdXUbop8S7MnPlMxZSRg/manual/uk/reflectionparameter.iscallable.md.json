{"pageProps":{"page":{"slug":"reflectionparameter.iscallable.md","content":"# ReflectionParameter::isCallable\n\n(PHP 5 >= 5.4.0, PHP 7, PHP 8)\n\nReflectionParameter::isCallable — Визначити, чи параметр має бути типу callable\n\n**Увага**\n\nЦя функція була *ВИДАЛЕНО* у PHP 8.0.0. Використання цієї функції не рекомендується.\n\nУ наведеному нижче прикладі показаний альтернативний спосіб отримання цієї інформації.\n\n### Опис\n\n```methodsynopsis\npublic ReflectionParameter::isCallable(): bool\n```\n\n**Увага**\n\nФункція поки що не документована; для знайомства доступний лише перелік аргументів.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо параметр [callable](language.types.callable.md) **`false`** в іншому випадку. У разі виникнення помилки поверне **`null`**\n\n### Приклади\n\n**Приклад #1 Альтернатива у PHP 8.0.0**\n\nПочинаючи з PHP 8.0.0, наступний код повідомить, чи підтримує тип об'єкти, що викликаються, в тому числі як частина об'єднання.\n\n```php\n<?php\nfunction declaresCallable(ReflectionParameter $reflectionParameter): bool\n{\n    $reflectionType = $reflectionParameter->getType();\n\n    if (!$reflectionType) return false;\n\n    $types = $reflectionType instanceof ReflectionUnionType\n        ? $reflectionType->getTypes()\n        : [$reflectionType];\n\n   return in_array('callable', array_map(fn(ReflectionNamedType $t) => $t->getName(), $types));\n}\n?>\n```\n","title":"ReflectionParameter::isCallable","contentType":2,"navigation":[{"reflectionparameter.isarray.md":"« ReflectionParameter::isArray"},{"reflectionparameter.isdefaultvalueavailable.md":"ReflectionParameter::isDefaultValueAvailable »"},{"index.md":"PHP Manual"},{"class.reflectionparameter.md":"ReflectionParameter"}]}},"__N_SSG":true}