{"pageProps":{"page":{"slug":"memcache.increment.md","content":"# Memcache::increment\n\n(PECL memcache >= 0.2.0)\n\nMemcache::increment — Збільшити значення елемента\n\n### Опис\n\n```methodsynopsis\nMemcache::increment(string $key, int $value = 1): int|false\n```\n\n**Memcache::increment()** збільшує значення елемента на величину `value`. Якщо елемент із зазначеним ключем `key` не числовий і не може бути приведений до числа, то його значення буде встановлено в `value`. . **Memcache::increment()** *не* створює елемент, якщо він раніше не існував.\n\n> **Зауваження** :\n> \n> Не используйте**Memcache::increment()** з елементами, які були збережені за допомогою стиснення, тому що відповідний виклик [Memcache::get()](memcache.get.md) обернеться невдачею.\n\nТакож можна використовувати функцію **memcache\\_increment()**\n\n### Список параметрів\n\n`key`\n\nКлюч елемент.\n\n`value`\n\nУвеличение значения на величину`value`\n\n### Значення, що повертаються\n\nУ разі успішного виконання повертає нове значення елемента або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Memcache::increment()\\*\\*\\*\\*\n\n```php\n<?php\n\n/* процедурное API */\n$memcache_obj = memcache_connect('memcache_host', 11211);\n/* инкрементировать счётчик на 2 */\n$current_value = memcache_increment($memcache_obj, 'counter', 2);\n\n/* объектно-ориентированное API */\n$memcache_obj = new Memcache;\n$memcache_obj->connect('memcache_host', 11211);\n/* инкрементировать счётчик на 3 */\n$current_value = $memcache_obj->increment('counter', 3);\n\n?>\n```\n\n### Дивіться також\n\n-   [Memcache::decrement()](memcache.decrement.md) \\- декрементувати значення елемента\n-   [Memcache::replace()](memcache.replace.md) \\- Замінити значення наявного елемента\n","title":"Memcache::increment","contentType":2,"navigation":[{"memcache.getversion.md":"« Memcache::getVersion"},{"memcache.pconnect.md":"Memcache::pconnect »"},{"index.md":"PHP Manual"},{"class.memcache.md":"Memcache"}]}},"__N_SSG":true}