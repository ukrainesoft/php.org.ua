{"pageProps":{"page":{"slug":"regexiterator.getpregflags.md","content":"# RegexIterator::getPregFlags\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nRegexIterator::getPregFlags — Повертає прапори регулярного виразу\n\n### Опис\n\n```methodsynopsis\npublic RegexIterator::getPregFlags(): int\n```\n\nПовертає прапори регулярного виразу. Список можливих прапорів наведено в описі методу [RegexIterator::\\_\\_construct()](regexiterator.construct.md)\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає бітову маску прапорів регулярного вираження.\n\n### Приклади\n\n**Приклад #1 Приклад використання** RegexIterator::getPregFlags()\\*\\*\\*\\*\n\n```php\n<?php\n\n$test = array ('str1' => 'test 1', 'teststr2' => 'another test', 'str3' => 'test 123');\n\n$arrayIterator = new ArrayIterator($test);\n$regexIterator = new RegexIterator($arrayIterator, '/\\s/', RegexIterator::SPLIT);\n$regexIterator->setPregFlags(PREG_SPLIT_NO_EMPTY | PREG_SPLIT_OFFSET_CAPTURE);\n\nif ($regexIterator->getPregFlags() & PREG_SPLIT_NO_EMPTY) {\n    echo 'Не принимать во внимание пустые участки';\n} else {\n    echo 'Рассматривать пустые участки';\n}\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nНе принимать во внимание пустые участки\n```\n\n### Дивіться також\n\n-   [RegexIterator::setPregFlags()](regexiterator.setpregflags.md) \\- Завдання прапорів регулярного вираження\n","title":"RegexIterator::getPregFlags","contentType":2,"navigation":[{"regexiterator.getmode.md":"« RegexIterator::getMode"},{"regexiterator.getregex.md":"RegexIterator::getRegex »"},{"index.md":"PHP Manual"},{"class.regexiterator.md":"RegexIterator"}]}},"__N_SSG":true}