{"pageProps":{"page":{"slug":"mysql-xdevapi-schema.getcollectionastable.md","content":"# Schema::getCollectionAsTable\n\n(No version information available, might only be in Git)\n\nSchema::getCollectionAsTable — Отримує колекцію як об'єкт класу Table\n\n### Опис\n\n```methodsynopsis\npublic mysql_xdevapi\\Schema::getCollectionAsTable(string $name): mysql_xdevapi\\Table\n```\n\nОтримує колекцію, але як об'єкт Table замість Collection.\n\n### Список параметрів\n\n`name`\n\nІм'я колекції, з якої створюється екземпляр об'єкта Table.\n\n### Значення, що повертаються\n\nПовертає об'єкт класу [mysql\\_xdevapi\\\\Table](class.mysql-xdevapi-table.md) для колекції.\n\n### Приклади\n\n**Приклад #1 Приклад использования метода**mysql\\_xdevapi\\\\Schema::getCollectionAsTable()\\*\\*\\*\\*\n\n```php\n<?php\n$session = mysql_xdevapi\\getSession(\"mysqlx://user:password@localhost\");\n$session->sql(\"DROP DATABASE IF EXISTS addressbook\")->execute();\n$session->sql(\"CREATE DATABASE addressbook\")->execute();\n\n$schema  = $session->getSchema(\"addressbook\");\n$collect = $schema->createCollection(\"people\");\n$collect->add('{\"name\": \"Fred\",  \"age\": 21, \"job\": \"Construction\"}')->execute();\n$collect->add('{\"name\": \"Wilma\", \"age\": 23, \"job\": \"Teacher\"}')->execute();\n\n$table      = $schema->getCollectionAsTable(\"people\");\n$collection = $schema->getCollection(\"people\");\n\nvar_dump($table);\nvar_dump($collection);\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nobject(mysql_xdevapi\\Table)#4 (1) {\n  [\"name\"]=>\n  string(6) \"people\"\n}\n\nobject(mysql_xdevapi\\Collection)#5 (1) {\n  [\"name\"]=>\n  string(6) \"people\"\n}\n```\n","title":"Schema::getCollectionAsTable","contentType":2,"navigation":[{"mysql-xdevapi-schema.getcollection.md":"« Schema::getCollection"},{"mysql-xdevapi-schema.getcollections.md":"Schema::getCollections »"},{"index.md":"PHP Manual"},{"class.mysql-xdevapi-schema.md":"mysql\\_xdevapi\\\\Schema"}]}},"__N_SSG":true}