{"pageProps":{"page":{"slug":"security.hiding.md","content":"# Приховування PHP\n\nЗагалом внесення неясності покращує захищеність системи. Але трапляються випадки, коли слід використовувати найменшу можливість.\n\nДекілька нескладних методик можуть допомогти вам приховати PHP, що ускладнює роботу потенційного зломщика, який намагається знайти пролом у вашій системі. Встановивши опцію expose\\_php в`off` у конфігураційному файлі php.ini, ви зменшите кількість доступної інформації хакеру.\n\nЩе одна методика полягає в налаштуванні веб-сервера таким чином, щоб він обробляв файли з різними розширеннями, як PHP-скрипти. Це можна вказати як у файлах .htaccess, так і конфігураційному файлі Apache. У такому разі ви зможете використовувати при написанні коду нестандартні розширення:\n\n**Приклад #1 Маскування PHP під інші мови програмування**\n\n\\# Тепер PHP-скрипти можуть мати ті ж розширення, що й інші мови програмування AddType application/x-httpd-php .asp .py .pl\n\nАбо приховати його зовсім:\n\n**Приклад #2 Використання невідомих розширень для PHP-скриптів**\n\n\\# Тепер PHP-скрипти можуть мати невідомі типи файлів AddType application/x-httpd-php .bop .foo .133t\n\nТакож можна сховати його під виглядом HTML-коду, що призведе до втрати продуктивності, тому що всі HTML-файли будуть оброблятися PHP:\n\n**Приклад #3 Маскування PHP-файлів під HTML**\n\n\\# Тепер PHP-скрипти виглядають як звичайний HTML AddType application/x-httpd-php .htm .md\n\nЩоб досягти бажаного ефекту, ви повинні перейменувати всі ваші PHP-скрипти відповідно до обраного вами розширення. Описане у цьому розділі документації підвищення безпеки через приховування є невеликим превентивним заходом за малих витрат.\n","title":"Приховування PHP","contentType":2,"navigation":[{"security.variables.md":"« Дані, введені користувачем"},{"security.current.md":"Необхідність оновлень »"},{"index.md":"PHP Manual"},{"security.md":"Безпека"}]}},"__N_SSG":true}