{"pageProps":{"page":{"slug":"function.bindec.md","content":"# bindec\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nbindec — Перетворює двійкове число на десяткове\n\n### Опис\n\n```methodsynopsis\nbindec(string $binary_string): int|float\n```\n\nПовертає десятковий еквівалент двійкового числа `binary_string`\n\nФункция**bindec()** перетворює двійкове число в ціле число (int), а якщо розмір числа занадто великий, то число з плаваючою точкою (float).\n\nФункция\\*\\*bindec()\\*\\*интерпретирует значения аргумента`binary_string` як беззнакові числа. Це тому, що функція **bindec()** розглядає старший біт ще один порядок величини, а чи не як біт знака.\n\n### Список параметрів\n\n`binary_string`\n\nБінарний рядок для перетворення. Будь-які неприпустимі символи в рядку `binary_string` будуть проігноровані без попередження. Починаючи з PHP 7.4.0, передача некоректних символів застаріла.\n\n**Увага**\n\nПараметр приймає лише рядки. Дані інших типів призведуть до непередбачуваного результату.\n\n### Значення, що повертаються\n\nПовертає десяткове значення рядка `binary_string`\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.4.0 | Передача неприпустимих символів видає повідомлення про старіння. Результат, як і раніше, буде обчислений, якби неприпустимі символи не передавалися. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** bindec()\\*\\*\\*\\*\n\n```php\n<?php\n\necho bindec('110011') . \"\\n\";\necho bindec('000110011') . \"\\n\";\n\necho bindec('111');\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n51\n51\n7\n```\n\n**Приклад #2 Функция**bindec()\\*\\* інтерпретує введення як беззнакове число\\*\\*\n\n```php\n<?php\n\n/*\n * Смысл этого Приклада — в выводе скрипта,\n * а не в PHP-коде.\n */\n\n$magnitude_lower = pow(2, (PHP_INT_SIZE * 8) - 2);\np($magnitude_lower - 1);\np($magnitude_lower, 'Видите резкую смену значений? Смотрите в следующий раз...');\n\np(PHP_INT_MAX, 'PHP_INT_MAX');\np(~PHP_INT_MAX, 'интерпретируется как увеличенное на единицу значение PHP_INT_MAX');\n\nif (PHP_INT_SIZE == 4) {\n    $note = 'интерпретируется как самое большое целое без знака (unsigned integer)';\n} else {\n    $note = 'интерпретируется как самое большое целое без знака (unsigned integer)\n              (18446744073709551615), но искажается из-за недостаточной точности float';\n}\np(-1, $note);\n\n\nfunction p($input, $note = '') {\n    echo \"input:        $input\\n\";\n\n    $format = '%0' . (PHP_INT_SIZE * 8) . 'b';\n    $bin = sprintf($format, $input);\n    echo \"binary:       $bin\\n\";\n\n    ini_set('precision', 20);  // Для надёжности на 64-битных системах.\n    $dec = bindec($bin);\n    echo 'bindec():     ' . $dec . \"\\n\";\n\n    if ($note) {\n        echo \"NOTE:         $note\\n\";\n    }\n\n    echo \"\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу на 32-бітових машинах:\n\n```\ninput:        1073741823\nbinary:       00111111111111111111111111111111\nbindec():     1073741823\n\ninput:        1073741824\nbinary:       01000000000000000000000000000000\nbindec():     1073741824\nNOTE:         Видите резкую смену значений? Смотрите в следующий раз...\n\ninput:        2147483647\nbinary:       01111111111111111111111111111111\nbindec():     2147483647\nNOTE:         PHP_INT_MAX\n\ninput:        -2147483648\nbinary:       10000000000000000000000000000000\nbindec():     2147483648\nNOTE:         интерпретируется как увеличенное на единицу значение PHP_INT_MAX\n\ninput:        -1\nbinary:       11111111111111111111111111111111\nbindec():     4294967295\nNOTE:         интерпретируется как самое большое целое без знака (unsigned integer)\n```\n\nРезультат виконання наведеного прикладу на 64-бітних машинах:\n\n```\ninput:        4611686018427387903\nbinary:       0011111111111111111111111111111111111111111111111111111111111111\nbindec():     4611686018427387903\n\ninput:        4611686018427387904\nbinary:       0100000000000000000000000000000000000000000000000000000000000000\nbindec():     4611686018427387904\nNOTE:         Видите резкую смену значений? Смотрите в следующий раз...\n\ninput:        9223372036854775807\nbinary:       0111111111111111111111111111111111111111111111111111111111111111\nbindec():     9223372036854775807\nNOTE:         PHP_INT_MAX\n\ninput:        -9223372036854775808\nbinary:       1000000000000000000000000000000000000000000000000000000000000000\nbindec():     9223372036854775808\nNOTE:         интерпретируется как увеличенное на единицу значение PHP_INT_MAX\n\ninput:        -1\nbinary:       1111111111111111111111111111111111111111111111111111111111111111\nbindec():     18446744073709551616\nNOTE:         интерпретируется как самое большое целое без знака (unsigned integer)\n              (18446744073709551615), но искажается из-за недостаточной точности float\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Функція вміє конвертувати числа, які занадто великі, щоб вписатися в цілий тип даних (int) платформ, результатом обробки таких значень буде число з плаваючою точкою float.\n\n### Дивіться також\n\n-   [decbin()](function.decbin.md) \\- Переводить число з десяткової системи числення до двійкової\n-   [octdec()](function.octdec.md) \\- Переводить число з вісімкової системи числення до десяткової\n-   [hexdec()](function.hexdec.md) \\- Переводить число з шістнадцяткової системи числення до десяткової\n-   [base\\_convert()](function.base-convert.md) \\- Перетворює числа між довільними системами числення\n","title":"bindec","contentType":2,"navigation":[{"function.base-convert.md":"« base\\_convert"},{"function.ceil.md":"ceil »"},{"index.md":"PHP Manual"},{"ref.math.md":"Математичні функції"}]}},"__N_SSG":true}