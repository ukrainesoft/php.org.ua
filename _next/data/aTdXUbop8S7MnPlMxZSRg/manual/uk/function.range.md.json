{"pageProps":{"page":{"slug":"function.range.md","content":"# range\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nrange — Створює масив, що містить діапазон елементів\n\n### Опис\n\n```methodsynopsis\nrange(string|int|float $start, string|int|float $end, int|float $step = 1): array\n```\n\nСтворює масив, що містить діапазон елементів.\n\nЕсли оба параметра —`start`и`end`— будут строками (string), а параметр`step` - Числом (int), то створений масив буде послідовністю байтів. В інших випадках створений масив буде послідовністю чисел.\n\nПослідовність зростатиме, якщо значення параметра `start` менше або дорівнює значенню параметра `end`. В іншому випадку послідовність зменшуватиметься.\n\n### Список параметрів\n\n`start`\n\nПерше значення послідовності.\n\n`end`\n\nОстання значення послідовності.\n\n`step`\n\nПараметр`step` визначає, на скільки змінюватимуться значення у створюваній послідовності.\n\nВ параметр`step` можна передавати негативне значення, якщо потрібно створити спадну послідовність.\n\nЕсли значение параметра`step` буде числом з плаваючою точкою (float) без дробової частини, воно буде інтерпретовано як ціле число (int).\n\n### Значення, що повертаються\n\nПовертає послідовність елементів у вигляді масиву (array), в якому перший елемент набуває значення параметра `start`, а последний — параметра`end`, в якій кожне значення послідовності відстає від іншого на вказане у параметрі `step` кількість кроків.\n\nОстанній елемент поверненого масиву дорівнюватиме або значення параметра `end`, або попереднього значення послідовності, залежно від значення параметра `step`\n\nЕсли оба параметра —`start`и`end`— будут строками (string), а параметр`step` - Числом (int), то створений масив буде послідовністю байтів, зазвичай латинських символів у кодуванні ASCII.\n\nЯкщо хоча б одне із значень параметрів `start` `end`, или`step` буде числом із плаваючою точкою (float), створений масив буде послідовністю значень float.\n\nІнакше створений масив буде послідовністю цілих чисел (int).\n\n### Помилки\n\n-   Если значение параметра`step` буде одно , буде викинуто виняток [ValueError](class.valueerror.md)\n-   Якщо значення хоча б одного з параметрів`start` `end`, или`step`виявиться неприпустимим кінцевим числом, як його визначає функція[is\\_finite()](function.is-finite.md), буде викинуто виняток [ValueError](class.valueerror.md)\n-   Если значение параметра`step` будет отрицательным при создании возрастающей последовательности (т. е . `$start <= $end`), буде викинуто виняток [ValueError](class.valueerror.md)\n-   Якщо значення хоча б одного з параметрів`start`или`end`буде порожнім рядком (`''`), це призведе до помилки рівня\\*\\*`E_WARNING`\\*\\*, а порожній рядок буде інтерпретований як ціле число\n-   Якщо значення хоча б одного з параметрів`start`или`end`виявиться[нечисловим рядком](language.types.numeric-strings.md)розміром більше одного байта, буде згенеровано помилку рівня\\*\\*`E_WARNING`\\*\\*\n-   Якщо значення хоча б одного з параметрів`start`или`end`виявиться рядком, який неявно наводиться до цілого числа (int) через те, що інше значення — число, виникне помилка рівня\\*\\*`E_WARNING`\\*\\*\n-   Якщо значення хоча б одного з параметрів`step`буде числом з плаваючою точкою (float), а значення параметрів`start`и`end`виявиться[нечисловим рядком](language.types.numeric-strings.md), буде згенеровано помилку рівня\\*\\*`E_WARNING`\\*\\*\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Якщо значення обох параметрів `start`и`end` - Виявляться рядками, то тепер функція **range()** завжди створюватиме масив (array) байтів. Раніше, якщо один із символів у рядку був числом, інші символи неявно приводилися до числа (int). |\n| 8.3.0 | Тепер з'являється помилка рівня \\*\\*`E_WARNING`\\*\\*якщо значення хоча б одного з параметрів `start`или`end` виявляється рядком, який неявно наводиться до цілого числа (int) через наявність у ній числових символів. |\n| 8.3.0 | Тепер з'являється помилка рівня \\*\\*`E_WARNING`\\*\\*якщо значення хоча б одного з параметрів `start`или`end` виявляється нечисловим рядком із розміром більше одного байта. |\n| 8.3.0 | Тепер з'являється помилка рівня \\*\\*`E_WARNING`\\*\\*якщо значення хоча б одного з параметрів `start`или`end` виявляється порожнім рядком. |\n| 8.3.0 | Если значение параметра`step` виявиться числом з плаваючою точкою (float) без дробової частини, воно буде інтерпретовано як ціле число (int). |\n| 8.3.0 | Тепер викидається виняток[ValueError](class.valueerror.md), якщо під час створення висхідної послідовності значення параметра `step` виявляється негативним числом. |\n| 8.3.0 | Тепер викидається виняток[ValueError](class.valueerror.md), если значение параметра`step` не є допустимим кінцевим числом. |\n| 8.3.0 | Тепер викидається виняток[TypeError](class.typeerror.md)якщо значення хоча б одного з параметрів `start`или`end` виявиться масивом (array), об'єктом (object) чи ресурсом (resource). Раніше вони неявно приводилися до цілої кількості (int). |\n\n### Приклади\n\n**Приклад #1 Приклади використання **range()****\n\n```php\n<?php\necho implode(', ', range(0, 12)), PHP_EOL;\n\necho implode(', ', range(0, 100, 10)), PHP_EOL;\n\necho implode(', ', range('a', 'i')), PHP_EOL;\n\necho implode(', ', range('c', 'a')), PHP_EOL;\n\necho implode(', ', range('A', 'z')), PHP_EOL;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100\na, b, c, d, e, f, g, h, i\nc, b, a\nA, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, [, \\, ], ^, _, `, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n```\n\n### Дивіться також\n\n-   [shuffle()](function.shuffle.md) \\- перемішує масив\n-   [array\\_fill()](function.array-fill.md) \\- Заповнює масив значеннями\n-   [foreach](control-structures.foreach.md)\n","title":"range","contentType":2,"navigation":[{"function.prev.md":"« prev"},{"function.reset.md":"reset »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}