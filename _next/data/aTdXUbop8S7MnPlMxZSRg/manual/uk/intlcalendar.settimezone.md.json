{"pageProps":{"page":{"slug":"intlcalendar.settimezone.md","content":"# IntlCalendar::setTimeZone\n\n(PHP 5 >= 5.5.0, PHP 7, PHP 8, PECL >= 3.0.0a1)\n\nIntlCalendar::setTimeZone — Встановлює часовий пояс, який використовується календарем.\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic IntlCalendar::setTimeZone(IntlTimeZone|DateTimeZone|string|null $timezone): bool\n```\n\nПроцедурний стиль\n\n```methodsynopsis\nintlcal_set_time_zone(IntlCalendar $calendar, IntlTimeZone|DateTimeZone|string|null $timezone): bool\n```\n\nВизначає новий часовий пояс календаря. Час, представлений об'єктом, зберігається на шкоду значенням поля.\n\n### Список параметрів\n\n`calendar`\n\nЕкземпляр [IntlCalendar](class.intlcalendar.md)\n\n`timezone`\n\nНовий часовий пояс, який використовуватиме календар. Його можна вказати такими способами:\n\n-   Якщо **`null`**, то буде використаний часовий пояс за замовчуванням, задана в ini-налаштування[date.timezone](datetime.configuration.md#ini.date.timezone)або за допомогою функції[date\\_default\\_timezone\\_set()](function.date-default-timezone-set.md)та повернена функцією[date\\_default\\_timezone\\_get()](function.date-default-timezone-get.md)\n    \n-   Об'єкт класу [IntlTimeZone](class.intltimezone.md)\n    \n-   Об'єкт класу [DateTimeZone](class.datetimezone.md). Його ідентифікатор буде вилучено і на його основі буде створено об'єкт часового поясу ICU; часовий пояс буде збережено в базі даних ICU, а не PHP.\n    \n-   Рядок є коректним ідентифікатором часового поясу ICU. Дивіться[IntlTimeZone::createTimeZoneIDEnumeration()](intltimezone.createtimezoneidenumeration.md). . \"Сирі\" усунення, типу `\"GMT+08:30\"`, також підтримуються.\n    \n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** IntlCalendar::setTimeZone()\\*\\*\\*\\*\n\n```php\n<?php\nini_set('date.timezone', 'Europe/Lisbon');\nini_set('intl.default_locale', 'es_ES');\n\n$cal = new IntlGregorianCalendar(2013, 5 /* May */, 1, 12, 0, 0);\n\necho IntlDateFormatter::formatObject($cal, IntlDateFormatter::FULL), \"\\n\";\necho \"(instant {$cal->getTime()})\\n\";\n\n$cal->setTimeZone(IntlTimeZone::getGMT());\necho IntlDateFormatter::formatObject($cal, IntlDateFormatter::FULL), \"\\n\";\necho \"(instant {$cal->getTime()})\\n\";\n\n$cal->setTimeZone('GMT+03:33');\necho IntlDateFormatter::formatObject($cal, IntlDateFormatter::FULL), \"\\n\";\necho \"(instant {$cal->getTime()})\\n\";\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nsábado, 1 de junio de 2013 12:00:00 Hora de verano de Europa occidental\n(instant 1370084400000)\nsábado, 1 de junio de 2013 11:00:00 GMT\n(instant 1370084400000)\nsábado, 1 de junio de 2013 14:33:00 GMT+03:33\n(instant 1370084400000)\n```\n","title":"IntlCalendar::setTimeZone","contentType":2,"navigation":[{"intlcalendar.settime.md":"« IntlCalendar::setTime"},{"intlcalendar.todatetime.md":"IntlCalendar::toDateTime »"},{"index.md":"PHP Manual"},{"class.intlcalendar.md":"IntlCalendar"}]}},"__N_SSG":true}