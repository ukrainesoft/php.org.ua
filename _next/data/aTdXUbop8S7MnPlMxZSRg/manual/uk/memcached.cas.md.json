{"pageProps":{"page":{"slug":"memcached.cas.md","content":"# Memcached::cas\n\n(PECL memcached >= 0.1.0)\n\nMemcached::cas — Порівнює та встановлює значення для запису\n\n### Опис\n\n```methodsynopsis\npublic Memcached::cas(    string|int|float $cas_token,    string $key,    mixed $value,    int $expiration = 0): bool\n```\n\n**Memcached::cas()** здійснює перевірку та встановлення значення запису, нове значення буде збережено тільки якщо інші клієнти не оновили його з часу останнього звернення цим клієнтом. Ця перевірка здійснюється за допомогою параметра `cas_token`, який являє собою 64-бітове значення, присвоєне існуючому запису сервером memcache. Зверніться до документації методу \\*\\*Memcached::get\\*()\\*\\*який використовується для отримання цього токена. Зверніть увагу, що токен представлений у вигляді числа з плаваючою точкою через обмеження діапазону значень цілого типу в PHP.\n\n### Список параметрів\n\n`cas_token`\n\nУнікальне значення, пов'язане із існуючим записом. Генерується сервером memcache.\n\n`key`\n\nКлюч, під яким зберігається значення.\n\n`value`\n\nЗберігається значення.\n\n`expiration`\n\nЧас зберігання об'єкта за промовчанням дорівнює 0. Для більш детальної інформації дивіться [Час зберігання об'єкту](memcached.expiration.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки. Метод[Memcached::getResultCode()](memcached.getresultcode.md) повертає **`Memcached::RES_DATA_EXISTS`** якщо запис, який ви намагаєтеся зберегти, було змінено з моменту останнього звернення.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Memcached::cas()\\*\\*\\*\\*\n\n```php\n<?php\n$m = new Memcached();\n$m->addServer('localhost', 11211);\n\ndo {\n    /* fetch IP list and its token */\n    $ips = $m->get('ip_block', null, $cas);\n    /* if list doesn't exist yet, create it and do\n       an atomic add which will fail if someone else already added it */\n    if ($m->getResultCode() == Memcached::RES_NOTFOUND) {\n        $ips = array($_SERVER['REMOTE_ADDR']);\n        $m->add('ip_block', $ips);\n    /* otherwise, add IP to the list and store via compare-and-swap\n       with the token, which will fail if someone else updated the list */\n    } else {\n        $ips[] = $_SERVER['REMOTE_ADDR'];\n        $m->cas($cas, 'ip_block', $ips);\n    }\n} while ($m->getResultCode() != Memcached::RES_SUCCESS);\n\n?>\n```\n\n### Дивіться також\n\n-   [Memcached::casByKey()](memcached.casbykey.md) \\- Порівнює та встановлює значення для запису на конкретному сервері\n","title":"Memcached::cas","contentType":2,"navigation":[{"memcached.appendbykey.md":"« Memcached::appendByKey"},{"memcached.casbykey.md":"Memcached::casByKey »"},{"index.md":"PHP Manual"},{"class.memcached.md":"Memcached"}]}},"__N_SSG":true}