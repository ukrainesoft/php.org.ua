{"pageProps":{"page":{"slug":"function.mb-detect-encoding.md","content":"# mb\\_detect\\_encoding\n\n(PHP 4 >= 4.0.6, PHP 5, PHP 7, PHP 8)\n\nmb\\_detect\\_encoding — Визначає кодування символів\n\n### Опис\n\n```methodsynopsis\nmb_detect_encoding(string $string, array|string|null $encodings = null, bool $strict = false): string|false\n```\n\nВизначає найімовірніше кодування символів рядка, переданого в параметр `string`, перевіряючи список кандидатів у порядку.\n\nАвтоматичне визначення передбачуваного кодування символів не є надійним; без додаткової інформації це схоже на розшифрування зашифрованого рядка без ключа. Краще вказати кодування символів, що зберігається або передається з даними, наприклад в HTTP-заголовку Content-Type.\n\nФункція буде корисніша, якщо викликати її з багатобайтовими кодуваннями, оскільки не всі послідовності байтів утворюють допустимий рядок. Якщо вхідний рядок містить таку послідовність, кодування буде відхилено, і буде перевірено наступне кодування.\n\n### Список параметрів\n\n`string`\n\nПеревірений рядок (string).\n\n`encodings`\n\nСписок коду символів для перевірки в заданому порядку. Список може бути визначений як масив рядків або як один рядок, розділений комами.\n\nЯкщо параметр `encodings` не заданий або дорівнює **`null`**, буде вибрано кодування, встановлене в директиві з ім'ям detect\\_order (устанавливают в директиве[mbstring.detect\\_order](mbstring.configuration.md#ini.mbstring.detect-order) налаштувань конфігурації або функції [mb\\_detect\\_order()](function.mb-detect-order.md)\n\n`strict`\n\nУправляет поведением, когда строка в параметре`string` неприпустима для жодної перерахованої у параметрі `encodings` кодування. Якщо параметр `strict`установлен в значение\\*\\*`false`**, буде повернуто перше збіглося кодування; якщо параметр `strict`установлен в значение**`true`\\*\\*, буде повернено значення **`false`**\n\nЗначение по умолчанию для параметра`strict`можно установить в директиве[mbstring.strict\\_detection](mbstring.configuration.md#ini.mbstring.strict-detection) налаштувань конфігурації.\n\n### Значення, що повертаються\n\nПовертає виявлене кодування символів або **`false`**, якщо рядок неприпустимий для жодного з перерахованих кодувань.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Функция**mb\\_detect\\_encoding()** більше не повертатиме наступні нетекстові кодування: `«Base64»` `«QPrint»` `«UUencode»` `«HTML entities»` `«7 bit»`и`«8 bit»` |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** mb\\_detect\\_encoding()\\*\\*\\*\\*\n\n```php\n<?php\n\n// Определение кодировки с текущей detect_order\necho mb_detect_encoding($str);\n\n// Значение «auto» раскрывается в соответствии с директивой mbstring.language\necho mb_detect_encoding($str, \"auto\");\n\n// Установка параметра «encodings» списком, разделённым запятой\necho mb_detect_encoding($str, \"JIS, eucjp-win, sjis-win\");\n\n// Установка параметра «encodings» массивом\n$encodings = [\n  \"ASCII\",\n  \"JIS\",\n  \"EUC-JP\"\n];\necho mb_detect_encoding($str, $encodings);\n```\n\n**Приклад #2 Действие параметра`strict`**\n\n```php\n<?php\n\n// «áéóú» закодирована в ISO-8859-1\n$str = \"\\xE1\\xE9\\xF3\\xFA\";\n\n// Строка недействительна для кодировок ASCII или UTF-8, но UTF-8 считается более близким соответствием\nvar_dump(mb_detect_encoding($str, ['ASCII', 'UTF-8'], false));\nvar_dump(mb_detect_encoding($str, ['ASCII', 'UTF-8'], true));\n\n// Если допустимая кодировка найдена, параметр strict не меняет результат\nvar_dump(mb_detect_encoding($str, ['ASCII', 'UTF-8', 'ISO-8859-1'], false));\nvar_dump(mb_detect_encoding($str, ['ASCII', 'UTF-8', 'ISO-8859-1'], true));\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(5) \"UTF-8\"\nbool(false)\nstring(10) \"ISO-8859-1\"\nstring(10) \"ISO-8859-1\"\n```\n\nІноді та сама послідовність байтів може утворювати допустимий рядок у кількох кодуваннях символів, і неможливо дізнатися, яка інтерпретація передбачалася. Наприклад, серед багатьох інших байтова послідовність\\\\xC4\\\\xA2» може бути:\n\n-   Ä¢ (U+00C4 LATIN CAPITAL LETTER A WITH DIAERESIS з наступним U+00A2 CENT SIGN), закодована в одному з кодувань - ISO-8859-1, ISO-8859-15 або Windows-1252\n-   \"ФЂ\" (U+0424 CYRILLIC CAPITAL LETTER EF з наступним U+0402 CYRILLIC CAPITAL LETTER DJE), закодована ISO-8859-5\n-   «»» (U+0122 LATIN CAPITAL LETTER G WITH CEDILLA), закодована в UTF-8\n\n**Приклад #3 Дія порядку кодувань при збігу кількох кандидатів**\n\n```php\n<?php\n\n$str = \"\\xC4\\xA2\";\n\n// Строка действительна во всех трёх кодировках, поэтому будет возвращена первая из перечисленных кодировок\nvar_dump(mb_detect_encoding($str, ['UTF-8', 'ISO-8859-1', 'ISO-8859-5']));\nvar_dump(mb_detect_encoding($str, ['ISO-8859-1', 'ISO-8859-5', 'UTF-8']));\nvar_dump(mb_detect_encoding($str, ['ISO-8859-5', 'UTF-8', 'ISO-8859-1']));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(5) \"UTF-8\"\nstring(10) \"ISO-8859-1\"\nstring(10) \"ISO-8859-5\"\n```\n\n### Дивіться також\n\n-   [mb\\_detect\\_order()](function.mb-detect-order.md) \\- Встановлює/отримує порядок визначення кодування символів\n","title":"mb\\_detect\\_encoding","contentType":2,"navigation":[{"function.mb-decode-numericentity.md":"« mb\\_decode\\_numericentity"},{"function.mb-detect-order.md":"mb\\_detect\\_order »"},{"index.md":"PHP Manual"},{"ref.mbstring.md":"Функції для роботи з багатобайтовими рядками"}]}},"__N_SSG":true}