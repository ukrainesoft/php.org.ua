{"pageProps":{"page":{"slug":"intlchar.fordigit.md","content":"# IntlChar::forDigit\n\n(PHP 7, PHP 8)\n\nIntlChar::forDigit — Отримати символ, який представляє задане число в заданій основі\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::forDigit(int $digit, int $base = 10): int\n```\n\nВизначає уявлення символів для конкретної цифри у зазначеній системі числення.\n\nЯкщо значення підстави некоректне, або значення числа не є коректним числом у заданій системі числення, буде повернено `U+0000`\n\nКоректні значення radix лежать у діапазоні від до`36`. Коректні значення digit лежать у діапазоні `0 <= digit < radix`\n\nЯкщо digit менше `10`, буде повернуто '0' + digit. В іншому випадку повернеться 'a' + digit – 10.\n\n### Список параметрів\n\n`digit`\n\nЧисло для перетворення символ.\n\n`base`\n\nЗаснування системи числення (за замовчуванням `10`\n\n### Значення, що повертаються\n\nСимвольне уявлення (типу string) заданого числа із заданою основою системи числення.\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::forDigit(0));\nvar_dump(IntlChar::forDigit(3));\nvar_dump(IntlChar::forDigit(3, 10));\nvar_dump(IntlChar::forDigit(10));\nvar_dump(IntlChar::forDigit(10, 16));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(48)\nint(51)\nint(51)\nint(0)\nint(97)\n```\n\n### Дивіться також\n\n-   [IntlChar::digit()](intlchar.digit.md) \\- Отримати десяткове число із символу Unicode із заданою основою\n-   [IntlChar::charDigitValue()](intlchar.chardigitvalue.md) \\- Отримати десяткову цифру із символу десяткової цифри\n-   [IntlChar::isdigit()](intlchar.isdigit.md) \\- Перевірити, чи є символ цифрою\n-   **`IntlChar::PROPERTY_NUMERIC_TYPE`**\n","title":"IntlChar::forDigit","contentType":2,"navigation":[{"intlchar.foldcase.md":"« IntlChar::foldCase"},{"intlchar.getbidipairedbracket.md":"IntlChar::getBidiPairedBracket »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}