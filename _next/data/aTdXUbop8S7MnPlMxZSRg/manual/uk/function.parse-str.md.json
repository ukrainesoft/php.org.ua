{"pageProps":{"page":{"slug":"function.parse-str.md","content":"# parse\\_str\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nparse\\_str — Розбирає рядок на змінні\n\n### Опис\n\n```methodsynopsis\nparse_str(string $string, array &$result): void\n```\n\nРозбирає рядок `string`, яка повинна мати формат рядка запиту URL і надає значення змінним у поточному контексті (або заносить до масиву, якщо заданий параметр `result`\n\n### Список параметрів\n\n`string`\n\nВхідний рядок.\n\n`result`\n\nЯкщо вказано другий параметр `result`, то замість присвоєння змінних у поточному контексті вони будуть збережені в цьому параметрі як елементи масиву.\n\n**Увага**\n\nВикористовувати цю функцію без параметра `result`крайне*НЕ РЕКОМЕНДУЄТЬСЯ*. Подібне використання оголошено *Застарілим*с PHP 7.2. Начиная с PHP 8.0.0, параметр`result`является*обов'язковим*\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `result` більше не є необов'язковим. |\n| 7.2.0 | Использование**parse\\_str()** без другого параметра буде викликати помилку рівня **`E_DEPRECATED`** |\n\n### Приклади\n\n**Приклад #1 Использование**parse\\_str()\\*\\*\\*\\*\n\n```php\n<?php\n$str = \"first=value&arr[]=foo+bar&arr[]=baz\";\n\n// Рекомендуемый подход\nparse_str($str, $output);\necho $output['first'];  // value\necho $output['arr'][0]; // foo bar\necho $output['arr'][1]; // baz\n\n// НЕ РЕКОМЕНДУЕТСЯ\nparse_str($str);\necho $first;  // value\necho $arr[0]; // foo bar\necho $arr[1]; // baz\n?>\n```\n\nТак як імена змінних PHP не можуть містити пробіли та точки, ці символи будуть замінені символом підкреслення. Такі ж правила накладаються на імена ключів у масиві `result`якщо він заданий.\n\n**Приклад #2 Співвідношення імен **parse\\_str()****\n\n```php\n<?php\nparse_str(\"My Value=Something\");\necho $My_Value; // Something\n\nparse_str(\"My Value=Something\", $output);\necho $output['My_Value']; // Something\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Усі змінні створюються (або заносяться до масиву) вже оброблені функцією [urldecode()](function.urldecode.md)\n\n> **Зауваження** :\n> \n> Для получения текущей`QUERY_STRING`, можна використовувати змінну [$\\_SERVER\\['QUERY\\_STRING'\\]](reserved.variables.server.md). Крім того, можливо ви захочете прочитати розділ про [змінних поза PHP](language.variables.external.md)\n\n### Дивіться також\n\n-   [parse\\_url()](function.parse-url.md) \\- Розбирає URL та повертає його компоненти\n-   [pathinfo()](function.pathinfo.md) \\- Повертає інформацію про шлях до файлу\n-   [http\\_build\\_query()](function.http-build-query.md) \\- Генерує URL-кодований рядок запиту\n-   [urldecode()](function.urldecode.md) \\- Декодування URL-кодованого рядка\n","title":"parse\\_str","contentType":2,"navigation":[{"function.ord.md":"« ord"},{"function.print.md":"print »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}