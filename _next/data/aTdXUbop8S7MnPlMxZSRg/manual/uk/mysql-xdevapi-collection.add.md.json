{"pageProps":{"page":{"slug":"mysql-xdevapi-collection.add.md","content":"# Collection::add\n\n(No version information available, might only be in Git)\n\nCollection::add — Додає документ до колекції\n\n### Опис\n\n```methodsynopsis\npublic mysql_xdevapi\\Collection::add(mixed $document): mysql_xdevapi\\CollectionAdd\n```\n\nЗапускає додавання цього документа (документів) до колекції, підтримуються кілька варіантів методу. Можливі варіанти:\n\n1.  Додавання одного документа у вигляді рядка JSON.\n    \n2.  Додавання одного документа у вигляді масиву, наприклад:`[ 'field' => 'value', 'field2' => 'value2' ... ]`\n    \n3.  В ту саму операцію можна додати, як документ, так і кілька документів.\n    \n\n### Список параметрів\n\n`document`\n\nОдин або кілька документів може бути або JSON, або масив полів з відповідними значеннями. Масив не може бути порожнім.\n\nСервер MySQL автоматично генерує унікальні значення `_id` для кожного документа (рекомендується), хоча його також можна додати вручну. Це значення має бути унікальним, інакше операцію додавання не буде виконано.\n\n### Значення, що повертаються\n\nОб'єкт CollectionAdd. Використовуйте execute() для повернення Result, який можна використовувати для запиту кількості порушених елементів, кількості попереджень, згенерованих операцією, або для отримання списку згенерованих ідентифікаторів для доданих документів.\n\n### Приклади\n\n**Приклад #1 Приклад використання** mysql\\_xdevapi\\\\Collection::add()\\*\\*\\*\\*\n\n```php\n<?php\n$session = mysql_xdevapi\\getSession(\"mysqlx://user:password@localhost\");\n$session->sql(\"DROP DATABASE IF EXISTS addressbook\")->execute();\n$session->sql(\"CREATE DATABASE addressbook\")->execute();\n\n$schema = $session->getSchema(\"addressbook\");\n$create = $schema->createCollection(\"people\");\n\n$collection = $schema->getCollection(\"people\");\n\n// Добавление двух документов\n$collection->add('{\"name\": \"Fred\",  \"age\": 21, \"job\": \"Construction\"}')->execute();\n$collection->add('{\"name\": \"Wilma\", \"age\": 23, \"job\": \"Teacher\"}')->execute();\n\n// Добавление двух документов используя один объект JSON\n$result = $collection->add(\n  '{\"name\": \"Bernie\",\n    \"jobs\": [{\"title\":\"Cat Herder\",\"Salary\":42000}, {\"title\":\"Father\",\"Salary\":0}],\n    \"hobbies\": [\"Sports\",\"Making cupcakes\"]}',\n  '{\"name\": \"Jane\",\n    \"jobs\": [{\"title\":\"Scientist\",\"Salary\":18000}, {\"title\":\"Mother\",\"Salary\":0}],\n    \"hobbies\": [\"Walking\",\"Making pies\"]}')->execute();\n\n// Получение списка сгенерированных идентификаторов последней операции add()\n$ids = $result->getGeneratedIds();\nprint_r($ids);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nArray\n(\n    [0] => 00005b6b53610000000000000056\n    [1] => 00005b6b53610000000000000057\n)\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> MySQL Server 8.0 або вище генерує унікальний \\_id, як показано у прикладі. Поле \\_id слід визначити вручну, якщо використовується MySQL Server 5.7.\n","title":"Collection::add","contentType":2,"navigation":[{"class.mysql-xdevapi-collection.md":"« mysql\\_xdevapi\\\\Collection"},{"mysql-xdevapi-collection.addorreplaceone.md":"Collection::addOrReplaceOne »"},{"index.md":"PHP Manual"},{"class.mysql-xdevapi-collection.md":"mysql\\_xdevapi\\\\Collection"}]}},"__N_SSG":true}