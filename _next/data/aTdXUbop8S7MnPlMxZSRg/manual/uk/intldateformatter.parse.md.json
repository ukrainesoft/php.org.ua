{"pageProps":{"page":{"slug":"intldateformatter.parse.md","content":"# IntlDateFormatter::parse\n\n# datefmt\\_parse\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\nIntlDateFormatter::parse -- datefmt\\_parse — Перетворює рядок на значення позначки часу\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic IntlDateFormatter::parse(string $string, int &$offset = null): int|float|false\n```\n\nПроцедурний стиль\n\n```methodsynopsis\ndatefmt_parse(IntlDateFormatter $formatter, string $string, int &$offset = null): int|float|false\n```\n\nПеретворює рядок `string`в инкрементное значение времени, начиная со значения параметра`offset` і використовуючи якомога більшу частину вхідного значення.\n\n### Список параметрів\n\n`formatter`\n\nРесурс засобу форматування.\n\n`string`\n\nРядок для перетворення під час.\n\n`offset`\n\nПозиція, з якої слід розпочати синтаксичний аналіз у `string` (починаючи з нуля). Якщо до використання `string` помилки не виникає, `offset` міститиме -1, в іншому випадку він міститиме позицію, в якій закінчився синтаксичний аналіз (і відбулася помилка). Ця змінна міститиме кінцеву позицію, якщо при синтаксичному аналізі виникла помилка. Якщо `offset` > `strlen($string)`, аналіз негайно завершується помилкою.\n\n### Значення, що повертаються\n\nПовертає позначку часу перетвореного значення або **`false`**, якщо значення не може бути перетворено.\n\n### Приклади\n\n**Приклад #1 Приклад використання в об'єктно-орієнтованому стилі**\n\n```php\n<?php\n$fmt = new IntlDateFormatter(\n    'en_US',\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'America/Los_Angeles',\n    IntlDateFormatter::GREGORIAN\n);\necho 'Первый преобразованный вывод: ' . $fmt->parse('Wednesday, December 20, 1989 4:00:00 PM PT');\n$fmt = new IntlDateFormatter(\n    'de-DE',\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'America/Los_Angeles',\n    IntlDateFormatter::GREGORIAN\n);\n?>\n```\n\n**Приклад #2 Приклад використання** datefmt\\_parse()\\*\\*\\*\\*\n\n```php\n<?php\n$fmt = datefmt_create(\n    'en_US',\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'America/Los_Angeles',\n    IntlDateFormatter::GREGORIAN\n);\necho 'Первый преобразованный вывод: ' . datefmt_parse($fmt, 'Wednesday, December 20, 1989 4:00:00 PM PT');\n$fmt = datefmt_create(\n    'de-DE',\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'America/Los_Angeles',\n    IntlDateFormatter::GREGORIAN\n);\necho 'Второй преобразованный вывод: ' . datefmt_parse($fmt, 'Mittwoch, 20. Dezember 1989 16:00 Uhr GMT-08:00');\n?\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПервый преобразованный вывод: 630201600\nВторой преобразованный вывод: 630201600\n```\n\n### Дивіться також\n\n-   [datefmt\\_create()](intldateformatter.create.md) \\- Створює засіб форматування дати\n-   [datefmt\\_format()](intldateformatter.format.md) \\- Форматує значення дати/часу у вигляді рядка\n-   [datefmt\\_localtime()](intldateformatter.localtime.md) \\- Перетворює рядок на значення часу на основі поля\n-   [datefmt\\_get\\_error\\_code()](intldateformatter.geterrorcode.md) \\- Отримує код помилки останньої операції\n-   [datefmt\\_get\\_error\\_message()](intldateformatter.geterrormessage.md) \\- Отримує текст помилки останньої операції\n","title":"IntlDateFormatter::parse","contentType":2,"navigation":[{"intldateformatter.localtime.md":"« IntlDateFormatter::localtime"},{"intldateformatter.setcalendar.md":"IntlDateFormatter::setCalendar »"},{"index.md":"PHP Manual"},{"class.intldateformatter.md":"IntlDateFormatter"}]}},"__N_SSG":true}