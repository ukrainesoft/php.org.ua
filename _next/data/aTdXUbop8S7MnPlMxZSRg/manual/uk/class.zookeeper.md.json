{"pageProps":{"page":{"slug":"class.zookeeper.md","content":"# Клас Zookeeper\n\n(PECL zookeeper >= 0.1.0)\n\n## Вступ\n\nПредставляє сесію ZooKeeper.\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class Zookeeper\n     \n\n     {\n    \n\n    \n    /* Методы */\n    \n   public\n   __construct(string $host = '', callable $watcher_cb = null, int $recv_timeout = 10000)\n\n    public\n   addAuth(string $scheme, string $cert, callable $completion_cb = null): bool\npublic\n   close(): void\npublic\n   connect(string $host, callable $watcher_cb = null, int $recv_timeout = 10000): void\npublic\n   create(    string $path,    string $value,    array $acls,    int $flags = null): string\npublic\n   delete(string $path, int $version = -1): bool\npublic\n   exists(string $path, callable $watcher_cb = null): array\npublic\n   get(    string $path,    callable $watcher_cb = null,    array &$stat = null,    int $max_size = 0): string\npublic\n   getAcl(string $path): array\npublic\n   getChildren(string $path, callable $watcher_cb = null): array\npublic\n   getClientId(): int\npublic\n   getConfig(): ZookeeperConfig\npublic\n   getRecvTimeout(): int\npublic\n   getState(): int\npublic\n   isRecoverable(): bool\npublic\n   set(    string $path,    string $value,    int $version = -1,    array &$stat = null): bool\npublic\n   setAcl(string $path, int $version, array $acl): bool\npublic\n   static\n   setDebugLevel(int $logLevel): bool\npublic\n   static\n   setDeterministicConnOrder(bool $yesOrNo): bool\npublic\n   setLogStream(resource $stream): bool\npublic\n   setWatcher(callable $watcher_cb): bool\n\n    \n\n    \n    /* Константы */\n    \n     const\n     int\n      PERM_READ = 1;\n\n    const\n     int\n      PERM_WRITE = 2;\n\n    const\n     int\n      PERM_CREATE = 4;\n\n    const\n     int\n      PERM_DELETE = 8;\n\n    const\n     int\n      PERM_ADMIN = 16;\n\n    const\n     int\n      PERM_ALL = 31;\n\n\n    const\n         int\n          EPHEMERAL = 1;\n\n    const\n     int\n      SEQUENCE = 2;\n\n\n    const\n     int\n      LOG_LEVEL_ERROR = 1;\n\n    const\n     int\n      LOG_LEVEL_WARN = 2;\n\n    const\n     int\n      LOG_LEVEL_INFO = 3;\n\n    const\n     int\n      LOG_LEVEL_DEBUG = 4;\n\n\n    const\n     int\n      EXPIRED_SESSION_STATE = -112;\n\n    const\n     int\n      AUTH_FAILED_STATE = -113;\n\n    const\n     int\n      CONNECTING_STATE = 1;\n\n    const\n     int\n      ASSOCIATING_STATE = 2;\n\n    const\n     int\n      CONNECTED_STATE = 3;\n\n    const\n     int\n      READONLY_STATE = 5;\n\n    const\n     int\n      NOTCONNECTED_STATE = 999;\n\n\n    const\n      int\n       CREATED_EVENT = 1;\n\n    const\n     int\n      DELETED_EVENT = 2;\n\n    const\n     int\n      CHANGED_EVENT = 3;\n\n    const\n     int\n      CHILD_EVENT = 4;\n\n    const\n     int\n      SESSION_EVENT = -1;\n\n    const\n     int\n      NOTWATCHING_EVENT = -2;\n\n\n    const\n     int\n      SYSTEMERROR = -1;\n\n    const\n     int\n      RUNTIMEINCONSISTENCY = -2;\n\n    const\n     int\n      DATAINCONSISTENCY = -3;\n\n    const\n     int\n      CONNECTIONLOSS = -4;\n\n    const\n     int\n      MARSHALLINGERROR = -5;\n\n    const\n     int\n      UNIMPLEMENTED = -6;\n\n    const\n     int\n      OPERATIONTIMEOUT = -7;\n\n    const\n     int\n      BADARGUMENTS = -8;\n\n    const\n     int\n      INVALIDSTATE = -9;\n\n    const\n     int\n      NEWCONFIGNOQUORUM = -13;\n\n    const\n     int\n      RECONFIGINPROGRESS = -14;\n\n\n    const\n     int\n      OK = 0;\n\n    const\n     int\n      APIERROR = -100;\n\n    const\n     int\n      NONODE = -101;\n\n    const\n     int\n      NOAUTH = -102;\n\n    const\n     int\n      BADVERSION = -103;\n\n    const\n     int\n      NOCHILDRENFOREPHEMERALS = -108;\n\n    const\n     int\n      NODEEXISTS = -110;\n\n    const\n     int\n      NOTEMPTY = -111;\n\n    const\n     int\n      SESSIONEXPIRED = -112;\n\n    const\n     int\n      INVALIDCALLBACK = -113;\n\n    const\n     int\n      INVALIDACL = -114;\n\n    const\n     int\n      AUTHFAILED = -115;\n\n    const\n     int\n      CLOSING = -116;\n\n    const\n     int\n      NOTHING = -117;\n\n    const\n     int\n      SESSIONMOVED = -118;\n\n    const\n     int\n      NOTREADONLY = -119;\n\n    const\n     int\n      EPHEMERALONLOCALSESSION = -120;\n\n    const\n     int\n      NOWATCHER = -121;\n\n    const\n     int\n      RECONFIGDISABLED = -122;\n\n    \n\n   }\n```\n\n## Обумовлені константи\n\n## Дозволи ZooKeeper\n\n**`Zookeeper::PERM_READ`**\n\nМожна читати значення вузла та список дочірніх вузлів\n\n**`Zookeeper::PERM_WRITE`**\n\nМожна встановлювати значення вузла\n\n**`Zookeeper::PERM_CREATE`**\n\nМожна створювати дочірні елементи\n\n**`Zookeeper::PERM_DELETE`**\n\nМожна видаляти дочірні елементи\n\n**`Zookeeper::PERM_ADMIN`**\n\nМожна запускати set\\_acl()\n\n**`Zookeeper::PERM_ALL`**\n\nМожна використовувати всі вищезгадані прапори разом\n\n## Прапори створення ZooKeeper\n\n**`Zookeeper::EPHEMERAL`**\n\nЯкщо встановлено прапорець Zookeeper::EPHEMERAL, вузол буде автоматично видалено після завершення клієнтської сесії.\n\n**`Zookeeper::SEQUENCE`**\n\nЯкщо встановлено прапорець Zookeeper::SEQUENCE, до імені шляху буде додаватися унікальний номер із монотонно зростаючої послідовності. Номер із послідовності завжди має фіксовану довжину в 10 цифр, доповнену лідуючими нулями за потребою.\n\n## Рівень логування ZooKeeper\n\n**`Zookeeper::LOG_LEVEL_ERROR`**\n\nВиводити лише повідомлення про помилки\n\n**`Zookeeper::LOG_LEVEL_WARN`**\n\nВиводити помилки та попередження\n\n**`Zookeeper::LOG_LEVEL_INFO`**\n\nВиводити великі повідомлення про дії, крім помилок і попереджень\n\n**`Zookeeper::LOG_LEVEL_DEBUG`**\n\nВиводити все\n\n## Стан ZooKeeper\n\n**`Zookeeper::EXPIRED_SESSION_STATE`**\n\nЗ'єднання встановлено, але сесія закінчилася\n\n**`Zookeeper::AUTH_FAILED_STATE`**\n\nЗ'єднання встановлено, але автентифікація невдала\n\n**`Zookeeper::CONNECTING_STATE`**\n\nВстановлюється з'єднання\n\n**`Zookeeper::ASSOCIATING_STATE`**\n\nАсоціювання\n\n**`Zookeeper::CONNECTED_STATE`**\n\nЗ'єднання встановлено\n\n**`Zookeeper::READONLY_STATE`**\n\nTODO: допоможіть нам покращити модуль\n\n**`Zookeeper::NOTCONNECTED_STATE`**\n\nЗ'єднання не встановлено\n\n## Типи подій ZooKeeper\n\n**`Zookeeper::CREATED_EVENT`**\n\nВузол був створений\n\nГенерується лише шляхом спостереження за неіснуючими вузлами. Ці спостерігачі задаються за допомогою Zookeeper::exists.\n\n**`Zookeeper::DELETED_EVENT`**\n\nВузол був видалений\n\nГенерується лише шляхом спостереження за вузлами. Ці спостерігачі задаються за допомогою Zookeeper::exists та Zookeeper::get.\n\n**`Zookeeper::CHANGED_EVENT`**\n\nВузол був змінений\n\nГенерується лише шляхом спостереження за вузлами. Ці спостерігачі задаються за допомогою Zookeeper::exists та Zookeeper::get.\n\n**`Zookeeper::CHILD_EVENT`**\n\nВідбулася зміна у списку дочірніх вузлів\n\nГенерується лише шляхом спостереження за списком дочірніх вузлів. Ці спостерігачі задаються за допомогою Zookeeper::getChildren.\n\n**`Zookeeper::SESSION_EVENT`**\n\nСесія була втрачена\n\nГенерується, коли клієнт втратив з'єднання з сервером, або ініціював переєднання.\n\n**`Zookeeper::NOTWATCHING_EVENT`**\n\nСпостерігач був вилучений\n\nГенерується сервером з різних причин, наприклад, пов'язаних з обмеженням ресурсу, і говорить про те, що подальше спостереження за вузлом неможливе.\n\n## Системні помилки та помилки на стороні сервера ZooKeeper\n\n**`Zookeeper::SYSTEMERROR`**\n\nНіколи не викидається сервером і може використовуватись лише для обмеження діапазону кодів помилок. Всі помилки більші за цю, але меншу Zookeeper::APIERROR, є системними помилками.\n\n**`Zookeeper::RUNTIMEINCONSISTENCY`**\n\nВиявлено неузгодженість під час виконання.\n\n**`Zookeeper::DATAINCONSISTENCY`**\n\nВиявлено неузгодженість даних.\n\n**`Zookeeper::CONNECTIONLOSS`**\n\nВтрачено з'єднання із сервером.\n\n**`Zookeeper::MARSHALLINGERROR`**\n\nПомилка при маршалінгу та демаршалінгу даних.\n\n**`Zookeeper::UNIMPLEMENTED`**\n\nОперацію не реалізовано.\n\n**`Zookeeper::OPERATIONTIMEOUT`**\n\nПеревищення часу очікування операції.\n\n**`Zookeeper::BADARGUMENTS`**\n\nНекоректний аргумент.\n\n**`Zookeeper::INVALIDSTATE`**\n\nНекоректний статус zhandle.\n\n**`Zookeeper::NEWCONFIGNOQUORUM`**\n\nКворум нової конфігурації не підключений і синхронізований з лідером останньої підтвердженої конфігурації. Спробуйте запустити переконфігурацію після підключення та синхронізації нових серверів.\n\nДоступно з версії ZooKeeper 3.5.0\n\n**`Zookeeper::RECONFIGINPROGRESS`**\n\nЗапит переконфігурації під час іншого процесу переконфігурації. На даний момент не підтримується. Спробуйте повторити пізніше.\n\nДоступно з версії ZooKeeper 3.5.0\n\n## ZooKeeper API Errors\n\n**`Zookeeper::OK`**\n\nВсе добре.\n\n**`Zookeeper::APIERROR`**\n\nНіколи не викидається сервером і може використовуватись лише для обмеження діапазону кодів помилок. Всі помилки більші за цю, є помилками API (значення менші за це означають системні помилки).\n\n**`Zookeeper::NONODE`**\n\nВузол відсутній.\n\n**`Zookeeper::NOAUTH`**\n\nВідсутня автентифікація.\n\n**`Zookeeper::BADVERSION`**\n\nКонфлікт версії.\n\n**`Zookeeper::NOCHILDRENFOREPHEMERALS`**\n\nЕфемерні вузли не повинні мати нащадків.\n\n**`Zookeeper::NODEEXISTS`**\n\nВузол уже існує.\n\n**`Zookeeper::NOTEMPTY`**\n\nВузол має нащадків.\n\n**`Zookeeper::SESSIONEXPIRED`**\n\nТермін дії сесії минув.\n\n**`Zookeeper::INVALIDCALLBACK`**\n\nВказано неправильну функцію зворотного дзвінка.\n\n**`Zookeeper::INVALIDACL`**\n\nВказано некоректний ACL.\n\n**`Zookeeper::AUTHFAILED`**\n\nНевдала аутентифікація клієнта.\n\n**`Zookeeper::CLOSING`**\n\nZooKeeper закривається.\n\n**`Zookeeper::NOTHING`**\n\n(не помилка) Жодної відповіді від сервера для обробки.\n\n**`Zookeeper::SESSIONMOVED`**\n\nСесію переміщено на інший сервер, таким чином операцію проігноровано.\n\n**`Zookeeper::NOTREADONLY`**\n\nЗапит зміни статусу надіслано на сервер із режимом \"тільки читання\".\n\n**`Zookeeper::EPHEMERALONLOCALSESSION`**\n\nСпроба створити ефемерний вузол у локальній сесії.\n\n**`Zookeeper::NOWATCHER`**\n\nНеможливо знайти спостерігача.\n\n**`Zookeeper::RECONFIGDISABLED`**\n\nСпроба зробити операцію переконфігурації у випадку, якщо вона заборонена.\n\n## Зміст\n\n-   [Zookeeper::addAuth](zookeeper.addauth.md)— Вказує облікові дані програми\n-   [Zookeeper::close](zookeeper.close.md)— Закриває обробник zookeeper та звільняє будь-які ресурси\n-   [Zookeeper::connect](zookeeper.connect.md)— Створює дескриптор для спілкування із zookeeper\n-   [Zookeeper::\\_\\_construct](zookeeper.construct.md)— Створює дескриптор для спілкування із zookeeper\n-   [Zookeeper::create](zookeeper.create.md) \\- Створює синхронно вузол\n-   [Zookeeper::delete](zookeeper.delete.md)— Видаляє синхронно вузол у zookeeper\n-   [Zookeeper::exists](zookeeper.exists.md)— Синхронно перевіряє наявність вузла в zookeeper\n-   [Zookeeper::get](zookeeper.get.md)— Синхронно отримує дані, пов'язані із вузлом\n-   [Zookeeper::getAcl](zookeeper.getacl.md)— Синхронно отримує ACL, пов'язаний із вузлом\n-   [Zookeeper::getChildren](zookeeper.getchildren.md) \\- Виводить список нащадків вузла синхронно\n-   [Zookeeper::getClientId](zookeeper.getclientid.md)— Повертає ідентифікатор сесії клієнта, дійсний лише в тому випадку, якщо підключення в даний час підключено (тобто останній стан спостерігача - ZOO\\_CONNECTED\\_STATE)\n-   [Zookeeper::getConfig](zookeeper.getconfig.md)— Отримує екземпляр ZookeeperConfig\n-   [Zookeeper::getRecvTimeout](zookeeper.getrecvtimeout.md)— Повертає час очікування для сесії, дійсний тільки якщо підключення в даний час підключено (тобто останній стан спостерігача - ZOO\\_CONNECTED\\_STATE). Це значення може змінитися після повторного підключення до сервера\n-   [Zookeeper::getState](zookeeper.getstate.md)— Отримує стан з'єднання zookeeper\n-   [Zookeeper::isRecoverable](zookeeper.isrecoverable.md)— Перевіряє, чи можна відновити поточний стан підключення ZooKeeper\n-   [Zookeeper::set](zookeeper.set.md) \\- Встановлює дані, пов'язані з вузлом\n-   [Zookeeper::setAcl](zookeeper.setacl.md)— Встановлює ACL, пов'язаний із вузлом синхронно\n-   [Zookeeper::setDebugLevel](zookeeper.setdebuglevel.md)— Встановлює рівень логування для бібліотеки\n-   [Zookeeper::setDeterministicConnOrder](zookeeper.setdeterministicconnorder.md) \\- Увімкнення/відключення рандомізації порядку кінцевих точок кворуму\n-   [Zookeeper::setLogStream](zookeeper.setlogstream.md)— Встановлює потік, який використовуватиме бібліотека для логування\n-   [Zookeeper::setWatcher](zookeeper.setwatcher.md) \\- Встановлює функцію спостерігача\n","title":"Клас Zookeeper","contentType":2,"navigation":[{"function.zookeeper-dispatch.md":"« zookeeper\\_dispatch"},{"zookeeper.addauth.md":"Zookeeper::addAuth »"},{"index.md":"PHP Manual"},{"book.zookeeper.md":"ZooKeeper"}]}},"__N_SSG":true}