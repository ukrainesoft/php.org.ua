{"pageProps":{"page":{"slug":"language.attributes.syntax.md","content":"## Синтаксис атрибутів\n\nСинтаксис атрибутів складається з кількох частин. По-перше, декларація атрибуту починається із символу `#[` і закінчується символом `]`. По-друге, усередині перераховують один або кілька розділених коми атрибутів. Імена атрибутів можуть бути неповними, повними та абсолютними, як описано в розділі [Використання простору імен: основи](language.namespaces.basics.md). Аргументи атрибутів необов'язкові, але якщо вони є, їх укладають у круглі дужки `()`. Аргументи атрибутів може бути або конкретними значеннями (літералами), або константними висловлюваннями. Аргументи можна записувати як позиційним, і іменованим синтаксисом.\n\nКоли Reflection API запитує екземпляр класу атрибута, ім'я атрибута трактується як ім'я класу, що запитується, а аргументи атрибута передаються в конструктор цього класу. Тому для кожного атрибуту потрібно створювати клас.\n\n**Приклад #1 Синтаксис атрибутів**\n\n```php\n<?php\n// a.php\nnamespace MyExample;\n\nuse Attribute;\n\n#[Attribute]\nclass MyAttribute\n{\n    const VALUE = 'value';\n\n    private $value;\n\n    public function __construct($value = null)\n    {\n        $this->value = $value;\n    }\n}\n\n// b.php\n\nnamespace Another;\n\nuse MyExample\\MyAttribute;\n\n#[MyAttribute]\n#[\\MyExample\\MyAttribute]\n#[MyAttribute(1234)]\n#[MyAttribute(value: 1234)]\n#[MyAttribute(MyAttribute::VALUE)]\n#[MyAttribute(array(\"key\" => \"value\"))]\n#[MyAttribute(100 + 200)]\nclass Thing\n{\n}\n\n#[MyAttribute(1234), MyAttribute(5678)]\nclass AnotherThing\n{\n}\n```\n","title":"Синтаксис атрибутів","contentType":2,"navigation":[{"language.attributes.overview.md":"« Введення в атрибути"},{"language.attributes.reflection.md":"Читання атрибутів за допомогою Reflection API"},{"index.md":"PHP Manual"},{"language.attributes.md":"Атрибути"}]}},"__N_SSG":true}