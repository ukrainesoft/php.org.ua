{"pageProps":{"page":{"slug":"function.ob-list-handlers.md","content":"# ob\\_list\\_handlers\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\nob\\_list\\_handlers — Повертає список активних обробників виводу\n\n### Опис\n\n```methodsynopsis\nob_list_handlers(): array\n```\n\nВиводить список активних обробників виводу.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає масив зі списком активних обробників виводу, якщо є.\n\nПовертає рядок `\"default output handler\"`, якщо налаштування [output\\_buffering](outcontrol.configuration.md#ini.output-buffering) увімкнено та налаштування [output\\_handler](outcontrol.configuration.md#ini.output-handler) не встановлено, або у функцію [ob\\_start()](function.ob-start.md) не передана callback-функція або замість неї передано значення \\*\\*`null`\\*\\*Включение настройки[output\\_buffering](outcontrol.configuration.md#ini.output-buffering)и установка значения для настройки[output\\_handler](outcontrol.configuration.md#ini.output-handler) еквівалентно передачі у функцію [ob\\_start()](function.ob-start.md) [внутрішньої (вбудованої) функції](functions.internal.md)\n\nПовертає [абсолютне ім'я](language.namespaces.basics.md)переданной в параметр[callable](language.types.callable.md) функції, якщо параметр [callable](language.types.callable.md) функції [ob\\_start()](function.ob-start.md) була передана callback-функція. Повертає [абсолютне ім'я](language.namespaces.basics.md) об'єкта з методом [\\_\\_invoke()](language.oop5.magic.md#language.oop5.magic.invoke), якщо параметр [callable](language.types.callable.md) - це об'єкт, який реалізує метод [\\_\\_invoke()](language.oop5.magic.md#language.oop5.magic.invoke). Повертає рядок `\"Closure::__invoke\"`, якщо параметр [callable](language.types.callable.md) - це об'єкт класу [Closure](class.closure.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** ob\\_list\\_handlers()\\*\\*\\*\\*\n\n```php\n<?php\n// настройка включена output_buffering=On, значение для настройки output_handler не установлено\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// callback-функция не передана или null\nob_start();\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// анонимная функция\nob_start(function($string) { return $string; });\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// стрелочная функция\nob_start(fn($string) => $string);\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// callback-функция как объект первого класса\n$firstClassCallable = userDefinedFunction(...);\n\nob_start([$firstClassCallable, '__invoke']);\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// внутренняя (встроенная функция)\nob_start('print_r');\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// пользовательская функция\nfunction userDefinedFunction($string, $flags) { return $string; };\n\nob_start('userDefinedFunction');\nvar_dump(ob_list_handlers());\nob_end_flush();\n\nclass MyClass {\n    public static function staticHandle($string) {\n        return $string;\n    }\n\n    public static function handle($string) {\n        return $string;\n    }\n\n    public function __invoke($string) {\n        return $string;\n    }\n}\n\n// класс и статический метод\nob_start(['MyClass','staticHandle']);\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// объект и нестатический метод\nob_start([new MyClass,'handle']);\nvar_dump(ob_list_handlers());\nob_end_flush();\n\n// объект вызываемого класса\nob_start(new MyClass);\nvar_dump(ob_list_handlers());\nob_end_flush();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(1) {\n  [0]=>\n  string(22) \"default output handler\"\n}\narray(1) {\n  [0]=>\n  string(22) \"default output handler\"\n}\narray(1) {\n  [0]=>\n  string(7) \"print_r\"\n}\narray(1) {\n  [0]=>\n  string(19) \"userDefinedFunction\"\n}\narray(1) {\n  [0]=>\n  string(17) \"Closure::__invoke\"\n}\narray(1) {\n  [0]=>\n  string(17) \"Closure::__invoke\"\n}\narray(1) {\n  [0]=>\n  string(17) \"Closure::__invoke\"\n}\narray(1) {\n  [0]=>\n  string(21) \"MyClass::staticHandle\"\n}\narray(1) {\n  [0]=>\n  string(15) \"MyClass::handle\"\n}\narray(1) {\n  [0]=>\n  string(17) \"MyClass::__invoke\"\n}\n```\n\n### Дивіться також\n\n-   [ob\\_end\\_clean()](function.ob-end-clean.md) \\- Очищає (стирає) вміст активного буфера виведення та відключає його\n-   [ob\\_end\\_flush()](function.ob-end-flush.md) \\- Скидає (відправляє) значення активного оброблювача виводу, що повертається, і відключає активний буфер виводу\n-   [ob\\_get\\_flush()](function.ob-get-flush.md) \\- Скидає (відправляє) повернене активним обробником виводу значення, повертає вміст активного буфера виводу та відключає його\n-   [ob\\_start()](function.ob-start.md) \\- Включає буферизацію виводу\n","title":"ob\\_list\\_handlers","contentType":2,"navigation":[{"function.ob-implicit-flush.md":"« ob\\_implicit\\_flush"},{"function.ob-start.md":"ob\\_start »"},{"index.md":"PHP Manual"},{"ref.outcontrol.md":"Функції контролю виведення"}]}},"__N_SSG":true}