{"pageProps":{"page":{"slug":"simplexmlelement.haschildren.md","content":"# SimpleXMLElement::hasChildren\n\n(No version information available, might only be in Git)\n\nSimpleXMLElement::hasChildren — Перевіряє, чи поточний елемент має дочірні елементи\n\n### Опис\n\n```methodsynopsis\npublic SimpleXMLElement::hasChildren(): bool\n```\n\n**Увага**\n\nДо версії PHP 8.0 метод **SimpleXMLElement::hasChildren()** був оголошений лише для дочірнього класу [SimpleXMLIterator](class.simplexmliterator.md)\n\nМетод перевіряє, чи має поточний елемент [SimpleXMLElement](class.simplexmlelement.md) дочірніх елементів.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає \\*\\*`true`\\*\\*якщо поточний елемент має дочірні елементи, інакше повертає **`false`**\n\n### Приклади\n\n**Приклад #1 Перевірка наявності поточного елемента дочірніх елементів**\n\n```php\n<?php\n$xml = <<<XML\n<books>\n    <book>\n        <title>PHP Basics</title>\n        <author>Jim Smith</author>\n    </book>\n    <book>XML basics</book>\n</books>\nXML;\n\n$xmlElement = new SimpleXMLElement($xml);\nfor ($xmlElement->rewind(); $xmlElement->valid(); $xmlElement->next()) {\n    if ($xmlElement->hasChildren()) {\n        var_dump($xmlElement->current());\n    }\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nobject(SimpleXMLElement)#2 (2) {\n  [\"title\"]=>\n  string(10) \"PHP Basics\"\n  [\"author\"]=>\n  string(9) \"Jim Smith\"\n}\n```\n","title":"SimpleXMLElement::hasChildren","contentType":2,"navigation":[{"simplexmlelement.getchildren.md":"« SimpleXMLElement::getChildren"},{"simplexmlelement.key.md":"SimpleXMLElement::key »"},{"index.md":"PHP Manual"},{"class.simplexmlelement.md":"SimpleXMLElement"}]}},"__N_SSG":true}