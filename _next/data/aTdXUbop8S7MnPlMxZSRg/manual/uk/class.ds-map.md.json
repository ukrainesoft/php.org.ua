{"pageProps":{"page":{"slug":"class.ds-map.md","content":"# Клас Map\n\n(PECL ds >= 1.0.0)\n\n## Вступ\n\nКолекція пар - це послідовна колекція, що містить пари ключ-значення, практично ідентична масиву і використовується для тих же цілей. Ключі можуть бути будь-якого типу, але мають бути унікальними. Якщо додати пару з існуючим ключем, то вона буде замінена.\n\n## Сильні сторони\n\n-   Ключі та значення можуть бути будь-якого типу, включаючи об'єкти.\n-   Підтримує синтаксис масиву (квадратні дужки).\n-   Зберігається порядок вставки.\n-   Швидкість та споживання пам'яті можна порівняти з використанням масиву.\n-   Автоматично звільняє пам'ять, коли кількість елементів зменшується.\n\n## Слабкі сторони\n\n-   Не може бути конвертована в масив, якщо як ключі використовуються об'єкти.\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class Ds\\Map\n     \n\n     implements \n       Ds\\Collection,  ArrayAccess {\n    \n    /* Константы */\n    \n     const\n     int\n      MIN_CAPACITY = 16;\n\n\n    /* Методы */\n    \n   public allocate(int $capacity): void\npublic apply(callable $callback): void\npublic capacity(): int\npublic clear(): void\npublic copy(): Ds\\Map\npublic diff(Ds\\Map $map): Ds\\Map\npublic filter(callable $callback = ?): Ds\\Map\npublic first(): Ds\\Pair\npublic get(mixed $key, mixed $default = ?): mixed\npublic hasKey(mixed $key): bool\npublic hasValue(mixed $value): bool\npublic intersect(Ds\\Map $map): Ds\\Map\npublic isEmpty(): bool\npublic keys(): Ds\\Set\npublic ksort(callable $comparator = ?): void\npublic ksorted(callable $comparator = ?): Ds\\Map\npublic last(): Ds\\Pair\npublic map(callable $callback): Ds\\Map\npublic merge(mixed $values): Ds\\Map\npublic pairs(): Ds\\Sequence\npublic put(mixed $key, mixed $value): void\npublic putAll(mixed $pairs): void\npublic reduce(callable $callback, mixed $initial = ?): mixed\npublic remove(mixed $key, mixed $default = ?): mixed\npublic reverse(): void\npublic reversed(): Ds\\Map\npublic skip(int $position): Ds\\Pair\npublic slice(int $index, int $length = ?): Ds\\Map\npublic sort(callable $comparator = ?): void\npublic sorted(callable $comparator = ?): Ds\\Map\npublic sum(): int|float\npublic toArray(): array\npublic union(Ds\\Map $map): Ds\\Map\npublic values(): Ds\\Sequence\npublic xor(Ds\\Map $map): Ds\\Map\n\n   }\n```\n\n## Обумовлені константи\n\n**`Ds\\Map::MIN_CAPACITY`**\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL ds 1.3.0 | Тепер клас реалізує [ArrayAccess](class.arrayaccess.md) |\n\n## Зміст\n\n-   [Ds\\\\Map::allocate](ds-map.allocate.md)— Виділяє необхідну кількість пам'яті під потрібну місткість\n-   [Ds\\\\Map::apply](ds-map.apply.md)— Оновлення всіх значень застосуванням переданої callback-функції до них\n-   [Ds\\\\Map::capacity](ds-map.capacity.md)— Повертає поточну місткість\n-   [Ds\\\\Map::clear](ds-map.clear.md)— Видаляє всі значення з колекції\n-   [Ds\\\\Map::\\_\\_construct](ds-map.construct.md) \\- Створює новий екземпляр\n-   [Ds\\\\Map::copy](ds-map.copy.md)— Повертає поверхневу копію колекції\n-   [Ds\\\\Map::count](ds-map.count.md)— Повертає кількість елементів колекції\n-   [Ds\\\\Map::diff](ds-map.diff.md)— Створює нову колекцію пар із елементами, ключів яких немає в іншій колекції пар\n-   [Ds\\\\Map::filter](ds-map.filter.md)— Створює нову колекцію пар із елементів, вибраних за допомогою заданої callback-функції\n-   [Ds\\\\Map::first](ds-map.first.md)— Повертає перший елемент колекції\n-   [Ds\\\\Map::get](ds-map.get.md)— Повертає значення за ключом\n-   [Ds\\\\Map::hasKey](ds-map.haskey.md)— Перевіряє, чи колекція містить заданий ключ\n-   [Ds\\\\Map::hasValue](ds-map.hasvalue.md)— Перевіряє, чи колекція містить задане значення\n-   [Ds\\\\Map::intersect](ds-map.intersect.md)— Створює нову колекцію пар, створену перетином з іншою колекцією пар\n-   [Ds\\\\Map::isEmpty](ds-map.isempty.md)— Перевіряє, чи колекція порожня.\n-   [Ds\\\\Map::jsonSerialize](ds-map.jsonserialize.md)— Повертає колекцію в JSON-представництві\n-   [Ds\\\\Map::keys](ds-map.keys.md)— Повертає набір ключів колекції\n-   [Ds\\\\Map::ksort](ds-map.ksort.md)— Сортує поточну колекцію за ключами\n-   [Ds\\\\Map::ksorted](ds-map.ksorted.md)— Повертає копію колекції, відсортованої за ключами\n-   [Ds\\\\Map::last](ds-map.last.md)— Повертає останню пару колекції\n-   [Ds\\\\Map::map](ds-map.map.md)— Повертає результат застосування callback-функції до всіх значень колекції.\n-   [Ds\\\\Map::merge](ds-map.merge.md)— Повертає результат додавання всіх заданих елементів до колекції\n-   [Ds\\\\Map::pairs](ds-map.pairs.md)— Повертає послідовність, яка містить усі пари колекції.\n-   [Ds\\\\Map::put](ds-map.put.md)— Встановлення значення за заданим ключем\n-   [Ds\\\\Map::putAll](ds-map.putall.md)— Зв'язує з колекцією всі пари ключ-значення з об'єкту класу traversable чи масиву\n-   [Ds\\\\Map::reduce](ds-map.reduce.md) \\- Зменшує колекцію до одного значення, використовуючи callback-функцію\n-   [Ds\\\\Map::remove](ds-map.remove.md)— Видаляє та повертає значення за ключом\n-   [Ds\\\\Map::reverse](ds-map.reverse.md)— Перевертає поточну колекцію\n-   [Ds\\\\Map::reversed](ds-map.reversed.md)— Повертає перегорнуту копію колекції\n-   [Ds\\\\Map::skip](ds-map.skip.md)— Повертає пару за індексом позиції\n-   [Ds\\\\Map::slice](ds-map.slice.md)— Повертає підмножину колекції із заданого діапазону\n-   [Ds\\\\Map::sort](ds-map.sort.md)— Сортує колекцію за значеннями\n-   [Ds\\\\Map::sorted](ds-map.sorted.md)— Повертає копію колекції, відсортовану за значенням.\n-   [Ds\\\\Map::sum](ds-map.sum.md)— Повертає суму всіх значень колекції\n-   [Ds\\\\Map::toArray](ds-map.toarray.md)— Перетворює колекцію на масив (array)\n-   [Ds\\\\Map::union](ds-map.union.md)— Створює нову колекцію пар із елементів двох колекцій\n-   [Ds\\\\Map::values](ds-map.values.md)— Повертає послідовність значень колекції\n-   [Ds\\\\Map::xor](ds-map.xor.md)— Створює нову колекцію пар із елементів, які є в одній із колекцій, але не в обох одночасно\n","title":"Клас Map","contentType":2,"navigation":[{"ds-deque.unshift.md":"« Ds\\\\Deque::unshift"},{"ds-map.allocate.md":"Ds\\\\Map::allocate »"},{"index.md":"PHP Manual"},{"book.ds.md":"Структури даних"}]}},"__N_SSG":true}