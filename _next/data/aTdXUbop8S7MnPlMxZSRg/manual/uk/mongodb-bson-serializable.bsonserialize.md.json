{"pageProps":{"page":{"slug":"mongodb-bson-serializable.bsonserialize.md","content":"# MongoDB\\\\BSON\\\\Serializable::bsonSerialize\n\n(mongodb >=1.0.0)\n\nMongoDB\\\\BSON\\\\Serializable::bsonSerialize — Надає масив або документ для серіалізації в BSON\n\n### Опис\n\n```methodsynopsis\nabstract public MongoDB\\BSON\\Serializable::bsonSerialize(): array|stdClass|MongoDB\\BSON\\Document|MongoDB\\BSON\\PackedArray\n```\n\nВикликається під час серіалізації об'єкта BSON. Метод повинен повертати масив (array) або екземпляр одного із класів: [stdClass](class.stdclass.md) [MongoDB\\\\BSON\\\\Document](class.mongodb-bson-document.md), или[MongoDB\\\\BSON\\\\PackedArray](class.mongodb-bson-packedarray.md)\n\nКореневі документи (наприклад, [MongoDB\\\\BSON\\\\Serializable](class.mongodb-bson-serializable.md), передані в [MongoDB\\\\BSON\\\\fromPHP()](function.mongodb.bson-fromphp.md)) завжди будуть серіалізовані як документ BSON. Для значень полів асоціативні масиви та екземпляри [stdClass](class.stdclass.md) будуть серіалізовані у вигляді документа BSON, а послідовні масиви (наприклад, послідовні числові індекси, що починаються з ) будуть серіалізовані у вигляді масиву BSON.\n\nКористувачам рекомендовано включати властивість \\_id (наПриклад,[MongoDB\\\\BSON\\\\ObjectId](class.mongodb-bson-objectid.md), ініціалізований у конструкторі) при поверненні даних для кореневого документа BSON; інакше драйвер чи база даних повинні будуть згенерувати [MongoDB\\\\BSON\\\\ObjectId](class.mongodb-bson-objectid.md) при вставці чи злитті документа, відповідно.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає масив (array) або об'єкт одного із класів: [stdClass](class.stdclass.md) [MongoDB\\\\BSON\\\\Document](class.mongodb-bson-document.md), или[MongoDB\\\\BSON\\\\PackedArray](class.mongodb-bson-packedarray.md), який буде серіалізовано як масив BSON або документ.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL mongodb 1.17.0 |  |\n| Тип, що повертається, був змінений з array | об'єкт. Замість object тип, що повертається, тепер визначений як об'єкт класу [stdClass](class.stdclass.md). . Класи, які реалізують цей інтерфейс, повинні бути змінені, щоб більше не оголошувати тип object, що повертається. Оскільки тип, що повертається, попередньо оголошений, у PHP 8.1 або більше нових версіях видається попередження про старіння. |\n\nНа додаток до раніше описаних змін, драйвер також підтримує повернення екземплярів класів [MongoDB\\\\BSON\\\\Document](class.mongodb-bson-document.md) і [MongoDB\\\\BSON\\\\PackedArray](class.mongodb-bson-packedarray.md). Будь ласка, зверніть увагу, що будь-які повернені екземпляри класу [MongoDB\\\\BSON\\\\PackedArray](class.mongodb-bson-packedarray.md) автоматично перетворюються на об'єкти при збереженні як кореневих документів. Вони зберігаються як масивів, коли вказуються як значення вбудованого поля.\n\n### Приклади\n\n**Приклад #1**MongoDB\\\\BSON\\\\Serializable::bsonSerialize()**возвращение ассоциативного массива для корневого документа**\n\n```php\n<?php\n\nclass MyDocument implements MongoDB\\BSON\\Serializable\n{\n    private $id;\n\n    function __construct()\n    {\n        $this->id = new MongoDB\\BSON\\ObjectId;\n    }\n\n    function bsonSerialize(): array\n    {\n        return ['_id' => $this->id, 'foo' => 'bar'];\n    }\n}\n\n$bson = MongoDB\\BSON\\fromPHP(new MyDocument);\necho MongoDB\\BSON\\toJSON($bson), \"\\n\";\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n{ \"_id\" : { \"$oid\" : \"56cccdcada14d8755a58c591\" }, \"foo\" : \"bar\" }\n```\n\n**Приклад #2 Приклад использования метода**MongoDB\\\\BSON\\\\Serializable::bsonSerialize()**, що повертає асоціативний масив для кореневого документа**\n\n```php\n<?php\n\nclass MyArray implements MongoDB\\BSON\\Serializable\n{\n    function bsonSerialize(): array\n    {\n        return [1, 2, 3];\n    }\n}\n\n$bson = MongoDB\\BSON\\fromPHP(new MyArray);\necho MongoDB\\BSON\\toJSON($bson), \"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n{ \"0\" : 1, \"1\" : 2, \"2\" : 3 }\n```\n\n**Приклад #3**MongoDB\\\\BSON\\\\Serializable::bsonSerialize()**возвращение ассоциативного массива для поля документа**\n\n```php\n<?php\n\nclass MyDocument implements MongoDB\\BSON\\Serializable\n{\n    function bsonSerialize(): array\n    {\n        return ['foo' => 'bar'];\n    }\n}\n\n$value = ['document' => new MyDocument];\n$bson = MongoDB\\BSON\\fromPHP($value);\necho MongoDB\\BSON\\toJSON($bson), \"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n{ \"document\" : { \"foo\" : \"bar\" } }\n```\n\n**Приклад #4**MongoDB\\\\BSON\\\\Serializable::bsonSerialize()**возвращение последовательного массива для поля документа**\n\n```php\n<?php\n\nclass MyArray implements MongoDB\\BSON\\Serializable\n{\n    function bsonSerialize(): array\n    {\n        return [1, 2, 3];\n    }\n}\n\n$value = ['array' => new MyArray];\n$bson = MongoDB\\BSON\\fromPHP($value);\necho MongoDB\\BSON\\toJSON($bson), \"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n{ \"array\" : [ 1, 2, 3 ] }\n```\n\n### Дивіться також\n\n-   [MongoDB\\\\BSON\\\\Unserializable::bsonUnserialize()](mongodb-bson-unserializable.bsonunserialize.md) \\- Створює об'єкт із масиву BSON або документа\n-   [MongoDB\\\\BSON\\\\Persistable](class.mongodb-bson-persistable.md)\n-   [Постійні дані](mongodb.persistence.md)\n","title":"MongoDB\\\\BSON\\\\Serializable::bsonSerialize","contentType":2,"navigation":[{"class.mongodb-bson-serializable.md":"« MongoDB\\\\BSON\\\\Serializable"},{"class.mongodb-bson-unserializable.md":"MongoDB\\\\BSON\\\\Unserializable »"},{"index.md":"PHP Manual"},{"class.mongodb-bson-serializable.md":"MongoDB\\\\BSON\\\\Serializable"}]}},"__N_SSG":true}