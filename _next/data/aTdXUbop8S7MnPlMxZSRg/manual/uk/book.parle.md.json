{"pageProps":{"page":{"slug":"book.parle.md","content":"# Розбір та лексування\n\n-   [Вступ](intro.parle.md)\n-   [Встановлення та налаштування](parle.setup.md)\n    -   [Вимоги](parle.requirements.md)\n    -   [Установка](parle.installation.md)\n-   [Обумовлені константи](parle.constants.md)\n-   [Зіставлення з шаблоном](parle.pattern.matching.md)— Зіставлення із шаблоном Parle\n    -   [Подання символів](parle.regex.chars.md)\n    -   [Класи символів](parle.regex.charclass.md)\n    -   [Класи символів Unicode](parle.regex.unicodecharclass.md)\n    -   [Чергування та повторення](parle.regex.alternation.md)\n    -   [Якоря](parle.regex.anchors.md)\n    -   [Угруповання](parle.regex.grouping.md)\n-   [Приклади](parle.examples.md)\n    -   [Приклади використання лексера](parle.examples.lexer.md)\n    -   [Приклад використання парсеру](parle.examples.parser.md)\n-   [Parle\\\\Lexer](class.parle-lexer.md) \\- Клас Parle\\\\Lexer\n    -   [Parle\\\\Lexer::advance](parle-lexer.advance.md) \\- Обробляє таке правило лексера\n    -   [Parle\\\\Lexer::build](parle-lexer.build.md) \\- Завершує набір правил лексера\n    -   [Parle\\\\Lexer::callout](parle-lexer.callout.md) \\- Визначає callback-функцію токена\n    -   [Parle\\\\Lexer::consume](parle-lexer.consume.md) \\- Передає дані на обробку\n    -   [Parle\\\\Lexer::dump](parle-lexer.dump.md) \\- Виводить стан пристрою\n    -   [Parle\\\\Lexer::getToken](parle-lexer.gettoken.md)— Отримує поточний токен\n    -   [Parle\\\\Lexer::insertMacro](parle-lexer.insertmacro.md)— Вставляє макрос регулярного виразу\n    -   [Parle\\\\Lexer::push](parle-lexer.push.md) \\- Додає правило лексера\n    -   [Parle\\\\Lexer::reset](parle-lexer.reset.md) \\- скидає лексер\n-   [Parle\\\\RLexer](class.parle-rlexer.md) \\- Клас Parle\\\\RLexer\n    -   [Parle\\\\RLexer::advance](parle-rlexer.advance.md) \\- Обробка наступного правила лексера\n    -   [Parle\\\\RLexer::build](parle-rlexer.build.md) \\- Завершує набір правил лексера\n    -   [Parle\\\\RLexer::callout](parle-rlexer.callout.md) \\- Визначає callback-функцію токена\n    -   [Parle\\\\RLexer::consume](parle-rlexer.consume.md)— Передає дані для обробки\n    -   [Parle\\\\RLexer::dump](parle-rlexer.dump.md)— Вивантажує стан пристрою\n    -   [Parle\\\\RLexer::getToken](parle-rlexer.gettoken.md)— v\n    -   [Parle\\\\RLexer::insertMacro](parle-rlexer.insertmacro.md)— Вставляє макрос регулярного виразу\n    -   [Parle\\\\RLexer::push](parle-rlexer.push.md) \\- Додає правило лексера\n    -   [Parle\\\\RLexer::pushState](parle-rlexer.pushstate.md) \\- Просуває новий початковий стан\n    -   [Parle\\\\RLexer::reset](parle-rlexer.reset.md) \\- скидає лексер\n-   [Parle\\\\Parser](class.parle-parser.md) \\- Клас Parle\\\\Parser\n    -   [Parle\\\\Parser::advance](parle-parser.advance.md) \\- Обробляє наступне правило парсера\n    -   [Parle\\\\Parser::build](parle-parser.build.md) \\- Завершує граматичні правила\n    -   [Parle\\\\Parser::consume](parle-parser.consume.md)— Використовує дані для обробки\n    -   [Parle\\\\Parser::dump](parle-parser.dump.md) \\- Виводить граматику\n    -   [Parle\\\\Parser::errorInfo](parle-parser.errorinfo.md)— Отримує інформацію про помилку\n    -   [Parle\\\\Parser::left](parle-parser.left.md) \\- Оголошує токен з лівою асоціативністю\n    -   [Parle\\\\Parser::nonassoc](parle-parser.nonassoc.md) \\- Оголошує токен без асоціативності\n    -   [Parle\\\\Parser::precedence](parle-parser.precedence.md)— Оголошує правило пріоритету\n    -   [Parle\\\\Parser::push](parle-parser.push.md)— Додає граматичне правило\n    -   [Parle\\\\Parser::reset](parle-parser.reset.md)— скидає стан парсера\n    -   [Parle\\\\Parser::right](parle-parser.right.md)— Оголошує токен із правою асоціативністю\n    -   [Parle\\\\Parser::sigil](parle-parser.sigil.md)— Витягує частину збігу за правилом\n    -   [Parle\\\\Parser::sigilCount](parle-parser.sigilcount.md)— Отримує кількість елементів у відповідному правилі\n    -   [Parle\\\\Parser::sigilName](parle-parser.sigilname.md)— Отримує ім'я правила чи токена\n    -   [Parle\\\\Parser::token](parle-parser.token.md) \\- Оголошує токен\n    -   [Parle\\\\Parser::tokenId](parle-parser.tokenid.md)— Отримує ідентифікатор токена\n    -   [Parle\\\\Parser::trace](parle-parser.trace.md)— Слідкує за роботою парсера\n    -   [Parle\\\\Parser::validate](parle-parser.validate.md) \\- Перевіряє вхідні дані\n-   [Parle\\\\RParser](class.parle-rparser.md) \\- Клас Parle\\\\RParser\n    -   [Parle\\\\RParser::advance](parle-rparser.advance.md) \\- Обробка наступного правила парсера\n    -   [Parle\\\\RParser::build](parle-rparser.build.md) \\- Завершує граматичні правила\n    -   [Parle\\\\RParser::consume](parle-rparser.consume.md)— Використовувати дані для обробки\n    -   [Parle\\\\RParser::dump](parle-rparser.dump.md) \\- Виводить граматику\n    -   [Parle\\\\RParser::errorInfo](parle-rparser.errorinfo.md)— Отримує інформацію про помилку\n    -   [Parle\\\\RParser::left](parle-rparser.left.md) \\- Оголошує токен з лівою асоціативністю\n    -   [Parle\\\\RParser::nonassoc](parle-rparser.nonassoc.md) \\- Оголошує токен без асоціативності\n    -   [Parle\\\\RParser::precedence](parle-rparser.precedence.md)— Оголошує правило пріоритету\n    -   [Parle\\\\RParser::push](parle-rparser.push.md)— Додає граматичне правило\n    -   [Parle\\\\RParser::reset](parle-rparser.reset.md)— скидає стан парсера\n    -   [Parle\\\\RParser::right](parle-rparser.right.md)— Оголошує токен із правою асоціативністю\n    -   [Parle\\\\RParser::sigil](parle-rparser.sigil.md)— Витягує збігаючу частину за правилом\n    -   [Parle\\\\RParser::sigilCount](parle-rparser.sigilcount.md)— Отримує кількість елементів у відповідному правилі\n    -   [Parle\\\\RParser::sigilName](parle-rparser.sigilname.md)— Отримує ім'я правила чи токена\n    -   [Parle\\\\RParser::token](parle-rparser.token.md) \\- Оголошує токен\n    -   [Parle\\\\RParser::tokenId](parle-rparser.tokenid.md)— Отримує ідентифікатор токена\n    -   [Parle\\\\RParser::trace](parle-rparser.trace.md)— Слідкує за роботою парсера\n    -   [Parle\\\\RParser::validate](parle-rparser.validate.md) \\- Перевіряє вхідні дані\n-   [Parle\\\\Stack](class.parle-stack.md) \\- Клас Parle\\\\Stack\n    -   [Parle\\\\Stack::pop](parle-stack.pop.md)— Витягує предмет із стеку\n    -   [Parle\\\\Stack::push](parle-stack.push.md)— Поміщає елемент у стек\n-   [Parle\\\\Token](class.parle-token.md) \\- Клас Parle\\\\Token\n-   [Parle\\\\ErrorInfo](class.parle-errorinfo.md) \\- Клас Parle\\\\ErrorInfo\n-   [Parle\\\\LexerException](class.parle-lexerexception.md) \\- Клас Parle\\\\LexerException\n-   [Parle\\\\ParserException](class.parle-parserexception.md) \\- Клас Parle\\\\ParserException\n","title":"Розбір та лексування","contentType":2,"navigation":[{"function.commonmark-render-xml.md":"« CommonMark\\\\Render\\\\XML"},{"intro.parle.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.basic.text.md":"Обробка тексту"}]}},"__N_SSG":true}