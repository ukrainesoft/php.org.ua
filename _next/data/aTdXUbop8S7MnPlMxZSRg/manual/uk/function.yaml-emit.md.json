{"pageProps":{"page":{"slug":"function.yaml-emit.md","content":"# yaml\\_emit\n\n(PECL yaml >= 0.5.0)\n\nyaml\\_emit — Повертає YAML-подання значення\n\n### Опис\n\n```methodsynopsis\nyaml_emit(    mixed $data,    int $encoding = YAML_ANY_ENCODING,    int $linebreak = YAML_ANY_BREAK,    array $callbacks = null): string\n```\n\nПовертає YAML-подання переданих у параметрі `data` даних.\n\n### Список параметрів\n\n`data`\n\nДані `data` для кодування. Параметр може бути будь-якого типу, крім ресурсу (resource).\n\n`encoding`\n\nВихідне кодування вибирається з **`YAML_ANY_ENCODING`** **`YAML_UTF8_ENCODING`** **`YAML_UTF16LE_ENCODING`** **`YAML_UTF16BE_ENCODING`**\n\n`linebreak`\n\nСимвол перекладу рядка у виводі **`YAML_ANY_BREAK`** **`YAML_CR_BREAK`** **`YAML_LN_BREAK`** **`YAML_CRLN_BREAK`**\n\n`callbacks`\n\nОбробники контенту для створення вузлів YAML. Асоціативний масив (array), де як ключі використовуються імена класів, а як значення callback-функції ([callable](language.types.callable.md)), які створюватимуть вузли для цих класів. Більше подробиць можна дізнатись у розділі про [публікуючі callback-функції](yaml.callbacks.emit.md)\n\n### Значення, що повертаються\n\nПовертає YAML-закодований рядок (string) у разі успішного виконання.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL yaml 1.1.0 | Добавлен параметр`callbacks` |\n\n### Приклади\n\n**Приклад #1 Приклад використання** yaml\\_emit()\\*\\*\\*\\*\n\n```php\n<?php\n$addr = array(\n    \"given\" => \"Chris\",\n    \"family\"=> \"Dumars\",\n    \"address\"=> array(\n        \"lines\"=> \"458 Walkman Dr.\n        Suite #292\",\n        \"city\"=> \"Royal Oak\",\n        \"state\"=> \"MI\",\n        \"postal\"=> 48046,\n      ),\n  );\n$invoice = array (\n    \"invoice\"=> 34843,\n    \"date\"=> 980208000,\n    \"bill-to\"=> $addr,\n    \"ship-to\"=> $addr,\n    \"product\"=> array(\n        array(\n            \"sku\"=> \"BL394D\",\n            \"quantity\"=> 4,\n            \"description\"=> \"Basketball\",\n            \"price\"=> 450,\n          ),\n        array(\n            \"sku\"=> \"BL4438H\",\n            \"quantity\"=> 1,\n            \"description\"=> \"Super Hoop\",\n            \"price\"=> 2392,\n          ),\n      ),\n    \"tax\"=> 251.42,\n    \"total\"=> 4443.52,\n    \"comments\"=> \"Late afternoon is best. Backup contact is Nancy Billsmer @ 338-4338.\",\n  );\nvar_dump(yaml_emit($invoice));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nstring(628) \"---\ninvoice: 34843\ndate: 980208000\nbill-to:\n  given: Chris\n  family: Dumars\n  address:\n    lines: |-\n      458 Walkman Dr.\n              Suite #292\n    city: Royal Oak\n    state: MI\n    postal: 48046\nship-to:\n  given: Chris\n  family: Dumars\n  address:\n    lines: |-\n      458 Walkman Dr.\n              Suite #292\n    city: Royal Oak\n    state: MI\n    postal: 48046\nproduct:\n- sku: BL394D\n  quantity: 4\n  description: Basketball\n  price: 450\n- sku: BL4438H\n  quantity: 1\n  description: Super Hoop\n  price: 2392\ntax: 251.420000\ntotal: 4443.520000\ncomments: Late afternoon is best. Backup contact is Nancy Billsmer @ 338-4338.\n...\n\"\n```\n\n### Дивіться також\n\n-   [yaml\\_emit\\_file()](function.yaml-emit-file.md) \\- Відправляє YAML-подання значення файлу\n-   [yaml\\_parse()](function.yaml-parse.md) \\- Розбирає потік YAML\n","title":"yaml\\_emit","contentType":2,"navigation":[{"function.yaml-emit-file.md":"« yaml\\_emit\\_file"},{"function.yaml-parse-file.md":"yaml\\_parse\\_file »"},{"index.md":"PHP Manual"},{"ref.yaml.md":"Функції Yaml"}]}},"__N_SSG":true}