{"pageProps":{"page":{"slug":"datetimezone.construct.md","content":"# DateTimeZone::\\_\\_construct\n\n# timezone\\_open\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nDateTimeZone::\\_\\_construct -- timezone\\_open — Створює новий об'єкт DateTimeZone\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\npublic **DateTimeZone::\\_\\_construct**(string`$timezone`) .\n\nПроцедурний стиль\n\n```methodsynopsis\ntimezone_open(string $timezone): DateTimeZone|false\n```\n\nСтворює новий об'єкт DateTimeZone.\n\nОб'єкт DateTimeZone надає доступ до трьох різних типів правил тимчасових зон: Зміщення UTC (тип ), сокращение часового пояса (тип ) и[ідентифікатори часових поясів](timezones.md), опубліковані в базі даних часових поясів IANA (тип `3`\n\nОб'єкт DateTimeZone може бути приєднаний до об'єктів [DateTime](class.datetime.md) і [DateTimeImmutable](class.datetimeimmutable.md), щоб мати змогу відображати часовий пояс, розташований у цих об'єктах у локальному часовому поясі.\n\n### Список параметрів\n\n`timezone`\n\nОдне з підтримуваних [імен часових поясів](timezones.md) або значення усунення (+0200) або абревіатура часового поясу (BST).\n\n### Значення, що повертаються\n\nУ разі успішного виконання повертає [DateTimeZone](class.datetimezone.md). Процедурний стиль повертає \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nЯкщо часовий пояс не розпізнається як дійсний, викидається виняток [DateInvalidTimeZoneException](class.dateinvalidtimezoneexception.md). До PHP 8.3 натомість викидався виняток [Exception](class.exception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Тепер через неприпустимі значення замість загального виключення [Exception](class.exception.md) викидається виняток [DateInvalidTimeZoneException](class.dateinvalidtimezoneexception.md) |\n\n### Приклади\n\n**Приклад #1 Створення та приєднання DateTimeZone до DateTimeImmutable**\n\n```php\n<?php\n$d = new DateTimeImmutable(\"2022-06-02 15:44:48 UTC\");\n\n$timezones = [ 'Europe/London', 'GMT+04:45', '-06:00', 'CEST' ];\n\nforeach ($timezones as $tz) {\n    $tzo = new DateTimeZone($tz);\n\n    $local = $d->setTimezone($tzo);\n    echo $local->format(DateTimeInterface::RFC2822 . ' — e'), \"\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\nThu, 02 Jun 2022 16:44:48 +0100 — Europe/London  \nThu, 02 Jun 2022 20:29:48 +0445 — +04:45  \nThu, 02 Jun 2022 09:44:48 -0600 — -06:00  \nThu, 02 Jun 2022 17:44:48 +0200 — CEST\n\n**Приклад #2 Перехоплення помилок під час створення екземпляра [DateTimeZone](class.datetimezone.md)**\n\n```php\n<?php\n// Обработка ошибок с помощью перехвата исключений\n$timezones = array('Europe/London', 'Mars/Phobos', 'Jupiter/Europa');\n\nforeach ($timezones as $tz) {\n    try {\n        $mars = new DateTimeZone($tz);\n    } catch(Exception $e) {\n        echo $e->getMessage() . '<br />';\n    }\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nDateTimeZone::__construct() [datetimezone.--construct]: Unknown or bad timezone (Mars/Phobos)\nDateTimeZone::__construct() [datetimezone.--construct]:  Unknown or bad timezone (Jupiter/Europa)\n```\n","title":"DateTimeZone::\\_\\_construct","contentType":2,"navigation":[{"class.datetimezone.md":"« DateTimeZone"},{"datetimezone.getlocation.md":"DateTimeZone::getLocation »"},{"index.md":"PHP Manual"},{"class.datetimezone.md":"DateTimeZone"}]}},"__N_SSG":true}