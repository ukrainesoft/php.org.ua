{"pageProps":{"page":{"slug":"language.variables.variable.md","content":"## Змінні змінних\n\nІноді буває зручно мати змінними імена змінних. Тобто ім'я змінної, яке може бути визначено та змінено динамічно. Звичайна змінна визначається приблизно таким виразом:\n\n```php\n<?php\n$a = 'hello';\n?>\n```\n\nЗмінна змінної бере значення змінної та розглядає його як ім'я змінної. У наведеному вище прикладі *hello* може бути використаний як ім'я змінної за допомогою двох знаків долара. Тобто:\n\n```php\n<?php\n$$a = 'world';\n?>\n```\n\nТепер у дереві символів PHP визначено та містяться дві змінні: $a, що містить \"hello\" і $hello, що містить \"world\". Таким чином, вираз\n\n```php\n<?php\necho \"$a {$$a}\";\n?>\n```\n\nвиведе те саме, що і\n\n```php\n<?php\necho \"$a $hello\";\n?>\n```\n\nтобто вони обидва виведуть: hello world.\n\nДля того, щоб використовувати змінні змінних з масивами, ви повинні вирішити проблему двозначності. Тобто якщо ви напишете $$a\\[ \\], обробнику необхідно знати, чи ви хочете використовувати $a\\[ \\] як змінна, або вам потрібна як змінна $$a, а потім її індекс \\[ \\]. Синтаксис для вирішення цієї двозначності такий: ${$a\\[ \\]} для першого випадку і ${$a}\\[ \\]для второго.\n\nДо властивостей класу можна отримати доступ динамічно. Змінне ім'я властивості буде дозволено в контексті, в якому відбудеться виклик до нього. Наприклад, у разі вираження $foo->$bar, локальна область видимості буде просканована на наявність змінної $bar, значення якої буде використано як ім'я властивості об'єкта $foo. Це також працює і в тому випадку, якщо $bar здійснює доступ до масиву.\n\nФігурні дужки можуть використовуватися, щоб чітко розмежувати ім'я властивості. Вони найкорисніші при отриманні доступу до значень всередині властивості, що містить масив, коли ім'я властивості складається з кількох частин, або коли ім'я властивості містить символи, які інакше не дійсні (наприклад, функції [json\\_decode()](function.json-decode.md)или из[SimpleXML](book.simplexml.md)\n\n**Приклад #1 Приклад змінного імені властивості**\n\n```php\n<?php\nclass foo {\n    var $bar = 'I am bar.';\n    var $arr = array('I am A.', 'I am B.', 'I am C.');\n    var $r   = 'I am r.';\n}\n\n$foo = new foo();\n$bar = 'bar';\n$baz = array('foo', 'bar', 'baz', 'quux');\necho $foo->$bar . \"\\n\";\necho $foo->{$baz[1]} . \"\\n\";\n\n$start = 'b';\n$end   = 'ar';\necho $foo->{$start . $end} . \"\\n\";\n\n$arr = 'arr';\necho $foo->{$arr[1]} . \"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\nI am bar.  \nI am bar.  \nI am bar.  \nI am r.\n\n**Увага**\n\nЗверніть увагу, що змінні змінних не можуть використовуватися з [суперглобальними масивами](language.variables.superglobals.md)PHP. Переменная`$this` також є особливою, на неї не можна посилатися динамічно.\n","title":"Змінні змінних","contentType":2,"navigation":[{"language.variables.scope.md":"« Область видимості змінної"},{"language.variables.external.md":"Змінні ззовні PHP »"},{"index.md":"PHP Manual"},{"language.variables.md":"Змінні"}]}},"__N_SSG":true}