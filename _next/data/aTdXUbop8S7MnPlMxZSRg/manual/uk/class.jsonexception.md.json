{"pageProps":{"page":{"slug":"class.jsonexception.md","content":"# Клас JsonException\n\n(PHP 7 >= 7.3.0, PHP 8)\n\n## Вступ\n\nЦей виняток викидається, якщо опція \\*\\*`JSON_THROW_ON_ERROR`\\*\\*установлена для функции[json\\_encode()](function.json-encode.md) або [json\\_decode()](function.json-decode.md). code містить тип помилки, дивіться можливі значення [json\\_last\\_error()](function.json-last-error.md)\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class JsonException\n    \n\n    \n     extends\n      Exception\n     {\n\n    /* Наследуемые свойства */\n    \n      protected\n      string\n       $message = \"\";\nprivate\n      string\n       $string = \"\";\nprotected\n      int\n       $code;\nprotected\n      string\n       $file = \"\";\nprotected\n      int\n       $line;\nprivate\n      array\n       $trace = [];\nprivate\n      ?Throwable\n       $previous = null;\n\n\n    /* Наследуемые методы */\n    \n   public Exception::__construct(string $message = \"\", int $code = 0, ?Throwable $previous = null)\n\n    final public Exception::getMessage(): string\nfinal public Exception::getPrevious(): ?Throwable\nfinal public Exception::getCode(): int\nfinal public Exception::getFile(): string\nfinal public Exception::getLine(): int\nfinal public Exception::getTrace(): array\nfinal public Exception::getTraceAsString(): string\npublic Exception::__toString(): string\nprivate Exception::__clone(): void\n\n   }\n```\n","title":"Клас JsonException","contentType":2,"navigation":[{"json.constants.md":"« Зумовлені константи"},{"class.jsonserializable.md":"JsonSerializable »"},{"index.md":"PHP Manual"},{"book.json.md":"JSON"}]}},"__N_SSG":true}