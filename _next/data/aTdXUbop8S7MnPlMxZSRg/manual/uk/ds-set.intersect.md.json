{"pageProps":{"page":{"slug":"ds-set.intersect.md","content":"# Ds\\\\Set::intersect\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Set::intersect — Створення нового набору, створеного перетином з іншим набором\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Set::intersect(Ds\\Set $set): Ds\\Set\n```\n\nСтворює новий набір, що містить значення, які присутні у поточному наборі та наборі, переданому параметром `set`\n\n`A ∩ B = {x : x ∈ A ∧ x ∈ B}`\n\n### Список параметрів\n\n`set`\n\nНовий набір типу Set.\n\n### Значення, що повертаються\n\nПеретин поточного набору та переданого в `set`\n\n### Дивіться також\n\n-   [» Перетин](https://en.wikipedia.org/wiki/Intersection_(set_theory))на Вікіпедія\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Set::intersect()\\*\\*\\*\\*\n\n```php\n<?php\n$a = new \\Ds\\Set([1, 2, 3]);\n$b = new \\Ds\\Set([3, 4, 5]);\n\nvar_dump($a->intersect($b));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nobject(Ds\\Set)#3 (1) {\n  [0]=>\n  int(3)\n}\n```\n","title":"Ds\\\\Set::intersect","contentType":2,"navigation":[{"ds-set.get.md":"« Ds\\\\Set::get"},{"ds-set.isempty.md":"Ds\\\\Set::isEmpty »"},{"index.md":"PHP Manual"},{"class.ds-set.md":"Ds\\\\Set"}]}},"__N_SSG":true}