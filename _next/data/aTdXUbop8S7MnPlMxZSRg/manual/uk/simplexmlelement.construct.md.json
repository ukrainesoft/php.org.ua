{"pageProps":{"page":{"slug":"simplexmlelement.construct.md","content":"# SimpleXMLElement::\\_\\_construct\n\n(PHP 5, PHP 7, PHP 8)\n\nSimpleXMLElement::\\_\\_construct — Створення нового об'єкта SimpleXMLElement\n\n### Опис\n\npublic **SimpleXMLElement::\\_\\_construct**  \nstring`$data`,  \nint`$options`  \nbool`$dataIsURL` **`false`**,  \nstring`$namespaceOrPrefix` = \"\",  \nbool`$isPrefix` **`false`**  \n) .\n\nСтворює новий об'єкт [SimpleXMLElement](class.simplexmlelement.md)\n\n### Список параметрів\n\n`data`\n\nПравильно сформований XML-рядок. Може бути шляхом або URL до XML-документа, якщо параметр `dataIsURL`установлен в\\*\\*`true`\\*\\*\n\n`options`\n\nНеобов'язковий параметр використовується для вказівки [додаткових параметрів Libxml](libxml.constants.md)які впливають на читання документів XML. Параметри, які впливають на виведення документів XML (наприклад, **`LIBXML_NOEMPTYTAG`**), ігноруються.\n\n> **Зауваження** :\n> \n> Для доступу до глибоко вкладених елементів XML або для обробки дуже великих текстових вузлів може знадобитися використовувати **`[LIBXML_PARSEHUGE](libxml.constants.md#constant.libxml-parsehuge)`**\n\n`dataIsURL`\n\nПо умолчанию`dataIsURL`установлен в\\*\\*`false`**Используйте**`true`\\*\\* для вказівки того, що `data` є шляхом або URL до документа XML замість даних типу string.\n\n`namespaceOrPrefix`\n\nПрефікс простору імен або URI.\n\n`isPrefix`\n\n**`true`**, якщо `namespaceOrPrefix` є префіксом, \\*\\*`false`\\*\\*якщо це URI; за замовчуванням **`false`**\n\n### Помилки\n\nВидає повідомлення з помилкою **`E_WARNING`** для кожної знайденої помилки в XML-даних, та додатково генерує виняток [Exception](class.exception.md)якщо дані XML не можуть бути розібрані.\n\n**Підказка**\n\nИспользуйте[libxml\\_use\\_internal\\_errors()](function.libxml-use-internal-errors.md)для подавления всех XML-ошибок и[libxml\\_get\\_errors()](function.libxml-get-errors.md) для їхньої ітерації за ними.\n\n### Приклади\n\n> **Зауваження** :\n> \n> Перелічені приклади можуть містити `example.php`, в якому визначається XML-рядок, розташована в першому прикладі посібника з [базового використання](simplexml.examples-basic.md)\n\n**Приклад #1 Створення об'єкта SimpleXMLElement**\n\n```php\n<?php\n\ninclude 'example.php';\n\n$sxe = new SimpleXMLElement($xmlstr);\necho $sxe->movie[0]->title;\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nPHP: Появление Парсера\n```\n\n**Приклад #2 Створення об'єкта SimpleXMLElement з URL**\n\n```php\n<?php\n\n$sxe = new SimpleXMLElement('http://example.org/document.xml', NULL, TRUE);\necho $sxe->asXML();\n\n?>\n```\n\n### Дивіться також\n\n-   [Базове використання SimpleXML](simplexml.examples-basic.md)\n-   [simplexml\\_load\\_string()](function.simplexml-load-string.md) \\- Інтерпретує рядок з XML в об'єкт\n-   [simplexml\\_load\\_file()](function.simplexml-load-file.md) \\- Інтерпретує файл XML в об'єкт\n-   [Робота з помилками XML](simplexml.examples-errors.md)\n-   [libxml\\_use\\_internal\\_errors()](function.libxml-use-internal-errors.md) \\- Відключення помилок libxml та передача повноважень щодо вибірки та обробки інформації про помилки користувачеві\n-   [libxml\\_set\\_streams\\_context()](function.libxml-set-streams-context.md) \\- Встановлення контексту потоків для наступного завантаження чи запису документа за допомогою libxml\n","title":"SimpleXMLElement::\\_\\_construct","contentType":2,"navigation":[{"simplexmlelement.children.md":"« SimpleXMLElement::children"},{"simplexmlelement.count.md":"SimpleXMLElement::count »"},{"index.md":"PHP Manual"},{"class.simplexmlelement.md":"SimpleXMLElement"}]}},"__N_SSG":true}