{"pageProps":{"page":{"slug":"domxpath.registerphpfunctions.md","content":"# DOMXPath::registerPhpFunctions\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nDOMXPath::registerPhpFunctions — Реєстрація PHP-функцій як функцій XPath\n\n### Опис\n\n```methodsynopsis\npublic DOMXPath::registerPhpFunctions(string|array|null $restrict = null): void\n```\n\nЦей метод дозволяє використовувати PHP-функції у виразах XPath.\n\n### Список параметрів\n\n`restrict`\n\nВикористовуйте цей параметр, щоб дозволити використання лише певних функцій у виразах XPath.\n\nЦей параметр може мати тип string (ім'я функції) або array (масив імен функцій).\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\nУ таких прикладах використовується файл book.xml, який містить таке:\n\n**Приклад #1 book.xml**\n\nPHP Basics Jim Smith Jane Smith PHP Secrets Jenny Smythe XML basics Joe Black\n\n**Приклад #2**DOMXPath::registerPHPFunctions()**с`php:functionString`**\n\n```php\n<?php\n$doc = new DOMDocument;\n$doc->load('book.xml');\n\n$xpath = new DOMXPath($doc);\n\n// Регистрация PHP: пространство имён (обязательно)\n$xpath->registerNamespace(\"php\", \"http://php.net/xpath\");\n\n// Регистрация функций PHP (без ограничений)\n$xpath->registerPHPFunctions();\n\n// Вызов функции substr для названия книги\n$nodes = $xpath->query('//book[php:functionString(\"substr\", title, 0, 3) = \"PHP\"]');\n\necho \"Найдены {$nodes->length} книги, начинающиеся с 'PHP':\\n\";\nforeach ($nodes as $node) {\n    $title  = $node->getElementsByTagName(\"title\")->item(0)->nodeValue;\n    $author = $node->getElementsByTagName(\"author\")->item(0)->nodeValue;\n    echo \"$title автора $author\\n\";\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nНайдены 2 книги, начинающиеся с 'PHP':\nPHP Basics автора Jim Smith\nPHP Secrets автора Jenny Smythe\n```\n\n**Приклад #3**DOMXPath::registerPHPFunctions()**с`php:function`**\n\n```php\n<?php\n$doc = new DOMDocument;\n$doc->load('book.xml');\n\n$xpath = new DOMXPath($doc);\n\n// Регистрация PHP: пространство имён (обязательно)\n$xpath->registerNamespace(\"php\", \"http://php.net/xpath\");\n\n// Регистрация PHP-функций (только has_multiple)\n$xpath->registerPHPFunctions(\"has_multiple\");\n\nfunction has_multiple($nodes) {\n    // Возвращает true, если более одного автора\n    return count($nodes) > 1;\n}\n// Фильтр книг с двумя и более авторами\n$books = $xpath->query('//book[php:function(\"has_multiple\", author)]');\n\necho \"Книги с двумя и более авторами:\\n\";\nforeach ($books as $book) {\n    echo $book->getElementsByTagName(\"title\")->item(0)->nodeValue . \"\\n\";\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nКниги с двумя и более авторами:\nPHP Basics\n```\n\n### Дивіться також\n\n-   [DOMXPath::registerNamespace()](domxpath.registernamespace.md) \\- Реєструє простір імен з об'єктом DOMXPath\n-   [DOMXPath::query()](domxpath.query.md) \\- Виконує заданий вираз XPath\n-   [DOMXPath::evaluate()](domxpath.evaluate.md) \\- Обчислює переданий вираз XPath і повертає типізований результат, якщо можливо\n","title":"DOMXPath::registerPhpFunctions","contentType":2,"navigation":[{"domxpath.registernamespace.md":"« DOMXPath::registerNamespace"},{"ref.dom.md":"Функції DOM »"},{"index.md":"PHP Manual"},{"class.domxpath.md":"DOMXPath"}]}},"__N_SSG":true}