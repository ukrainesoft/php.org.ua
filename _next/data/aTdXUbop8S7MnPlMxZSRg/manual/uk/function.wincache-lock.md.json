{"pageProps":{"page":{"slug":"function.wincache-lock.md","content":"# wincache\\_lock\n\n(PECL wincache >= 1.1.0)\n\nwincache\\_lock — Отримує ексклюзивне блокування для цього ключа\n\n### Опис\n\n```methodsynopsis\nwincache_lock(string $key, bool $isglobal = false): bool\n```\n\nОтримує ексклюзивне блокування для цього ключа. Виконання поточного скрипту буде заблоковано, доки блокування не буде отримано. Після отримання блокування інші сценарії, які намагаються запросити блокування за допомогою того ж ключа, будуть заблоковані доти, доки поточний скрипт не зніме блокування за допомогою [wincache\\_unlock()](function.wincache-unlock.md)\n\n**Увага**\n\nИспользование\\*\\*wincache\\_lock()\\*\\*и[wincache\\_unlock()](function.wincache-unlock.md) може викликати взаємне блокування під час виконання скриптів PHP у багатопроцесорному середовищі, такому як FastCGI. Не використовуйте ці функції, якщо ви не впевнені, що це потрібно. Для більшості операцій з кешем користувача ці функції використовувати не обов'язково.\n\n### Список параметрів\n\n`key`\n\nІм'я ключа в кеші, щоб увімкнути блокування.\n\n`isglobal`\n\nВизначає, чи область блокування загальносистемної чи локальної. Локальні блокування відносяться до пулу додатків у випадку IIS FastCGI або до всіх процесів PHP, які мають той самий ідентифікатор батьківського процесу.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** wincache\\_lock()\\*\\*\\*\\*\n\n```php\n<?php\n$fp = fopen(\"/tmp/lock.txt\", \"r+\");\nif (wincache_lock(“lock_txt_lock”)) { // получить эксклюзивную блокировку\n    ftruncate($fp, 0); // обрезать файл\n    fwrite($fp, \"Напишите что-нибудь здесь\\n\");\n    wincache_unlock(“lock_txt_lock”); // снять блокировку\n} else {\n    echo \"Не удалось получить блокировку!\";\n}\nfclose($fp);\n?>\n```\n\n### Дивіться також\n\n-   [wincache\\_unlock()](function.wincache-unlock.md) \\- Знімає ексклюзивне блокування цього ключа\n-   [wincache\\_ucache\\_set()](function.wincache-ucache-set.md) \\- Додає змінну в кеш користувача і перезаписує змінну, якщо вона вже існує в кеші\n-   [wincache\\_ucache\\_get()](function.wincache-ucache-get.md) \\- Отримує змінну, що зберігається в користувальницькому кеші\n-   [wincache\\_ucache\\_delete()](function.wincache-ucache-delete.md) \\- Видаляє змінні з користувальницького кешу\n-   [wincache\\_ucache\\_clear()](function.wincache-ucache-clear.md) \\- Видаляє весь вміст користувальницького кешу\n-   [wincache\\_ucache\\_exists()](function.wincache-ucache-exists.md) \\- Перевіряє, чи існує змінна в кеші користувача\n-   [wincache\\_ucache\\_meminfo()](function.wincache-ucache-meminfo.md) \\- Отримує інформацію про використання пам'яті кешу користувача.\n-   [wincache\\_ucache\\_info()](function.wincache-ucache-info.md) \\- Отримує інформацію про дані, що зберігаються в кеші користувача\n-   [wincache\\_scache\\_info()](function.wincache-scache-info.md) \\- Отримує інформацію про файли, закешовані в кеші сесії\n","title":"wincache\\_lock","contentType":2,"navigation":[{"function.wincache-fcache-meminfo.md":"« wincache\\_fcache\\_meminfo"},{"function.wincache-ocache-fileinfo.md":"wincache\\_ocache\\_fileinfo »"},{"index.md":"PHP Manual"},{"ref.wincache.md":"Функції WinCache"}]}},"__N_SSG":true}