{"pageProps":{"page":{"slug":"class.yaf-application.md","content":"# Клас Yaf\\_Application\n\n(No version information available, might only be in Git)\n\n## Вступ\n\n[Yaf\\_Application](class.yaf-application.md) забезпечує ініціалізацію об'єкта для додатків які надають ресурси, що використовуються, загальні та модульні bootstrap-класи та перевірки залежностей.\n\n> **Зауваження** :\n> \n> [Yaf\\_Application](class.yaf-application.md) реалізує шаблоном singleton, та [Yaf\\_Application](class.yaf-application.md) не може бути серіалізований або десеріалізований що викликає проблеми, коли ви намагаєтеся використовувати PHPUnit щоб написати деякі тести для Yaf.\n> \n> Ви можете використовувати @backupGlobals анотації PHPUnit для контролю бекапів та операцій відновлення глобальних змінних. У такий спосіб можна вирішити цю проблему.\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     \n      final\n      class Yaf_Application\n     \n     {\n\n    /* Свойства */\n    \n     protected\n      $config;\n\n    protected\n      $dispatcher;\n\n    protected\n     static\n      $_app;\n\n    protected\n      $_modules;\n\n    protected\n      $_running;\n\n    protected\n      $_environ;\n\n\n\n    /* Методы */\n    \n   public __construct(mixed $config, string $envrion = ?)\n\n    public staticapp(): mixed\npublic bootstrap(Yaf_Bootstrap_Abstract $bootstrap = ?): void\npublic clearLastError(): Yaf_Application\npublic environ(): void\npublic execute(callable $entry, string ...$args): void\npublic getAppDirectory(): Yaf_Application\npublic getConfig(): Yaf_Config_Abstract\npublic getDispatcher(): Yaf_Dispatcher\npublic getLastErrorMsg(): string\npublic getLastErrorNo(): int\npublic getModules(): array\npublic run(): void\npublic setAppDirectory(string $directory): Yaf_Application\n\n    public __destruct()\n\n   }\n```\n\n## Властивості\n\nconfig\n\ndispatcher\n\n\\_app\n\n\\_modules\n\n\\_running\n\n\\_environ\n\n## Зміст\n\n-   [Yaf\\_Application::app](yaf-application.app.md)— Вийняти екземпляр програми\n-   [Yaf\\_Application::bootstrap](yaf-application.bootstrap.md) \\- Викликати bootstrap\n-   [Yaf\\_Application::clearLastError](yaf-application.clearlasterror.md)— Очищення інформації з останньої помилки\n-   [Yaf\\_Application::\\_\\_construct](yaf-application.construct.md) \\- Конструктор класу Yaf\\_Application\n-   [Yaf\\_Application::\\_\\_destruct](yaf-application.destruct.md) \\- Деструктор Yaf\\_Application\n-   [Yaf\\_Application::environ](yaf-application.environ.md)— Отримати значення оточення\n-   [Yaf\\_Application::execute](yaf-application.execute.md) \\- Запустити callback-функцію\n-   [Yaf\\_Application::getAppDirectory](yaf-application.getappdirectory.md)— Отримати директорію програми\n-   [Yaf\\_Application::getConfig](yaf-application.getconfig.md)— Отримати екземпляр класу конфігурації\n-   [Yaf\\_Application::getDispatcher](yaf-application.getdispatcher.md) \\- Отримати екземпляр класу Yaf\\_Dispatcher\n-   [Yaf\\_Application::getLastErrorMsg](yaf-application.getlasterrormsg.md)— Отримати останнє повідомлення про помилку\n-   [Yaf\\_Application::getLastErrorNo](yaf-application.getlasterrorno.md)— Отримати код останньої помилки\n-   [Yaf\\_Application::getModules](yaf-application.getmodules.md)— Отримати імена заявлених модулів\n-   [Yaf\\_Application::run](yaf-application.run.md) \\- Запустити Yaf\\_Application\n-   [Yaf\\_Application::setAppDirectory](yaf-application.setappdirectory.md)— Змінити директорію програми\n","title":"Клас Yaf\\_Application","contentType":2,"navigation":[{"yaf.appconfig.md":"« Конфігурація програми"},{"yaf-application.app.md":"Yaf\\_Application::app »"},{"index.md":"PHP Manual"},{"book.yaf.md":"Yaf"}]}},"__N_SSG":true}