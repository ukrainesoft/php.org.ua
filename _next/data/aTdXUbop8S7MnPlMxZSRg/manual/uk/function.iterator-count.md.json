{"pageProps":{"page":{"slug":"function.iterator-count.md","content":"# iterator\\_count\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\niterator\\_count — Підраховує кількість елементів в ітераторі\n\n### Опис\n\n```methodsynopsis\niterator_count(Traversable|array $iterator): int\n```\n\nПідраховує кількість елементів в ітераторі . **iterator\\_count()** не гарантує збереження поточної позиції `iterator`\n\n### Список параметрів\n\n`iterator`\n\nІтератор, у якому провадиться підрахунок.\n\n### Значення, що повертаються\n\nКількість елементів в ітераторі (`iterator`\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Тип параметра `iterator` був розширений з [Traversable](class.traversable.md)до[Traversable](class.traversable.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** iterator\\_count()\\*\\*\\*\\*\n\n```php\n<?php\n$iterator = new ArrayIterator(array('recipe'=>'pancakes', 'egg', 'milk', 'flour'));\nvar_dump(iterator_count($iterator));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(4)\n```\n\n**Приклад #2**iterator\\_count()\\*\\* модифікує позицію\\*\\*\n\n```php\n<?php\n$iterator = new ArrayIterator(['one', 'two', 'three']);\nvar_dump($iterator->current());\nvar_dump(iterator_count($iterator));\nvar_dump($iterator->current());\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(3) \"one\"\nint(3)\nNULL\n```\n\n**Приклад #3**iterator\\_count()\\*\\* у циклі [foreach](control-structures.foreach.md)\\*\\*\n\n```php\n<?php\n$iterator = new ArrayIterator(['one', 'two', 'three']);\nforeach ($iterator as $key => $value) {\n    echo \"$key: $value (\", iterator_count($iterator), \")\\n\";\n}?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n0: one (3)\n```\n","title":"iterator\\_count","contentType":2,"navigation":[{"function.iterator-apply.md":"« iterator\\_apply"},{"function.iterator-to-array.md":"iterator\\_to\\_array »"},{"index.md":"PHP Manual"},{"ref.spl.md":"Функції SPL"}]}},"__N_SSG":true}