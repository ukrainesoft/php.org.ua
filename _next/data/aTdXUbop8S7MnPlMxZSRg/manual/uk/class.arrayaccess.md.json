{"pageProps":{"page":{"slug":"class.arrayaccess.md","content":"# Інтерфейс ArrayAccess\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nІнтерфейс дозволяє звертатися до об'єктів як до масивів.\n\n## Огляд інтерфейсів\n\n```classsynopsis\n\n    \n     interface ArrayAccess {\n\n    /* Методы */\n    \n   public offsetExists(mixed $offset): bool\npublic offsetGet(mixed $offset): mixed\npublic offsetSet(mixed $offset, mixed $value): void\npublic offsetUnset(mixed $offset): void\n\n   }\n```\n\n**Приклад #1 Основи використання**\n\n```php\n<?php\nclass Obj implements ArrayAccess {\n    public $container = [\n        \"one\"   => 1,\n        \"two\"   => 2,\n        \"three\" => 3,\n    ];\n\n    public function offsetSet($offset, $value): void {\n        if (is_null($offset)) {\n            $this->container[] = $value;\n        } else {\n            $this->container[$offset] = $value;\n        }\n    }\n\n    public function offsetExists($offset): bool {\n        return isset($this->container[$offset]);\n    }\n\n    public function offsetUnset($offset): void {\n        unset($this->container[$offset]);\n    }\n\n    public function offsetGet($offset): mixed {\n        return isset($this->container[$offset]) ? $this->container[$offset] : null;\n    }\n}\n\n$obj = new Obj;\n\nvar_dump(isset($obj[\"two\"]));\nvar_dump($obj[\"two\"]);\nunset($obj[\"two\"]);\nvar_dump(isset($obj[\"two\"]));\n$obj[\"two\"] = \"A value\";\nvar_dump($obj[\"two\"]);\n$obj[] = 'Append 1';\n$obj[] = 'Append 2';\n$obj[] = 'Append 3';\nprint_r($obj);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nbool(true)\nint(2)\nbool(false)\nstring(7) \"A value\"\nobj Object\n(\n    [container:obj:private] => Array\n        (\n            [one] => 1\n            [three] => 3\n            [two] => A value\n            [0] => Append 1\n            [1] => Append 2\n            [2] => Append 3\n        )\n\n)\n```\n\n## Зміст\n\n-   [ArrayAccess::offsetExists](arrayaccess.offsetexists.md) \\- Визначає, чи існує задане зміщення (ключ)\n-   [ArrayAccess::offsetGet](arrayaccess.offsetget.md)— Повертає задане усунення (ключ)\n-   [ArrayAccess::offsetSet](arrayaccess.offsetset.md)— Надає значення заданому зміщенню\n-   [ArrayAccess::offsetUnset](arrayaccess.offsetunset.md) \\- Видаляє зміщення\n","title":"Інтерфейс ArrayAccess","contentType":2,"navigation":[{"throwable.tostring.md":"« Throwable::\\_\\_function toString() { [native code] }"},{"arrayaccess.offsetexists.md":"ArrayAccess::offsetExists »"},{"index.md":"PHP Manual"},{"reserved.interfaces.md":"Вбудовані інтерфейси та класи"}]}},"__N_SSG":true}