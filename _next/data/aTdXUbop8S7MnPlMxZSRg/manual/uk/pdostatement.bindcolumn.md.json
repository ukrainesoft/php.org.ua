{"pageProps":{"page":{"slug":"pdostatement.bindcolumn.md","content":"# PDOStatement::bindColumn\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8, PECL pdo >= 0.1.0)\n\nPDOStatement::bindColumn — Зв'язує стовпець зі змінною PHP\n\n### Опис\n\n```methodsynopsis\npublic PDOStatement::bindColumn(    string|int $column,    mixed &$var,    int $type = PDO::PARAM_STR,    int $maxLength = 0,    mixed $driverOptions = null): bool\n```\n\n**PDOStatement::bindColumn()** прив'язує змінну до заданого стовпця у результуючому наборі запиту. Кожен виклик [PDOStatement::fetch()](pdostatement.fetch.md) або [PDOStatement::fetchAll()](pdostatement.fetchall.md) оновлюватиме всі змінні, задаватиме їм значення стовпців, з якими вони пов'язані.\n\n> **Зауваження** :\n> \n> У зв'язку з тим, що інформація про стовпці результуючого набору запиту не завжди доступна об'єкту PDO, поки запит не буде запущений, додаткам слід викликати цей метод *після* виклику [PDOStatement::execute()](pdostatement.execute.md)\n> \n> Однако, при работе с*драйвером PgSQL*, коли прив'язується стовпець з LOB-даними, додатком необхідно викликати цей метод *до* виклику [PDOStatement::execute()](pdostatement.execute.md). В іншому випадку ідентифікатор великого об'єкта OID матиме тип integer.\n\n### Список параметрів\n\n`column`\n\nНомер стовпця (починаючи з 1) або його ім'я у результуючому наборі запиту. Використовуючи ім'я стовпця, майте на увазі, що ім'я має бути в тому ж регістрі, в якому воно повернуто драйвером.\n\n`var`\n\nІм'я змінної PHP, до якої потрібно прив'язати стовпець.\n\n`type`\n\nТип даних параметра, заданий однією з констант [`PDO::PARAM_*`](pdo.constants.md)\n\n`maxLength`\n\nПідказка для попереднього виділення пам'яті під змінну.\n\n`driverOptions`\n\nДодаткові параметри драйвера.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nВидає помилку рівня **`E_WARNING`**, якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_WARNING`**\n\nВикидає виняток [PDOException](class.pdoexception.md), якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_EXCEPTION`**\n\n### Приклади\n\n**Приклад #1 Зв'язування результуючого набору зі змінними PHP**\n\nПрив'язування стовпців результуючого набору до PHP змінним є ефективним способом відразу зробити дані кожного рядка набору доступними додатком. У наступному прикладі показано, як PDO дозволяє прив'язувати змінні та отримувати дані стовпців, приймаючи різні налаштування та замовчування.\n\n```php\n<?php\n$stmt = $dbh->prepare('SELECT name, colour, calories FROM fruit');\n$stmt->execute();\n\n/* Bind by column number */\n$stmt->bindColumn(1, $name);\n$stmt->bindColumn(2, $colour);\n\n/* Bind by column name */\n$stmt->bindColumn('calories', $cals);\n\nwhile ($stmt->fetch(PDO::FETCH_BOUND)) {\n    print $name . \"\\t\" . $colour . \"\\t\" . $cals . \"\\n\";\n}\n```\n\nРезультат виконання наведеного прикладу:\n\n```\napple   red     150\nbanana  yellow  175\nkiwi    green   75\norange  orange  150\nmango   red     200\nstrawberry      red     25\n```\n\n### Дивіться також\n\n-   [PDOStatement::execute()](pdostatement.execute.md) \\- Запускає підготовлений запит на виконання\n-   [PDOStatement::fetch()](pdostatement.fetch.md) \\- Вилучення наступного рядка з результуючого набору\n-   [PDOStatement::fetchAll()](pdostatement.fetchall.md) \\- Вибирає рядки, що залишилися, з набору результатів\n-   [PDOStatement::fetchColumn()](pdostatement.fetchcolumn.md) \\- Повертає дані одного стовпця наступного рядка результуючого набору\n","title":"PDOStatement::bindColumn","contentType":2,"navigation":[{"class.pdostatement.md":"« PDOStatement"},{"pdostatement.bindparam.md":"PDOStatement::bindParam »"},{"index.md":"PHP Manual"},{"class.pdostatement.md":"PDOStatement"}]}},"__N_SSG":true}