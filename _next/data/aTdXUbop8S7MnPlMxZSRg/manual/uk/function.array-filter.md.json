{"pageProps":{"page":{"slug":"function.array-filter.md","content":"# array\\_filter\n\n(PHP 4 >= 4.0.6, PHP 5, PHP 7, PHP 8)\n\narray\\_filter - Фільтрує елементи масиву за допомогою callback-функції\n\n### Опис\n\n```methodsynopsis\narray_filter(array $array, ?callable $callback = null, int $mode = 0): array\n```\n\nОбходит каждое значение массива`array`, передаючи його в `callback`\\-функцію. Якщо `callback`\\-функція повертає **`true`**, данное значение из`array` повертається в результуючий array.\n\nКлючі масиву зберігаються і можуть призвести до перепусток, якщо `array` був проіндексований. Результат масиву (array) можна переіндексувати за допомогою функції [array\\_values()](function.array-values.md)\n\n### Список параметрів\n\n`array`\n\nІтерований масив\n\n`callback`\n\nCallback-функція, що використовується\n\nЯкщо `callback`\\-функція не передана, всі порожні значення масиву `array` будуть видалені. Дивіться [empty()](function.empty.md)Щоб дізнатися, як PHP визначає порожнє значення в цьому випадку.\n\n`mode`\n\nПрапор, який визначає, які аргументи передавати в `callback` :\n\n-   \\*\\*`ARRAY_FILTER_USE_KEY`\\*\\*- передавати тільки ключ масиву як аргумент для`callback`замість значення\n-   \\*\\*`ARRAY_FILTER_USE_BOTH`\\*\\*- передавати і ключ, і значення`callback`замість тільки значення\n\nПо умолчанию що означає, що в `callback`\\-функцію передаватиметься лише значення як єдиний аргумент.\n\n### Значення, що повертаються\n\nПовертає відфільтрований масив.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `callback` тепер допускає значення null. |\n| 8.0.0 | Тепер функція видасть помилку рівня **`E_WARNING`**, якщо параметр callback-функції, переданої у параметр `callback`, очікує на передачу значення за посиланням. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** array\\_filter()\\*\\*\\*\\*\n\n```php\n<?php\nfunction odd($var)\n{\n    // является ли переданное число нечётным\n    return $var & 1;\n}\n\nfunction even($var)\n{\n    // является ли переданное число чётным\n    return !($var & 1);\n}\n\n$array1 = ['a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e' => 5];\n$array2 = [6, 7, 8, 9, 10, 11, 12];\n\necho \"Нечётные:\\n\";\nprint_r(array_filter($array1, \"odd\"));\necho \"Чётные:\\n\";\nprint_r(array_filter($array2, \"even\"));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nНечётные:\nArray\n(\n    [a] => 1\n    [c] => 3\n    [e] => 5\n)\nЧётные:\nArray\n(\n    [0] => 6\n    [2] => 8\n    [4] => 10\n    [6] => 12\n)\n```\n\n**Приклад #2 Использование**array\\_filter()**без`callback`\\- функції**\n\n```php\n<?php\n\n$entry = [\n    0 => 'foo',\n    1 => false,\n    2 => -1,\n    3 => null,\n    4 => '',\n    5 => '0',\n    6 => 0,\n];\n\nprint_r(array_filter($entry));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => foo\n    [2] => -1\n)\n```\n\n**Приклад #3**array\\_filter()\\*\\* із зазначеним `mode`\\*\\*\n\n```php\n<?php\n\n$arr = ['a' => 1, 'b' => 2, 'c' => 3, 'd' => 4];\n\nvar_dump(array_filter($arr, function($k) {\n    return $k == 'b';\n}, ARRAY_FILTER_USE_KEY));\n\nvar_dump(array_filter($arr, function($v, $k) {\n    return $k == 'b' || $v == 4;\n}, ARRAY_FILTER_USE_BOTH));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(1) {\n  [\"b\"]=>\n  int(2)\n}\narray(2) {\n  [\"b\"]=>\n  int(2)\n  [\"d\"]=>\n  int(4)\n}\n```\n\n### Примітки\n\n**Застереження**\n\nЯкщо callback-функція змінює масив (наприклад, додає чи видаляє елементи), поведінка цієї функції невизначена.\n\n### Дивіться також\n\n-   [array\\_intersect()](function.array-intersect.md) \\- обчислює перетин масивів\n-   [array\\_map()](function.array-map.md) \\- Застосовує callback-функцію до всіх елементів зазначених масивів\n-   [array\\_reduce()](function.array-reduce.md) \\- Ітеративно зменшує масив до єдиного значення, використовуючи callback-функцію\n-   [array\\_walk()](function.array-walk.md) \\- Застосовує задану користувачем функцію кожного елемента масиву\n","title":"array\\_filter","contentType":2,"navigation":[{"function.array-fill.md":"« array\\_fill"},{"function.array-flip.md":"array\\_flip »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}