{"pageProps":{"page":{"slug":"pdo.exec.md","content":"# PDO::exec\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8, PECL pdo >= 0.1.0)\n\nPDO::exec — Виконує SQL-запит і повертає кількість порушених рядків\n\n### Опис\n\n```methodsynopsis\npublic PDO::exec(string $statement): int|false\n```\n\nМетод**PDO::exec()** запускає SQL-запит виконання і повертає кількість рядків, задіяних під час виконання.\n\nМетод**PDO::exec()** не повертає результат вибірки оператором SELECT. Якщо потрібно вибрати дані цим оператором один раз під час виконання програми, використовують метод [PDO::query()](pdo.query.md). Якщо потрібно запускати той самий запит на вибірку безліч разів, краще створити підготовлений запит PDOStatement методом [PDO::prepare()](pdo.prepare.md), а потім запускати його методом [PDOStatement::execute()](pdostatement.execute.md) стільки разів, скільки потрібно.\n\n### Список параметрів\n\n`statement`\n\nSQL-вираз, який необхідно підготувати та запустити.\n\nДані всередині запиту мають бути [правильно екрановані](pdo.quote.md)\n\n### Значення, що повертаються\n\nМетод**PDO::exec()** повертає кількість рядків, які були модифіковані чи видалені під час виконання. Якщо таких рядків немає, метод **PDO::exec()** поверне значення\n\n**Увага**\n\nЦя функція може повертати як логічне значення \\*\\*`false`\\*\\*так і значення не типу boolean, яке наводиться до **`false`**. За більш детальною інформацією зверніться до розділу [Логічний тип](language.types.boolean.md)Используйте[оператор ===](language.operators.comparison.md) для перевірки значення, яке повертається цією функцією.\n\nУ цьому прикладі розробник припустився помилки, покладаючись на метод, що повертається. **PDO::exec()** результат. В результаті, якщо запит відпрацював без помилок, але не модифікував жодного рядка, робота скрипта буде завершена функцією [die()](function.die.md) :\n\n```php\n<?php\n$db->exec() or die(print_r($db->errorInfo(), true)); // неправильно\n?>\n```\n\n### Помилки\n\nВидає помилку рівня **`E_WARNING`**, якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_WARNING`**\n\nВикидає виняток [PDOException](class.pdoexception.md), якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_EXCEPTION`**\n\n### Приклади\n\n**Приклад #1 Виконання запиту DELETE**\n\nОтримання кількості видалених записів запитом DELETE без умов WHERE.\n\n```php\n<?php\n$dbh = new PDO('odbc:sample', 'db2inst1', 'ibmdb2');\n\n/* Удаляем все записи из таблицы FRUIT */\n$count = $dbh->exec(\"DELETE FROM fruit\");\n\n/* Получим количество удалённых записей */\nprint \"Удалено $count строк.\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nУдалено 1 строк.\n```\n\n### Дивіться також\n\n-   [PDO::prepare()](pdo.prepare.md) \\- готує запит до виконання та повертає пов'язаний із цим запитом об'єкт\n-   [PDO::query()](pdo.query.md) \\- готує та виконує вираз SQL без заповнювачів\n-   [PDOStatement::execute()](pdostatement.execute.md) \\- Запускає підготовлений запит на виконання\n","title":"PDO::exec","contentType":2,"navigation":[{"pdo.errorinfo.md":"« PDO::errorInfo"},{"pdo.getattribute.md":"PDO::getAttribute »"},{"index.md":"PHP Manual"},{"class.pdo.md":"PDO"}]}},"__N_SSG":true}