{"pageProps":{"page":{"slug":"class.arrayiterator.md","content":"# Клас ArrayIterator\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nДозволяє видаляти елементи, змінювати ключі або значення при ітерації масивами або об'єктами.\n\nКоли ви хочете перебрати один і той же масив кілька разів, вам потрібно створити екземпляр ArrayObject і створити для нього об'єкти ArrayIterator, які посилаються на нього або за допомогою [foreach](control-structures.foreach.md) або під час виклику методу getIterator() вручну.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class ArrayIterator\n    \n\n    \n     implements\n      SeekableIterator,\n\n     ArrayAccess,\n\n     Serializable,\n\n     Countable {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      STD_PROP_LIST;\n\n    public\n     const\n     int\n      ARRAY_AS_PROPS;\n\n\n    /* Методы */\n    \n   public __construct(array|object $array = [], int $flags = 0)\n\n    public append(mixed $value): void\npublic asort(int $flags = SORT_REGULAR): true\npublic count(): int\npublic current(): mixed\npublic getArrayCopy(): array\npublic getFlags(): int\npublic key(): string|int|null\npublic ksort(int $flags = SORT_REGULAR): true\npublic natcasesort(): true\npublic natsort(): true\npublic next(): void\npublic offsetExists(mixed $key): bool\npublic offsetGet(mixed $key): mixed\npublic offsetSet(mixed $key, mixed $value): void\npublic offsetUnset(mixed $key): void\npublic rewind(): void\npublic seek(int $offset): void\npublic serialize(): string\npublic setFlags(int $flags): void\npublic uasort(callable $callback): true\npublic uksort(callable $callback): true\npublic unserialize(string $data): void\npublic valid(): bool\n\n   }\n```\n\n## Обумовлені константи\n\n## Прапори ArrayIterator\n\n**`ArrayIterator::STD_PROP_LIST`**\n\nВластивості мають звичайну функціональність при доступі у вигляді списку (var\\_dump, foreach і т.д.).\n\n**`ArrayIterator::ARRAY_AS_PROPS`**\n\nЗаписи можуть бути доступні як властивості (читання та запис).\n\n## Зміст\n\n-   [ArrayIterator::append](arrayiterator.append.md) \\- Додати елемент\n-   [ArrayIterator::asort](arrayiterator.asort.md)— Сортує елементи за значеннями\n-   [ArrayIterator::\\_\\_construct](arrayiterator.construct.md) \\- Створює ArrayIterator\n-   [ArrayIterator::count](arrayiterator.count.md)— Порахувати кількість елементів\n-   [ArrayIterator::current](arrayiterator.current.md)— Повертає поточний елемент у масиві\n-   [ArrayIterator::getArrayCopy](arrayiterator.getarraycopy.md)— Повертає копію масиву\n-   [ArrayIterator::getFlags](arrayiterator.getflags.md)— Отримує прапори поведінки\n-   [ArrayIterator::key](arrayiterator.key.md)— Повертає ключ поточного елемента масиву\n-   [ArrayIterator::ksort](arrayiterator.ksort.md)— Сортує елементи за ключами\n-   [ArrayIterator::natcasesort](arrayiterator.natcasesort.md) - Сортує елементи \"натурально\", з урахуванням регістру\n-   [ArrayIterator::natsort](arrayiterator.natsort.md) - Сортує елементи \"натурально\"\n-   [ArrayIterator::next](arrayiterator.next.md)— Переміщує покажчик за наступний запис\n-   [ArrayIterator::offsetExists](arrayiterator.offsetexists.md)— Перевіряє, чи існує зміщення\n-   [ArrayIterator::offsetGet](arrayiterator.offsetget.md)— Отримує значення для усунення\n-   [ArrayIterator::offsetSet](arrayiterator.offsetset.md)— Встановлює значення для усунення\n-   [ArrayIterator::offsetUnset](arrayiterator.offsetunset.md)— Скидає значення зі зміщення\n-   [ArrayIterator::rewind](arrayiterator.rewind.md)— Переміщує покажчик на початок масиву\n-   [ArrayIterator::seek](arrayiterator.seek.md)— Переміщує курсор на вибрану позицію\n-   [ArrayIterator::serialize](arrayiterator.serialize.md) \\- Серіалізує масив\n-   [ArrayIterator::setFlags](arrayiterator.setflags.md) \\- Встановлює прапори, що змінюють поведінку ArrayIterator\n-   [ArrayIterator::uasort](arrayiterator.uasort.md)— Сортування за допомогою заданої користувачем функції та збереження ключів\n-   [ArrayIterator::uksort](arrayiterator.uksort.md)— Сортування за ключами за допомогою заданої функції порівняння\n-   [ArrayIterator::unserialize](arrayiterator.unserialize.md) \\- Десеріалізація\n-   [ArrayIterator::valid](arrayiterator.valid.md)— Перевіряє, чи містить масив ще запису\n","title":"Клас ArrayIterator","contentType":2,"navigation":[{"appenditerator.valid.md":"« AppendIterator::valid"},{"arrayiterator.append.md":"ArrayIterator::append »"},{"index.md":"PHP Manual"},{"spl.iterators.md":"Ітератори"}]}},"__N_SSG":true}