{"pageProps":{"page":{"slug":"function.get-called-class.md","content":"# get\\_called\\_class\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nget\\_called\\_class - Ім'я класу, отримане за допомогою пізнього статичного зв'язування\n\n### Опис\n\n```methodsynopsis\nget_called_class(): string\n```\n\nПовертає ім'я класу, з якого викликано статичний метод.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає ім'я класу.\n\n### Помилки\n\nЯкщо функція **get\\_called\\_class()** викликається не з класу, то видається помилка [Error](class.error.md). До версії PHP 8.0.0 видавалася помилка рівня **`E_WARNING`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Виклик функції не з класу тепер призводить до помилки [Error](class.error.md). . Раніше видавалася помилка рівня **`E_WARNING`** та функція повертала значення **`false`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** get\\_called\\_class()\\*\\*\\*\\*\n\n```php\n<?php\n\nclass foo {\n    static public function test() {\n        var_dump(get_called_class());\n    }\n}\n\nclass bar extends foo {\n}\n\nfoo::test();\nbar::test();\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(3) \"foo\"\nstring(3) \"bar\"\n```\n\n### Дивіться також\n\n-   [get\\_parent\\_class()](function.get-parent-class.md) \\- Повертає ім'я батьківського класу для об'єкта чи класу\n-   [get\\_class()](function.get-class.md) \\- Повертає ім'я класу, до якого належить об'єкт\n-   [is\\_subclass\\_of()](function.is-subclass-of.md) \\- Перевіряє, чи містить об'єкт у своєму дереві предків зазначений клас чи прямо реалізує його\n","title":"get\\_called\\_class","contentType":2,"navigation":[{"function.enum-exists.md":"« enum\\_exists"},{"function.get-class-methods.md":"get\\_class\\_methods »"},{"index.md":"PHP Manual"},{"ref.classobj.md":"Функції роботи з класами та об'єктами"}]}},"__N_SSG":true}