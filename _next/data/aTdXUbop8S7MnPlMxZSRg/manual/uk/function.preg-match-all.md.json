{"pageProps":{"page":{"slug":"function.preg-match-all.md","content":"# preg\\_match\\_all\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\npreg\\_match\\_all — Виконує глобальний пошук шаблону в рядку\n\n### Опис\n\n```methodsynopsis\npreg_match_all(    string $pattern,    string $subject,    array &$matches = null,    int $flags = 0,    int $offset = 0): int|false\n```\n\nШукає у рядку `subject` всі збіги з шаблоном `pattern`и помещает результат в массив`matches` у порядку, що визначається комбінацією прапорів `flags`\n\nПісля виявлення першої відповідності пошуки виконуватимуться з кінця останнього знайденого входження.\n\n### Список параметрів\n\n`pattern`\n\nШуканий шаблон у вигляді рядка.\n\n`subject`\n\nВхідний рядок.\n\n`matches`\n\nМасив значень, що збіглися, відсортований відповідно до параметра `flags`\n\n`flags`\n\nМоже бути комбінацією наступних прапорів (зверніть увагу, вказувати прапор **`PREG_PATTERN_ORDER`** одночасно з прапором **`PREG_SET_ORDER`** безглуздо):\n\n**`PREG_PATTERN_ORDER`**\n\nВпорядковує результати так, що елемент $matches\\[ \\] містить масив повних входжень шаблону, елемент $matches\\[ \\] містить масив входжень першої підмаски і т.д.\n\n```php\n<?php\npreg_match_all(\"|<[^>]+>(.*)</[^>]+>|U\",\n    \"<b>Приклад: </b><div align=left>это тест</div>\",\n    $out, PREG_PATTERN_ORDER);\necho $out[0][0] . \", \" . $out[0][1] . \"\\n\";\necho $out[1][0] . \", \" . $out[1][1] . \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<b>Приклад: </b>, <div align=left>это тест</div>\nПриклад: , это тест\n```\n\nТак, елемент $out\\[ \\] містить масив рядків, які відповідають повному шаблону, а елемент $out\\[ \\] містить масив рядків, що укладені в теги.\n\nЯкщо шаблон містить іменовані підшаблони, $matches додатково міститиме записи для ключів з іменами цих підшаблонів.\n\nЯкщо шаблон містить задубльовані іменовані підшаблони, лише найправіший підшаблон буде збережений в елементі $matches\\[NAME\\]\n\n```php\n<?php\npreg_match_all(\n    '/(?J)(?<match>foo)|(?<match>bar)/',\n    'foo bar',\n    $matches,\n    PREG_PATTERN_ORDER\n);\nprint_r($matches['match']);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] =>\n    [1] => bar\n)\n```\n\n**`PREG_SET_ORDER`**\n\nВпорядковує результати так, що елемент $matches\\[ \\] стає масивом із першим набором входжень, а елемент $matches\\[ \\] - З другим набором входжень і т. д.\n\n```php\n<?php\npreg_match_all(\"|<[^>]+>(.*)</[^>]+>|U\",\n    \"<b>Приклад: </b><div align=\\\"left\\\">это тест</div>\",\n    $out, PREG_SET_ORDER);\necho $out[0][0] . \", \" . $out[0][1] . \"\\n\";\necho $out[1][0] . \", \" . $out[1][1] . \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<b>Приклад: </b>, Приклад:\n<div align=\"left\">это тест</div>, это тест\n```\n\n**`PREG_OFFSET_CAPTURE`**\n\nЯкщо передано цей прапор, для кожного знайденого підрядка також буде повернуто її позицію у вихідному рядку (в байтах). Зверніть увагу, що цей прапор змінює масив `matches` багатомірний, кожен елемент якого містить масив, що містить в індексі з номером знайдений підрядок, а зміщення цього підрядка у параметрі `subject`— в индексе\n\n```php\n<?php\npreg_match_all('/(foo)(bar)(baz)/', 'foobarbaz', $matches, PREG_OFFSET_CAPTURE);\nprint_r($matches);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => Array\n        (\n            [0] => Array\n                (\n                    [0] => foobarbaz\n                    [1] => 0\n                )\n\n        )\n\n    [1] => Array\n        (\n            [0] => Array\n                (\n                    [0] => foo\n                    [1] => 0\n                )\n\n        )\n\n    [2] => Array\n        (\n            [0] => Array\n                (\n                    [0] => bar\n                    [1] => 3\n                )\n\n        )\n\n    [3] => Array\n        (\n            [0] => Array\n                (\n                    [0] => baz\n                    [1] => 6\n                )\n\n        )\n\n)\n```\n\n**`PREG_UNMATCHED_AS_NULL`**\n\nЯкщо цей прапор передано, несупадні підмаски будуть представлені значеннями **`null`**; інакше вони відображаються як порожніх рядків (string).\n\nЯкщо прапор сортування не передано, буде використано прапор за промовчанням. **`PREG_PATTERN_ORDER`**\n\n`offset`\n\nЗазвичай пошук виконується зліва направо з початку рядка. Через необов'язковий параметр `offset` можна вказати іншу позицію (в байтах), з якої буде розпочато пошук.\n\n> **Зауваження** :\n> \n> Использование параметра`offset` не еквівалентно заміні зіставного рядка виразом `substr($subject, $offset)` при виклику функції **preg\\_match\\_all()**, оскільки шаблон `pattern` може містити такі умови як *^* *$*или*(?<=x)*. Приклади можна переглянути в описі функції [preg\\_match()](function.preg-match.md)\n\n### Значення, що повертаються\n\nПовертає кількість знайдених входжень шаблону (яка може бути і нулем) або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nЯкщо переданий шаблон регулярного виразу не компілюється в допустимий регулярний вираз, видається помилка рівня **`E_WARNING`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.2.0 | Теперь для параметра`$flags` підтримується константа **`PREG_UNMATCHED_AS_NULL`** |\n\n### Приклади\n\n**Приклад #1 Отримання всіх телефонних номерів із тексту.**\n\n```php\n<?php\npreg_match_all(\"/\\(?  (\\d{3})?  \\)?  (?(1)  [\\-\\s] ) \\d{3}-\\d{4}/x\",\n                \"Звоните 555-1212 или 1-800-555-1212\", $phones);\n?>\n```\n\n**Приклад #2 Жадібний пошук збігів з HTML-тегами**\n\n```php\n<?php\n// Запись \\\\2 — это Приклад использования ссылок на подмаски.\n// Она означает необходимость соответствия подстроки строке, захваченной\n// второй подмаской, в нашем Прикладе это ([\\w]+).\n// Дополнительный обратный слеш необходим, потому что строка заключена в двойные кавычки.\n$html = \"<b>полужирный текст</b><a href=howdy.md>нажми</a>\";\n\npreg_match_all(\"/(<([\\w]+)[^>]*>)(.*?)(<\\/\\\\2>)/\", $html, $matches, PREG_SET_ORDER);\n\nforeach ($matches as $val) {\n    echo \"совпадение: \" . $val[0] . \"\\n\";\n    echo \"часть 1: \" . $val[1] . \"\\n\";\n    echo \"часть 2: \" . $val[2] . \"\\n\";\n    echo \"часть 3: \" . $val[3] . \"\\n\";\n    echo \"часть 4: \" . $val[4] . \"\\n\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nсовпадение: <b>полужирный текст</b>\nчасть 1: <b>\nчасть 2: b\nчасть 3: полужирный текст\nчасть 4: </b>\n\nmatched: <a href=hody.md>нажми</a>\nчасть 1: <a href=howdy.md>\nчасть 2: a\nчасть 3: нажми\nчасть 4: </a>\n```\n\n**Приклад #3 Використання іменованих підмасок**\n\n```php\n<?php\n\n$str = <<<FOO\na: 1\nb: 2\nc: 3\nFOO;\n\npreg_match_all('/(?P<name>\\w+): (?P<digit>\\d+)/', $str, $matches);\n\n/* Альтернативный вариант */\n// preg_match_all('/(?<name>\\w+): (?<digit>\\d+)/', $str, $matches);\n\nprint_r($matches);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => Array\n        (\n            [0] => a: 1\n            [1] => b: 2\n            [2] => c: 3\n        )\n\n    [name] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [digit] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n)\n```\n\n### Дивіться також\n\n-   [Регулярні вирази PCRE](pcre.pattern.md)\n-   [preg\\_quote()](function.preg-quote.md) \\- Екранує символи у регулярних виразах\n-   [preg\\_match()](function.preg-match.md) \\- Виконує перевірку на відповідність регулярному виразу\n-   [preg\\_replace()](function.preg-replace.md) \\- Виконує пошук та заміну за регулярним виразом\n-   [preg\\_split()](function.preg-split.md) \\- Розбиває рядок за регулярним виразом\n-   [preg\\_last\\_error()](function.preg-last-error.md) \\- Повертає код помилки виконання останнього регулярного вираження PCRE\n","title":"preg\\_match\\_all","contentType":2,"navigation":[{"function.preg-last-error.md":"« preg\\_last\\_error"},{"function.preg-match.md":"preg\\_match »"},{"index.md":"PHP Manual"},{"ref.pcre.md":"Функції PCRE"}]}},"__N_SSG":true}