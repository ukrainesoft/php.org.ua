{"pageProps":{"page":{"slug":"function.array-slice.md","content":"# array\\_slice\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\narray\\_slice - Вибирає зріз масиву\n\n### Опис\n\n```methodsynopsis\narray_slice(    array $array,    int $offset,    ?int $length = null,    bool $preserve_keys = false): array\n```\n\n**array\\_slice()** повертає послідовність елементів масиву `array`, визначену параметрами `offset`и`length`\n\n### Список параметрів\n\n`array`\n\nВхідний масив\n\n`offset`\n\nЯкщо параметр `offset` невід'ємний, послідовність почнеться на вказаній відстані від початку `array`\n\nЯкщо `offset` негативний, послідовність почнеться з кінця `array`\n\n> **Зауваження** :\n> \n> Обратите внимание, что параметр`offset`обозначает положение в массиве, а не ключ.\n\n`length`\n\nЯкщо цю функцію передано позитивний параметр `length`, послідовність буде включати кількість елементів менше або дорівнює `length`\n\nЯкщо кількість елементів масиву менша за параметр `length`, то тільки доступні елементи масиву будуть присутні.\n\nЯкщо цю функцію передано негативний параметр `length`послідовність зупиниться на зазначеній відстані від кінця масиву.\n\nЯкщо він опущений, послідовність буде містити всі елементи з `offset`до конца массива`array`\n\n`preserve_keys`\n\n> **Зауваження** :\n> \n> Обратите внимание, что по умолчанию**array\\_slice()** скидає ключі масиву. Ви можете перевизначити цю поведінку, встановивши параметр `preserve_keys`в\\*\\*`true`\\*\\*. Строкові ключі зберігаються, незалежно від цього параметра.\n\n### Значення, що повертаються\n\nПовертає зріз. Якщо усунення більше довжини масиву, то буде повернено порожній масив.\n\n### Приклади\n\n**Приклад #1 Приклад використання** array\\_slice()\\*\\*\\*\\*\n\n```php\n<?php\n$input = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n\n$output = array_slice($input, 2);      // возвращает \"c\", \"d\" и \"e\"\n$output = array_slice($input, -2, 1);  // возвращает \"d\"\n$output = array_slice($input, 0, 3);   // возвращает \"a\", \"b\" и \"c\"\n\n// обратите внимание на различия в индексах массивов\nprint_r(array_slice($input, 2, -1));\nprint_r(array_slice($input, 2, -1, true));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => c\n    [1] => d\n)\nArray\n(\n    [2] => c\n    [3] => d\n)\n```\n\n**Приклад #2 Приклад використання** array\\_slice()\\*\\* з одновимірним масивом\\*\\*\n\n```php\n<?php\n$input = array(1 => \"a\", \"b\", \"c\", \"d\", \"e\");\nprint_r(array_slice($input, 1, 2));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => b\n    [1] => c\n)\n```\n\n**Приклад #3 Приклад використання** array\\_slice()\\*\\* з масивом із змішаних ключів\\*\\*\n\n```php\n<?php\n$ar = array('a'=>'apple', 'b'=>'banana', '42'=>'pear', 'd'=>'orange');\nprint_r(array_slice($ar, 0, 3));\nprint_r(array_slice($ar, 0, 3, true));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [a] => apple\n    [b] => banana\n    [0] => pear\n)\nArray\n(\n    [a] => apple\n    [b] => banana\n    [42] => pear\n)\n```\n\n### Дивіться також\n\n-   [array\\_chunk()](function.array-chunk.md) \\- Розбиває масив на частини\n-   [array\\_splice()](function.array-splice.md) \\- Видаляє частину масиву і замінює її чимось ще\n-   [unset()](function.unset.md) \\- Видаляє змінну\n","title":"array\\_slice","contentType":2,"navigation":[{"function.array-shift.md":"« array\\_shift"},{"function.array-splice.md":"array\\_splice »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}