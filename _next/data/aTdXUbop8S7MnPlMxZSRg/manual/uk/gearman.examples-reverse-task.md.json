{"pageProps":{"page":{"slug":"gearman.examples-reverse-task.md","content":"## Базові клієнт та обробник Gearman, відправка завдань\n\n**Приклад #1 Базові клієнт та обробник Gearman, відправлення завдань**\n\nУ цьому прикладі наш базовий клієнт перевертання рядка розширено так, щоб виконувати два завдання паралельно. Оброблювач перевертання рядка не змінений, за винятком додавання даних, що відправляються назад під час обробки.\n\n```php\n<?php\n\n# создание клиента gearman\n$gmc= new GearmanClient();\n\n# указание сервера по умолчанию (localhost)\n$gmc->addServer();\n\n# регистрация функций обратного вызова\n$gmc->setCreatedCallback(\"reverse_created\");\n$gmc->setDataCallback(\"reverse_data\");\n$gmc->setStatusCallback(\"reverse_status\");\n$gmc->setCompleteCallback(\"reverse_complete\");\n$gmc->setFailCallback(\"reverse_fail\");\n\n# указание неких произвольных данных\n$data['foo'] = 'bar';\n\n# добавление двух заданий\n$task= $gmc->addTask(\"reverse\", \"foo\", $data);\n$task2= $gmc->addTaskLow(\"reverse\", \"bar\", NULL);\n\n# выполнение заданий параллельно (использование двух обработчиков)\nif (! $gmc->runTasks())\n{\n    echo \"ERROR \" . $gmc->error() . \"\\n\";\n    exit;\n}\n\necho \"DONE\\n\";\n\nfunction reverse_created($task)\n{\n    echo \"CREATED: \" . $task->jobHandle() . \"\\n\";\n}\n\nfunction reverse_status($task)\n{\n    echo \"STATUS: \" . $task->jobHandle() . \" - \" . $task->taskNumerator() .\n         \"/\" . $task->taskDenominator() . \"\\n\";\n}\n\nfunction reverse_complete($task)\n{\n    echo \"COMPLETE: \" . $task->jobHandle() . \", \" . $task->data() . \"\\n\";\n}\n\nfunction reverse_fail($task)\n{\n    echo \"FAILED: \" . $task->jobHandle() . \"\\n\";\n}\n\nfunction reverse_data($task)\n{\n    echo \"DATA: \" . $task->data() . \"\\n\";\n}\n\n?>\n```\n\n```php\n<?php\n\necho \"Starting\\n\";\n\n# Создание обработчика.\n$gmworker= new GearmanWorker();\n\n# Указание сервера по умолчанию  (localhost).\n$gmworker->addServer();\n\n# Регистрация функции \"reverse\" на сервере. Изменение функции обработчика на\n# \"reverse_fn_fast\" для более быстрой обработки без вывода.\n$gmworker->addFunction(\"reverse\", \"reverse_fn\");\n\nprint \"Waiting for job...\\n\";\nwhile($gmworker->work())\n{\n  if ($gmworker->returnCode() != GEARMAN_SUCCESS)\n  {\n    echo \"return_code: \" . $gmworker->returnCode() . \"\\n\";\n    break;\n  }\n}\n\nfunction reverse_fn($job)\n{\n  echo \"Received job: \" . $job->handle() . \"\\n\";\n\n  $workload = $job->workload();\n  $workload_size = $job->workloadSize();\n\n  echo \"Workload: $workload ($workload_size)\\n\";\n\n  # Этот цикл не является необходимым, но показывает как выполняется работа\n  for ($x= 0; $x < $workload_size; $x++)\n  {\n    echo \"Sending status: \" . ($x + 1) . \"/$workload_size complete\\n\";\n    $job->sendStatus($x+1, $workload_size);\n    $job->sendData(substr($workload, $x, 1));\n    sleep(1);\n  }\n\n  $result= strrev($workload);\n  echo \"Result: $result\\n\";\n\n  # Возвращаем, когда необходимо отправить результат обратно клиенту.\n  return $result;\n}\n\n# Гораздо более простая и менее подробная версия вышеприведённой функции выглядит так:\nfunction reverse_fn_fast($job)\n{\n  return strrev($job->workload());\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n% php reverse_worker.php\nStarting\nWaiting for job...\nReceived job: H:foo.local:45\nWorkload: foo (3)\n1/3 complete\n2/3 complete\n3/3 complete\nResult: oof\nReceived job: H:foo.local:44\nWorkload: bar (3)\n1/3 complete\n2/3 complete\n3/3 complete\nResult: rab\n```\n\n```\n% php reverse_client_task.php\nCREATED: H:foo.local:44\nCREATED: H:foo.local:45\nSTATUS: H:foo.local:45 - 1/3\nDATA: f\nSTATUS: H:foo.local:45 - 2/3\nDATA: o\nSTATUS: H:foo.local:45 - 3/3\nDATA: o\nCOMPLETE: H:foo.local:45, oof\nSTATUS: H:foo.local:44 - 1/3\nDATA: b\nSTATUS: H:foo.local:44 - 2/3\nDATA: a\nSTATUS: H:foo.local:44 - 3/3\nDATA: r\nCOMPLETE: H:foo.local:44, rab\nDONE\n```\n","title":"Базові клієнт та обробник Gearman, відправка завдань","contentType":2,"navigation":[{"gearman.examples-reverse-bg.md":"« Базовий клієнт та обробник Gearman, фоновий режим"},{"class.gearmanclient.md":"GearmanClient »"},{"index.md":"PHP Manual"},{"gearman.examples.md":"Приклади"}]}},"__N_SSG":true}