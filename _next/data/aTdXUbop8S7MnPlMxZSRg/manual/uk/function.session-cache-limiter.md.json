{"pageProps":{"page":{"slug":"function.session-cache-limiter.md","content":"# session\\_cache\\_limiter\n\n(PHP 4 >= 4.0.3, PHP 5, PHP 7, PHP 8)\n\nsession\\_cache\\_limiter — Отримати та/або встановити поточний режим кешування\n\n### Опис\n\n```methodsynopsis\nsession_cache_limiter(?string $value = null): string|false\n```\n\n**session\\_cache\\_limiter()** повертає ім'я поточного кешування.\n\nРежим кешування визначає, які HTTP-заголовки керування кешем надсилати клієнту. Ці заголовки визначають, якими правилами кешування контенту повинні керуватися клієнт та проміжні проксі. Встановлення обмежувача на значення `nocache`запрещает любое кеширование. Значение`public` дозволяє кешування як на стороні клієнта, так і на проксі-серверах . `private`запрещает кеширование прокси-серверам, но разрешает клиенту.\n\nЯкщо в режимі `private` надіслати заголовок Expire, то це може привести деякі браузери, включаючи Mozilla, в замішання. Ви можете обійти цю проблему, використовуючи режим `private_no_expire`. У цьому режимі заголовок `Expire`никогда не будет послан.\n\nУстановка режима кеширования в`''` відключає автоматичне надсилання кеш-заголовків.\n\nПід час початку запиту режим кешування скидається до значення за промовчанням, яке зберігається в [session.cache\\_limiter](session.configuration.md#ini.session.cache-limiter). Таким чином, вам необхідно викликати **session\\_cache\\_limiter()** для кожного запиту (перед тим, як викликана функція [session\\_start()](function.session-start.md)\n\n### Список параметрів\n\n`value`\n\nЯкщо `value` вказаний і не дорівнює **`null`**, ім'я поточного кешування змінюється на нове значення.\n\n**Можливі значення**\n\n| Значение | Посылаемый заголовок |\n| --- | --- |\n| `public` |  |\n| Expires: (коли в майбутньому, залежно від session.cache\\_expire) |  |\n| Cache-Control: public, max-age=(колись у майбутньому, залежно від session.cache\\_expire) |  |\n| Last-Modified: (тимчасова мітка останнього збереження сесії) |  |\n\n`private_no_expire`\n\nCache-Control: private, max-age=(session.cache\\_expire у майбутньому), pre-check=(session.cache\\_expire у майбутньому) Last-Modified: (тимчасова мітка останнього збереження сесії)\n\n`private`\n\nExpires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: private, max-age=(session.cache\\_expire у майбутньому), pre-check=(session.cache\\_expire у майбутньому) Last-Modified: (тимчасова мітка останнього збереження сесії)\n\n`nocache`\n\nExpires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache\n\n### Значення, що повертаються\n\nПовертає назву поточного режиму кешування. Якщо змінити значення не вдалося, повертається **`false`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `value` може набувати значення **`null`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** session\\_cache\\_limiter()\\*\\*\\*\\*\n\n```php\n<?php\n\n/* установить режим кеширования на 'private' */\n\nsession_cache_limiter('private');\n$cache_limiter = session_cache_limiter();\n\necho \"Режим кеширования установлен в $cache_limiter<br />\";\n?>\n```\n\n### Дивіться також\n\n-   [session.cache\\_limiter](session.configuration.md#ini.session.cache-limiter)\n","title":"session\\_cache\\_limiter","contentType":2,"navigation":[{"function.session-cache-expire.md":"« session\\_cache\\_expire"},{"function.session-commit.md":"session\\_commit »"},{"index.md":"PHP Manual"},{"ref.session.md":"Функції для роботи із сесіями"}]}},"__N_SSG":true}