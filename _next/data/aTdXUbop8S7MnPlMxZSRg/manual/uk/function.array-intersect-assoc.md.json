{"pageProps":{"page":{"slug":"function.array-intersect-assoc.md","content":"# array\\_intersect\\_assoc\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\narray\\_intersect\\_assoc - Обчислює перетин масивів з додатковою перевіркою індексу\n\n### Опис\n\n```methodsynopsis\narray_intersect_assoc(array $array, array ...$arrays): array\n```\n\nФункция**array\\_intersect\\_assoc()** повертає масив, що містить усі значення масиву `array`, що містяться у всіх переданих аргументах. Зверніть увагу, що порівнюються ключі, на відміну функції [array\\_intersect()](function.array-intersect.md)\n\n### Список параметрів\n\n`array`\n\nОсновний масив, що перевіряється.\n\n`arrays`\n\nМасиви, з якими йде порівняння.\n\n### Значення, що повертаються\n\nПовертає асоціативний масив, що містить усі елементи масиву `array`, які існують у всіх переданих аргументах.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Тепер функцію можна викликати лише з одним параметром. Раніше потрібно не менше двох параметрів. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** array\\_intersect\\_assoc()\\*\\*\\*\\*\n\n```php\n<?php\n$array1 = array(\"a\" => \"green\", \"b\" => \"brown\", \"c\" => \"blue\", \"red\");\n$array2 = array(\"a\" => \"green\", \"b\" => \"yellow\", \"blue\", \"red\");\n$result_array = array_intersect_assoc($array1, $array2);\nprint_r($result_array);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [a] => green\n)\n```\n\nУ нашому прикладі видно, що тільки пара `\"a\" => \"green\"`міститься в обох масивах і таким чином повертається. Значення `\"red\"` не повертається, тому що в масиві $array1 його ключ - , в той час як ключ значення \"red\" у масиві $array2 - , а ключ`\"b\"` не повертається тому, що його значення різні у кожному масиві.\n\nДва значения пар`key => value` визнаються рівними, тільки якщо вираз `(string) $elem1 === (string) $elem2` істинно. Простіше кажучи: коли їх рядкові уявлення ідентичні.\n\n### Дивіться також\n\n-   [array\\_intersect()](function.array-intersect.md) \\- обчислює перетин масивів\n-   [array\\_uintersect\\_assoc()](function.array-uintersect-assoc.md) \\- обчислює перетин масивів з додатковою перевіркою індексів, використовуючи для порівняння значень callback-функцію\n-   [array\\_intersect\\_uassoc()](function.array-intersect-uassoc.md) \\- обчислює перетин масивів з додатковою перевіркою індексу, порівнюючи індекси через callback-функцію\n-   [array\\_uintersect\\_uassoc()](function.array-uintersect-uassoc.md) \\- обчислює перетин масивів з додатковою перевіркою індексу, використовуючи для порівняння індексів та значень окремі callback-функції\n-   [array\\_diff()](function.array-diff.md) \\- обчислює розбіжність масивів\n-   [array\\_diff\\_assoc()](function.array-diff-assoc.md) \\- обчислює розбіжність масивів з додатковою перевіркою індексу\n","title":"array\\_intersect\\_assoc","contentType":2,"navigation":[{"function.array-flip.md":"« array\\_flip"},{"function.array-intersect-key.md":"array\\_intersect\\_key »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}