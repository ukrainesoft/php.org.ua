{"pageProps":{"page":{"slug":"phar.configuration.md","content":"## Налаштування під час виконання\n\nПоведінка цих функцій залежить від установок у php.ini.\n\n**Параметри конфігурації файлової системи та потоків**\n\n| Имя | По умолчанию | Место изменения | Список изменений |\n| --- | --- | --- | --- |\n| [phar.readonly](phar.configuration.md#ini.phar.readonly) | \"1\" | **`INI_ALL`** |  |\n| [phar.require\\_hash](phar.configuration.md#ini.phar.require-hash) | \"1\" | **`INI_ALL`** |  |\n| [phar.cache\\_list](phar.configuration.md#ini.phar.cache-list) | \"\" | **`INI_SYSTEM`** |  |\n\nКоротке пояснення конфігураційних директив.\n\n`phar.readonly`bool\n\nЦей параметр вимикає підтримку створення або модифікації Phar-архівів за допомогою потоку `phar` та записи об'єктів [Phar](class.phar.md) на диск. Цей параметр завжди повинен бути увімкнений на робочих машинах, оскільки підтримка запису модулем phar дозволила б просте створення, заснованих на PHP, вірусів у разі присутності інших уразливостей у системі загальної безпеки.\n\n> **Зауваження** :\n> \n> Цей параметр може бути вимкнений у php.ini тільки з міркувань безпеки. Якщо параметр `phar.readonly` відключений у php.ini, користувач може увімкнути `phar.readonly` у скрипті або вимкнути його пізніше. Якщо параметр `phar.readonly` включений у php.ini, скрипт може нешкідливо \"повторно включити\" змінну INI, але може відключити її.\n\n`phar.require_hash`bool\n\nЦей параметр зробить обов'язковим будь-який підпис (зараз підтримуються MD5, SHA1, SHA256, SHA512 і OpenSSL) для всіх Phar-архівів, що відкриваються, і унеможливить обробку будь-якого Phar-архіву, що не містить підпис.\n\n> **Зауваження** :\n> \n> Цей параметр може бути вимкнений у php.ini. Якщо параметр `phar.require_hash` відключений у php.ini, користувач може увімкнути `phar.require_hash` у скрипті або вимкнути його пізніше. Якщо параметр `phar.require_hash` включений у php.ini, скрипт може нешкідливо \"повторно включити\" змінну INI, але може відключити її.\n> \n> Цей параметр не впливає на читання простих tar-файлів за допомогою класу [PharData](class.phardata.md)\n\n**Застереження**\n\n`phar.require_hash` не забезпечує безпеки як такої - це лише міра захисту від запуску пошкодженого Phar архіву, оскільки будь-хто, хто має можливість модифікувати архів може з тим самим успіхом модифікувати і підпис.\n\n`phar.cache_list`string\n\nДозволяє проводити розмітку phar-архівів, для яких необхідно здійснити попередній розбір у момент старту веб-сервера. Забезпечує підвищення продуктивності за рахунок запуску файлів поза phar-архівом зі швидкістю, дуже близькою до тієї, яка була б при запуску цих файлів традиційним способом з диска.\n\n**Приклад #1 phar.cache\\_list usage example**\n\n```\nв php.ini (windows):\nphar.cache_list =C:\\путь\\к\\phar1.phar;C:\\путь\\к\\phar2.phar\nв php.ini (unix):\nphar.cache_list =/путь/к/phar1.phar:/путь/к/phar2.phar\n```\n","title":"Налаштування під час виконання","contentType":2,"navigation":[{"phar.installation.md":"« Встановлення"},{"phar.resources.md":"Типи ресурсів »"},{"index.md":"PHP Manual"},{"phar.setup.md":"Встановлення та налаштування"}]}},"__N_SSG":true}