{"pageProps":{"page":{"slug":"function.sodium-crypto-stream-xchacha20-xor-ic.md","content":"# sodium\\_crypto\\_stream\\_xchacha20\\_xor\\_ic\n\n(PHP 8 >= 8.2.0)\n\nsodium\\_crypto\\_stream\\_xchacha20\\_xor\\_ic — Шифрує повідомлення, використовуючи неясний код та секретний ключ (без автентифікації)\n\n### Опис\n\n```methodsynopsis\nsodium_crypto_stream_xchacha20_xor_ic(    string $message,    string $nonce,    int $counter,    string $key): string\n```\n\nФункция аналогична[sodium\\_crypto\\_stream\\_xchacha20\\_xor()](function.sodium-crypto-stream-xchacha20-xor.md)але додає можливість встановити початкове значення лічильника блоків у ненульове значення. Це дозволяє отримати прямий доступ до будь-якого блоку без необхідності обчислення попередніх.\n\n**Застереження**\n\nЦе шифрування є неавтентифікованим і не запобігає атакам з підібраним шифротексту. Обов'язково об'єднайте шифротекст із кодом автентифікації повідомлення, наприклад, за допомогою функції [sodium\\_crypto\\_aead\\_xchacha20poly1305\\_ietf\\_encrypt()](function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt.md) або [sodium\\_crypto\\_auth()](function.sodium-crypto-auth.md)\n\n### Список параметрів\n\n`message`\n\nПовідомлення для шифрування.\n\n`nonce`\n\n24-байтовий одноразовий номер.\n\n`counter`\n\nПочаткове значення лічильника блоків.\n\n`key`\n\nКлюч, можливо, згенерований функцією [sodium\\_crypto\\_stream\\_xchacha20\\_keygen()](function.sodium-crypto-stream-xchacha20-keygen.md)\n\n### Значення, що повертаються\n\nПовертає зашифроване повідомлення або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** sodium\\_crypto\\_stream\\_xchacha20\\_xor\\_ic()\\*\\*\\*\\*\n\n```php\n<?php\n$n2 = random_bytes(SODIUM_CRYPTO_STREAM_XCHACHA20_NONCEBYTES);\n$left  = str_repeat(\"\\x01\", 64);\n$right = str_repeat(\"\\xfe\", 64);\n\n// Всё сразу:\n$stream7_unified = sodium_crypto_stream_xchacha20_xor($left . $right, $n2, $key);\n\n// По частям, с начальным счётчиком:\n$stream7_left  = sodium_crypto_stream_xchacha20_xor_ic($left, $n2, 0, $key);\n$stream7_right = sodium_crypto_stream_xchacha20_xor_ic($right, $n2, 1, $key);\n$stream7_concat = $stream7_left . $stream7_right;\n\nvar_dump(strlen($stream7_concat));\nvar_dump($stream7_unified === $stream7_concat);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nint(128)\nbool(true)\n```\n\n### Дивіться також\n\n-   [sodium\\_crypto\\_stream\\_xchacha20\\_xor()](function.sodium-crypto-stream-xchacha20-xor.md) \\- Шифрує повідомлення, використовуючи одноразовий номер та секретний ключ (без аутентифікації)\n","title":"sodium\\_crypto\\_stream\\_xchacha20\\_xor\\_ic","contentType":2,"navigation":[{"function.sodium-crypto-stream-xchacha20-keygen.md":"« sodium\\_crypto\\_stream\\_xchacha20\\_keygen"},{"function.sodium-crypto-stream-xchacha20-xor.md":"sodium\\_crypto\\_stream\\_xchacha20\\_xor »"},{"index.md":"PHP Manual"},{"ref.sodium.md":"Опції Sodium"}]}},"__N_SSG":true}