{"pageProps":{"page":{"slug":"function.get-browser.md","content":"# get\\_browser\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nget\\_browser — Повідомляє про можливості браузера користувача\n\n### Опис\n\n```methodsynopsis\nget_browser(?string $user_agent = null, bool $return_array = false): object|array|false\n```\n\nНамагається визначити можливості браузера користувача, шукаючи інформацію про браузер у файлі browscap.ini.\n\n### Список параметрів\n\n`user_agent`\n\nАналізований рядок із User Agent. За промовчанням використовується значення HTTP User-Agent. Однак цей параметр можна пропустити для отримання додаткової інформації про браузер.\n\nПараметр може бути пропущений, якщо його значення буде рівним **`null`**\n\n`return_array`\n\nЯкщо дорівнює **`true`**, то функція поверне масив (array) замість об'єкта (object).\n\n### Значення, що повертаються\n\nІнформація повертається як об'єкта, чи вигляді масиву, що містить різні дані, наприклад, мажорну і мінорну версію браузера і рядок ID; значення з **`true`** **`false`** для таких функцій браузера, як фрейми, JavaScript, cookies і т.д.\n\nНаявність `cookies` означає, що браузер має можливість прийому cookies, а не повідомляє про те, чи ввімкнув користувач можливість прийому cookies чи ні. Єдиним способом перевірки можливості браузера приймати cookies є встановлення cookie за допомогою [setcookie()](function.setcookie.md), оновлення сторінки та перевірка значення.\n\nПовертає **`false`**, якщо неможливо отримати інформацію, наприклад, коли параметр конфігурації [browscap](misc.configuration.md#ini.browscap) у php.ini не було встановлено.\n\n### Приклади\n\n**Приклад #1 Виведення інформації про браузер користувача**\n\n```php\n<?php\necho $_SERVER['HTTP_USER_AGENT'] . \"\\n\\n\";\n\n$browser = get_browser(null, true);\nprint_r($browser);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7) Gecko/20040803 Firefox/0.9.3\n\nArray\n(\n    [browser_name_regex] => ^mozilla/5\\.0 (windows; .; windows nt 5\\.1; .*rv:.*) gecko/.* firefox/0\\.9.*$\n    [browser_name_pattern] => Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9*\n    [parent] => Firefox 0.9\n    [platform] => WinXP\n    [browser] => Firefox\n    [version] => 0.9\n    [majorver] => 0\n    [minorver] => 9\n    [cssversion] => 2\n    [frames] => 1\n    [iframes] => 1\n    [tables] => 1\n    [cookies] => 1\n    [backgroundsounds] =>\n    [vbscript] =>\n    [javascript] => 1\n    [javaapplets] => 1\n    [activexcontrols] =>\n    [cdf] =>\n    [aol] =>\n    [beta] => 1\n    [win16] =>\n    [crawler] =>\n    [stripper] =>\n    [wap] =>\n    [netclr] =>\n)\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Для роботи цієї функції необхідно, щоб в установці [browscap](misc.configuration.md#ini.browscap) в налаштуваннях php.ini було встановлено коректний шлях до файлу browscap.ini у вашій системі.\n> \n> browscap.ini не постачається з PHP, але ви можете останню його версію тут: [» php\\_browscap.ini](http://browscap.org/)\n> \n> browscap.ini містить інформацію про більшість браузерів, він вимагає оновлень для підтримки його бази актуальної Формат файлу досить очевидний.\n","title":"get\\_browser","contentType":2,"navigation":[{"function.exit.md":"« exit"},{"function.halt-compiler.md":"\\_\\_halt\\_compiler »"},{"index.md":"PHP Manual"},{"ref.misc.md":"Різні функції"}]}},"__N_SSG":true}