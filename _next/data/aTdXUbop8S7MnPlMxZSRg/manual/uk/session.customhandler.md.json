{"pageProps":{"page":{"slug":"session.customhandler.md","content":"## Користувальницькі обробники сесії\n\nДля реалізації сховища даних (або будь-якого іншого сховища) слід використовувати [session\\_set\\_save\\_handler()](function.session-set-save-handler.md), щоб створити набір функцій користувача сховища. Обробники сесій можна створити, використовуючи клас [SessionHandlerInterface](class.sessionhandlerinterface.md), або розширити внутрішні обробники PHP, успадкувавши клас [SessionHandler](class.sessionhandler.md)\n\nФункції зворотного дзвінка, зазначені в [session\\_set\\_save\\_handler()](function.session-set-save-handler.md), є методами, що викликаються PHP протягом життєвого циклу сесії: `open` `read` `write`и`close` та для службових завдань: `destroy`для удаления сессии и`gc` для періодичного складання сміття.\n\nОтже, у PHP завжди необхідні обробники, які зберігають сесії. За промовчанням працює внутрішній обробник 'files', що зберігає сесії у файли. Користувальницький обробник може бути встановлений, використовуючи функцію [session\\_set\\_save\\_handler()](function.session-set-save-handler.md). Альтернативні обробники для збереження сесії також доступні в PHP модулях, таких як `sqlite` `memcache`и`memcached` і можуть бути встановлені за допомогою [session.save\\_handler](session.configuration.md#ini.session.save-handler)\n\nКоли стартує сесія, PHP внутрішньо викличе обробник `open` з наступним викликом оброблювача `read`, який повинен повернути закодований рядок - точно такий, який передавався для збереження. Після повернення обробником `read` закодованого рядка, PHP декодує її і заповнить масивом, що вийшов, суперглобальний масив [$\\_SESSION](reserved.variables.session.md)\n\nКоли PHP завершує виконання скрипта (або коли викликана функція [session\\_write\\_close()](function.session-write-close.md)), PHP внутрішньо закодує суперглобальний масив [$\\_SESSION](reserved.variables.session.md), та передасть ці дані з ідентифікатором сесії функції зворотного виклику `write`. Після того, як відпрацює функція зворотного дзвінка `write`, PHP внутрішньо викликає обробник функції зворотного виклику `close`\n\nКоли сесія спеціально знищена, PHP викличе обробник `destroy` з ідентифікатором сесії\n\nPHP буде викликати обробник функції зворотного виклику `gc` час від часу, щоб помітити сесії як минулі відповідно до часу життя сесій. Ця операція видаляє всі записи зі постійного сховища, доступ до яких не здійснювався більш ніж інтервал часу, зазначений у параметрі `$lifetime`\n","title":"Користувальницькі обробники сесії","contentType":2,"navigation":[{"session.idpassing.md":"Передача ідентифікатора сесії"},{"session.upload-progress.md":"Відстеження прогресу завантаження файлів за допомогою сесій »"},{"index.md":"PHP Manual"},{"session.examples.md":"Приклади"}]}},"__N_SSG":true}