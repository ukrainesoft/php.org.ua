{"pageProps":{"page":{"slug":"language.operators.increment.md","content":"## Оператори інкременту та декременту\n\nPHP підтримує префіксні та постфіксні оператори інкременту та декременту. Ці унарні оператори дозволяють збільшувати чи зменшувати значення на одиницю.\n\n**Оператори інкременту та декременту**\n\n| Приклад | Название | Действие |\n| --- | --- | --- |\n| ++$a | Префіксний інкремент | Збільшує $a на одиницю, а потім повертає значення $a. |\n| $a++ | Постфіксний інкремент | Повертає значення $a, а потім збільшує $a на одиницю. |\n| \\--$a | Префіксний декремент | Зменшує $a на одиницю, а потім повертає значення $a. |\n| $a-- | Постфіксний декремент | Повертає значення $a, а потім зменшує $a на одиницю. |\n\nНаведемо приклад простого скрипту:\n\n```php\n<?php\n\necho 'Постфиксный инкремент:', PHP_EOL;\n$a = 5;\nvar_dump($a++);\nvar_dump($a);\n\necho 'Префиксный инкремент:', PHP_EOL;\n$a = 5;\nvar_dump(++$a);\nvar_dump($a);\n\necho 'Постфиксный декремент:', PHP_EOL;\n$a = 5;\nvar_dump($a--);\nvar_dump($a);\n\necho 'Префиксный декремент:', PHP_EOL;\n$a = 5;\nvar_dump(--$a);\nvar_dump($a);\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПостфиксный инкремент:\nint(5)\nint(6)\nПрефиксный инкремент:\nint(6)\nint(6)\nПостфиксный декремент:\nint(5)\nint(4)\nПрефиксный декремент:\nint(4)\nint(4)\n```\n\n**Увага**\n\nОператори інкременту та декременту не впливають на логічні значення (bool). Починаючи з PHP 8.3.0, викликається помилка рівня. **`E_WARNING`**, Тому що в майбутньому це буде неявно приведено до значення цілого числа (int).\n\nОператор декремента не впливає значення null. Починаючи з PHP 8.3.0, викликається помилка рівня. **`E_WARNING`**, Тому що в майбутньому це буде неявно приведено до значення цілого числа (int).\n\nОператор декремента не влияет на не-[числові рядки](language.types.numeric-strings.md). Починаючи з PHP 8.3.0, викликається помилка рівня. \\*\\*`E_WARNING`\\*\\*тому в майбутньому буде викидатися виняток [TypeError](class.typeerror.md)\n\n> **Зауваження** :\n> \n> Внутрішні об'єкти, які підтримують перевантаження додавання та/або віднімання, можуть бути інкрементовані та/або декрементовані. Один такий внутрішній об'єкт — це [GMP](class.gmp.md)\n\n### Функція збільшення рядка PERL\n\n**Увага**\n\nПочинаючи з PHP 8.3.0, ця функція м'яко застаріла. Натомість викликають функцію [str\\_increment()](function.str-increment.md)\n\nУ PHP можна інкрементувати не- [числовий рядок](language.types.numeric-strings.md). Рядок має бути буквенно-цифровою послідовністю в кодуванні ASCII. Літери збільшуються до наступної літери, досягши літери `Z` інкремент переноситься до наступного розряду зліва. Наприклад, вираз `$a = 'Z'; $a++;`превратит значение переменной $a в значение`«AA»`\n\n**Приклад #1 Приклад збільшення рядка PERL**\n\n```php\n<?php\n\necho '== Буквенные строки ==' . PHP_EOL;\n$s = 'W';\nfor ($n=0; $n<6; $n++) {\n    echo ++$s . PHP_EOL;\n}\n// Буквенно-цифровые строки ведут себя иначе\necho '== Буквенно-цифровые строки ==' . PHP_EOL;\n$d = 'A8';\nfor ($n=0; $n<6; $n++) {\n    echo ++$d . PHP_EOL;\n}\n$d = 'A08';\nfor ($n=0; $n<6; $n++) {\n    echo ++$d . PHP_EOL;\n}\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n== Буквенные строки ==\nX\nY\nZ\nAA\nAB\nAC\n== Буквенно-цифровые строки ==\nA9\nB0\nB1\nB2\nB3\nB4\nA09\nA10\nA11\nA12\nA13\nA14\n```\n\n**Увага**\n\nЯкщо літерно-цифровий рядок може бути інтерпретований як [числовий рядок](language.types.numeric-strings.md)вона буде приведена до типу int або float. Ця проблема постає особливо гостро з рядками, які виглядають як числа з точкою, що плаває, записані в науковій нотації. Функція [str\\_increment()](function.str-increment.md) не страждає від цих неявних наведень типів.\n\n**Приклад #2 Літерно-цифровий рядок, перетворений на число з плаваючою точкою**\n\n```php\n<?php\n\n$s = \"5d9\";\nvar_dump(++$s);\nvar_dump(++$s);\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(3) \"5e0\"\nfloat(6)\n```\n\nТак відбувається тому, що значення `«5e0»` було інтерпретовано як число з плаваючою точкою (float) та наведено до значення `5.0` перед початком збільшення.\n","title":"Оператори інкременту та декременту","contentType":2,"navigation":[{"language.operators.arithmetic.md":"« Арифметика"},{"language.operators.assignment.md":"Привласнення »"},{"index.md":"PHP Manual"},{"language.operators.md":"Оператори"}]}},"__N_SSG":true}