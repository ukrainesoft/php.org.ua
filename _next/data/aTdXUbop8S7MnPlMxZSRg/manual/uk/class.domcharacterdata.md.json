{"pageProps":{"page":{"slug":"class.domcharacterdata.md","content":"# Клас DOMCharacterData\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nПредставляє вузли із символьними даними. Жодні вузли не відповідають безпосередньо цьому класу, але інші вузли успадковують його.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class DOMCharacterData\n    \n\n    \n     extends\n      DOMNode\n    \n\n    \n     implements\n      DOMChildNode {\n\n    /* Свойства */\n    \n     public\n     string\n      $data;\n\n    public\n     readonly\n     int\n      $length;\n\n    public\n     readonly\n     ?DOMElement\n      $previousElementSibling;\n\n    public\n     readonly\n     ?DOMElement\n      $nextElementSibling;\n\n\n    /* Наследуемые свойства */\n    public\n     readonly\n     string\n      $nodeName;\npublic\n     ?string\n      $nodeValue;\npublic\n     readonly\n     int\n      $nodeType;\npublic\n     readonly\n     ?DOMNode\n      $parentNode;\npublic\n     readonly\n     ?DOMElement\n      $parentElement;\npublic\n     readonly\n     DOMNodeList\n      $childNodes;\npublic\n     readonly\n     ?DOMNode\n      $firstChild;\npublic\n     readonly\n     ?DOMNode\n      $lastChild;\npublic\n     readonly\n     ?DOMNode\n      $previousSibling;\npublic\n     readonly\n     ?DOMNode\n      $nextSibling;\npublic\n     readonly\n     ?DOMNamedNodeMap\n      $attributes;\npublic\n     readonly\n     bool\n      $isConnected;\npublic\n     readonly\n     ?DOMDocument\n      $ownerDocument;\npublic\n     readonly\n     ?string\n      $namespaceURI;\npublic\n     string\n      $prefix;\npublic\n     readonly\n     ?string\n      $localName;\npublic\n     readonly\n     ?string\n      $baseURI;\npublic\n     string\n      $textContent;\n\n\n    /* Методы */\n    \n   public after(DOMNode|string ...$nodes): void\npublic appendData(string $data): true\npublic before(DOMNode|string ...$nodes): void\npublic deleteData(int $offset, int $count): bool\npublic insertData(int $offset, string $data): bool\npublic remove(): void\npublic replaceData(int $offset, int $count, string $data): bool\npublic replaceWith(DOMNode|string ...$nodes): void\npublic substringData(int $offset, int $count): string|false\n\n\n    /* Наследуемые методы */\n    public DOMNode::appendChild(DOMNode $node): DOMNode|false\npublic DOMNode::C14N(    bool $exclusive = false,    bool $withComments = false,    ?array $xpath = null,    ?array $nsPrefixes = null): string|false\npublic DOMNode::C14NFile(    string $uri,    bool $exclusive = false,    bool $withComments = false,    ?array $xpath = null,    ?array $nsPrefixes = null): int|false\npublic DOMNode::cloneNode(bool $deep = false): DOMNode|false\npublic DOMNode::contains(DOMNode|DOMNameSpaceNode|null $other): bool\npublic DOMNode::getLineNo(): int\npublic DOMNode::getNodePath(): ?string\npublic DOMNode::getRootNode(array $options = null): DOMNode\npublic DOMNode::hasAttributes(): bool\npublic DOMNode::hasChildNodes(): bool\npublic DOMNode::insertBefore(DOMNode $node, ?DOMNode $child = null): DOMNode|false\npublic DOMNode::isDefaultNamespace(string $namespace): bool\npublic DOMNode::isEqualNode(?DOMNode $otherNode): bool\npublic DOMNode::isSameNode(DOMNode $otherNode): bool\npublic DOMNode::isSupported(string $feature, string $version): bool\npublic DOMNode::lookupNamespaceURI(?string $prefix): ?string\npublic DOMNode::lookupPrefix(string $namespace): ?string\npublic DOMNode::normalize(): void\npublic DOMNode::removeChild(DOMNode $child): DOMNode|false\npublic DOMNode::replaceChild(DOMNode $node, DOMNode $child): DOMNode|false\n\n   }\n```\n\n## Властивості\n\ndata\n\nВміст вузла.\n\nlength\n\nДовжина вмісту.\n\nnextElementSibling\n\nЕлемент безпосередньо наступний за даним елементом або **`null`**\n\npreviousElementSibling\n\nЕлемент попередній елементу або **`null`**\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Додані властивості nextElementSibling і previousElementSibling. |\n| 8.0.0 | Класс**DOMCharacterData** тепер реалізує інтерфейс [DOMChildNode](class.domchildnode.md) |\n\n## Дивіться також\n\n-   [» Специфікація W3C символьних даних](http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.md#core-ID-FF21A306)\n\n## Зміст\n\n-   [DOMCharacterData::after](domcharacterdata.after.md)— Додає вузли після символьних даних\n-   [DOMCharacterData::appendData](domcharacterdata.appenddata.md)— Додати рядок до кінця символьних даних вузла\n-   [DOMCharacterData::before](domcharacterdata.before.md) \\- Додає вузли перед вузлом\n-   [DOMCharacterData::deleteData](domcharacterdata.deletedata.md)— Видалити діапазон символів із вузла\n-   [DOMCharacterData::insertData](domcharacterdata.insertdata.md)— Вставити рядок у вказану 16-бітну позицію\n-   [DOMCharacterData::remove](domcharacterdata.remove.md)— Видаляє символьні дані\n-   [DOMCharacterData::replaceData](domcharacterdata.replacedata.md)— Замінити підрядок у вузлі типу DOMCharacterData\n-   [DOMCharacterData::replaceWith](domcharacterdata.replacewith.md)— Замінює символьні дані новими вузлами\n-   [DOMCharacterData::substringData](domcharacterdata.substringdata.md)— Витягує певний діапазон даних із вузла\n","title":"Клас DOMCharacterData","contentType":2,"navigation":[{"domcdatasection.construct.md":"« DOMCdataSection::\\_\\_construct"},{"domcharacterdata.after.md":"DOMCharacterData::after »"},{"index.md":"PHP Manual"},{"book.dom.md":"DOM"}]}},"__N_SSG":true}