{"pageProps":{"page":{"slug":"reflectionmethod.setaccessible.md","content":"# ReflectionMethod::setAccessible\n\n(PHP 5 >= 5.3.2, PHP 7, PHP 8)\n\nReflectionMethod::setAccessible — Робить метод доступним\n\n### Опис\n\n```methodsynopsis\npublic ReflectionMethod::setAccessible(bool $accessible): void\n```\n\nЗабезпечує доступ до захищеної або закритої властивості за допомогою методу [ReflectionMethod::invoke()](reflectionmethod.invoke.md)\n\n> **Зауваження**: Починаючи з PHP 8.1.0, виклик методу не має сенсу; всі методи викликаються за умовчанням.\n\n### Список параметрів\n\n`accessible`\n\n**`true`**, щоб зробити метод доступним, або **`false`**\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Визначення простого класу**\n\n```php\n<?php\nclass MyClass\n{\n    private function foo()\n    {\n        return 'bar';\n    }\n}\n\n$method = new ReflectionMethod(\"MyClass\", \"foo\");\n$method->setAccessible(true);\n\n$obj = new MyClass();\necho $method->invoke($obj);\necho $obj->foo();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nbar\nFatal error: Uncaught Error: Call to private method MyClass::foo() from global scope in /in/qdaZS:16\n```\n\n### Дивіться також\n\n-   [ReflectionMethod::isPrivate()](reflectionmethod.isprivate.md) \\- Перевіряє, чи є метод закритим\n-   [ReflectionMethod::isProtected()](reflectionmethod.isprotected.md) \\- Перевіряє, чи є метод захищеним\n","title":"ReflectionMethod::setAccessible","contentType":2,"navigation":[{"reflectionmethod.ispublic.md":"« ReflectionMethod::isPublic"},{"reflectionmethod.tostring.md":"ReflectionMethod::\\_\\_toString »"},{"index.md":"PHP Manual"},{"class.reflectionmethod.md":"ReflectionMethod"}]}},"__N_SSG":true}