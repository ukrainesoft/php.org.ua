{"pageProps":{"page":{"slug":"pdo.sqlitecreatefunction.md","content":"# PDO::sqliteCreateFunction\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8, PECL pdo\\_sqlite >= 1.0.0)\n\nPDO::sqliteCreateFunction — Реєстрація функції користувача для використання в SQL-запитах\n\n### Опис\n\n```methodsynopsis\npublic PDO::sqliteCreateFunction(    string $function_name,    callable $callback,    int $num_args = -1,    int $flags = 0): bool\n```\n\n**Увага**\n\nЦя функція є *ЕКСПЕРИМЕНТАЛЬНОЇ*. Поведінка цієї функції, її ім'я та документація, що до неї належить, можуть змінитися в наступних версіях PHP без повідомлення. Використовуйте цю функцію на свій страх та ризик.\n\nЦей метод дозволяє вам реєструвати функцію PHP як функцію користувача SQLite (User Defined Function, UDF), що дозволить використовувати її в SQL-запитах.\n\nUDF можна використовувати в будь-якому SQL-запиті, в якому дозволяється використовувати функції, наприклад, SELECT, UPDATE, а також у тригерах.\n\n### Список параметрів\n\n`function_name`\n\nІм'я функції для використання у запитах.\n\n`callback`\n\nФункція зворотного дзвінка для обробки дзвінків SQL-функції.\n\n> **Зауваження**: Функція зворотного виклику повинна повертати значення зрозумілого типу SQLite (тобто [скалярного типу](language.types.intro.md)\n\nЦя функція має бути визначена так:\n\n```methodsynopsis\ncallback(mixed $value, mixed ...$values): mixed\n```\n\n`value`\n\nПерший аргумент, що передається в SQL-функцію.\n\n`values`\n\nПодальші аргументи.\n\n`num_args`\n\nКількість аргументів, які приймає функція. Якщо поставити рівним `-1`, то функція буде приймати будь-яку кількість аргументів.\n\n`flags`\n\nПобітова кон'юнкція (АБО) прапорів. На даний момент підтримується лише прапор \\*\\*`PDO::SQLITE_DETERMINISTIC`\\*\\*що визначає те, що функція завжди повертає однаковий результат для однакових вхідних значень.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.1.4 | Добавлен параметр`flags` |\n\n### Приклади\n\n**Приклад #1 Приклад використання** PDO::sqliteCreateFunction()\\*\\*\\*\\*\n\n```php\n<?php\nfunction md5_and_reverse($string)\n{\n    return strrev(md5($string));\n}\n\n$db = new PDO('sqlite:sqlitedb');\n$db->sqliteCreateFunction('md5rev', 'md5_and_reverse', 1);\n$rows = $db->query('SELECT md5rev(filename) FROM files')->fetchAll();\n?>\n```\n\nУ цьому прикладі ми визначили функцію, що обчислює md5 суму рядка і перевертає її. Коли SQL-запит буде запущений, отримані значення filename будуть перетворені цією функцією. Результуючий набір `$rows` міститиме перетворені значення.\n\nКраса такого підходу полягає в тому, що вам не потрібно після отримання результуючого набору пробігатися по ньому циклом. [foreach](control-structures.foreach.md) для обчислення необхідних значень.\n\n**Підказка**\n\nВи можете використовувати [PDO::sqliteCreateFunction](pdo.sqlitecreatefunction.md) і [PDO::sqliteCreateAggregate](pdo.sqlitecreateaggregate.md) для перевизначення стандартних функцій SQLite, що агрегують.\n\n### Дивіться також\n\n-   [PDO::sqliteCreateAggregate](pdo.sqlitecreateaggregate.md)\n-   **sqlite\\_create\\_function()**\n-   **sqlite\\_create\\_aggregate()**\n","title":"PDO::sqliteCreateFunction","contentType":2,"navigation":[{"pdo.sqlitecreatecollation.md":"« PDO::sqliteCreateCollation"},{"refs.database.vendors.md":"Модулі для роботи з базами даних окремих виробників"},{"index.md":"PHP Manual"},{"ref.pdo-sqlite.md":"SQLite (PDO)"}]}},"__N_SSG":true}