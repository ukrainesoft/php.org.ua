{"pageProps":{"page":{"slug":"function.stream-socket-client.md","content":"# stream\\_socket\\_client\n\n(PHP 5, PHP 7, PHP 8)\n\nstream\\_socket\\_client — Відкрити з'єднання з інтернет-сокетом або доменним сокетом Unix\n\n### Опис\n\n```methodsynopsis\nstream_socket_client(    string $address,    int &$error_code = null,    string &$error_message = null,    ?float $timeout = null,    int $flags = STREAM_CLIENT_CONNECT,    ?resource $context = null): resource|false\n```\n\nПочинає з'єднання потоку або датаграми з віддаленим сокетом, зазначеним параметром `address`. Тип сокету, що створюється, визначається по транспорту, вказаному з використанням стандартного форматування URL: `transport://target`. Для інтернет-сокетів, (AF\\_INET) таких, як TCP та UDP, частина `target`параметра`address` повинна складатися з імені хоста або IP-адреси, за яким слідує двокрапка та номер порту. Для доменних сокетів Unix, частина `target` має вказувати на файл сокета у файловій системі.\n\n> **Зауваження** :\n> \n> За замовчуванням потік буде відкритий у режимі блокування. Ви можете переключити його в режим неблокування, використовуючи функцію [stream\\_set\\_blocking()](function.stream-set-blocking.md)\n\n### Список параметрів\n\n`address`\n\nАдреса віддаленого сокету для з'єднання.\n\n`error_code`\n\nБуде надано номер системної помилки, якщо з'єднання не вдалося встановити.\n\n`error_message`\n\nБуде надіслано повідомлення про системну помилку, якщо з'єднання не вдалося встановити.\n\n`timeout`\n\nЧисло секунд, протягом яких має відбутися час очікування системного виклику `connect()`По умолчанию используется значение[default\\_socket\\_timeout](filesystem.configuration.md#ini.default-socket-timeout)\n\n> **Зауваження**: Цей параметр застосовується, лише якщо спроба асинхронного з'єднання не відбувається.\n\n> **Зауваження** :\n> \n> Щоб вказати час очікування для читання/запису даних через сокет, скористайтеся функцією [stream\\_set\\_timeout()](function.stream-set-timeout.md), так как параметр`timeout` застосовується лише під час створення з'єднання через сокет.\n\n`flags`\n\nПоле бітової маски, яке може набувати значення будь-якої комбінації прапорів з'єднання. В даний час набір з'єднань прапорів обмежений такими значеннями **`STREAM_CLIENT_CONNECT`**(по умолчанию),**`STREAM_CLIENT_ASYNC_CONNECT`** і **`STREAM_CLIENT_PERSISTENT`**\n\n`context`\n\nДіючий ресурс контексту, створений за допомогою функції [stream\\_context\\_create()](function.stream-context-create.md)\n\n### Значення, що повертаються\n\nУ разі успішного виконання повертається ресурс потоку, який може бути використаний з іншими файловими функціями (такими як [fgets()](function.fgets.md) [fgetss()](function.fgetss.md) [fwrite()](function.fwrite.md) [fclose()](function.fclose.md), и[feof()](function.feof.md)), у разі виникнення помилки повертається **`false`**\n\n### Помилки\n\nУ разі невдалого виклику функції аргументи `error_code`и`error_message` будуть заповнені системною помилкою, яка сталася під час системного виклику `connect()`. Якщо значення, повернене в аргументі `error_code` одно и функция возвратила значение\\*\\*`false`\\*\\*Це означає, що помилка сталася до виклику `connect()`. Це сталося, швидше за все, через проблему ініціалізації сокету. Візьміть до уваги, що аргументи `error_code`и`error_message` завжди передаватимуться за посиланням.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `timeout`и`context` тепер допускають значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** stream\\_socket\\_client()\\*\\*\\*\\*\n\n```php\n<?php\n$fp = stream_socket_client(\"tcp://www.example.com:80\", $errno, $errstr, 30);\nif (!$fp) {\n    echo \"$errstr ($errno)<br />\\n\";\n} else {\n    fwrite($fp, \"GET / HTTP/1.0\\r\\nHost: www.example.com\\r\\nAccept: */*\\r\\n\\r\\n\");\n    while (!feof($fp)) {\n        echo fgets($fp, 1024);\n    }\n    fclose($fp);\n}\n?>\n```\n\n**Приклад #2 Використання UDP-з'єднання**\n\nОтримання дня та часу від UDP-сервісу \"daytime\" (порт 13) на localhost.\n\n```php\n<?php\n$fp = stream_socket_client(\"udp://127.0.0.1:13\", $errno, $errstr);\nif (!$fp) {\n    echo \"ОШИБКА: $errno - $errstr<br />\\n\";\n} else {\n    fwrite($fp, \"\\n\");\n    echo fread($fp, 26);\n    fclose($fp);\n}\n?>\n```\n\n### Примітки\n\n**Увага**\n\nUDP-сокети іноді можуть відкриватися без помилки, навіть якщо віддалений хост недоступний. Помилка стане помітною тільки коли ви читатимете або писатимете дані з/в сокет. Причина цього в тому, що UDP - це протокол без з'єднання, що означає, що операційна система не намагається встановити з'єднання з сокетом, поки їй насправді не потрібно відправити або отримати дані.\n\n> **Зауваження**: Якщо вказати числову адресу IPv6 (наприклад, `fe80::1`) Ви повинні укладати його в квадратні дужки. Наприклад, `tcp://[fe80::1]:80`\n\n> **Зауваження** :\n> \n> Залежно від оточення, Unix-домени або довільний час очікування з'єднання можуть бути недоступними. Список доступних транспортів може бути отриманий за допомогою функції [stream\\_get\\_transports()](function.stream-get-transports.md). Дивіться список вбудованих транспортів на сторінці [Список підтримуваних транспортних протоколів](transports.md)\n\n### Дивіться також\n\n-   [stream\\_socket\\_server()](function.stream-socket-server.md) \\- Створює інтернет-сокет або доменний сокет Unix\n-   [stream\\_set\\_blocking()](function.stream-set-blocking.md) \\- Встановити блокуючий/неблокуючий режим у потоці\n-   [stream\\_set\\_timeout()](function.stream-set-timeout.md) \\- Встановити значення часу очікування потоку\n-   [stream\\_select()](function.stream-select.md) \\- Запускає еквівалент системного виклику select() на заданих масивах потоків з часом очікування, вказаним параметрами seconds та microseconds\n-   [fgets()](function.fgets.md) \\- Читає рядок із файлу\n-   [fgetss()](function.fgetss.md) \\- Читає рядок з файлу та видаляє HTML-теги\n-   [fwrite()](function.fwrite.md) \\- Бінарно-безпечний запис у файл\n-   [fclose()](function.fclose.md) \\- Закриває відкритий дескриптор файлу\n-   [feof()](function.feof.md) \\- Перевіряє, чи кінець файлу досягнуто\n-   [Опції cURL](ref.curl.md)\n","title":"stream\\_socket\\_client","contentType":2,"navigation":[{"function.stream-socket-accept.md":"« stream\\_socket\\_accept"},{"function.stream-socket-enable-crypto.md":"stream\\_socket\\_enable\\_crypto »"},{"index.md":"PHP Manual"},{"ref.stream.md":"Функції для роботи з потоками"}]}},"__N_SSG":true}