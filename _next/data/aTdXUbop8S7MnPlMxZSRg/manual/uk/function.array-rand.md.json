{"pageProps":{"page":{"slug":"function.array-rand.md","content":"# array\\_rand\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\narray\\_rand - Вибирає один або кілька випадкових ключів з масиву\n\n### Опис\n\n```methodsynopsis\narray_rand(array $array, int $num = 1): int|string|array\n```\n\nВибирає одне чи кілька випадкових значень із масиву. Повертає ключ (або ключі) даних випадкових елементів.\n\n**Застереження**\n\nФункція не створює криптографічно захищені значення та *не повинна* використовуватися для криптографічних цілей або цілей, що вимагають, щоб значення, що повертаються, були недоступні для розгадування.\n\nЯкщо потрібна криптографічно безпечна випадкова послідовність, можна використати клас [Random\\\\Randomizer](class.random-randomizer.md) з двигуном [Random\\\\Engine\\\\Secure](class.random-engine-secure.md). Для простих сценаріїв є функції [random\\_int()](function.random-int.md) і [random\\_bytes()](function.random-bytes.md) із зручним API криптографічно безпечного генератора псевдовипадкових чисел (CSPRNG), що підтримується операційною системою.\n\n### Список параметрів\n\n`array`\n\nВхідний масив\n\n`num`\n\nВизначає кількість елементів, що вибираються.\n\n### Значення, що повертаються\n\nЯкщо ви вибираєте лише одне значення, функція **array\\_rand()** повертає ключ, який відповідає цьому значенню. У протилежному випадку вона повертає масив ключів, що відповідають випадковим значенням. Це зроблено для того, щоб дати можливість вибрати з масиву випадкові значення, так і випадкові ключі. Якщо повертається кілька ключів, вони будуть повернуті в порядку, в якому вони були присутні у вихідному масиві. Спроба вибрати більше елементів, ніж у масиві, згенерує помилку рівня **`E_WARNING`** та поверне NULL.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.1.0 | Внутрішній алгоритм отримання випадкових чисел [змінено](migration71.incompatible.md#migration71.incompatible.rand-srand-aliases) з функції rand бібліотеки libc на генератор на базі [» Вихор Мерсенна](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** array\\_rand()\\*\\*\\*\\*\n\n```php\n<?php\n$input = array(\"Neo\", \"Morpheus\", \"Trinity\", \"Cypher\", \"Tank\");\n$rand_keys = array_rand($input, 2);\necho $input[$rand_keys[0]] . \"\\n\";\necho $input[$rand_keys[1]] . \"\\n\";\n?>\n```\n\n### Дивіться також\n\n-   [Random\\\\Randomizer::pickArrayKeys()](random-randomizer.pickarraykeys.md) \\- Вибирає випадкові ключі масиву\n-   [Random\\\\Randomizer::shuffleArray()](random-randomizer.shufflearray.md) \\- Отримує перестановку масиву\n","title":"array\\_rand","contentType":2,"navigation":[{"function.array-push.md":"« array\\_push"},{"function.array-reduce.md":"array\\_reduce »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}