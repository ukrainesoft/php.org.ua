{"pageProps":{"page":{"slug":"appenditerator.construct.md","content":"# AppendIterator::\\_\\_construct\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\nAppendIterator::\\_\\_construct — Створює AppendIterator\n\n### Опис\n\npublic **AppendIterator::\\_\\_construct**()\n\nСтворює AppendIterator.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Приклади\n\n**Приклад #1 Ітерація AppendIterator за допомогою foreach**\n\n```php\n<?php\n$pizzas   = new ArrayIterator(array('Margarita', 'Siciliana', 'Hawaii'));\n$toppings = new ArrayIterator(array('Cheese', 'Anchovies', 'Olives', 'Pineapple', 'Ham'));\n\n$appendIterator = new AppendIterator;\n$appendIterator->append($pizzas);\n$appendIterator->append($toppings);\n\nforeach ($appendIterator as $key => $item) {\n    echo $key . ' => ' . $item . PHP_EOL;\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n0 => Margarita\n1 => Siciliana\n2 => Hawaii\n0 => Cheese\n1 => Anchovies\n2 => Olives\n3 => Pineapple\n4 => Ham\n```\n\n**Приклад #2 Ітерація AppendIterator за допомогою AppendIterator API**\n\n```php\n<?php\n$pizzas   = new ArrayIterator(array('Margarita', 'Siciliana', 'Hawaii'));\n$toppings = new ArrayIterator(array('Cheese', 'Anchovies', 'Olives', 'Pineapple', 'Ham'));\n\n$appendIterator = new AppendIterator;\n$appendIterator->append($pizzas);\n$appendIterator->append($toppings);\n\nwhile ($appendIterator->valid()) {\n    printf(\n        '%s => %s => %s%s',\n        $appendIterator->getIteratorIndex(),\n        $appendIterator->key(),\n        $appendIterator->current(),\n        PHP_EOL\n    );\n    $appendIterator->next();\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n0 => 0 => Margarita\n0 => 1 => Siciliana\n0 => 2 => Hawaii\n1 => 0 => Cheese\n1 => 1 => Anchovies\n1 => 2 => Olives\n1 => 3 => Pineapple\n1 => 4 => Ham\n```\n\n### Примітки\n\n**Застереження**\n\nПри использовании функции[iterator\\_to\\_array()](function.iterator-to-array.md) Для копіювання значення AppendIterator в масив вам необхідно встановити додатковий аргумент `use_key`в значение\\*\\*`false`**Когда`use_key`не принимает значение**`false`\\*\\*, якісь ключі, що повторно зустрічаються у внутрішніх ітераторах, будуть перезаписані в масив, що повертається. Зберегти оригінальні ключі неможливо.\n\n### Дивіться також\n\n-   [AppendIterator::append()](appenditerator.append.md) \\- додає ітератор\n","title":"AppendIterator::\\_\\_construct","contentType":2,"navigation":[{"appenditerator.append.md":"« AppendIterator::append"},{"appenditerator.current.md":"AppendIterator::current »"},{"index.md":"PHP Manual"},{"class.appenditerator.md":"AppendIterator"}]}},"__N_SSG":true}