{"pageProps":{"page":{"slug":"class.thread.md","content":"# Клас Thread\n\n(PECL pthreads >= 2.0.0)\n\n## Вступ\n\nКоли викликаний стартовий метод Thread, код методу run буде запущений окремому потоці, паралельно.\n\nПісля відпрацювання методу run, Thread відразу завершить роботу. Він буде приєднаний шляхом створення Thread у потрібний час.\n\n**Увага**\n\nЯкщо покладатися на двигун визначення, коли Thread буде приєднаний, можна зіткнутися з несподіваним поведінкою. Тому необхідно, по можливості, керувати приєднанням у явному вигляді.\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class Thread\n     \n\n     \n      extends\n       Threaded\n     \n\n     implements \n       Countable,  Traversable,  ArrayAccess {\n    \n\n    /* Методы */\n    \n   public getCreatorId(): int\npublic static getCurrentThread(): Thread\npublic static getCurrentThreadId(): int\npublic getThreadId(): int\npublic isJoined(): bool\npublic isStarted(): bool\npublic join(): bool\npublic start(int $options = ?): bool\n\n\n    /* Наследуемые методы */\n    public Threaded::chunk(int $size, bool $preserve): array\npublic Threaded::count(): int\npublic Threaded::extend(string $class): bool\npublic Threaded::isRunning(): bool\npublic Threaded::isTerminated(): bool\npublic Threaded::merge(mixed $from, bool $overwrite = ?): bool\npublic Threaded::notify(): bool\npublic Threaded::notifyOne(): bool\npublic Threaded::pop(): bool\npublic Threaded::run(): void\npublic Threaded::shift(): mixed\npublic Threaded::synchronized(Closure $block, mixed ...$args): mixed\npublic Threaded::wait(int $timeout = ?): bool\n\n\n   }\n```\n\n## Зміст\n\n-   [Thread::getCreatorId](thread.getcreatorid.md) \\- Ідентифікація\n-   [Thread::getCurrentThread](thread.getcurrentthread.md) \\- Ідентифікація\n-   [Thread::getCurrentThreadId](thread.getcurrentthreadid.md) \\- Ідентифікація\n-   [Thread::getThreadId](thread.getthreadid.md) \\- Ідентифікація\n-   [Thread::isJoined](thread.isjoined.md)— Визначення стану\n-   [Thread::isStarted](thread.isstarted.md)— Визначення стану\n-   [Thread::join](thread.join.md) \\- Синхронізація\n-   [Thread::start](thread.start.md) \\- Виконання\n","title":"Клас Thread","contentType":2,"navigation":[{"threaded.wait.md":"« Threaded::wait"},{"thread.getcreatorid.md":"Thread::getCreatorId »"},{"index.md":"PHP Manual"},{"book.pthreads.md":"pthreads"}]}},"__N_SSG":true}