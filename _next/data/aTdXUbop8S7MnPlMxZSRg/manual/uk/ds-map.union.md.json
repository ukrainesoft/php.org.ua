{"pageProps":{"page":{"slug":"ds-map.union.md","content":"# Ds\\\\Map::union\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Map::union — Створює нову колекцію пар із елементів двох колекцій\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Map::union(Ds\\Map $map): Ds\\Map\n```\n\nСтворює нову колекцію пар, що містить пари поточної та переданої в `map` колекцій.\n\n`A ∪ B = {x: x ∈ A ∨ x ∈ B}`\n\n> **Зауваження** :\n> \n> У разі збігу ключів значення елементів будуть братися з переданої колекції.\n\n### Список параметрів\n\n`map`\n\nНова колекція для об'єднання з поточною.\n\n### Значення, що повертаються\n\nНова колекція пар, що є об'єднанням поточної та переданої в `map`\n\n### Дивіться також\n\n-   [» Об'єднання](https://en.wikipedia.org/wiki/Union_(set_theory))в Вікіпедія\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Map::union()\\*\\*\\*\\*\n\n```php\n<?php\n$a = new \\Ds\\Map([\"a\" => 1, \"b\" => 2, \"c\" => 3]);\n$b = new \\Ds\\Map([\"b\" => 3, \"c\" => 4, \"d\" => 5]);\n\nprint_r($a->union($b));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nDs\\Map Object\n(\n    [0] => Ds\\Pair Object\n        (\n            [key] => a\n            [value] => 1\n        )\n\n    [1] => Ds\\Pair Object\n        (\n            [key] => b\n            [value] => 3\n        )\n\n    [2] => Ds\\Pair Object\n        (\n            [key] => c\n            [value] => 4\n        )\n\n    [3] => Ds\\Pair Object\n        (\n            [key] => d\n            [value] => 5\n        )\n\n)\n```\n","title":"Ds\\\\Map::union","contentType":2,"navigation":[{"ds-map.toarray.md":"« Ds\\\\Map::toArray"},{"ds-map.values.md":"Ds\\\\Map::values »"},{"index.md":"PHP Manual"},{"class.ds-map.md":"Ds\\\\Map"}]}},"__N_SSG":true}