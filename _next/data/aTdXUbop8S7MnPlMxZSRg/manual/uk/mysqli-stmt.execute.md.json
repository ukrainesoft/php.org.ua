{"pageProps":{"page":{"slug":"mysqli-stmt.execute.md","content":"# mysqli\\_stmt::execute\n\n# mysqli\\_stmt\\_execute\n\n(PHP 5, PHP 7, PHP 8)\n\nmysqli\\_stmt::execute -- mysqli\\_stmt\\_execute — Виконує підготовлене затвердження\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic mysqli_stmt::execute(?array $params = null): bool\n```\n\nПроцедурний стиль\n\n```methodsynopsis\nmysqli_stmt_execute(mysqli_stmt $statement, ?array $params = null): bool\n```\n\nВиконує заздалегідь підготовлене твердження. Твердження має бути успішно підготовлене перед виконанням з використанням функції [mysqli\\_prepare()](mysqli.prepare.md) або [mysqli\\_stmt\\_prepare()](mysqli-stmt.prepare.md), або шляхом передачі другого аргументу в [mysqli\\_stmt::\\_\\_construct()](mysqli-stmt.construct.md)\n\nЯкщо виконуються запити `UPDATE` `DELETE`, или`INSERT`, то кількість змінених рядків можна визначити функцією [mysqli\\_stmt\\_affected\\_rows()](mysqli-stmt.affected-rows.md). Якщо запит повертає набір результатів, його можна отримати за допомогою функції [mysqli\\_stmt\\_get\\_result()](mysqli-stmt.get-result.md) або шляхом отримання построчно безпосередньо з оператора за допомогою функції [mysqli\\_stmt\\_fetch()](mysqli-stmt.fetch.md)\n\n### Список параметрів\n\n`stmt`\n\nТільки для процедурного стилю: об'єкт [mysqli\\_stmt](class.mysqli-stmt.md), який повернула функція [mysqli\\_stmt\\_init()](mysqli.stmt-init.md)\n\n`params`\n\nНеобов'язковий масив елементів (array) з кількістю елементів дорівнює кількості пов'язаних параметрів у SQL-запиті. Кожне значення сприймається як рядок (string).\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nЯкщо сповіщення про помилки mysqli включено (**`MYSQLI_REPORT_ERROR`**) та запитана операція не вдалася, видається попередження. Якщо, крім того, встановлено режим **`MYSQLI_REPORT_STRICT`**, натомість буде викинуто виняток [mysqli\\_sql\\_exception](class.mysqli-sql-exception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Додано необов'язковий параметр `params` |\n\n### Приклади\n\n**Приклад #1 Виконання підготовленого оператора із прив'язкою змінних**\n\nОб'єктно-орієнтований стиль\n\n```php\n<?php\n\nmysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n$mysqli = new mysqli(\"localhost\", \"my_user\", \"my_password\", \"world\");\n\n$mysqli->query(\"CREATE TEMPORARY TABLE myCity LIKE City\");\n\n/* Подготавливаем утверждение на вставку строк */\n$stmt = $mysqli->prepare(\"INSERT INTO myCity (Name, CountryCode, District) VALUES (?,?,?)\");\n\n/* Связываем переменные с метками */\n$stmt->bind_param(\"sss\", $val1, $val2, $val3);\n\n$val1 = 'Stuttgart';\n$val2 = 'DEU';\n$val3 = 'Baden-Wuerttemberg';\n\n/* Выполняем утверждение */\n$stmt->execute();\n\n$val1 = 'Bordeaux';\n$val2 = 'FRA';\n$val3 = 'Aquitaine';\n\n/* Выполняем утверждение */\n$stmt->execute();\n\n/* Получаем все строки из myCity */\n$query = \"SELECT Name, CountryCode, District FROM myCity\";\n$result = $mysqli->query($query);\nwhile ($row = $result->fetch_row()) {\n    printf(\"%s (%s,%s)\\n\", $row[0], $row[1], $row[2]);\n}\n```\n\nПроцедурний стиль\n\n```php\n<?php\n\nmysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n$link = mysqli_connect(\"localhost\", \"my_user\", \"my_password\", \"world\");\n\nmysqli_query($link, \"CREATE TEMPORARY TABLE myCity LIKE City\");\n\n/* Подготавливаем утверждение на вставку строк */\n$stmt = mysqli_prepare($link, \"INSERT INTO myCity (Name, CountryCode, District) VALUES (?,?,?)\");\n\n/* Связываем переменные с метками */\nmysqli_stmt_bind_param($stmt, \"sss\", $val1, $val2, $val3);\n\n$val1 = 'Stuttgart';\n$val2 = 'DEU';\n$val3 = 'Baden-Wuerttemberg';\n\n/* Выполняем утверждение */\nmysqli_stmt_execute($stmt);\n\n$val1 = 'Bordeaux';\n$val2 = 'FRA';\n$val3 = 'Aquitaine';\n\n/* Выполняем утверждение */\nmysqli_stmt_execute($stmt);\n\n/* Получаем все строки из myCity */\n$query = \"SELECT Name, CountryCode, District FROM myCity\";\n$result = mysqli_query($link, $query);\nwhile ($row = mysqli_fetch_row($result)) {\n    printf(\"%s (%s,%s)\\n\", $row[0], $row[1], $row[2]);\n}\n```\n\nРезультат виконання наведених прикладів:\n\n```\nStuttgart (DEU,Baden-Wuerttemberg)\nBordeaux (FRA,Aquitaine)\n```\n\n**Приклад #2 Виконання підготовленого оператора з масивом значень**\n\nОб'єктно-орієнтований стиль\n\n```php\n<?php\n\nmysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'world');\n\n$mysqli->query('CREATE TEMPORARY TABLE myCity LIKE City');\n\n/* Подготавливаем утверждение на вставку строк */\n$stmt = $mysqli->prepare('INSERT INTO myCity (Name, CountryCode, District) VALUES (?,?,?)');\n\n/* Выполняем утверждение */\n$stmt->execute(['Stuttgart', 'DEU', 'Baden-Wuerttemberg']);\n\n/* Получаем все строки из myCity */\n$query = 'SELECT Name, CountryCode, District FROM myCity';\n$result = $mysqli->query($query);\nwhile ($row = $result->fetch_row()) {\n    printf(\"%s (%s,%s)\\n\", $row[0], $row[1], $row[2]);\n}\n```\n\nПроцедурний стиль\n\n```php\n<?php\n\nmysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n$link = mysqli_connect('localhost', 'my_user', 'my_password', 'world');\n\nmysqli_query($link, 'CREATE TEMPORARY TABLE myCity LIKE City');\n\n/* Подготавливаем утверждение на вставку строк */\n$stmt = mysqli_prepare($link, 'INSERT INTO myCity (Name, CountryCode, District) VALUES (?,?,?)');\n\n/* Выполняем утверждение */\nmysqli_stmt_execute($stmt, ['Stuttgart', 'DEU', 'Baden-Wuerttemberg']);\n\n/* Получаем все строки из myCity */\n$query = 'SELECT Name, CountryCode, District FROM myCity';\n$result = mysqli_query($link, $query);\nwhile ($row = mysqli_fetch_row($result)) {\n    printf(\"%s (%s,%s)\\n\", $row[0], $row[1], $row[2]);\n}\n```\n\nРезультат виконання наведених прикладів:\n\n```\nStuttgart (DEU,Baden-Wuerttemberg)\n```\n\n### Дивіться також\n\n-   [mysqli\\_execute\\_query()](mysqli.execute-query.md) \\- готує, зв'язує параметри та виконує SQL-запит\n-   [mysqli\\_prepare()](mysqli.prepare.md) \\- готує SQL вираз до виконання\n-   [mysqli\\_stmt\\_bind\\_param()](mysqli-stmt.bind-param.md) \\- Прив'язка змінних до параметрів запиту, що готується.\n-   [mysqli\\_stmt\\_get\\_result()](mysqli-stmt.get-result.md) \\- Отримує результат із підготовленого запиту у вигляді об'єкта mysqli\\_result\n","title":"mysqli\\_stmt::execute","contentType":2,"navigation":[{"mysqli-stmt.error.md":"« mysqli\\_stmt::$error"},{"mysqli-stmt.fetch.md":"mysqli\\_stmt::fetch »"},{"index.md":"PHP Manual"},{"class.mysqli-stmt.md":"mysqli\\_stmt"}]}},"__N_SSG":true}