{"pageProps":{"page":{"slug":"intlchar.digit.md","content":"# IntlChar::digit\n\n(PHP 7, PHP 8)\n\nIntlChar::digit — Отримати десяткове число із символу Unicode із заданою основою\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::digit(int|string $codepoint, int $base = 10): int|false|null\n```\n\nПовертає десяткове число із символу Unicode із заданою основою.\n\nЕсли основание не входит в диапазон`2<=radix<=36` або якщо `codepoint` не є коректним символом для цієї основи, повертається **`false`**. Символ є коректною цифрою, якщо виконується хоча б одна з умов:\n\n-   Символ є десяткову цифру. Такі символи входять у глобальну категорію \"Nd\" (десяткові цифри) та Numeric\\_Type є Decimal. І тут повертається відповідна десяткова цифра.\n-   Символ є однією з великих латинських букв від 'A' до 'Z'. І тут 'A' - це 10.\n-   Символ є однією із малих латинських букв від 'a' до 'z'. І тут 'a' - це 10.\n-   Латинські літери з діапазону ASCII (0061..007A, 0041..005A). Також підходять діапазони Повного ASCII (FF41..FF5A, FF21..FF3A).\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n`base`\n\nОснование (по умолчанию`10`\n\n### Значення, що повертаються\n\nПовертає десяткове число із символу Unicode із заданою основою або **`false`**, якщо символ некоректний або виходить за рамки основи. У разі виникнення помилки повертає **`null`**\n\n**Увага**\n\nЦя функція може повертати як логічне значення \\*\\*`false`\\*\\*так і значення не типу boolean, яке наводиться до **`false`**. За більш детальною інформацією зверніться до розділу [Логічний тип](language.types.boolean.md)Используйте[оператор ===](language.operators.comparison.md) для перевірки значення, яке повертається цією функцією.\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::digit(\"0\"));\nvar_dump(IntlChar::digit(\"3\"));\nvar_dump(IntlChar::digit(\"A\"));\nvar_dump(IntlChar::digit(\"A\", 16));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(0)\nint(3)\nbool(false)\nint(10)\n```\n\n### Дивіться також\n\n-   [IntlChar::forDigit()](intlchar.fordigit.md) \\- Отримати символ, що представляє задане число в заданій основі\n-   [IntlChar::charDigitValue()](intlchar.chardigitvalue.md) \\- Отримати десяткову цифру із символу десяткової цифри\n-   [IntlChar::isdigit()](intlchar.isdigit.md) \\- Перевірити, чи є символ цифрою\n-   **`IntlChar::PROPERTY_NUMERIC_TYPE`**\n","title":"IntlChar::digit","contentType":2,"navigation":[{"intlchar.chr.md":"« IntlChar::chr"},{"intlchar.enumcharnames.md":"IntlChar::enumCharNames »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}