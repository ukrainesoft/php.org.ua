{"pageProps":{"page":{"slug":"function.mysql-insert-id.md","content":"# mysql\\_insert\\_id\n\n(PHP 4, PHP 5)\n\nmysql\\_insert\\_id - Повертає ідентифікатор, згенерований при останньому INSERT-запиті\n\n**Увага**\n\nЦей модуль застарів, починаючи з версії PHP 5.5.0, і видалений у PHP 7.0.0. Використовуйте замість нього [MySQLi](book.mysqli.md) або [PDO\\_MySQL](ref.pdo-mysql.md)Смотрите также инструкцию[MySQL: вибір API](mysqlinfo.api.choosing.md). Альтернативи для цієї функції:\n\n-   [mysqli\\_insert\\_id()](mysqli.insert-id.md)\n-   [PDO::lastInsertId()](pdo.lastinsertid.md)\n\n### Опис\n\n```methodsynopsis\nmysql_insert_id(resource $link_identifier = NULL): int\n```\n\nПовертає ідентифікатор, згенерований колонкою з AUTO\\_INCREMENT - останнім запитом (зазвичай INSERT).\n\n### Список параметрів\n\n`link_identifier`\n\nЗ'єднання MySQL. Якщо ідентифікатор з'єднання не вказано, буде використано останнє з'єднання, відкрите [mysql\\_connect()](function.mysql-connect.md). Якщо таке з'єднання не було знайдено, функція спробує створити таке, якби [mysql\\_connect()](function.mysql-connect.md) було викликано без параметрів. Якщо з'єднання не було знайдено та не змогло бути створено, генерується помилка рівня **`E_WARNING`**\n\n### Значення, що повертаються\n\nІдентифікатор, згенерований колонкою з AUTO\\_INCREMENT останнім запитом у разі успішного виконання, якщо останній запит не генерує значення AUTO\\_INCREMENT value, и\\*\\*`false`\\*\\*якщо з'єднання MySQL не було встановлено.\n\n### Приклади\n\n**Приклад #1 Приклад використання** mysql\\_insert\\_id()\\*\\*\\*\\*\n\n```php\n<?php\n$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');\nif (!$link) {\n    die('Ошибка соединения: ' . mysql_error());\n}\nmysql_select_db('mydb');\n\nmysql_query(\"INSERT INTO mytable (product) values ('kossu')\");\nprintf(\"Идентификатор последней вставленной записи %d\\n\", mysql_insert_id());\n?>\n```\n\n### Примітки\n\n**Застереження**\n\n**mysql\\_insert\\_id()** конвертує повертається функцією MySQL C API тип значення функції `mysql_insert_id()` у тип `long` (званий int у PHP). Якщо ваша колонка AUTO\\_INCREMENT має тип BIGINT (64 біта), то значення, яке повертається функцією в результаті перетворення може бути спотворене. Використовуйте замість цієї функції внутрішню MySQL-функцію LAST\\_INSERT\\_ID() у SQL-запиті. Детальніше про максимальні значення цілих чисел дивіться в [розділ документації, присвячений цілим числам](language.types.integer.md)\n\n> **Зауваження** :\n> \n> Так как**mysql\\_insert\\_id()** працює з останнім виконаним запитом, викликайте \\*\\*mysql\\_insert\\_id()\\*\\*сразу же после запроса, генерирующего новое значение.\n\n> **Зауваження** :\n> \n> Значение в SQL функции MySQL`LAST_INSERT_ID()` завжди містить останній згенерований ID і не обнулюється між запитами.\n\n### Дивіться також\n\n-   [mysql\\_query()](function.mysql-query.md) \\- Надсилає запит MySQL\n-   [mysql\\_info()](function.mysql-info.md) \\- Повертає інформацію про останній запит\n","title":"mysql\\_insert\\_id","contentType":2,"navigation":[{"function.mysql-info.md":"« mysql\\_info"},{"function.mysql-list-dbs.md":"mysql\\_list\\_dbs »"},{"index.md":"PHP Manual"},{"ref.mysql.md":"MySQL"}]}},"__N_SSG":true}