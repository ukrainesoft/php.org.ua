{"pageProps":{"page":{"slug":"sqlite3stmt.bindvalue.md","content":"# SQLite3Stmt::bindValue\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nSQLite3Stmt::bindValue — Зв'язує значення параметра зі змінною підготовленого запиту\n\n### Опис\n\n```methodsynopsis\npublic SQLite3Stmt::bindValue(string|int $param, mixed $value, int $type = SQLITE3_TEXT): bool\n```\n\nЗв'язує значення параметра зі змінною підготовленого запиту.\n\n**Застереження**\n\nДо PHP 7.2.14 та 7.3.0, якщо виконано запит, необхідно викликати метод [SQLite3Stmt::reset()](sqlite3stmt.reset.md) щоб можна було змінити значення пов'язаних параметрів.\n\n### Список параметрів\n\n`param`\n\nАбо рядок (string) (для іменованих параметрів), або ціле число (int) (для позитивних параметрів), що ідентифікує змінну підготовленого запиту, якого має бути прив'язане значення. Якщо іменований параметр не починається з двокрапки (( `:` )) або знаку `@`, автоматично додається двокрапка ( `:` ). Позитивні параметри починаються з першого.\n\n`value`\n\nЗначення прив'язки до змінної підготовленого запиту.\n\n`type`\n\nТип даних для прив'язки.\n\n-   **`SQLITE3_INTEGER`**: Значення є цілим числом зі знаком, яке зберігається в 1, 2, 3, 4, 6 або 8 байт, залежно від величини значення.\n    \n-   **`SQLITE3_FLOAT`**: Значення є числом з плаваючою точкою, яке зберігається у вигляді 8-байтного числа IEEE з плаваючою точкою.\n    \n-   **`SQLITE3_TEXT`**: Значення є текстовим рядком, який зберігається в кодуванні бази даних (UTF-8, UTF-16BE або UTF-16-LE).\n    \n-   **`SQLITE3_BLOB`**: Значення є великим двійковим об'єктом (blob) даних, який зберігається так само, як і вхідні дані.\n    \n-   **`SQLITE3_NULL`**: Значення є значенням NULL.\n    \n\nУ PHP 7.0.7, якщо `type` опущений, то він автоматично визначається з типу `param`: bool та int розглядаються як **`SQLITE3_INTEGER`**, float як **`SQLITE3_FLOAT`**, null як **`SQLITE3_NULL`** і всіх інших як **`SQLITE3_TEXT`**Раньше, если тип опущен, он по умолчанию использовался**`SQLITE3_TEXT`**\n\n> **Зауваження** :\n> \n> Якщо `param`равен\\*\\*`null`\\*\\*, він завжди обробляється як **`SQLITE3_NULL`**, независимо от заданного`type`\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо параметр прив'язаний до змінної підготовленого запиту або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.4.0 | Параметр`param` тепер підтримує нотацію `@param` |\n\n### Приклади\n\n**Приклад #1 Приклад використання** SQLite3Stmt::bindValue()\\*\\*\\*\\*\n\n```php\n<?php\n$db = new SQLite3(':memory:');\n\n$db->exec('CREATE TABLE foo (id INTEGER, bar STRING)');\n$db->exec(\"INSERT INTO foo (id, bar) VALUES (1, 'This is a test')\");\n\n$stmt = $db->prepare('SELECT bar FROM foo WHERE id=:id');\n$stmt->bindValue(':id', 1, SQLITE3_INTEGER);\n\n$result = $stmt->execute();\nvar_dump($result->fetchArray(SQLITE3_ASSOC));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(1) {\n  [\"bar\"]=>\n  string(14) \"This is a test\"\n}\n```\n\n### Дивіться також\n\n-   [SQLite3Stmt::bindParam()](sqlite3stmt.bindparam.md) \\- Зв'язує параметр із змінною підготовленого запиту\n-   [SQLite3::prepare()](sqlite3.prepare.md) \\- готує SQL-запит для виконання\n","title":"SQLite3Stmt::bindValue","contentType":2,"navigation":[{"sqlite3stmt.bindparam.md":"« SQLite3Stmt::bindParam"},{"sqlite3stmt.clear.md":"SQLite3Stmt::clear »"},{"index.md":"PHP Manual"},{"class.sqlite3stmt.md":"SQLite3Stmt"}]}},"__N_SSG":true}