{"pageProps":{"page":{"slug":"stomp.commit.md","content":"# Stomp::commit\n\n# stomp\\_commit\n\n(PECL stomp >= 0.1.0)\n\nStomp::commit -- stomp\\_commit — Виконує поточну транзакцію\n\n### Опис\n\nОб'єктно-орієнтований стиль (метод):\n\n```methodsynopsis\npublic Stomp::commit(string $transaction_id, array $headers = ?): bool\n```\n\nПроцедурний стиль:\n\n```methodsynopsis\nstomp_commit(resource $link, string $transaction_id, array $headers = ?): bool\n```\n\nВиконує поточну транзакцію.\n\n### Список параметрів\n\n`link`\n\nТільки для процедурного стилю: ідентифікатор з'єднання stomp, отриманий з [stomp\\_connect()](stomp.construct.md)\n\n`transaction_id`\n\nІдентифікатор транзакції.\n\n`headers`\n\nАсоціативний масив, який містить додаткові заголовки (приклад: receipt).\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Об'єктно-орієнтований стиль**\n\n```php\n<?php\n\n/* подключение */\ntry {\n    $stomp = new Stomp('tcp://localhost:61613');\n} catch(StompException $e) {\n    die('Ошибка соединения: ' . $e->getMessage());\n}\n\n/* Начало транзакции */\n$stomp->begin('t1');\n\n/* отправка сообщения в очередь */\n$stomp->send('/queue/foo', 'bar', array('transaction' => 't1'));\n\n/* выполнение транзакции */\n$stomp->commit('t1');\n\n/* закрытие подключения */\nunset($stomp);\n\n?>\n```\n\n**Приклад #2 Процедурний стиль**\n\n```php\n<?php\n\n/* подключение */\n$link = stomp_connect('tcp://localhost:61613');\n\n/* проверка подключения */\nif (!$link) {\n    die('Ошибка соединения: ' . stomp_connect_error());\n}\n\n/* Начало транзакции */\nstomp_begin($link, 't1');\n\n/* Отправка сообщения в очередь 'foo' */\nstomp_send($link, '/queue/foo', 'bar', array('transaction' => 't1'));\n\n/* Выполнение транзакции */\nstomp_commit($link, 't1');\n\n/* Закрытие изменения */\nstomp_close($link);\n\n?>\n```\n\n### Примітки\n\n**Підказка**\n\nStomp асинхронний за своєю суттю. Синхронний зв'язок може бути реалізований додаванням receipt-заголовка. Це змусить методи нічого не повертати, доки сервер не підтвердить отримання повідомлення або буде перевищено час очікування повідомлення.\n","title":"Stomp::commit","contentType":2,"navigation":[{"stomp.begin.md":"« Stomp::begin"},{"stomp.construct.md":"Stomp::\\_\\_construct »"},{"index.md":"PHP Manual"},{"class.stomp.md":"Stomp"}]}},"__N_SSG":true}