{"pageProps":{"page":{"slug":"function.print.md","content":"# print\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nprint — Виводить рядок\n\n### Опис\n\n```methodsynopsis\nprint(string $expression): int\n```\n\nВиводить вираз `expression`\n\n`print` - це не функція, а мовна конструкція. Її аргумент - це вираз після ключового слова `print`, не обмежена круглими дужками.\n\nОсновні відмінності від конструкції [echo](function.echo.md) полягають у тому, що конструкція `print` приймає лише один аргумент і завжди повертає\n\n### Список параметрів\n\n`expression`\n\nВираз для виведення. Нестрокові значення будуть перетворені на рядки, навіть якщо [включена директива`strict_types`](language.types.declarations.md#language.types.declarations.strict)\n\n### Значення, що повертаються\n\nЗавжди повертає\n\n### Приклади\n\n**Приклад #1 Приклад використання мовної конструкції `print`**\n\n```php\n<?php\n\nprint \"print не требует скобок.\";\n\n// Новая строка или пробел не добавляются; ниже выводит «приветмир» в одну строку\nprint \"привет\";\nprint \"мир\";\n\nprint \"Эта строка занимает\nнесколько строк. Новые строки\nтакже будут выведены\";\n\nprint \"Эта строка занимает\\nнесколько строк. Новые строки\\nтакже будут выведены\";\n\n// Аргументом может быть любое выражение, производящее строку\n$foo = \"Приклад\";\nprint \"foo — это $foo\"; // foo — это Приклад\n\n$fruits = [\"лимон\", \"апельсин\", \"банан\"];\nprint implode(\" и \", $fruits); // лимон и апельсин и банан\n\n// Нестроковые выражения приводятся к строковым, даже если установлено declare(strict_types=1)\nprint 6 * 7; // 42\n\n// Поскольку у конструкции print есть возвращаемое значение, её разрешено вызвать в выражениях\n// Следующие выходные данные «привет мир»\nif ( print \"привет\" ) {\n    echo \" мир\";\n}\n\n// следующее выражение выведет «true»\n( 1 === 1 ) ? print 'true' : print 'false';\n?>\n```\n\n### Примітки\n\n> **Зауваження** **Використання з круглими дужками**\n> \n> Заключение аргумента`print` у круглі дужки не викликає синтаксичної помилки та створить синтаксис, який виглядає як звичайний виклик функції. Однак це може ввести в оману, оскільки круглі дужки — частиною виразу, а не частина самого синтаксису. `print`\n> \n> ```php\n> <?php\n> \n> print \"привіт\";\n> // виведе «привіт»\n> \n> print(\"привіт\");\n> // також виведе \"привіт\", тому що (\"привіт\") - коректне вираження\n> \n> print(1 + 2) * 3;\n> // Виведе «9»; круглі дужки призводять до того, що спочатку обчислюється 1+2, а потім 3*3\n> // конструкція print бачить весь вираз як один аргумент\n> \n> if ( print(\"привіт\") && false ) {\n>     print \"- усередині if\";\n> }\n> else {\n>     print \"- всередині else\";\n> }\n> // виведе «- всередині if»\n> // спочатку обчислюється вираз («привіт») && false, даючи false\n> // це наводиться до порожнього рядка \" \" і виводиться\n> // конструкція print потім повертає 1 тому виконується код в блоці if\n> \n> ?>\n> ```\n> \n> При виклику `print` у більшому вираженні може знадобитися розміщення ключового слова та його аргументу в круглих дужках для отримання потрібного результату:\n> \n> ```php\n> <?php\n> \n> if ( (print \"привіт\") && false ) {\n>     print \"- усередині if\";\n> }\n> else {\n>     print \"- всередині else\";\n> }\n> // виведе «привіт - усередині else»\n> // на відміну попереднього прикладу, вираз (print \" привіт \" ) обчислюється першим\n> // після виведення «привіт» print повертає 1\n> // оскільки 1 && false - хибно, виконується код у блоці else\n> \n> print \"привіт\" && print \"світ\";\n> // виведе «Мір1»; print \"світ\" виконується в першу чергу,\n> // тоді вираз \"привіт\" && 1 передається в ліву частину print\n> \n> (print \"привіт\") && (print \"світ\");\n> // Виведе «привіт світ»; круглі дужки змушують вирази print\n> // Виконується перед оператором &&\n> ?>\n> ```\n\n> **Зауваження**: Оскільки це мовна конструкція, а не функція, її не можна викликати як [змінну функцію](functions.variable-functions.md) або передавати як [іменований аргумент](functions.arguments.md#functions.named-arguments)\n\n### Дивіться також\n\n-   [echo](function.echo.md) \\- Виводить рядки\n-   [printf()](function.printf.md) \\- Виводить відформатований рядок\n-   [flush()](function.flush.md) \\- скидає системний буфер виводу\n-   [Способи роботи з рядками](language.types.string.md)\n","title":"print","contentType":2,"navigation":[{"function.parse-str.md":"« parse\\_str"},{"function.printf.md":"printf »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}