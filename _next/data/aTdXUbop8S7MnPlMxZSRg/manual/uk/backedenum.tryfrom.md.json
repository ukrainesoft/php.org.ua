{"pageProps":{"page":{"slug":"backedenum.tryfrom.md","content":"# BackedEnum::tryFrom\n\n(PHP 8 >= 8.1.0)\n\nBackedEnum::tryFrom — Порівняє скаляр з екземпляром перерахування або null\n\n### Опис\n\n```methodsynopsis\npublic static BackedEnum::tryFrom(int|string $value): ?static\n```\n\nМетод**tryFrom()** переводить рядок (string) чи число (int) у відповідне значення перерахування, якщо є. Якщо значення не визначено, повертається null.\n\n### Список параметрів\n\n`value`\n\nСкалярне значення для зіставлення з перерахуванням.\n\n### Значення, що повертаються\n\nПримірник перерахування або null, якщо екземпляр не знайдено.\n\n### Приклади\n\n**Приклад #1 Простий приклад використання**\n\nУ цьому прикладі показано, як повертаються варіанти перерахування.\n\n```php\n<?php\nenum Suit: string\n{\n    case Hearts = 'H';\n    case Diamonds = 'D';\n    case Clubs = 'C';\n    case Spades = 'S';\n}\n\n$h = Suit::tryFrom('H');\n\nvar_dump($h);\n\n$b = Suit::tryFrom('B') ?? Suit::Spades;\n\nvar_dump($b);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nenum(Suit::Hearts)\nenum(Suit::Spades)\n```\n\n### Дивіться також\n\n-   [UnitEnum::cases()](unitenum.cases.md) \\- Повертає список варіантів перерахування\n-   [BackedEnum::from()](backedenum.from.md) \\- зіставляє скаляр з екземпляром перерахування\n","title":"BackedEnum::tryFrom","contentType":2,"navigation":[{"backedenum.from.md":"« BackedEnum::from"},{"class.sensitiveparametervalue.md":"SensitiveParameterValue »"},{"index.md":"PHP Manual"},{"class.backedenum.md":"BackedEnum"}]}},"__N_SSG":true}