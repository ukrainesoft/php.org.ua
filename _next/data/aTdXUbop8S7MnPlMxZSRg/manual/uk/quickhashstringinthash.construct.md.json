{"pageProps":{"page":{"slug":"quickhashstringinthash.construct.md","content":"# QuickHashStringIntHash::\\_\\_construct\n\n(No version information available, might only be in Git)\n\nQuickHashStringIntHash::\\_\\_construct — Створює новий об'єкт QuickHashStringIntHash\n\n### Опис\n\n```methodsynopsis\npublic QuickHashStringIntHash::__construct(int $size, int $options = 0)\n```\n\nКонструктор створює новий об'єкт [QuickHashStringIntHash](class.quickhashstringinthash.md). Розмір - це кількість списків, які потрібно створити. Чим більше списків, тим менше буде колізій. Також підтримуються налаштування.\n\n### Список параметрів\n\n`size`\n\nКількість списків, які потрібно налаштувати. Число, яке ви передасте, буде автоматично округлено до наступного ступеня 2. Воно також автоматично обмежується від `64`до`4194304`\n\n`options`\n\nВи можете передати такі параметри: константу **`QuickHashStringIntHash::CHECK_FOR_DUPES`**, яка гарантує, що в хеш не будуть додані дублікати та константу **`QuickHashStringIntHash::DO_NOT_USE_ZEND_ALLOC`**, щоб не використовувати внутрішній менеджер PHP.\n\n### Значення, що повертаються\n\nПовертає новий об'єкт [QuickHashStringIntHash](class.quickhashstringinthash.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** QuickHashStringIntHash::\\_\\_construct()\\*\\*\\*\\*\n\n```php\n<?php\nvar_dump( new QuickHashStringIntHash( 1024 ) );\nvar_dump( new QuickHashStringIntHash( 1024, QuickHashStringIntHash::CHECK_FOR_DUPES ) );\n?>\n```\n","title":"QuickHashStringIntHash::\\_\\_construct","contentType":2,"navigation":[{"quickhashstringinthash.add.md":"« QuickHashStringIntHash::add"},{"quickhashstringinthash.delete.md":"QuickHashStringIntHash::delete »"},{"index.md":"PHP Manual"},{"class.quickhashstringinthash.md":"QuickHashStringIntHash"}]}},"__N_SSG":true}