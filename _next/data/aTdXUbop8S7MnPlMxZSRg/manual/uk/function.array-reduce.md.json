{"pageProps":{"page":{"slug":"function.array-reduce.md","content":"# array\\_reduce\n\n(PHP 4 >= 4.0.5, PHP 5, PHP 7, PHP 8)\n\narray\\_reduce - Ітеративно зменшує масив до єдиного значення, використовуючи callback-функцію\n\n### Опис\n\n```methodsynopsis\narray_reduce(array $array, callable $callback, mixed $initial = null): mixed\n```\n\n**array\\_reduce()** ітеративно застосовує callback-функцію `callback` до елементів масиву `array`и, таким образом, сводит массив к единственному значению.\n\n### Список параметрів\n\n`array`\n\nВхідний масив\n\n`callback`\n\n```methodsynopsis\ncallback(mixed $carry, mixed $item): mixed\n```\n\n`carry`\n\nМістить результуюче значення попередньої ітерації; у разі першої ітерації містить значення параметра `initial`\n\n`item`\n\nМістить поточну ітерацію.\n\n`initial`\n\nЯкщо передано необов'язковий параметр `initial`, то він буде використаний на початку процесу, або як остаточний результат у випадку порожнього масиву.\n\n### Значення, що повертаються\n\nПовертає значення, що вийшло.\n\nЯкщо масив порожній і не передано параметр `initial` **array\\_reduce()** поверне **`null`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Тепер функція видасть помилку рівня **`E_WARNING`**, якщо параметр callback-функції, переданої у параметр `callback`, очікує на передачу значення за посиланням. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** array\\_reduce()\\*\\*\\*\\*\n\n```php\n<?php\nfunction sum($carry, $item)\n{\n    $carry += $item;\n    return $carry;\n}\n\nfunction product($carry, $item)\n{\n    $carry *= $item;\n    return $carry;\n}\n\n$a = array(1, 2, 3, 4, 5);\n$x = array();\n\nvar_dump(array_reduce($a, \"sum\")); // int(15)\nvar_dump(array_reduce($a, \"product\", 10)); // int(1200), потому что: 10*1*2*3*4*5\nvar_dump(array_reduce($x, \"sum\", \"Нет данных\")); // string(19) \"Нет данных\"\n?>\n```\n\n### Дивіться також\n\n-   [array\\_filter()](function.array-filter.md) \\- Фільтрує елементи масиву за допомогою callback-функції\n-   [array\\_map()](function.array-map.md) \\- Застосовує callback-функцію до всіх елементів зазначених масивів\n-   [array\\_unique()](function.array-unique.md) \\- Прибирає значення, що повторюються, з масиву\n-   [array\\_count\\_values()](function.array-count-values.md) \\- Підраховує кількість входжень кожного окремого значення у масиві\n","title":"array\\_reduce","contentType":2,"navigation":[{"function.array-rand.md":"« array\\_rand"},{"function.array-replace-recursive.md":"array\\_replace\\_recursive »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}