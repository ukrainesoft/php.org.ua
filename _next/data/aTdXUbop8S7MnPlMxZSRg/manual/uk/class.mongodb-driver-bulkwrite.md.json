{"pageProps":{"page":{"slug":"class.mongodb-driver-bulkwrite.md","content":"# Клас MongoDB\\\\Driver\\\\BulkWrite\n\n(mongodb >=1.0.0)\n\n## Вступ\n\nКласс**MongoDB\\\\Driver\\\\BulkWrite** збирає одну або кілька операцій запису, які мають бути надіслані на сервер. Після додавання будь-якої кількості операцій вставки, оновлення або видалення колекція може бути виконана за допомогою [MongoDB\\\\Driver\\\\Manager::executeBulkWrite()](mongodb-driver-manager.executebulkwrite.md)\n\nОперації запису можуть бути відсортовані (за замовчуванням) або відсортовані. Відсортовані операції запису надсилаються на сервер у вказаному порядку для послідовного виконання. У разі виникнення помилки запису, будь-які операції, що залишилися, будуть перервані. Невідсортовані операції надсилаються на сервер у довільному порядку, де вони можуть виконуватися паралельно. Повідомлення про помилки, які виникають, будуть надіслані після виконання всіх операцій.\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     final\n     \n      class MongoDB\\Driver\\BulkWrite\n     \n\n     implements \n       Countable {\n\n\n    /* Методы */\n    \n   public __construct(?array $options = null)\npublic count(): int\npublic delete(array|object $filter, ?array $deleteOptions = null): void\npublic insert(array|object $document): mixed\npublic update(array|object $filter, array|object $newObj, ?array $updateOptions = null): void\n\n   }\n```\n\n## Приклади\n\n**Приклад #1 Змішані операції групуються за типом**\n\nЗмішані операції запису (тобто додавання, оновлення або видалення) будуть зібрані в типізовані команди запису, які будуть послідовно відправлені на сервер.\n\n```php\n<?php\n\n$bulk = new MongoDB\\Driver\\BulkWrite(['ordered' => true]);\n$bulk->insert(['_id' => 1, 'x' => 1]);\n$bulk->insert(['_id' => 2, 'x' => 2]);\n$bulk->update(['x' => 2], ['$set' => ['x' => 1]]);\n$bulk->insert(['_id' => 3, 'x' => 3]);\n$bulk->delete(['x' => 1]);\n\n?>\n```\n\nВ результаті буде виконано чотири команди запису (тобто звернень). Оскільки операції відсортовані, третя вставка не може бути надіслана, доки не буде виконано попереднє оновлення.\n\n**Приклад #2 Відсортовані операції запису, що викликають помилку**\n\n```php\n<?php\n\n$bulk = new MongoDB\\Driver\\BulkWrite(['ordered' => true]);\n$bulk->delete([]);\n$bulk->insert(['_id' => 1]);\n$bulk->insert(['_id' => 2]);\n$bulk->insert(['_id' => 3, 'hello' => 'world']);\n$bulk->update(['_id' => 3], ['$set' => ['hello' => 'earth']]);\n$bulk->insert(['_id' => 4, 'hello' => 'pluto']);\n$bulk->update(['_id' => 4], ['$set' => ['hello' => 'moon']]);\n$bulk->insert(['_id' => 3]);\n$bulk->insert(['_id' => 4]);\n$bulk->insert(['_id' => 5]);\n\n$manager = new MongoDB\\Driver\\Manager('mongodb://localhost:27017');\n$writeConcern = new MongoDB\\Driver\\WriteConcern(MongoDB\\Driver\\WriteConcern::MAJORITY, 1000);\n\ntry {\n    $result = $manager->executeBulkWrite('db.collection', $bulk, $writeConcern);\n} catch (MongoDB\\Driver\\Exception\\BulkWriteException $e) {\n    $result = $e->getWriteResult();\n\n    // Убедиться, что гарантия записи не может быть выполнена\n    if ($writeConcernError = $result->getWriteConcernError()) {\n        printf(\"%s (%d): %s\\n\",\n            $writeConcernError->getMessage(),\n            $writeConcernError->getCode(),\n            var_export($writeConcernError->getInfo(), true)\n        );\n    }\n\n    // Проверить, не выполнялись ли какие-либо операции записи\n    foreach ($result->getWriteErrors() as $writeError) {\n        printf(\"Operation#%d: %s (%d)\\n\",\n            $writeError->getIndex(),\n            $writeError->getMessage(),\n            $writeError->getCode()\n        );\n    }\n} catch (MongoDB\\Driver\\Exception\\Exception $e) {\n    printf(\"Другая ошибка: %s\\n\", $e->getMessage());\n    exit;\n}\n\nprintf(\"Добавлено %d документ(ов)\\n\", $result->getInsertedCount());\nprintf(\"Обновлено %d документ(ов)\\n\", $result->getModifiedCount());\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nOperation#7: E11000 duplicate key error index: db.collection.$_id_ dup key: { : 3 } (11000)\nДобавлено 4 документ(ов)\nОбновлено 2 документ(ов)\n```\n\nЯкщо гарантія запису не може бути виконана, результат наведеного вище прикладу буде щось на кшталт цього:\n\n```\nwaiting for replication timed out (64): array (\n  'wtimeout' => true,\n)\nOperation#7: E11000 duplicate key error index: databaseName.collectionName.$_id_ dup key: { : 3 } (11000)\nInserted 4 document(s)\nUpdated  2 document(s)\n```\n\nЯкщо ми виконаємо приклад вище, але розв'яжемо невідсортовані записи:\n\n```php\n<?php\n\n$bulk = new MongoDB\\Driver\\BulkWrite(['ordered' => false]);\n/* ... */\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nOperation#7: E11000 duplicate key error index: db.collection.$_id_ dup key: { : 3 } (11000)\nOperation#8: E11000 duplicate key error index: db.collection.$_id_ dup key: { : 4 } (11000)\nInserted 5 document(s)\nUpdated  2 document(s)\n```\n\n## Дивіться також\n\n-   [MongoDB\\\\Driver\\\\Manager::executeBulkWrite()](mongodb-driver-manager.executebulkwrite.md)\n-   [MongoDB\\\\Driver\\\\WriteResult](class.mongodb-driver-writeresult.md)\n-   [MongoDB\\\\Driver\\\\WriteConcern](class.mongodb-driver-writeconcern.md)\n-   [MongoDB\\\\Driver\\\\WriteConcernError](class.mongodb-driver-writeconcernerror.md)\n-   [MongoDB\\\\Driver\\\\WriteError](class.mongodb-driver-writeerror.md)\n\n## Зміст\n\n-   [MongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct](mongodb-driver-bulkwrite.construct.md)— Створює новий об'єкт BulkWrite\n-   [MongoDB\\\\Driver\\\\BulkWrite::count](mongodb-driver-bulkwrite.count.md) \\- Підраховує кількість операцій запису в порції\n-   [MongoDB\\\\Driver\\\\BulkWrite::delete](mongodb-driver-bulkwrite.delete.md)— Додавання операції видалення порції\n-   [MongoDB\\\\Driver\\\\BulkWrite::insert](mongodb-driver-bulkwrite.insert.md) \\- Додати операцію вставки в порцію\n-   [MongoDB\\\\Driver\\\\BulkWrite::update](mongodb-driver-bulkwrite.update.md)— Додати операцію оновлення до порції\n","title":"Клас MongoDB\\\\Driver\\\\BulkWrite","contentType":2,"navigation":[{"mongodb-driver-query.construct.md":"« MongoDB\\\\Driver\\\\Query::\\_\\_construct"},{"mongodb-driver-bulkwrite.construct.md":"MongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct »"},{"index.md":"PHP Manual"},{"book.mongodb.md":"MongoDB\\\\Driver"}]}},"__N_SSG":true}