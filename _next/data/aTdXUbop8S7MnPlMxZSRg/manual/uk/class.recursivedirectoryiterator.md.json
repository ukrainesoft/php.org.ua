{"pageProps":{"page":{"slug":"class.recursivedirectoryiterator.md","content":"# Клас RecursiveDirectoryIterator\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nКласс**RecursiveDirectoryIterator** надає інтерфейс рекурсивного перебору каталогів файлової системи.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class RecursiveDirectoryIterator\n    \n\n    \n     extends\n      FilesystemIterator\n    \n\n    \n     implements\n      RecursiveIterator {\n\n    /* Наследуемые константы */\n    \n     public\n     const\n     int\n      FilesystemIterator::CURRENT_MODE_MASK;\npublic\n     const\n     int\n      FilesystemIterator::CURRENT_AS_PATHNAME;\npublic\n     const\n     int\n      FilesystemIterator::CURRENT_AS_FILEINFO;\npublic\n     const\n     int\n      FilesystemIterator::CURRENT_AS_SELF;\npublic\n     const\n     int\n      FilesystemIterator::KEY_MODE_MASK;\npublic\n     const\n     int\n      FilesystemIterator::KEY_AS_PATHNAME;\npublic\n     const\n     int\n      FilesystemIterator::FOLLOW_SYMLINKS;\npublic\n     const\n     int\n      FilesystemIterator::KEY_AS_FILENAME;\npublic\n     const\n     int\n      FilesystemIterator::NEW_CURRENT_AND_KEY;\npublic\n     const\n     int\n      FilesystemIterator::OTHER_MODE_MASK;\npublic\n     const\n     int\n      FilesystemIterator::SKIP_DOTS;\npublic\n     const\n     int\n      FilesystemIterator::UNIX_PATHS;\n\n\n    /* Методы */\n    \n   public __construct(string $directory, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO)\n\n    public getChildren(): RecursiveDirectoryIterator\npublic getSubPath(): string\npublic getSubPathname(): string\npublic hasChildren(bool $allowLinks = false): bool\npublic key(): string\npublic next(): void\npublic rewind(): void\n\n\n    /* Наследуемые методы */\n    public FilesystemIterator::current(): string|SplFileInfo|FilesystemIterator\npublic FilesystemIterator::getFlags(): int\npublic FilesystemIterator::key(): string\npublic FilesystemIterator::next(): void\npublic FilesystemIterator::rewind(): void\npublic FilesystemIterator::setFlags(int $flags): void\n\n    public DirectoryIterator::current(): mixed\npublic DirectoryIterator::getBasename(string $suffix = \"\"): string\npublic DirectoryIterator::getExtension(): string\npublic DirectoryIterator::getFilename(): string\npublic DirectoryIterator::isDot(): bool\npublic DirectoryIterator::key(): mixed\npublic DirectoryIterator::next(): void\npublic DirectoryIterator::rewind(): void\npublic DirectoryIterator::seek(int $offset): void\npublic DirectoryIterator::__toString(): string\npublic DirectoryIterator::valid(): bool\n\n    public SplFileInfo::getATime(): int|false\npublic SplFileInfo::getBasename(string $suffix = \"\"): string\npublic SplFileInfo::getCTime(): int|false\npublic SplFileInfo::getExtension(): string\npublic SplFileInfo::getFileInfo(?string $class = null): SplFileInfo\npublic SplFileInfo::getFilename(): string\npublic SplFileInfo::getGroup(): int|false\npublic SplFileInfo::getInode(): int|false\npublic SplFileInfo::getLinkTarget(): string|false\npublic SplFileInfo::getMTime(): int|false\npublic SplFileInfo::getOwner(): int|false\npublic SplFileInfo::getPath(): string\npublic SplFileInfo::getPathInfo(?string $class = null): ?SplFileInfo\npublic SplFileInfo::getPathname(): string\npublic SplFileInfo::getPerms(): int|false\npublic SplFileInfo::getRealPath(): string|false\npublic SplFileInfo::getSize(): int|false\npublic SplFileInfo::getType(): string|false\npublic SplFileInfo::isDir(): bool\npublic SplFileInfo::isExecutable(): bool\npublic SplFileInfo::isFile(): bool\npublic SplFileInfo::isLink(): bool\npublic SplFileInfo::isReadable(): bool\npublic SplFileInfo::isWritable(): bool\npublic SplFileInfo::openFile(string $mode = \"r\", bool $useIncludePath = false, ?resource $context = null): SplFileObject\npublic SplFileInfo::setFileClass(string $class = SplFileObject::class): void\npublic SplFileInfo::setInfoClass(string $class = SplFileInfo::class): void\npublic SplFileInfo::__toString(): string\n\n   }\n```\n\n## Зміст\n\n-   [RecursiveDirectoryIterator::\\_\\_construct](recursivedirectoryiterator.construct.md) \\- Конструктор класу RecursiveDirectoryIterator\n-   [RecursiveDirectoryIterator::getChildren](recursivedirectoryiterator.getchildren.md)— Якщо поточний елемент є директорією, метод повертає ітератор для неї.\n-   [RecursiveDirectoryIterator::getSubPath](recursivedirectoryiterator.getsubpath.md)— Повертає шлях до піддиректорії\n-   [RecursiveDirectoryIterator::getSubPathname](recursivedirectoryiterator.getsubpathname.md)— Повертає шлях до піддиректорії та ім'я файлу\n-   [RecursiveDirectoryIterator::hasChildren](recursivedirectoryiterator.haschildren.md)— Визначає, чи поточний елемент є директорією\n-   [RecursiveDirectoryIterator::key](recursivedirectoryiterator.key.md)— Повертає шлях та ім'я файлу поточного елемента\n-   [RecursiveDirectoryIterator::next](recursivedirectoryiterator.next.md)— Перехід до наступного елементу\n-   [RecursiveDirectoryIterator::rewind](recursivedirectoryiterator.rewind.md)— перекладає ітератор на початок директорії\n","title":"Клас RecursiveDirectoryIterator","contentType":2,"navigation":[{"recursivecallbackfilteriterator.haschildren.md":"« RecursiveCallbackFilterIterator::hasChildren"},{"recursivedirectoryiterator.construct.md":"RecursiveDirectoryIterator::\\_\\_construct »"},{"index.md":"PHP Manual"},{"spl.iterators.md":"Ітератори"}]}},"__N_SSG":true}