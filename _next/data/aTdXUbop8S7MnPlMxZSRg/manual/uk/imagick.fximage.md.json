{"pageProps":{"page":{"slug":"imagick.fximage.md","content":"# Imagick::fxImage\n\n(PECL imagick 2, PECL imagick 3)\n\nImagick::fxImage — Оцінює вираз для кожного пікселя у зображенні\n\n### Опис\n\n```methodsynopsis\npublic Imagick::fxImage(string $expression, int $channel = Imagick::CHANNEL_DEFAULT): Imagick\n```\n\nОцінює вираз для кожного пікселя у зображенні. Подивіться докладніше про [» Оператор зображення Fx зі спеціальними ефектами](http://www.imagemagick.org/script/fx.php) для отримання додаткової інформації.\n\n### Список параметрів\n\n`expression`\n\nВираз\n\n`channel`\n\nВкажіть будь-яку постійну каналу, яка підходить для режиму каналу. Щоб застосувати більше одного каналу, об'єднайте константи типу каналу, використовуючи побітові оператори. Перегляньте цей список [констант каналу](imagick.constants.md#imagick.constants.channel)\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Помилки\n\nВикликає ImagickException у разі виникнення помилки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::fxImage()\\*\\*\\*\\*\n\n```php\n<?php\nfunction fxImage() {\n    $imagick = new \\Imagick();\n    $imagick->newPseudoImage(200, 200, \"xc:white\");\n\n    $fx = 'xx=i-w/2; yy=j-h/2; rr=hypot(xx,yy); (.5-rr/140)*1.2+.5';\n    $fxImage = $imagick->fxImage($fx);\n\n    header(\"Content-Type: image/png\");\n    $fxImage->setimageformat('png');\n    echo $fxImage->getImageBlob();\n}\n\n?>\n```\n","title":"Imagick::fxImage","contentType":2,"navigation":[{"imagick.functionimage.md":"« Imagick::functionImage"},{"imagick.gammaimage.md":"Imagick::gammaImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}