{"pageProps":{"page":{"slug":"function.iterator-apply.md","content":"# iterator\\_apply\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\niterator\\_apply — Викликає функцію кожного елемента в ітераторі\n\n### Опис\n\n```methodsynopsis\niterator_apply(Traversable $iterator, callable $callback, ?array $args = null): int\n```\n\nВикликає функцію кожного елемента в итераторе.\n\n### Список параметрів\n\n`iterator`\n\nОб'єкт ітератора для перебору.\n\n`callback`\n\nФункція зворотного дзвінка, яка застосовується до кожного елемента. Ця функція приймає лише переданий `args`тому він null за замовчуванням. Наприклад, якщо `count($args) === 3`, функція зворотного виклику – тернарна.\n\n> **Зауваження**: Функція повинна повертати **`true`** для того, щоб продовжувати процес ітерації над `iterator`\n\n`args`\n\nАргументи для передачі зворотного дзвінка. Масив (array) аргументів; кожен елемент `args` передається у функцію зворотної функції (`callback`) у вигляді окремого аргументу.\n\n### Значення, що повертаються\n\nПовертає кількість ітерацій.\n\n### Приклади\n\n**Приклад #1 Приклад використання** iterator\\_apply()\\*\\*\\*\\*\n\n```php\n<?php\nfunction print_caps(Iterator $iterator) {\n    echo strtoupper($iterator->current()) . \"\\n\";\n    return TRUE;\n}\n\n$it = new ArrayIterator(array(\"Apples\", \"Bananas\", \"Cherries\"));\niterator_apply($it, \"print_caps\", array($it));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nAPPLES\nBANANAS\nCHERRIES\n```\n\n### Дивіться також\n\n-   [array\\_walk()](function.array-walk.md) \\- Застосовує задану користувачем функцію кожного елемента масиву\n","title":"iterator\\_apply","contentType":2,"navigation":[{"function.class-uses.md":"« class\\_uses"},{"function.iterator-count.md":"iterator\\_count »"},{"index.md":"PHP Manual"},{"ref.spl.md":"Функції SPL"}]}},"__N_SSG":true}