{"pageProps":{"page":{"slug":"function.cubrid-get.md","content":"# cubrid\\_get\n\n(PECL CUBRID >= 8.3.0)\n\ncubrid\\_get — Отримує стовпець, використовуючи OID\n\n### Опис\n\n```methodsynopsis\ncubrid_get(resource $conn_identifier, string $oid, mixed $attr = ?): mixed\n```\n\nФункция**cubrid\\_get()** використовується для отримання атрибуту екземпляра даного `oid`. Ви можете отримати один атрибут, використовуючи рядковий тип даних для аргументу `attr`, або безліч атрибутів, використовуючи тип даних масиву для аргументу `attr`\n\n### Список параметрів\n\n`conn_identifier`\n\nІдентифікатор з'єднання.\n\n`oid`\n\nOID екземпляра, який ви хочете прочитати.\n\n`attr`\n\nІм'я атрибута ви хочете прочитати.\n\n### Значення, що повертаються\n\nСодержимое запрошенного атрибута, когда процесс успешен; Когда`attr` встановлений з рядковим типом даних, результат повертається у вигляді рядка; якщо для `attr` заданий тип даних масиву (числовий масив, що починається з 0), результат повертається в асоціативному масиві. Коли `attr` опущений, всі атрибути приймаються як масиву.\n\n\\*\\*`false`\\*\\*якщо процес завершився з помилкою або результат NULL (якщо виникає помилка, щоб відрізнити порожній рядок від NULL, друкується попереджувальне повідомлення. Ви можете перевірити помилку, використовуючи [cubrid\\_error\\_code()](function.cubrid-error-code.md)) .\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_get()\\*\\*\\*\\*\n\n```php\n<?php\n$conn = cubrid_connect(\"localhost\", 33000, \"demodb\");\n\n@cubrid_execute($conn, \"DROP TABLE foo\");\ncubrid_execute($conn, \"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))\");\ncubrid_execute($conn, \"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')\");\ncubrid_execute($conn, \"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')\");\n\n$req = cubrid_execute($conn, \"SELECT * FROM foo\", CUBRID_INCLUDE_OID);\n\ncubrid_move_cursor($req, 1, CUBRID_CURSOR_FIRST);\n$oid = cubrid_current_oid($req);\n\n$attr = cubrid_get($conn, $oid, \"b\");\nvar_dump($attr);\n\n$attr = cubrid_get($conn, $oid);\nvar_dump($attr);\n\ncubrid_close_request($req);\ncubrid_disconnect($conn);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(9) \"{1, 2, 3}\"\narray(4) {\n  [\"a\"]=>\n  string(1) \"1\"\n  [\"b\"]=>\n  array(3) {\n    [0]=>\n    string(1) \"1\"\n    [1]=>\n    string(1) \"2\"\n    [2]=>\n    string(1) \"3\"\n  }\n  [\"c\"]=>\n  array(4) {\n    [0]=>\n    string(2) \"11\"\n    [1]=>\n    string(2) \"22\"\n    [2]=>\n    string(2) \"33\"\n    [3]=>\n    string(3) \"333\"\n  }\n  [\"d\"]=>\n  string(10) \"a         \"\n}\n```\n\n### Дивіться також\n\n-   [cubrid\\_put()](function.cubrid-put.md) \\- Оновлює стовпець за допомогою OID\n","title":"cubrid\\_get","contentType":2,"navigation":[{"function.cubrid-get-server-info.md":"« cubrid\\_get\\_server\\_info"},{"function.cubrid-insert-id.md":"cubrid\\_insert\\_id »"},{"index.md":"PHP Manual"},{"ref.cubrid.md":"Функції CUBRID"}]}},"__N_SSG":true}