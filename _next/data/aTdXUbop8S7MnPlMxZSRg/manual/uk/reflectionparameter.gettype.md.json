{"pageProps":{"page":{"slug":"reflectionparameter.gettype.md","content":"# ReflectionParameter::getType\n\n(PHP 7, PHP 8)\n\nReflectionParameter::getType — Отримати тип параметра\n\n### Опис\n\n```methodsynopsis\npublic ReflectionParameter::getType(): ?ReflectionType\n```\n\nОтримати тип параметра\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає об'єкт [ReflectionType](class.reflectiontype.md), если тип параметра задан,**`null`**, в іншому випадку.\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionParameter::getType()\\*\\* починаючи з PHP 7.1.0\\*\\*\n\nНачиная с PHP 7.1.0, метод[ReflectionType::\\_\\_toString()](reflectiontype.tostring.md) оголошено застарілим. Метод **ReflectionParameter::getType()** *може* повернути екземпляр [ReflectionNamedType](class.reflectionnamedtype.md)Для получения имени типа параметра доступен метод**ReflectionNamedType()**\n\n```php\n<?php\nfunction someFunction(int $param, $param2) {}\n\n$reflectionFunc = new ReflectionFunction('someFunction');\n$reflectionParams = $reflectionFunc->getParameters();\n$reflectionType1 = $reflectionParams[0]->getType();\n$reflectionType2 = $reflectionParams[1]->getType();\n\nassert($reflectionType1 instanceof ReflectionNamedType);\necho $reflectionType1->getName(), PHP_EOL;\nvar_dump($reflectionType2);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint\nNULL\n```\n\n**Приклад #2 Использование**ReflectionParameter::getType()\\*\\* у PHP до версії 7.1.0\\*\\*\n\n```php\n<?php\nfunction someFunction(int $param, $param2) {}\n\n$reflectionFunc = new ReflectionFunction('someFunction');\n$reflectionParams = $reflectionFunc->getParameters();\n$reflectionType1 = $reflectionParams[0]->getType();\n$reflectionType2 = $reflectionParams[1]->getType();\n\necho $reflectionType1, PHP_EOL;\nvar_dump($reflectionType2);\n?>\n```\n\nРезультат виконання наведеного прикладу в PHP 7.0:\n\n```\nint\nNULL\n```\n\n**Приклад #3 Приклад використання** ReflectionParameter::getType()\\*\\* в PHP 8.0.0 і пізніших\\*\\*\n\nПочинаючи з PHP 8.0.0, цей метод може повертати екземпляр [ReflectionNamedType](class.reflectionnamedtype.md) або екземпляр [ReflectionUnionType](class.reflectionuniontype.md). Останній є колекцією перших. Для аналізу типу часто буває зручно перетворити його на масив об'єктів [ReflectionNamedType](class.reflectionnamedtype.md). Наступна функція поверне масив з або більше екземплярів [ReflectionNamedType](class.reflectionnamedtype.md)\n\n```php\n<?php\nfunction getAllTypes(ReflectionParameter $reflectionParameter): array\n{\n    $reflectionType = $reflectionParameter->getType();\n\n    if (!$reflectionType) return [];\n\n    return $reflectionType instanceof ReflectionUnionType\n        ? $reflectionType->getTypes()\n        : [$reflectionType];\n}\n?>\n```\n\n### Дивіться також\n\n-   [ReflectionParameter::hasType()](reflectionparameter.hastype.md) \\- Перевірити, чи вказано тип параметра\n-   [ReflectionType::\\_\\_toString()](reflectiontype.tostring.md) \\- Перетворення на рядок\n","title":"ReflectionParameter::getType","contentType":2,"navigation":[{"reflectionparameter.getposition.md":"« ReflectionParameter::getPosition"},{"reflectionparameter.hastype.md":"ReflectionParameter::hasType »"},{"index.md":"PHP Manual"},{"class.reflectionparameter.md":"ReflectionParameter"}]}},"__N_SSG":true}