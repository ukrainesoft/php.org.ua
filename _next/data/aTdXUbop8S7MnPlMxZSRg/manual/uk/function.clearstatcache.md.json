{"pageProps":{"page":{"slug":"function.clearstatcache.md","content":"# clearstatcache\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nclearstatcache — Очищує кеш стану файлів\n\n### Опис\n\n```methodsynopsis\nclearstatcache(bool $clear_realpath_cache = false, string $filename = \"\"): void\n```\n\nДля забезпечення більшої продуктивності під час використання функцій [stat()](function.stat.md) [lstat()](function.lstat.md) або будь-якої іншої функції, перелічених у наведеному нижче списку, PHP кешує результати виконання. Однак, у деяких випадках вам може знадобитися очищення цього кешу. Наприклад, коли ваш скрипт кілька разів перевіряє стан того самого файлу, який може бути змінений або видалений під час виконання скрипту, ви можете захотіти очистити кеш стану. У цьому випадку необхідно використати функцію **clearstatcache()** для очищення в PHP кешованої інформації про вказаний файл.\n\nЗверніть увагу, що PHP не кешує інформацію про неіснуючі файли. Так що якщо ви викличете [file\\_exists()](function.file-exists.md) на неіснуючому файлі, вона повертатиме **`false`** поки ви не створите цей файл. Якщо ж ви створите файл, вона повертатиме **`true`**, навіть якщо ви його видалите. Однак, функція [unlink()](function.unlink.md) очистити дані кеш автоматично.\n\n> **Зауваження** :\n> \n> Ця функція кешує інформацію про певні файли, тому має сенс викликати **clearstatcache()** тільки в тому випадку, якщо ви робите кілька операцій з одним і тим же файлом і не хочете отримувати кешовану інформацію про цей файл.\n\nСписок функцій, результати виконання яких кешуються: [stat()](function.stat.md) [lstat()](function.lstat.md) [file\\_exists()](function.file-exists.md) [is\\_writable()](function.is-writable.md) [is\\_readable()](function.is-readable.md) [is\\_executable()](function.is-executable.md) [is\\_file()](function.is-file.md) [is\\_dir()](function.is-dir.md) [is\\_link()](function.is-link.md) [filectime()](function.filectime.md) [fileatime()](function.fileatime.md) [filemtime()](function.filemtime.md) [fileinode()](function.fileinode.md) [filegroup()](function.filegroup.md) [fileowner()](function.fileowner.md) [filesize()](function.filesize.md) [filetype()](function.filetype.md) і [fileperms()](function.fileperms.md)\n\n### Список параметрів\n\n`clear_realpath_cache`\n\nЧи потрібно *також* очищати кеш realpath.\n\n`filename`\n\nОчистити кеш realpath тільки для певного імені файлу; використовується тільки в тому випадку, якщо параметр `clear_realpath_cache`установлено значение\\*\\*`true`\\*\\*\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Приклад використання** clearstatcache()\\*\\*\\*\\*\n\n```php\n<?php\n$file = 'output_log.txt';\n\nfunction get_owner($file)\n{\n    $stat = stat($file);\n    $user = posix_getpwuid($stat['uid']);\n    return $user['name'];\n}\n\n$format = \"UID @ %s: %s\\n\";\n\nprintf($format, date('r'), get_owner($file));\n\nchown($file, 'ross');\nprintf($format, date('r'), get_owner($file));\n\nclearstatcache();\nprintf($format, date('r'), get_owner($file));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nUID @ Sun, 12 Oct 2008 20:48:28 +0100: root\nUID @ Sun, 12 Oct 2008 20:48:28 +0100: root\nUID @ Sun, 12 Oct 2008 20:48:28 +0100: ross\n```\n","title":"clearstatcache","contentType":2,"navigation":[{"function.chown.md":"« chown"},{"function.copy.md":"copy »"},{"index.md":"PHP Manual"},{"ref.filesystem.md":"Функції файлової системи"}]}},"__N_SSG":true}