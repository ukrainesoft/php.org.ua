{"pageProps":{"page":{"slug":"migration72.incompatible.md","content":"## Зміни, що ламають зворотну сумісність\n\n### Предотвращение возврата отрицательного нуля из[number\\_format()](function.number-format.md)\n\nРаньше функция[number\\_format()](function.number-format.md) повертала `-0`. Хоча це абсолютно правильно відповідно до специфікації чисел з плаваючою точкою IEEE 754, ця дивина небажана для відображення відформатованих чисел у формі, що легко читається.\n\n```php\n<?php\n\nvar_dump(number_format(-0.01)); // теперь выводит string(1) \"0\" вместо string(2) \"-0\"\n```\n\n### Перетворення числових ключів при приведенні об'єктів та масивів\n\nТепер числові ключі краще обробляються при приведенні масивів до об'єктів та об'єктів до масивів (через явне приведення, або використовуючи [settype()](function.settype.md)\n\nЦе означає, що числові (або числа у вигляді рядків) ключі з масивів, конвертовані в об'єкти, тепер будуть доступні:\n\n```php\n<?php\n\n// приведение массива к объекту\n$arr = [0 => 1];\n$obj = (object)$arr;\nvar_dump(\n    $obj,\n    $obj->{'0'}, // теперь работает\n    $obj->{0} // теперь работает\n);\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nobject(stdClass)#1 (1) {\n  [\"0\"]=>    // теперь это строковый ключ, а не числовой\n  int(1)\n}\nint(1)\nint(1)\n```\n\nІ тепер числові (або числа у вигляді рядків) ключі об'єктів доступні при конвертації в масиви:\n\n```php\n<?php\n\n// приведение объекта в массив\n$obj = new class {\n    public function __construct()\n    {\n        $this->{0} = 1;\n    }\n};\n$arr = (array)$obj;\nvar_dump(\n    $arr,\n    $arr[0], // теперь работает\n    $arr['0'] // теперь работает\n);\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(1) {\n  [0]=>    // теперь это числовой ключ, а не строковый\n  int(1)\n}\nint(1)\nint(1)\n```\n\n### Запрещена передача\\*\\*`null`\\*\\*в[get\\_class()](function.get-class.md)\n\nРаньше передача\\*\\*`null`\\*\\* у функцію [get\\_class()](function.get-class.md) повертала ім'я класу, з якого було зроблено виклик. Ця поведінка була видалена і тепер натомість буде викликана помилка рівня **`E_WARNING`**. Для досягнення тієї самої поведінки, як і раніше, слід просто опустити аргумент.\n\n### Попередження при підрахунку нечисленних типів\n\nТеперь при использовании[count()](function.count.md) з параметром, який не можна вважати буде виникати помилка рівня **`E_WARNING`** (це також стосується [sizeof()](function.sizeof.md) як псевдоніма цієї функції).\n\n```php\n<?php\n\nvar_dump(\n    count(null), // NULL нельзя подсчитать\n    count(1), // числа нельзя подсчитать\n    count('abc'), // строки нельзя подсчитать\n    count(new stdClass), // объекты, не реализующие интерфейс Countable, нельзя подсчитать\n    count([1,2]) // массивы можно подсчитать\n);\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nWarning: count(): Parameter must be an array or an object that implements Countable in %s on line %d\n\nWarning: count(): Parameter must be an array or an object that implements Countable in %s on line %d\n\nWarning: count(): Parameter must be an array or an object that implements Countable in %s on line %d\n\nWarning: count(): Parameter must be an array or an object that implements Countable in %s on line %d\nint(0)\nint(1)\nint(1)\nint(1)\nint(2)\n```\n\n### Перехід від ресурсів до об'єктів у модулі Hash\n\nВ рамках довгострокової міграції відмови від ресурсів, модуль [Hash](book.hash.md) було оновлено для використання об'єктів замість ресурсів. Ця зміна повинна бути плавною для PHP-розробників, за винятком випадків, коли використовуються перевірки [is\\_resource()](function.is-resource.md) (які потрібно замінити на використання [is\\_object()](function.is-object.md)\n\n### Покращено значення за замовчуванням у SSL/TLS\n\nБули зроблені такі зміни до значень за замовчуванням:\n\n-   `tls://`тепер за умовчанням використовується TLSv1.0 чи TLSv1.1 чи TLSv1.2\n-   `ssl://`псевдонім`tls://`\n-   Константи `STREAM_CRYPTO_METHOD_TLS_*`за умовчанням рівні TLSv1.0 або TLSv1.1 + TLSv1.2 замість TLSv1.0\n\n### Возвращаемое значение[gettype()](function.gettype.md) для закритих ресурсів\n\nРаньше использование[gettype()](function.gettype.md) на закритому ресурсі повертало рядок `\"unknown type\"`. Тепер буде повернуто рядок `\"resource (closed)\"`\n\n### [is\\_object()](function.is-object.md)и**\\_\\_PHP\\_Incomplete\\_Class**\n\nРаньше использование[is\\_object()](function.is-object.md)на классе**\\_\\_PHP\\_Incomplete\\_Class** повертало **`false`**. Тепер повертатиметься **`true`**\n\n### Підвищено рівні помилок невизначених констант\n\nНе повністю визначені посилання на невизначені константи тепер генеруватимуть **`E_WARNING`** (замість **`E_NOTICE`**). У наступній основній версії PHP вони генеруватимуть винятки [Error](class.error.md)\n\n### Підтримка Windows\n\nОфіційно підтримувані мінімальні версії Windows тепер є Windows 7/Server 2008 R2.\n\n### Перевірка значень властивостей за промовчанням трейту\n\nПеревірка сумісності значень властивостей за промовчанням трейту більше не виконує приведення типу.\n\n### `object` для імен класів\n\nИмя`object` раніше було м'яко зарезервовано з PHP 7.0. Тепер воно повноцінне зарезервоване слово, що забороняє використовувати його як ім'я класу, трейту або інтерфейсу.\n\n### Підтримка NetWare\n\nПідтримка NetWare було видалено.\n\n### [array\\_unique()](function.array-unique.md)with\\*\\*`SORT_STRING`\\*\\*\n\nЯкщо `sort_flags`равен\\*\\*`SORT_STRING`\\*\\*, ранее массив`array` копіювався, а не унікальні елементи видалялися (зберігаючи значення цифрових індексів), але тепер створюється новий масив шляхом додавання унікальних елементів. Це може призвести до різних числових індексів.\n\n### Изменения[bcmod()](function.bcmod.md) з числами з плаваючою точкою\n\nФункция[bcmod()](function.bcmod.md) більше не обрізає числа з плаваючою точкою до цілих. Таким чином, її поведінка тепер відповідає [fmod()](function.fmod.md), а не оператору`%`НаПриклад,`bcmod('4', '3.5')` тепер повертає `0.5` замість\n\n### Функції хешування та некриптографічні хеші\n\nФункції [hash\\_hmac()](function.hash-hmac.md) [hash\\_hmac\\_file()](function.hash-hmac-file.md) [hash\\_pbkdf2()](function.hash-pbkdf2.md) і [hash\\_init()](function.hash-init.md)(с\\*\\*`HASH_HMAC`\\*\\*) більше не приймають некриптографічні хеші.\n\n### Опції функції [json\\_decode()](function.json-decode.md)\n\nОпція функції [json\\_decode()](function.json-decode.md) **`JSON_OBJECT_AS_ARRAY`**, тепер використовується, якщо другий параметр (assoc) дорівнює **`null`**Ранее**`JSON_OBJECT_AS_ARRAY`** завжди ігнорувався.\n\n### Висновок [rand()](function.rand.md) і [mt\\_rand()](function.mt-rand.md)\n\nЧисла, що генеруються [rand()](function.rand.md) і [mt\\_rand()](function.mt-rand.md) для певного параметра переініціалізації (seed) можуть відрізнятися від PHP 7.1 на 64-бітних машинах (через виправлення помилки модульного зміщення в реалізації).\n\n### Удаление ini-настройки[`sql.safe_mode`](ini.core.md#ini.sql.safe-mode)\n\nНалаштування конфігурації `sql.safe_mode` було видалено.\n\n### Изменения в[date\\_parse()](function.date-parse.md) і [date\\_parse\\_from\\_format()](function.date-parse-from-format.md)\n\nЕлемент масиву `zone`, що повертається функціями [date\\_parse\\_from\\_format()](function.date-parse-from-format.md) і [date\\_parse()](function.date-parse.md) тепер відображає секунди замість хвилин, а його знак інвертується. Наприклад, `-120` тепер буде `7200`\n\n### Вхідні Cookies\n\nПочинаючи з PHP 7.2.34 *імена* вхідні cookie більше не декодуються з URL-закодованого рядка з міркувань безпеки.\n","title":"Зміни, що ламають зворотну сумісність","contentType":2,"navigation":[{"migration72.constants.md":"« Нові глобальні константи"},{"migration72.deprecated.md":"Функціонал, оголошений застарілим у PHP 7.2.x"},{"index.md":"PHP Manual"},{"migration72.md":"Міграція з PHP 7.1.x на PHP 7.2.x"}]}},"__N_SSG":true}