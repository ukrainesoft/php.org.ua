{"pageProps":{"page":{"slug":"oci8.dtrace.md","content":"# OCI8 та динамічне трасування DTrace\n\nOCI8 2.0 містить статичні зонди DTrace, які можна використовувати в операційних системах, які підтримують DTrace. Докладніше взаємини PHP та DTrace описані в розділі [Динамічна трасування DTrace](features.dtrace.md)\n\n## Установка OCI8 з підтримкою DTrace\n\nДля включення підтримки DTrace в PHP OCI8, зберіть OCI8 як модуль, що розділяється після установки змінної оточення `PHP_DTRACE`\n\n```\n$ export PHP_DTRACE=yes\n$ pecl install oci8\n```\n\nОтредактируйте php.ini, задав[extension\\_dir](ini.core.md#ini.extension-dir) рівним директорії, в якій створився oci8.so, а також увімкніть модуль таким чином:\n\n```\nextension=oci8.so\n```\n\nЯкщо ви встановили PHP OCI8 з PECL з використанням phpize і configure (замість pecl), вам все ще потрібно буде встановити `PHP_DTRACE=yes`. Це тому, що опція `--enable-dtrace` буде проігноровано обмеженим скриптом configure модуля PECL.\n\nБолее подробно об установке PECL модулей читайте в разделе[Встановлення модулів PECL](install.pecl.md)\n\n## Статичні зонди DTrace у PHP OCI8\n\n**Наступні статичні зонди доступні в PHP OCI8**\n\n| Имя зонда | Опис зонда | Аргументы зонда |\n| --- | --- | --- |\n| `oci8-connect-entry` | Ініціюється oci\\_connect(), oci\\_pconnect() та oci\\_new\\_connect(). Спрацьовує доти, як з'єднання було встановлено. | char \\*username, char \\*dbname, char \\*charset, long session\\_mode, int persistent, int exclusive |\n| `oci8-connect-return` | Спрацьовує після встановлення з'єднання. | void \\*connection |\n| `oci8-check-connection` | Спрацьовує, якщо помилка Oracle може призвести до псування з'єднання. | void \\*connection, char \\*client\\_id, int is\\_open, long errcode, unsigned long server\\_status |\n| `oci8-sqltext` | Спрацьовує при запуску oci\\_parse(). | void \\*connection, char \\*client\\_id, void \\*statement, char \\*sql |\n| `oci8-connection-close` | Спрацьовує, коли з'єднання остаточно знищено. | void \\*connection |\n| `oci8-error` | Спрацьовує, якщо виникла помилка Oracle. | int status, long errcode |\n| `oci8-execute-mode` | Спрацьовує за [oci\\_execute()](function.oci-execute.md) виявлення режиму запуску. | void \\*connection, char \\*client\\_id, void \\*statement, unsigned int mode |\n\nЦі зонди корисні для налагодження скриптів OCI8.\n\nПараметри connection та statement є вказівниками на внутрішні структури, які використовуються для відстеження з'єднань та запущених запитів.\n\nПараметр client\\_id встановлюється функцією [oci\\_set\\_client\\_identifier()](function.oci-set-client-identifier.md)\n\nЯдро PHP містить статичні зонди. Дивіться розділ [Статичні зонди DTrace у ядрі PHP](features.dtrace.dtrace.md#features.dtrace.static-probes)\n\n**Внутрішні налагоджувальні зонди DTrace в OCI8**\n\n| Имя зонда |\n| --- |\n| `oci8-connect-expiry` |\n| `oci8-connect-lookup` |\n| `oci8-connect-p-dtor-close` |\n| `oci8-connect-p-dtor-release` |\n| `oci8-connect-type` |\n| `oci8-sesspool-create` |\n| `oci8-sesspool-stats` |\n| `oci8-sesspool-type` |\n\nЦі зонди є корисними для розробників модуля OCI8. Для детальнішої інформації вивчайте вихідні коди OCI8.\n\n## Отримання списку статичних зондів DTrace у PHP OCI8\n\nЩоб отримати список доступних зондів, запустіть процес PHP і потім запустіть:\n\n```\n# dtrace -l\n```\n\nВисновок буде приблизно наступним:\n\n```\nID   PROVIDER            MODULE                          FUNCTION NAME\n   [ . . . ]\n   17 phpoci22116           oci8.so   php_oci_dtrace_check_connection oci8-check-connection\n   18 phpoci22116           oci8.so                php_oci_do_connect oci8-connect-entry\n   19 phpoci22116           oci8.so         php_oci_persistent_helper oci8-connect-expiry\n   20 phpoci22116           oci8.so             php_oci_do_connect_ex oci8-connect-lookup\n   21 phpoci22116           oci8.so  php_oci_pconnection_list_np_dtor oci8-connect-p-dtor-close\n   22 phpoci22116           oci8.so  php_oci_pconnection_list_np_dtor oci8-connect-p-dtor-release\n   23 phpoci22116           oci8.so                php_oci_do_connect oci8-connect-return\n   24 phpoci22116           oci8.so             php_oci_do_connect_ex oci8-connect-type\n   25 phpoci22116           oci8.so          php_oci_connection_close oci8-connection-close\n   26 phpoci22116           oci8.so                     php_oci_error oci8-error\n   27 phpoci22116           oci8.so         php_oci_statement_execute oci8-execute-mode\n   28 phpoci22116           oci8.so              php_oci_create_spool oci8-sesspool-create\n   29 phpoci22116           oci8.so            php_oci_create_session oci8-sesspool-stats\n   30 phpoci22116           oci8.so            php_oci_create_session oci8-sesspool-type\n   31 phpoci22116           oci8.so          php_oci_statement_create oci8-sqltext\n```\n\nСтовпець \"Provider\" складається з `phpoci` та ідентифікатора запущеного процесу PHP.\n\nСтовпець \"Function\" містить імена внутрішніх, написаних на C, функцій PHP, які містять відповідні провайдери (Provider).\n\nЯкщо процес PHP не запущено, то ніяких зондів PHP не буде показано.\n\n## Приклад використання DTrace із PHP OCI8\n\nУ цьому прикладі показано основи скриптової мови DTrace D.\n\n**Приклад #1\\_oci8\\_probes.d для трасування всіх статичних зондів PHP OCI8 за допомогою DTrace на рівні користувача**\n\n```\n#!/usr/sbin/dtrace -Zs\n\n#pragma D option quiet\n\nphp*:::oci8-connect-entry\n{\n    printf(\"%lld: PHP connect-entry\\n\", walltimestamp);\n    printf(\"  credentials=\\\"%s@%s\\\"\\n\", arg0 ? copyinstr(arg0) : \"\", arg1 ? copyinstr(arg1) : \"\");\n    printf(\"  charset=\\\"%s\\\"\\n\", arg2 ? copyinstr(arg2) : \"\");\n    printf(\"  session_mode=%ld\\n\", (long)arg3);\n    printf(\"  persistent=%d\\n\", (int)arg4);\n    printf(\"  exclusive=%d\\n\", (int)arg5);\n}\n\nphp*:::oci8-connect-return\n{\n    printf(\"%lld: PHP oci8-connect-return\\n\", walltimestamp);\n    printf(\"  connection=0x%p\\n\", (void *)arg0);\n}\n\nphp*:::oci8-connection-close\n{\n    printf(\"%lld: PHP oci8-connect-close\\n\", walltimestamp);\n    printf(\"  connection=0x%p\\n\", (void *)arg0);\n}\n\nphp*:::oci8-error\n{\n    printf(\"%lld: PHP oci8-error\\n\", walltimestamp);\n    printf(\"  status=%d\\n\", (int)arg0);\n    printf(\"  errcode=%ld\\n\", (long)arg1);\n}\n\nphp*:::oci8-check-connection\n{\n    printf(\"%lld: PHP oci8-check-connection\\n\", walltimestamp);\n    printf(\"  connection=0x%p\\n\", (void *)arg0);\n    printf(\"  client_id=\\\"%s\\\"\\n\", arg1 ? copyinstr(arg1) : \"\");\n    printf(\"  is_open=%d\\n\", arg2);\n    printf(\"  errcode=%ld\\n\", (long)arg3);\n    printf(\"  server_status=%lu\\n\", (unsigned long)arg4);\n}\n\nphp*:::oci8-sqltext\n{\n    printf(\"%lld: PHP oci8-sqltext\\n\", walltimestamp);\n    printf(\"  connection=0x%p\\n\", (void *)arg0);\n    printf(\"  client_id=\\\"%s\\\"\\n\", arg1 ? copyinstr(arg1) : \"\");\n    printf(\"  statement=0x%p\\n\", (void *)arg2);\n    printf(\"  sql=\\\"%s\\\"\\n\", arg3 ? copyinstr(arg3) : \"\");\n}\n\nphp*:::oci8-execute-mode\n{\n    printf(\"%lld: PHP oci8-execute-mode\\n\", walltimestamp);\n    printf(\"  connection=0x%p\\n\", (void *)arg0);\n    printf(\"  client_id=\\\"%s\\\"\\n\", arg1 ? copyinstr(arg1) : \"\");\n    printf(\"  statement=0x%p\\n\", (void *)arg2);\n    printf(\"  mode=0x%x\\n\", arg3);\n}\n```\n\nУ цьому скрипті з dtrace використовується опція `-Z`, що дозволяє йому запускатись навіть якщо ніяких процесів PHP не запущено. Якщо не задати цю опцію, то скрипт відразу припинить свою роботу, тому що відсутні зонди для відстеження.\n\nНа багатопроцесорних машинах порядок зондів може бути послідовним. Це залежить від того, на яких ядрах працюють зонди і як потоки мігрують між ядрами. У такій ситуації є сенс орієнтуватися на тимчасові мітки зондів.\n\nСкрипт відстежує всі повідомлення статичних зондів PHP OCI8 рівня користувача протягом роботи PHP. Запускаємо скрипт D:\n\n```\n# ./user_oci8_probes.d\n```\n\nЗапускаємо скрипт PHP або свою програму. D-скрипт виводитиме всі аргументи зондів при їх спрацьовуванні. Наприклад, простий скрипт PHP, що виконує запит до бази даних може створювати такі повідомлення:\n\n```\n1381794982092854582: PHP connect-entry\n  credentials=\"hr@localhost/pdborcl\"\n  charset=\"\"\n  session_mode=0\n  persistent=0\n  exclusive=0\n1381794982183158766: PHP oci8-connect-return\n  connection=0x7f4a7907bfb8\n1381794982183594576: PHP oci8-sqltext\n  connection=0x7f4a7907bfb8\n  client_id=\"Chris\"\n  statement=0x7f4a7907c2a0\n  sql=\"select * from employees\"\n1381794982183783706: PHP oci8-execute-mode\n  connection=0x7f4a7907bfb8\n  client_id=\"Chris\"\n  statement=0x7f4a7907c2a0\n  mode=0x20\n1381794982444344390: PHP oci8-connect-close\n  connection=0x7f4a7907bfb8\n```\n\nПісля завершення діагностики D-скрипт можна перервати за допомогою CTRL+C.\n\n## Дивіться також\n\n-   [Динамічна трасування DTrace](features.dtrace.md)\n","title":"OCI8 та динамічне трасування DTrace","contentType":2,"navigation":[{"oci8.taf.md":"« Підтримка прозорого для програм відновлення після відмови (Transparent Application Failover або TAF) для OCI8"},{"oci8.datatypes.md":"Типи даних, що підтримуються »"},{"index.md":"PHP Manual"},{"book.oci8.md":"OCI8"}]}},"__N_SSG":true}