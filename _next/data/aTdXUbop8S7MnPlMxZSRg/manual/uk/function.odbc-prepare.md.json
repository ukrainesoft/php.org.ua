{"pageProps":{"page":{"slug":"function.odbc-prepare.md","content":"# odbc\\_prepare\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nodbc\\_prepare — Підготовка запиту до виконання\n\n### Опис\n\n```methodsynopsis\nodbc_prepare(resource $odbc, string $query): resource|false\n```\n\nПідготовка запиту до виконання. Ідентифікатор результату може бути використаний пізніше для виконання запиту за допомогою [odbc\\_execute()](function.odbc-execute.md)\n\nДеякі бази даних (наприклад, IBM DB2, MS SQL Server та Oracle) підтримують процедури, що зберігаються, які приймають параметри типу IN, INOUT і OUT, як визначено в специфікації ODBC. Однак драйвер Unified ODBC в даний час підтримує лише параметри типу IN для збережених процедур.\n\n### Список параметрів\n\n`odbc`\n\nІдентифікатор з'єднання ODBC, за подробицями звертайтесь до [odbc\\_connect()](function.odbc-connect.md)\n\n`query`\n\nПідготовлюваний запит у вигляді рядка.\n\n### Значення, що повертаються\n\nПовертає ідентифікатор результату ODBC, якщо команда SQL була успішно підготовлена. У разі виникнення помилки повертає **`false`**\n\n### Приклади\n\n**Приклад #1 Приклад использования[odbc\\_execute()](function.odbc-execute.md)и**odbc\\_prepare()\\*\\*\\*\\*\n\nУ даному коді значення $success дорівнюватиме **`true`**, тільки якщо всі три параметри myproc є параметрами IN:\n\n```php\n<?php\n$a = 1;\n$b = 2;\n$c = 3;\n$stmt    = odbc_prepare($conn, 'CALL myproc(?,?,?)');\n$success = odbc_execute($stmt, array($a, $b, $c));\n?>\n```\n\nЯкщо потрібно викликати процедуру, що зберігається з використанням параметрів INOUT або OUT, рекомендується використовувати власний модуль для вашої бази даних (наприклад, [oci8](ref.oci8.md)для Oracle).\n\n### Дивіться також\n\n-   [odbc\\_execute()](function.odbc-execute.md) \\- Виконує запит\n","title":"odbc\\_prepare","contentType":2,"navigation":[{"function.odbc-pconnect.md":"« odbc\\_pconnect"},{"function.odbc-primarykeys.md":"odbc\\_primarykeys »"},{"index.md":"PHP Manual"},{"ref.uodbc.md":"Функції ODBC"}]}},"__N_SSG":true}