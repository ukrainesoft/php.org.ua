{"pageProps":{"page":{"slug":"class.errorexception.md","content":"# ErrorException\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\n## Вступ\n\nВиняток у разі виникнення помилки.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class ErrorException\n    \n\n    \n     extends\n      Exception\n     {\n\n    /* Свойства */\n    \n     protected\n     int\n      $severity = E_ERROR;\n\n\n    /* Наследуемые свойства */\n    protected\n      string\n       $message = \"\";\nprivate\n      string\n       $string = \"\";\nprotected\n      int\n       $code;\nprotected\n      string\n       $file = \"\";\nprotected\n      int\n       $line;\nprivate\n      array\n       $trace = [];\nprivate\n      ?Throwable\n       $previous = null;\n\n\n    /* Методы */\n    \n   public __construct(    string $message = \"\",    int $code = 0,    int $severity = E_ERROR,    ?string $filename = null,    ?int $line = null,    ?Throwable $previous = null)\n\n    final public getSeverity(): int\n\n\n    /* Наследуемые методы */\n    final public Exception::getMessage(): string\nfinal public Exception::getPrevious(): ?Throwable\nfinal public Exception::getCode(): int\nfinal public Exception::getFile(): string\nfinal public Exception::getLine(): int\nfinal public Exception::getTrace(): array\nfinal public Exception::getTraceAsString(): string\npublic Exception::__toString(): string\nprivate Exception::__clone(): void\n\n   }\n```\n\n## Властивості\n\nseverity\n\nСерйозність виключення\n\n## Приклади\n\n**Приклад #1 Использование[set\\_error\\_handler()](function.set-error-handler.md) змінити повідомлення про помилки в ErrorException.**\n\n```php\n<?php\nfunction exception_error_handler(int $errno, string $errstr, string $errfile = null, int $errline) {\n    if (!(error_reporting() & $errno)) {\n        // Этот код ошибки не входит в error_reporting\n        return;\n    }\n    throw new \\ErrorException($errstr, 0, $errno, $errfile, $errline);\n}\nset_error_handler(exception_error_handler(...));\n// До PHP 8.1.0 и введения синтаксиса callback-функции как объекта первого класса вместо этого необходимо использовать следующий вызов:\n// set_error_handler(__NAMESPACE__ . \"\\\\exception_error_handler\");\n\n/* вызываем исключение */\nstrpos();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nFatal error: Uncaught exception 'ErrorException' with message 'strpos() expects at least 2 parameters, 0 given' in /home/bjori/tmp/ex.php:12\nStack trace:\n#0 [internal function]: exception_error_handler(2, 'strpos() expect...', '/home/bjori/php...', 12, Array)\n#1 /home/bjori/php/cleandocs/test.php(12): strpos()\n#2 {main}\n  thrown in /home/bjori/tmp/ex.php on line 12\n```\n\n## Зміст\n\n-   [ErrorException::\\_\\_construct](errorexception.construct.md) \\- Створює виняток\n-   [ErrorException::getSeverity](errorexception.getseverity.md)— Отримує серйозність виключення\n","title":"ErrorException","contentType":2,"navigation":[{"exception.clone.md":"« Exception::\\_\\_clone"},{"errorexception.construct.md":"ErrorException::\\_\\_construct »"},{"index.md":"PHP Manual"},{"reserved.exceptions.md":"Обумовлені винятки"}]}},"__N_SSG":true}