{"pageProps":{"page":{"slug":"class.quickhashstringinthash.md","content":"# Клас QuickHashStringIntHash\n\n(No version information available, might only be in Git)\n\n## Вступ\n\nКлас-обгортка для хеш-таблиці з рядковими ключами та значеннями, що є цілими числами. Також реалізує інтерфейс [ArrayAccess](class.arrayaccess.md)\n\nКлас реалізує інтерфейс [Iterator](class.iterator.md)що дає можливість перебору за допомогою конструкції [`foreach`](control-structures.foreach.md). Порядок проходження елементів не гарантується.\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class QuickHashStringIntHash\n     \n     {\n    \n    /* Константы */\n    \n     const\n     int\n      CHECK_FOR_DUPES = 1;\n\n    const\n     int\n      DO_NOT_USE_ZEND_ALLOC = 2;\n\n\n    /* Методы */\n    \n   public add(string $key, int $value): bool\npublic __construct(int $size, int $options = 0)\npublic delete(string $key): bool\npublic exists(string $key): bool\npublic get(string $key): mixed\npublic getSize(): int\npublic static loadFromFile(string $filename, int $size = 0, int $options = 0): QuickHashStringIntHash\npublic static loadFromString(string $contents, int $size = 0, int $options = 0): QuickHashStringIntHash\npublic saveToFile(string $filename): void\npublic saveToString(): string\npublic set(string $key, int $value): int\npublic update(string $key, int $value): bool\n\n   }\n```\n\n## Обумовлені константи\n\n**`QuickHashIntHash::CHECK_FOR_DUPES`**\n\nЯкщо увімкнено, то додавання повторюваних елементів до набору (за допомогою методів [QuickHashStringIntHash::add()](quickhashstringinthash.add.md) або [QuickHashStringIntHash::loadFromFile()](quickhashstringinthash.loadfromfile.md)) призведе до відкидання цих елементів. Ця функціональність дещо уповільнює роботу, так що має використовуватися лише якщо дійсно необхідний.\n\n**`QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC`**\n\nЗабороняє використання вбудованого в PHP менеджера пам'яті внутрішніх структур. Якщо увімкнено цю опцію, то пам'ять, що використовується, не враховуватиметься налаштуванням [memory\\_limit](ini.core.md#ini.memory-limit)\n\n## Зміст\n\n-   [QuickHashStringIntHash::add](quickhashstringinthash.add.md)— Метод додає новий запис у хеш\n-   [QuickHashStringIntHash::\\_\\_construct](quickhashstringinthash.construct.md)— Створює новий об'єкт QuickHashStringIntHash\n-   [QuickHashStringIntHash::delete](quickhashstringinthash.delete.md)— Метод видаляє запис із хешу\n-   [QuickHashStringIntHash::exists](quickhashstringinthash.exists.md)— Метод перевіряє, чи є ключ частиною хешу\n-   [QuickHashStringIntHash::get](quickhashstringinthash.get.md)— Метод отримує значення з хеша за його ключем.\n-   [QuickHashStringIntHash::getSize](quickhashstringinthash.getsize.md)— Повертає кількість елементів у хеші\n-   [QuickHashStringIntHash::loadFromFile](quickhashstringinthash.loadfromfile.md)— Фабричний метод створює хеш із файлу\n-   [QuickHashStringIntHash::loadFromString](quickhashstringinthash.loadfromstring.md)— Фабричний метод створює хеш із рядка\n-   [QuickHashStringIntHash::saveToFile](quickhashstringinthash.savetofile.md)— Метод зберігає хеш у пам'яті на диску\n-   [QuickHashStringIntHash::saveToString](quickhashstringinthash.savetostring.md)— Метод повертає серіалізовану версію хешу\n-   [QuickHashStringIntHash::set](quickhashstringinthash.set.md)— Метод оновлює запис у хеші новим значенням або додає новий, якщо запис не існує\n-   [QuickHashStringIntHash::update](quickhashstringinthash.update.md)— Метод оновлює запис у хеші новим значенням\n","title":"Клас QuickHashStringIntHash","contentType":2,"navigation":[{"quickhashinthash.update.md":"« QuickHashIntHash::update"},{"quickhashstringinthash.add.md":"QuickHashStringIntHash::add »"},{"index.md":"PHP Manual"},{"book.quickhash.md":"Quickhash"}]}},"__N_SSG":true}