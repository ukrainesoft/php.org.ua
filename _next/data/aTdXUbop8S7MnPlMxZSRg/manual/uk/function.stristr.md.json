{"pageProps":{"page":{"slug":"function.stristr.md","content":"# stristr\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nstristr - Реєстронезалежний варіант функції [strstr()](function.strstr.md)\n\n### Опис\n\n```methodsynopsis\nstristr(string $haystack, string $needle, bool $before_needle = false): string|false\n```\n\nПовертає весь рядок `haystack` починаючи з першого входження `needle` включно.\n\n### Список параметрів\n\n`haystack`\n\nРядок, в якому проводиться пошук\n\n`needle`\n\nРядок для пошуку.\n\nДо PHP 8.0.0, если параметр`needle` - не рядок, він перетворюється на ціле число і трактується як код символу. Ця поведінка застаріла з PHP 7.3.0 і покладатися на неї не рекомендується. Залежно від передбачуваної поведінки, параметр `needle` повинен бути або явно приведений до рядка, або повинен бути виконаний явний виклик функції [chr()](function.chr.md)\n\n`before_needle`\n\nЕсли установлен в\\*\\*`true`\\*\\* **stristr()** повертає частину рядка `haystack`до первого вхождения`needle` (Не включаючи needle).\n\n`needle`и`haystack` обробляються без урахування регістру.\n\n### Значення, що повертаються\n\nПовертає зазначений підрядок. Якщо підрядок `needle` не знайдено, повертається **`false`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Перетворення регістру більше не залежить від локалі, встановленої за допомогою функції [setlocale()](function.setlocale.md). . Буде перетворено лише символи ASCII. Байти не ASCII-кодування будуть порівнюватися за значенням байта. |\n| 8.0.0 | Параметр`needle` тепер допускає порожній рядок. |\n| 8.0.0 | Передача цілого числа (int) `needle`більше не підтримується. |\n| 7.3.0 | Передача цілого числа (int) `needle` оголошено застарілою. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** stristr()\\*\\*\\*\\*\n\n```php\n<?php\n  $email = 'USER@EXAMPLE.com';\n  echo stristr($email, 'e'); // выводит ER@EXAMPLE.com\n  echo stristr($email, 'e', true); // выводит US\n?>\n```\n\n**Приклад #2 Перевірка на входження рядка**\n\n```php\n<?php\n  $string = 'Hello World!';\n  if(stristr($string, 'earth') === FALSE) {\n    echo '\"earth\" не найдена в строке';\n  }\n// выводит: \"earth\" не найдена в строке\n?>\n```\n\n**Приклад #3 Використання не рядка у пошуку**\n\n```php\n<?php\n  $string = 'APPLE';\n  echo stristr($string, 97); // 97 = a в нижнем регистре\n// выводит: APPLE\n?>\n```\n\n### Примітки\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n### Дивіться також\n\n-   [strstr()](function.strstr.md) \\- Знаходить перше входження підрядка\n-   [strrchr()](function.strrchr.md) \\- Знаходить останнє входження символу у рядку\n-   [stripos()](function.stripos.md) \\- Повертає позицію першого входження підрядка без урахування регістру\n-   [strpbrk()](function.strpbrk.md) \\- Шукає у рядку будь-який символ із заданого набору\n-   [preg\\_match()](function.preg-match.md) \\- Виконує перевірку на відповідність регулярному виразу\n","title":"stristr","contentType":2,"navigation":[{"function.stripslashes.md":"« stripslashes"},{"function.strlen.md":"strlen »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}