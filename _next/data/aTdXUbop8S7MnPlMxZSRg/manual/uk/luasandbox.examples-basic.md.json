{"pageProps":{"page":{"slug":"luasandbox.examples-basic.md","content":"## Базове використання LuaSandbox\n\nПісля того, як ви скомпілювали PHP з підтримкою LuaSandbox, ви можете почати використовувати LuaSandbox для безпечного виконання наданого користувачем коду Lua.\n\n**Приклад #1 Виконайте код Lua**\n\n```php\n<?php\n\n$sandbox = new LuaSandbox;\n$sandbox->setMemoryLimit( 50 * 1024 * 1024 );\n$sandbox->setCPULimit( 10 );\n\n// Зарегистрируйте некоторые функции в среде Lua\n\nfunction frobnosticate( $v ) {\n    return [ $v + 42 ];\n}\n\n$sandbox->registerLibrary( 'php', [\n    'frobnosticate' => 'frobnosticate',\n    'output' => function ( $string ) {\n        echo \"$string\\n\";\n    },\n    'error' => function () {\n        throw new LuaSandboxRuntimeError( \"Что-то пошло не так\" );\n    }\n] );\n\n// Выполните некоторый код Lua, включая callback-функции PHP и Lua.\n\n$luaCode = <<<EOF\nphp.output( \"Привет, мир\" );\n\nreturn \"Привет\", function ( v )\n    return php.frobnosticate( v + 200 )\nend\nEOF;\n\nlist( $hi, $frob ) = $sandbox->loadString( $luaCode )->call();\nassert( $frob->call( 4000 ) === [ 4242 ] );\n\n// Вызываемые PHP исключения LuaSandboxRuntimeError могут быть пойманы внутри Lua\n\nlist( $ok, $message ) = $sandbox->loadString( 'return pcall( php.error )' )->call();\nassert( !$ok );\nassert( $message === 'Что-то пошло не так' );\n\n?>\n```\n","title":"Базове використання LuaSandbox","contentType":2,"navigation":[{"luasandbox.examples.md":"« Приклади"},{"class.luasandbox.md":"LuaSandbox »"},{"index.md":"PHP Manual"},{"luasandbox.examples.md":"Приклади"}]}},"__N_SSG":true}