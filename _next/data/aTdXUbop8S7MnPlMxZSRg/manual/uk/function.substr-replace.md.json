{"pageProps":{"page":{"slug":"function.substr-replace.md","content":"# substr\\_replace\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nsubstr\\_replace — Замінює частину рядка\n\n### Опис\n\n```methodsynopsis\nsubstr_replace(    array|string $string,    array|string $replace,    array|int $offset,    array|int|null $length = null): string|array\n```\n\n**substr\\_replace()** замінює частину рядка `string`, що починається із символу з порядковим номером `offset` та (необов'язковою) довжиною `length`, рядком `replace` та повертає результат.\n\n### Список параметрів\n\n`string`\n\nВхідний рядок.\n\nТакож можна вказати масив рядків, у цьому випадку заміни відбуватимуться з кожним наданим рядком. У цьому випадку параметри `replace` `offset`и`length` можуть бути як скалярними значеннями – у цьому випадку ці значення будуть застосовані до кожного рядка, так і масивами – у цьому випадку відповідні елементи масивів будуть застосовані до кожного наданого рядка.\n\n`replace`\n\nРядок заміни.\n\n`offset`\n\nЯкщо `offset` позитивний, заміна починається з символу з порядковим номером `offset` рядки `string`\n\nЯкщо `offset` від'ємний, заміна починається із символу з порядковим номером `offset`, считая от конца строки`string`\n\n`length`\n\nЕсли аргумент положителен, то он представляет собой длину заменяемой подстроки в строке`string`. Якщо цей аргумент є негативним, він визначає кількість символів від кінця рядка `string`на яких закінчується заміна. Цей аргумент необов'язковий і за промовчанням дорівнює strlen(`string`);, то есть замена до конца строки`string`. Зрозуміло, якщо `length` дорівнює нулю, то це еквівалентно вставці `replace`в`string` на вказаній позиції `offset`\n\n### Значення, що повертаються\n\nПовертає результуючий рядок. Якщо `string` є масивом, що повертає масив.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `length` тепер допускає значення null. |\n\n### Приклади\n\n**Приклад #1 Простий приклад використання **substr\\_replace()****\n\n```php\n<?php\n$var = 'ABCDEFGH:/MNRPQR/';\necho \"Оригинал: $var<hr />\\n\";\n\n/* Обе следующих строки заменяют всю строку $var на 'bob'. */\necho substr_replace($var, 'bob', 0) . \"<br />\\n\";\necho substr_replace($var, 'bob', 0, strlen($var)) . \"<br />\\n\";\n\n/* Вставляет 'bob' в начало $var. */\necho substr_replace($var, 'bob', 0, 0) . \"<br />\\n\";\n\n/* Обе следующих строки заменяют 'MNRPQR' в $var на 'bob'. */\necho substr_replace($var, 'bob', 10, -1) . \"<br />\\n\";\necho substr_replace($var, 'bob', -7, -1) . \"<br />\\n\";\n\n/* Удаляет 'MNRPQR' из $var. */\necho substr_replace($var, '', 10, -1) . \"<br />\\n\";\n?>\n```\n\n**Приклад #2 Использование**substr\\_replace()\\*\\* для одночасної множинної заміни рядків\\*\\*\n\n```php\n<?php\n$input = array('A: XXX', 'B: XXX', 'C: XXX');\n\n// Простой случай: заменяем XXX на YYY в каждой строке.\necho implode('; ', substr_replace($input, 'YYY', 3, 3)).\"\\n\";\n\n// Более сложный случай с уникальными заменами.\n$replace = array('AAA', 'BBB', 'CCC');\necho implode('; ', substr_replace($input, $replace, 3, 3)).\"\\n\";\n\n// Замены с разными количествами символов.\n$length = array(1, 2, 3);\necho implode('; ', substr_replace($input, $replace, 3, $length)).\"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nA: YYY; B: YYY; C: YYY\nA: AAA; B: BBB; C: CCC\nA: AAAXX; B: BBBX; C: CCC\n```\n\n### Примітки\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n### Дивіться також\n\n-   [str\\_replace()](function.str-replace.md) \\- Замінює всі входження рядка пошуку на рядок заміни\n-   [substr()](function.substr.md) \\- Повертає підрядок\n-   [Доступ до символу в рядку та його зміна](language.types.string.md#language.types.string.substr)\n","title":"substr\\_replace","contentType":2,"navigation":[{"function.substr-count.md":"« substr\\_count"},{"function.substr.md":"substr »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}