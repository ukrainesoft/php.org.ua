{"pageProps":{"page":{"slug":"reflectionenum.isbacked.md","content":"# ReflectionEnum::isBacked\n\n(PHP 8 >= 8.1.0)\n\nReflectionEnum::isBacked — Визначає, чи перелік типизований\n\n### Опис\n\n```methodsynopsis\npublic ReflectionEnum::isBacked(): bool\n```\n\nТипізоване перерахування має власний скалярний еквівалент, або рядок (string), або ціле число (int). Не всі переліки є типізованими.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо перерахування є типізованим, інакше повертає **`false`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionEnum::isBacked()\\*\\*\\*\\*\n\n```php\n<?php\nenum Suit\n{\n    case Hearts;\n    case Diamonds;\n    case Clubs;\n    case Spades;\n}\n\nenum BackedSuit: string\n{\n    case Hearts = 'H';\n    case Diamonds = 'D';\n    case Clubs = 'C';\n    case Spades = 'S';\n}\n\nvar_dump((new ReflectionEnum(Suit::class))->isBacked());\nvar_dump((new ReflectionEnum(BackedSuit::class))->isBacked());\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(false)\nbool(true)\n```\n\n### Дивіться також\n\n-   [Перерахування](language.enumerations.md)\n-   [ReflectionEnum::getBackingType()](reflectionenum.getbackingtype.md) \\- Отримує тип перерахування, якщо є\n","title":"ReflectionEnum::isBacked","contentType":2,"navigation":[{"reflectionenum.hascase.md":"« ReflectionEnum::hasCase"},{"class.reflectionenumunitcase.md":"ReflectionEnumUnitCase »"},{"index.md":"PHP Manual"},{"class.reflectionenum.md":"ReflectionEnum"}]}},"__N_SSG":true}