{"pageProps":{"page":{"slug":"intlchar.toupper.md","content":"# IntlChar::toupper\n\n(PHP 7, PHP 8)\n\nIntlChar::toupper — Перетворює символ Unicode у верхній регістр\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::toupper(int|string $codepoint): int|string|null\n```\n\nПеретворює символ на його еквівалент у верхньому регістрі. Якщо цього немає, то повертається вихідний символ.\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nПовертає Simple\\_Uppercase\\_Mapping символ, якщо він є; інакше повертається вихідний символ.\n\nТип, що повертається повинен бути int, якщо тільки символ не був переданий як рядок UTF-8 (string), у цьому випадку повернеться рядок (string). У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::toupper(\"A\"));\nvar_dump(IntlChar::toupper(\"a\"));\nvar_dump(IntlChar::toupper(\"Φ\"));\nvar_dump(IntlChar::toupper(\"φ\"));\nvar_dump(IntlChar::toupper(\"1\"));\nvar_dump(IntlChar::toupper(ord(\"A\")));\nvar_dump(IntlChar::toupper(ord(\"a\")));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(1) \"A\"\nstring(1) \"A\"\nstring(2) \"Φ\"\nstring(2) \"Φ\"\nstring(1) \"1\"\nint(65)\nint(65)\n```\n\n### Дивіться також\n\n-   [IntlChar::tolower()](intlchar.tolower.md) \\- Перетворює символ Unicode на нижній регістр\n-   [IntlChar::totitle()](intlchar.totitle.md) \\- Перетворює символ Unicode на титульний регістр (titlecase)\n-   [mb\\_strtoupper()](function.mb-strtoupper.md) \\- Приведе рядок до верхнього регістру\n","title":"IntlChar::toupper","contentType":2,"navigation":[{"intlchar.totitle.md":"« IntlChar::totitle"},{"class.intlexception.md":"IntlException »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}