{"pageProps":{"page":{"slug":"function.json-validate.md","content":"# json\\_validate\n\n(PHP 8 >= 8.3.0)\n\njson\\_validate — Перевіряє, чи має рядок допустимий JSON\n\n### Опис\n\n```methodsynopsis\njson_validate(string $json, int $depth = 512, int $flags = 0): bool\n```\n\nПовертає результат перевірки відповідності формату вхідного рядка (string) допустимому JSON. Якщо функція **json\\_validate()** поверне **`true`**, функция[json\\_decode()](function.json-decode.md)успешно декодирует входную строку при использовании тех же параметров`depth`и`flags`\n\nЯкщо функція **json\\_validate()** поверне **`false`**, причину можно будет установить с помощью функции[json\\_last\\_error()](function.json-last-error.md) і [json\\_last\\_error\\_msg()](function.json-last-error-msg.md)\n\nФункция\\*\\*json\\_validate()\\*\\*использует меньше памяти, чем функция[json\\_decode()](function.json-decode.md), оскільки їй не потрібно декодувати корисне навантаження JSON або створювати структуру масиву або об'єкта, що містить її.\n\n**Застереження**\n\nВиклик функції \\*\\*json\\_validate()\\*\\*непосредственно перед функцией[json\\_decode()](function.json-decode.md) призведе до непотрібного подвійного аналізу рядка, оскільки функція [json\\_decode()](function.json-decode.md) неявно виконує таку перевірку під час декодування.\n\nВикористати функцію **json\\_validate()** треба тільки у випадку, коли дані декодування корисного навантаження JSON не потрібно використовувати негайно, і необхідно знати, чи містить рядок допустимий JSON.\n\n### Список параметрів\n\n`json`\n\nРядок для перевірки.\n\nЦя функція працює тільки з рядками кодування UTF-8.\n\n> **Зауваження** :\n> \n> PHP реалізує надмножина JSON, який описаний у початковому [» RFC 7159](http://www.faqs.org/rfcs/rfc7159)\n\n`depth`\n\nМаксимальна глибина вкладеності структури, на яку проводитиметься декодування. Значення має бути більшим і менше чи одно `2147483647`\n\n`flags`\n\nВ даний час приймається тільки **`JSON_INVALID_UTF8_IGNORE`**\n\n### Значення, що повертаються\n\nПовертає \\*\\*`true`\\*\\*якщо вхідний рядок є синтаксично допустимим JSON, або **`false`** в іншому випадку.\n\n### Помилки\n\nЕсли значение параметра`depth` виходить за межі допустимого діапазону, буде викинуто виняток [ValueError](class.valueerror.md)\n\nЕсли значение параметра`flags`— неприпустимий прапор, буде викинуто виняток [ValueError](class.valueerror.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** json\\_validate()\\*\\*\\*\\*\n\n```php\n<?php\nvar_dump(json_validate('{ \"test\": { \"foo\": \"bar\" } }'));\nvar_dump(json_validate('{ \"\": \"\": \"\" } }'));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nbool(false)\n```\n\n### Дивіться також\n\n-   [json\\_decode()](function.json-decode.md) \\- Декодує рядок JSON\n-   [json\\_last\\_error()](function.json-last-error.md) \\- Повертає останню помилку\n-   [json\\_last\\_error\\_msg()](function.json-last-error-msg.md) \\- Повертає рядок з повідомленням про помилку останнього дзвінка json\\_encode() або json\\_decode()\n","title":"json\\_validate","contentType":2,"navigation":[{"function.json-last-error.md":"« json\\_last\\_error"},{"book.simdjson.md":"Simdjson »"},{"index.md":"PHP Manual"},{"ref.json.md":"Функції JSON"}]}},"__N_SSG":true}