{"pageProps":{"page":{"slug":"function.imagecropauto.md","content":"# imagecropauto\n\n(PHP 5 >= 5.5.0, PHP 7, PHP 8)\n\nimagecropauto — Обрізає зображення автоматично на основі заданого режиму\n\n### Опис\n\n```methodsynopsis\nimagecropauto(    GdImage $image,    int $mode = IMG_CROP_DEFAULT,    float $threshold = 0.5,    int $color = -1): GdImage|false\n```\n\nАвтоматично обрізає зображення на основі заданого режиму (`mode`\n\n### Список параметрів\n\n`image`\n\nОб'єкт [GdImage](class.gdimage.md), що повертається однією з функцій створення зображень, наприклад, такий як [imagecreatetruecolor()](function.imagecreatetruecolor.md)\n\n`mode`\n\nОдна з наступних констант:\n\n**`IMG_CROP_DEFAULT`**\n\nТе саме, що і **`IMG_CROP_TRANSPARENT`**. До PHP 7.4.0 вбудований модуль libgd вибирав режим **`IMG_CROP_SIDES`**, якщо зображення не було прозорого кольору.\n\n**`IMG_CROP_TRANSPARENT`**\n\nОбрізає прозорим фоном.\n\n**`IMG_CROP_BLACK`**\n\nОбрізає чорне тло.\n\n**`IMG_CROP_WHITE`**\n\nОбрізає білим тлом.\n\n**`IMG_CROP_SIDES`**\n\nАналізує чотири кути зображення, щоб спробувати виявити фон для обрізки.\n\n**`IMG_CROP_THRESHOLD`**\n\nОбрізає зображення, використовуючи задані `threshold`и`color`\n\n`threshold`\n\nВизначає допуск у відсотках, який буде використаний для порівняння кольору зображення та кольору обрізки. Метод розрахунку різниці кольорів заснований на колірній відстані в кубі RGB(a).\n\nВраховується лише у режимі **`IMG_CROP_THRESHOLD`**\n\n> **Зауваження**: До PHP 7.4.0 у модулі libgd працював трохи інший алгоритм, тому один і той же поріг `threshold` давав різні результати для системного та вбудованого модуля libgd.\n\n`color`\n\nАбо значення кольору RGB, або індекс палітри.\n\nВраховується лише у режимі **`IMG_CROP_THRESHOLD`**\n\n### Значення, що повертаються\n\nПовертає об'єкт обрізаного зображення у разі успішного виконання або **`false`** у разі виникнення помилки. Повертає **`false`** і тоді, коли все зображення було обрізано.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `image` тепер чекає екземпляр [GdImage](class.gdimage.md); раніше очікувався коректний `gd` ресурс (Resource). |\n| 8.0.0 | У разі успішного виконання функція тепер повертає об'єкт [GDImage](class.gdimage.md); раніше повертався ресурс (resource). |\n| 7.4.0 | Поведінка imagecropauto() у комплекті libgd синхронізована із системним libgd: **`IMG_CROP_DEFAULT`** більше не використовує **`IMG_CROP_SIDES`**, і для обрізки порога тепер використовується той самий алгоритм, що й системним libgd. |\n| 7.4.0 | Значення режиму (`mode`) за замовчуванням було змінено на **`IMG_CROP_AUTO`**. . Раніше значенням за умовчанням було `-1`, що відповідає **`IMG_CROP_DEFAULT`**, але передача `-1` тепер застаріла. |\n\n### Приклади\n\n**Приклад #1 Правильна обробка автообрізання**\n\nЯк зазначено в розділі значення, що повертається, функція **imagecropauto()** повертає **`false`**, якщо все зображення було обрізано. У цьому прикладі є ресурс зображення `$im`, який повинен бути автоматично обрізаний, тільки якщо є обрізати; інакше потрібно перейти до вихідного зображення.\n\n```php\n<?php\n\n$cropped = imagecropauto($im, IMG_CROP_DEFAULT);\nif ($cropped !== false) { // в случае возврата нового объекта изображения\n    imagedestroy($im);    // мы уничтожаем исходное изображение\n    $im = $cropped;       // и назначаем обрезанное изображение в $im\n}\n\n?>\n```\n\n### Дивіться також\n\n-   [imagecrop()](function.imagecrop.md) \\- Обрізати зображення до заданого прямокутника\n","title":"imagecropauto","contentType":2,"navigation":[{"function.imagecrop.md":"« imagecrop"},{"function.imagedashedline.md":"imagedashedline »"},{"index.md":"PHP Manual"},{"ref.image.md":"Функції GD та функції для роботи із зображеннями"}]}},"__N_SSG":true}