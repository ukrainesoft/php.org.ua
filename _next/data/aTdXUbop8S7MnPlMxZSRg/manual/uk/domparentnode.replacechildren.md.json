{"pageProps":{"page":{"slug":"domparentnode.replacechildren.md","content":"# DOMParentNode::replaceChildren\n\n(PHP 8 >= 8.3.0)\n\nDOMParentNode::replaceChildren — Замінює нащадків у вузлі\n\n### Опис\n\n```methodsynopsis\npublic DOMParentNode::replaceChildren(DOMNode|string ...$nodes): void\n```\n\nЗамінює нащадків у вузлі.\n\n### Список параметрів\n\n`nodes`\n\nВузли, якими будуть замінені нащадки. Рядки автоматично перетворюються на текстові вузли.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Помилки\n\n**`DOM_HIERARCHY_REQUEST_ERR`**\n\nВиникає, якщо тип одного з переданих у параметрі `nodes` елементів не допускається в типі вузла, або якщо вузол, що додається, є одним з предків цього вузла або самим цим вузлом.\n\n**`DOM_WRONG_DOCUMENT_ERR`**\n\nВиникає, якщо один із переданих у параметрі `nodes` елементів було створено з документа, відмінного від цього, у якому було створено цей вузол.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Виклик методу на вузлі без документа власника працює. Раніше це викидало виняток [DOMException](class.domexception.md) з кодом **`DOM_HIERARCHY_REQUEST_ERR`** |\n\n### Приклади\n\n**Приклад #1 Приклад использования метода**DOMParentNode::replaceChildren()\\*\\*\\*\\*\n\n```php\n<?php\n\n$dom = new DOMDocument();\n$dom->loadHTML('<!DOCTYPE HTML><html><p>Привет!</p> проверка <p>Снова привет!</p></html>');\n\n$dom->documentElement->replaceChildren('foo', $dom->createElement('p'), 'bar');\necho $dom->saveXML();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<!DOCTYPE HTML>\n<html>foo<p/>bar</html>\n```\n","title":"DOMParentNode::replaceChildren","contentType":2,"navigation":[{"domparentnode.prepend.md":"« DOMParentNode::prepend"},{"class.domprocessinginstruction.md":"DOMProcessingInstruction »"},{"index.md":"PHP Manual"},{"class.domparentnode.md":"DOMParentNode"}]}},"__N_SSG":true}