{"pageProps":{"page":{"slug":"imagick.transparentpaintimage.md","content":"# Imagick::transparentPaintImage\n\n(PECL imagick 2 >= 2.3.0, PECL imagick 3)\n\nImagick::transparentPaintImage — Малює пікселі прозорими\n\n### Опис\n\n```methodsynopsis\npublic Imagick::transparentPaintImage(    mixed $target,    float $alpha,    float $fuzz,    bool $invert): bool\n```\n\nМалює пікселі, що відповідають цільовому кольору, прозорим. Цей метод доступний, якщо Imagick був скомпільований з версією ImageMagick 6.3.8 або старшим.\n\n### Список параметрів\n\n`target`\n\nЦільовий колір для малювання\n\n`alpha`\n\nРівень прозорості: 1.0 повністю непрозорий, тоді як 0.0 повністю прозорий.\n\n`fuzz`\n\nміра округлення (fuzz). Для прикладу, встановіть значення fuzz 10 і червоний колір з інтенсивністю 100 і 102 буде інтерпретуватися як один і той же колір.\n\n`invert`\n\nЯкщо **`true`**, зафарбовує будь-який піксель, який відповідає цільовому кольору.\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::transparentPaintImage()\\*\\*\\*\\*\n\n```php\n<?php\nfunction transparentPaintImage($color, $alpha, $fuzz) {\n    $imagick = new \\Imagick(realpath(\"images/BlueScreen.jpg\"));\n\n    //Должен быть в формате, который поддерживает прозрачность\n    $imagick->setimageformat('png');\n\n    $imagick->transparentPaintImage(\n        $color, $alpha, $fuzz * \\Imagick::getQuantum(), false\n    );\n\n    //Не требуется, но помогает убирать оставленные пиксели\n    $imagick->despeckleimage();\n\n    header(\"Content-Type: image/png\");\n    echo $imagick->getImageBlob();\n}\n\n?>\n```\n","title":"Imagick::transparentPaintImage","contentType":2,"navigation":[{"imagick.transformimagecolorspace.md":"« Imagick::transformImageColorspace"},{"imagick.transposeimage.md":"Imagick::transposeImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}