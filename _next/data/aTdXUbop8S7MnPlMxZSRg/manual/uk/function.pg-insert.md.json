{"pageProps":{"page":{"slug":"function.pg-insert.md","content":"# pg\\_insert\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\npg\\_insert — Заносить дані з масиву до таблиці бази даних\n\n### Опис\n\n```methodsynopsis\npg_insert(    PgSql\\Connection $connection,    string $table_name,    array $values,    int $flags = PGSQL_DML_EXEC): PgSql\\Result|string|bool\n```\n\n\\*\\*pg\\_insert()\\*\\*вставляет записи из массива`values`в таблицу`table_name`\n\nЯкщо `flags`указан,[pg\\_convert()](function.pg-convert.md)применяется к`values` із зазначеними прапорами.\n\nПо умолчанию**pg\\_insert()** передає необроблені значення. Значення мають бути екрановані або опція **`PGSQL_DML_ESCAPE`** має бути вказана . **`PGSQL_DML_ESCAPE`** укладає в лапки та екранує параметри/ідентифікатори. Тому імена таблиць/стовпців стають чутливими до регістру.\n\nЗверніть увагу, що ні екранування, ні підготовлений запит не захистять запит LIKE, JSON, масив, регулярні вирази і т.д. слід екранувати/перевіряти значення.\n\n### Список параметрів\n\n`connection`\n\nЕкземпляр [PgSql\\\\Connection](class.pgsql-connection.md)\n\n`table_name`\n\nІм'я таблиці для вставлення даних. Кількість колонок у таблиці `table_name` має бути не менше, ніж елементів у масиві `values`\n\n`values`\n\nАсоціативний масив(array), у якому ключі є назвами колонок таблиці `table_name`а значення - записи, які необхідно вставити в ці колонки.\n\n`flags`\n\nКомбінація констант **`PGSQL_CONV_OPTS`** **`PGSQL_DML_NO_CONV`** **`PGSQL_DML_ESCAPE`** **`PGSQL_DML_EXEC`** **`PGSQL_DML_ASYNC`** і **`PGSQL_DML_STRING`**. Якщо серед інших передається \\*\\*`PGSQL_DML_STRING`\\*\\*в параметре`flags`, функція поверне рядок запиту. Якщо встановлено **`PGSQL_DML_NO_CONV`** або **`PGSQL_DML_ESCAPE`**, то функция[pg\\_convert()](function.pg-convert.md) внутрішньо не викликається.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або **`false`** у разі виникнення помилки.. Або повертає рядок(string), якщо \\*\\*`PGSQL_DML_STRING`\\*\\*включена в список параметров аргумента`flags`\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Повертає екземпляр [PgSql\\\\Result](class.pgsql-result.md); раніше повертався ресурс ([resource](language.types.resource.md) |\n| 8.1.0 | Параметр`connection` тепер чекає екземпляр [PgSql\\\\Connection](class.pgsql-connection.md); раніше очікувався ресурс ([resource](language.types.resource.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** pg\\_insert()\\*\\*\\*\\*\n\n```php\n<?php\n  $dbconn = pg_connect('dbname=foo');\n  // Это безопасно в некоторой степени, поскольку все значения экранируются.\n  // Однако PostgreSQL поддерживает JSON/массив. Для этих значений это не безопасно\n  // ни с через экранирование, ни с помощью подготовленного запроса.\n  $res = pg_insert($dbconn, 'post_log', $_POST, PGSQL_DML_ESCAPE);\n  if ($res) {\n      echo \"Данные из POST успешно внесены в журнал\\n\";\n  } else {\n      echo \"Пользователь прислал неверные данные\\n\";\n  }\n?>\n```\n\n### Дивіться також\n\n-   [pg\\_convert()](function.pg-convert.md) \\- Перетворює значення асоціативного масиву на відповідний для SQL-запитів вид\n","title":"pg\\_insert","contentType":2,"navigation":[{"function.pg-host.md":"« pg\\_host"},{"function.pg-last-error.md":"pg\\_last\\_error »"},{"index.md":"PHP Manual"},{"ref.pgsql.md":"Функції PostgreSQL"}]}},"__N_SSG":true}