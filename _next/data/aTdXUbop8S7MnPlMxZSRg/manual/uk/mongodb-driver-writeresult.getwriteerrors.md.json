{"pageProps":{"page":{"slug":"mongodb-driver-writeresult.getwriteerrors.md","content":"# MongoDB\\\\Driver\\\\WriteResult::getWriteErrors\n\n(mongodb >=1.0.0)\n\nMongoDB\\\\Driver\\\\WriteResult::getWriteErrors — Повертає будь-які помилки запису, що відбулися\n\n### Опис\n\n```methodsynopsis\nfinal public MongoDB\\Driver\\WriteResult::getWriteErrors(): array\n```\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає масив об'єктів [MongoDB\\\\Driver\\\\WriteError](class.mongodb-driver-writeerror.md) для будь-яких помилок запису, виявлених під час операції запису. Масив буде порожнім, якщо помилок не сталося.\n\n### Помилки\n\n-   При помилці парсингу аргумент кидає виняток[MongoDB\\\\Driver\\\\Exception\\\\InvalidArgumentException](class.mongodb-driver-exception-invalidargumentexception.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** MongoDB\\\\Driver\\\\WriteResult::getWriteErrors()\\*\\* з однією помилкою\\*\\*\n\n```php\n<?php\n\n$manager = new MongoDB\\Driver\\Manager;\n\n/* По умолчанию массовые операции записи выполняются последовательно по порядку\n * и выполнение прекращается после первой ошибки.\n */\n$bulk = new MongoDB\\Driver\\BulkWrite;\n$bulk->insert(['_id' => 1]);\n$bulk->insert(['_id' => 2]);\n$bulk->insert(['_id' => 2]);\n$bulk->insert(['_id' => 3]);\n$bulk->insert(['_id' => 4]);\n$bulk->insert(['_id' => 4]);\n\ntry {\n    $result = $manager->executeBulkWrite('db.collection', $bulk);\n} catch (MongoDB\\Driver\\Exception\\BulkWriteException $e) {\n    var_dump($e->getWriteResult()->getWriteErrors());\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(1) {\n  [0]=>\n  object(MongoDB\\Driver\\WriteError)#5 (4) {\n    [\"message\"]=>\n    string(81) \"E11000 duplicate key error collection: db.collection index: _id_ dup key: { : 2 }\"\n    [\"code\"]=>\n    int(11000)\n    [\"index\"]=>\n    int(2)\n    [\"info\"]=>\n    NULL\n  }\n}\n```\n\n**Приклад #2 Приклад використання** MongoDB\\\\Driver\\\\WriteResult::getWriteErrors()\\*\\* з кількома помилками\\*\\*\n\n```php\n<?php\n\n$manager = new MongoDB\\Driver\\Manager;\n\n/* Параметр \"ordered\" может использоваться для продолжения\n * выполнения массовых операций записи после первой ошибки.\n */\n$bulk = new MongoDB\\Driver\\BulkWrite(['ordered' => false]);\n$bulk->insert(['_id' => 1]);\n$bulk->insert(['_id' => 2]);\n$bulk->insert(['_id' => 2]);\n$bulk->insert(['_id' => 3]);\n$bulk->insert(['_id' => 4]);\n$bulk->insert(['_id' => 4]);\n\ntry {\n    $result = $manager->executeBulkWrite('db.collection', $bulk);\n} catch (MongoDB\\Driver\\Exception\\BulkWriteException $e) {\n    var_dump($e->getWriteResult()->getWriteErrors());\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(2) {\n  [0]=>\n  object(MongoDB\\Driver\\WriteError)#5 (4) {\n    [\"message\"]=>\n    string(81) \"E11000 duplicate key error collection: db.collection index: _id_ dup key: { : 2 }\"\n    [\"code\"]=>\n    int(11000)\n    [\"index\"]=>\n    int(2)\n    [\"info\"]=>\n    NULL\n  }\n  [1]=>\n  object(MongoDB\\Driver\\WriteError)#6 (4) {\n    [\"message\"]=>\n    string(81) \"E11000 duplicate key error collection: db.collection index: _id_ dup key: { : 4 }\"\n    [\"code\"]=>\n    int(11000)\n    [\"index\"]=>\n    int(5)\n    [\"info\"]=>\n    NULL\n  }\n}\n```\n\n### Дивіться також\n\n-   [MongoDB\\\\Driver\\\\WriteError](class.mongodb-driver-writeerror.md)\n","title":"MongoDB\\\\Driver\\\\WriteResult::getWriteErrors","contentType":2,"navigation":[{"mongodb-driver-writeresult.getwriteconcernerror.md":"« MongoDB\\\\Driver\\\\WriteResult::getWriteConcernError"},{"mongodb-driver-writeresult.isacknowledged.md":"MongoDB\\\\Driver\\\\WriteResult::isAcknowledged »"},{"index.md":"PHP Manual"},{"class.mongodb-driver-writeresult.md":"MongoDB\\\\Driver\\\\WriteResult"}]}},"__N_SSG":true}