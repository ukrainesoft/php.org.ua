{"pageProps":{"page":{"slug":"phardata.converttoexecutable.md","content":"# PharData::convertToExecutable\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL phar >= 2.0.0)\n\nPharData::convertToExecutable — Конвертація tar/zip-архіву з даними в phar-архів, що запускається\n\n### Опис\n\n```methodsynopsis\npublic PharData::convertToExecutable(?int $format = null, ?int $compression = null, ?string $extension = null): ?Phar\n```\n\n> **Зауваження** :\n> \n> Для коректної роботи з об'єктами [Phar](class.phar.md) цьому методу необхідне встановлення значення php.ini `phar.readonly`в . В іншому випадку, буде викинуто виняток [PharException](class.pharexception.md)\n\nЦей метод використовується для конвертації tar/zip-архіву, що не запускається, а запускається phar-архів. Може бути використаний будь-який із трьох форматів, що запускаються (phar, tar або zip). Також допустимо стиснення архіву цілком.\n\nЯкщо зміни не вказані, цей метод кидає виняток [BadMethodCallException](class.badmethodcallexception.md)\n\nУ разі успішного виконання, цей метод створює новий архів на диску та повертає об'єкт [Phar](class.phar.md). Старий архів залишається недоторканим.\n\n### Список параметрів\n\n`format`\n\nОдна из констант:`Phar::PHAR` `Phar::TAR`, или`Phar::ZIP`. Якщо поставлено **`null`**, буде збережено поточний формат.\n\n`compression`\n\nОдна из констант:`Phar::NONE` (без стиснення всього архіву), `Phar::GZ` (zlib стиск), `Phar::BZ2` (Bzip стиснення).\n\n`extension`\n\nЦей параметр використовується для явного завдання розширення нового архіву. Зверніть увагу, що для того, щоб оброблятися як phar-архів, файли мають у своєму розширенні мати `.phar`\n\nПри конвертации в phar-архива, расширение по умолчанию`.phar` `.phar.gz`или`.phar.bz2`, в зависимости от заданного типа сжатия. Для tar-архивов, расширение по умолчанию`.phar.tar` `.phar.tar.gz`, и`.phar.tar.bz2`Для zip-архивов расширение по умолчанию`.phar.zip`\n\n### Значення, що повертаються\n\nЦей метод повертає об'єкт [Phar](class.phar.md)и\\*\\*`null`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nМетод викидає виняток [BadMethodCallException](class.badmethodcallexception.md) якщо не може зробити стиснення, або якщо заданий невідомий алгоритм стиснення, для архіву включено буферизацію за допомогою [Phar::startBuffering()](phar.startbuffering.md), а метод[Phar::stopBuffering()](phar.stopbuffering.md) не викликався. Викидається виняток [UnexpectedValueException](class.unexpectedvalueexception.md), якщо запис заборонено. І викидається [PharException](class.pharexception.md), якщо виникли проблеми з записом на диск.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `format` `compression`и`localName` тепер допускають значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** PharData::convertToExecutable()\\*\\*\\*\\*\n\nВикористовуємо PharData::convertToExecutable():\n\n```php\n<?php\ntry {\n    $tarphar = new PharData('myphar.tar');\n    // конвертируем в формат phar\n    // обратите внимание, что myphar.tar *не* удаляется\n    $phar = $tarphar->convertToExecutable(Phar::PHAR); // creates myphar.phar\n    $phar->setStub($phar->createDefaultStub('cli.php', 'web/index.php'));\n    // создаём myphar.phar.tgz\n    $compressed = $tarphar->convertToExecutable(Phar::TAR, Phar::GZ, '.phar.tgz');\n} catch (Exception $e) {\n    // обработка ошибок\n}\n?>\n```\n\n### Дивіться також\n\n-   [Phar::convertToExecutable()](phar.converttoexecutable.md) \\- Конвертує phar-архів в інший формат файлу, що виконується.\n-   [Phar::convertToData()](phar.converttodata.md) \\- Конвертує phar-архів в tar-або zip-файл, що не виконується.\n-   [PharData::convertToData()](phardata.converttodata.md) \\- Конвертація phar-архіву в tar/zip-архів, що не запускається.\n","title":"PharData::convertToExecutable","contentType":2,"navigation":[{"phardata.converttodata.md":"« PharData::convertToData"},{"phardata.copy.md":"PharData::copy »"},{"index.md":"PHP Manual"},{"class.phardata.md":"PharData"}]}},"__N_SSG":true}