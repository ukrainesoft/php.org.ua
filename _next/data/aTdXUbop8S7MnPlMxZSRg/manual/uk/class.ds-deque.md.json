{"pageProps":{"page":{"slug":"class.ds-deque.md","content":"# Клас Deque\n\n(PECL ds >= 1.0.0)\n\n## Вступ\n\nДвостороння черга – це послідовність значень у безперервному буфері, який росте та зменшуються автоматично. Deque (вимовляється як \"deck\") є абревіатурою від \"double-ended queue\" і використовується всередині [Ds\\\\Queue](class.ds-queue.md)\n\nДва покажчики використовуються для відстеження початку та кінця. Покажчики можуть \"обернути\" кінець черги, що дозволяє уникнути переміщення значень для звільнення місця. Це робить операції shift та unshift такими швидкими, що [Ds\\\\Vector](class.ds-vector.md) не може з цим змагатися.\n\nДоступ до елемента за індексом вимагає перерахунку залежно від його індексу у буфері: `((head + position) % capacity)`\n\n## Сильні сторони\n\n-   Підтримує синтаксис масиву (квадратні дужки).\n-   Потрібно менше пам'яті, ніж масив (array) з тією самою кількістю значень.\n-   Автоматично звільняє пам'ять, коли кількість елементів зменшується.\n-   **get()** **set()** **push()** **pop()** \\*\\*shift()** і **unshift()\\*\\*мають складність O(1).\n\n## Слабкі сторони\n\n-   Місткість обмежена ступенями двійки.\n-   \\*\\*insert()** і **remove()\\*\\*мають складність O(n).\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     \n      class Ds\\Deque\n     \n\n     implements \n       Ds\\Sequence,  ArrayAccess {\n    \n    /* Константы */\n    \n     const\n     int\n      MIN_CAPACITY = 8;\n\n\n    /* Методы */\n    \n   public allocate(int $capacity): void\npublic apply(callable $callback): void\npublic capacity(): int\npublic clear(): void\npublic contains(mixed ...$values): bool\npublic copy(): Ds\\Deque\npublic filter(callable $callback = ?): Ds\\Deque\npublic find(mixed $value): mixed\npublic first(): mixed\npublic get(int $index): mixed\npublic insert(int $index, mixed ...$values): void\npublic isEmpty(): bool\npublic join(string $glue = ?): string\npublic last(): mixed\npublic map(callable $callback): Ds\\Deque\npublic merge(mixed $values): Ds\\Deque\npublic pop(): mixed\npublic push(mixed ...$values): void\npublic reduce(callable $callback, mixed $initial = ?): mixed\npublic remove(int $index): mixed\npublic reverse(): void\npublic reversed(): Ds\\Deque\npublic rotate(int $rotations): void\npublic set(int $index, mixed $value): void\npublic shift(): mixed\npublic slice(int $index, int $length = ?): Ds\\Deque\npublic sort(callable $comparator = ?): void\npublic sorted(callable $comparator = ?): Ds\\Deque\npublic sum(): int|float\npublic toArray(): array\npublic unshift(mixed $values = ?): void\n\n   }\n```\n\n## Обумовлені константи\n\n**`Ds\\Deque::MIN_CAPACITY`**\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL ds 1.3.0 | Тепер клас реалізує [ArrayAccess](class.arrayaccess.md) |\n\n## Зміст\n\n-   [Ds\\\\Deque::allocate](ds-deque.allocate.md)— Виділяє пам'ять під зазначену місткість\n-   [Ds\\\\Deque::apply](ds-deque.apply.md) \\- Оновлює всі значення, застосовуючи callback-функцію до кожного значення\n-   [Ds\\\\Deque::capacity](ds-deque.capacity.md)— Повертає поточну місткість\n-   [Ds\\\\Deque::clear](ds-deque.clear.md)— Видаляє всі значення із двосторонньої черги\n-   [Ds\\\\Deque::\\_\\_construct](ds-deque.construct.md) \\- Створює новий екземпляр\n-   [Ds\\\\Deque::contains](ds-deque.contains.md)— Перевіряє, чи є у двосторонній черзі задані значення\n-   [Ds\\\\Deque::copy](ds-deque.copy.md)— Повертає поверхневу копію колекції\n-   [Ds\\\\Deque::count](ds-deque.count.md)— Повертає кількість елементів двосторонньої черги\n-   [Ds\\\\Deque::filter](ds-deque.filter.md)— Створює нову двосторонню чергу з елементів, вибраних за допомогою заданої callback-функції\n-   [Ds\\\\Deque::find](ds-deque.find.md) \\- Пошук індексу за значенням\n-   [Ds\\\\Deque::first](ds-deque.first.md)— Повертає перший елемент двосторонньої черги\n-   [Ds\\\\Deque::get](ds-deque.get.md)— Повертає значення за індексом\n-   [Ds\\\\Deque::insert](ds-deque.insert.md)— Вставляє значення за вказаним індексом\n-   [Ds\\\\Deque::isEmpty](ds-deque.isempty.md)— Перевіряє, чи порожня двостороння черга\n-   [Ds\\\\Deque::join](ds-deque.join.md) \\- Склеює всі значення в рядок\n-   [Ds\\\\Deque::jsonSerialize](ds-deque.jsonserialize.md)— Повертає колекцію в JSON-представництві\n-   [Ds\\\\Deque::last](ds-deque.last.md)— Повертає останнє значення двосторонньої черги\n-   [Ds\\\\Deque::map](ds-deque.map.md)— Повертає результат застосування callback-функції до всіх значень двосторонньої черги\n-   [Ds\\\\Deque::merge](ds-deque.merge.md)— Повертає результат додавання всіх заданих значень у двосторонню чергу\n-   [Ds\\\\Deque::pop](ds-deque.pop.md)— Видаляє та повертає останнє значення\n-   [Ds\\\\Deque::push](ds-deque.push.md)— Додає значення наприкінці двосторонньої черги\n-   [Ds\\\\Deque::reduce](ds-deque.reduce.md) \\- Зменшує колекцію до одного значення, використовуючи callback-функцію\n-   [Ds\\\\Deque::remove](ds-deque.remove.md)— Видаляє та повертає значення за індексом\n-   [Ds\\\\Deque::reverse](ds-deque.reverse.md)— Перевертає поточну двосторонню чергу\n-   [Ds\\\\Deque::reversed](ds-deque.reversed.md)— Повертає перегорнуту копію двосторонньої черги\n-   [Ds\\\\Deque::rotate](ds-deque.rotate.md)— Перемотує двосторонню чергу на задану кількість значень\n-   [Ds\\\\Deque::set](ds-deque.set.md)— Замінює значення за вказаним індексом\n-   [Ds\\\\Deque::shift](ds-deque.shift.md)— Видаляє та повертає перше значення\n-   [Ds\\\\Deque::slice](ds-deque.slice.md)— Повертає почергово із заданого діапазону\n-   [Ds\\\\Deque::sort](ds-deque.sort.md)— Сортує двосторонню чергу\n-   [Ds\\\\Deque::sorted](ds-deque.sorted.md)— Повертає відсортовану за значенням копію двосторонньої черги\n-   [Ds\\\\Deque::sum](ds-deque.sum.md)— Повертає суму всіх значень двосторонньої черги\n-   [Ds\\\\Deque::toArray](ds-deque.toarray.md) \\- Перетворює двосторонню чергу на масив (array)\n-   [Ds\\\\Deque::unshift](ds-deque.unshift.md)— Додає значення на початок двосторонньої черги\n","title":"Клас Deque","contentType":2,"navigation":[{"ds-vector.unshift.md":"« Ds\\\\Vector::unshift"},{"ds-deque.allocate.md":"Ds\\\\Deque::allocate »"},{"index.md":"PHP Manual"},{"book.ds.md":"Структури даних"}]}},"__N_SSG":true}