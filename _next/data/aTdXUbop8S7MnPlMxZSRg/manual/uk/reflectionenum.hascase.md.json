{"pageProps":{"page":{"slug":"reflectionenum.hascase.md","content":"# ReflectionEnum::hasCase\n\n(PHP 8 >= 8.1.0)\n\nReflectionEnum::hasCase — Перевіряє варіант перерахування\n\n### Опис\n\n```methodsynopsis\npublic ReflectionEnum::hasCase(string $name): bool\n```\n\nПовертає, чи визначено цей варіант перерахування.\n\n### Список параметрів\n\n`name`\n\nВаріант переліку для перевірки.\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо варіант визначений, інакше повертає **`false`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionEnum::hasCase()\\*\\*\\*\\*\n\n```php\n<?php\nenum Suit\n{\n    case Hearts;\n    case Diamonds;\n    case Clubs;\n    case Spades;\n}\n\n$rEnum = new ReflectionEnum(Suit::class);\n\nvar_dump($rEnum->hasCase('Hearts'));\nvar_dump($rEnum->hasCase('Horseshoes'));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nbool(false)\n```\n\n### Дивіться також\n\n-   [Перерахування](language.enumerations.md)\n-   [ReflectionEnum::getCase()](reflectionenum.getcase.md) \\- Повертає певний варіант перерахування\n-   [ReflectionEnum::getCases()](reflectionenum.getcases.md) \\- Повертає список усіх варіантів перерахування\n","title":"ReflectionEnum::hasCase","contentType":2,"navigation":[{"reflectionenum.getcases.md":"« ReflectionEnum::getCases"},{"reflectionenum.isbacked.md":"ReflectionEnum::isBacked »"},{"index.md":"PHP Manual"},{"class.reflectionenum.md":"ReflectionEnum"}]}},"__N_SSG":true}