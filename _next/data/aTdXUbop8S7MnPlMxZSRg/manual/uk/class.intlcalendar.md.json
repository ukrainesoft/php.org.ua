{"pageProps":{"page":{"slug":"class.intlcalendar.md","content":"# Клас IntlCalendar\n\n(PHP 5 >= 5.5.0, PHP 7, PHP 8, PECL >= 3.0.0a1)\n\n## Вступ\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class IntlCalendar\n     {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      FIELD_ERA;\n\n    public\n     const\n     int\n      FIELD_YEAR;\n\n    public\n     const\n     int\n      FIELD_MONTH;\n\n    public\n     const\n     int\n      FIELD_WEEK_OF_YEAR;\n\n    public\n     const\n     int\n      FIELD_WEEK_OF_MONTH;\n\n    public\n     const\n     int\n      FIELD_DATE;\n\n    public\n     const\n     int\n      FIELD_DAY_OF_YEAR;\n\n    public\n     const\n     int\n      FIELD_DAY_OF_WEEK;\n\n    public\n     const\n     int\n      FIELD_DAY_OF_WEEK_IN_MONTH;\n\n    public\n     const\n     int\n      FIELD_AM_PM;\n\n    public\n     const\n     int\n      FIELD_HOUR;\n\n    public\n     const\n     int\n      FIELD_HOUR_OF_DAY;\n\n    public\n     const\n     int\n      FIELD_MINUTE;\n\n    public\n     const\n     int\n      FIELD_SECOND;\n\n    public\n     const\n     int\n      FIELD_MILLISECOND;\n\n    public\n     const\n     int\n      FIELD_ZONE_OFFSET;\n\n    public\n     const\n     int\n      FIELD_DST_OFFSET;\n\n    public\n     const\n     int\n      FIELD_YEAR_WOY;\n\n    public\n     const\n     int\n      FIELD_DOW_LOCAL;\n\n    public\n     const\n     int\n      FIELD_EXTENDED_YEAR;\n\n    public\n     const\n     int\n      FIELD_JULIAN_DAY;\n\n    public\n     const\n     int\n      FIELD_MILLISECONDS_IN_DAY;\n\n    public\n     const\n     int\n      FIELD_IS_LEAP_MONTH;\n\n    public\n     const\n     int\n      FIELD_FIELD_COUNT;\n\n    public\n     const\n     int\n      FIELD_DAY_OF_MONTH;\n\n    public\n     const\n     int\n      DOW_SUNDAY;\n\n    public\n     const\n     int\n      DOW_MONDAY;\n\n    public\n     const\n     int\n      DOW_TUESDAY;\n\n    public\n     const\n     int\n      DOW_WEDNESDAY;\n\n    public\n     const\n     int\n      DOW_THURSDAY;\n\n    public\n     const\n     int\n      DOW_FRIDAY;\n\n    public\n     const\n     int\n      DOW_SATURDAY;\n\n    public\n     const\n     int\n      DOW_TYPE_WEEKDAY;\n\n    public\n     const\n     int\n      DOW_TYPE_WEEKEND;\n\n    public\n     const\n     int\n      DOW_TYPE_WEEKEND_OFFSET;\n\n    public\n     const\n     int\n      DOW_TYPE_WEEKEND_CEASE;\n\n    public\n     const\n     int\n      WALLTIME_FIRST;\n\n    public\n     const\n     int\n      WALLTIME_LAST;\n\n    public\n     const\n     int\n      WALLTIME_NEXT_VALID;\n\n\n    /* Методы */\n    \n   private __construct()\n\n    public add(int $field, int $value): bool\npublic after(IntlCalendar $other): bool\npublic before(IntlCalendar $other): bool\npublic clear(?int $field = null): true\npublic static createInstance(IntlTimeZone|DateTimeZone|string|null $timezone = null, ?string $locale = null): ?IntlCalendar\npublic equals(IntlCalendar $other): bool\npublic fieldDifference(float $timestamp, int $field): int|false\npublic static fromDateTime(DateTime|string $datetime, ?string $locale = null): ?IntlCalendar\npublic get(int $field): int|false\npublic getActualMaximum(int $field): int|false\npublic getActualMinimum(int $field): int|false\npublic static getAvailableLocales(): array\npublic getDayOfWeekType(int $dayOfWeek): int|false\npublic getErrorCode(): int|false\npublic getErrorMessage(): string|false\npublic getFirstDayOfWeek(): int|false\npublic getGreatestMinimum(int $field): int|false\npublic static getKeywordValuesForLocale(string $keyword, string $locale, bool $onlyCommon): IntlIterator|false\npublic getLeastMaximum(int $field): int|false\npublic getLocale(int $type): string|false\npublic getMaximum(int $field): int|false\npublic getMinimalDaysInFirstWeek(): int|false\npublic getMinimum(int $field): int|false\npublic static getNow(): float\npublic getRepeatedWallTimeOption(): int\npublic getSkippedWallTimeOption(): int\npublic getTime(): float|false\npublic getTimeZone(): IntlTimeZone|false\npublic getType(): string\npublic getWeekendTransition(int $dayOfWeek): int|false\npublic inDaylightTime(): bool\npublic isEquivalentTo(IntlCalendar $other): bool\npublic isLenient(): bool\npublic isSet(int $field): bool\npublic isWeekend(?float $timestamp = null): bool\npublic roll(int $field, int|bool $value): bool\npublic set(int $field, int $value): true\npublic set(    int $year,    int $month,    int $dayOfMonth = NULL,    int $hour = NULL,    int $minute = NULL,    int $second = NULL): true\npublic setDate(int $year, int $month, int $dayOfMonth): void\npublic setDateTime(    int $year,    int $month,    int $dayOfMonth,    int $hour,    int $minute,    int $second = null): void\npublic setFirstDayOfWeek(int $dayOfWeek): true\npublic setLenient(bool $lenient): true\npublic setMinimalDaysInFirstWeek(int $days): true\npublic setRepeatedWallTimeOption(int $option): true\npublic setSkippedWallTimeOption(int $option): true\npublic setTime(float $timestamp): bool\npublic setTimeZone(IntlTimeZone|DateTimeZone|string|null $timezone): bool\npublic toDateTime(): DateTime|false\n\n   }\n```\n\n## Обумовлені константи\n\n**`IntlCalendar::FIELD_ERA`**\n\nПоле календаря чисельно представляє епоху, наприклад для \"від Різдва Христового\" та для \"до Різдва Христового\" у Григоріанському та Юліанському календарях та `235` для періоду Хейсей в Японському календарі. Не всі календарі мають більше за одну епоху.\n\n**`IntlCalendar::FIELD_YEAR`**\n\nПоле календар для року. Не унікально у тих кількох епох. Якщо календар містить більше однієї ери, то, як правило, мінімальне значення цього поля дорівнює\n\n**`IntlCalendar::FIELD_MONTH`**\n\nПоле календар для місяця. Послідовність місяців починається з нуля, отже Janurary (Січень) (тут використовується для позначення першого місяця року, але за фактом може бути зовсім інше ім'я, наприклад Muharram для Ісламського календаря) буде представлено числом , February (Февраль) числом , …, December (Декабрь) числом`11` і, для деяких календарів, 13-й або високосний місяць, значення дорівнюватиме `12`\n\n**`IntlCalendar::FIELD_WEEK_OF_YEAR`**\n\nПоле календар для номера тижня в році. Залежить від того, з [якого дня починається тиждень](intlcalendar.getfirstdayofweek.md) і [мінімальної кількості днів у тижні](intlcalendar.getminimaldaysinfirstweek.md)\n\n**`IntlCalendar::FIELD_WEEK_OF_MONTH`**\n\nПоле календар для номера тижня в місяці. Залежить від того, з [якого дня починається тиждень](intlcalendar.getfirstdayofweek.md) і [мінімальної кількості днів у тижні](intlcalendar.getminimaldaysinfirstweek.md)\n\n**`IntlCalendar::FIELD_DATE`**\n\nПоле календар для номера дня в місяці. Те саме, що й **`IntlCalendar::FIELD_DAY_OF_MONTH`**\n\n**`IntlCalendar::FIELD_DAY_OF_YEAR`**\n\nПоле календар для номера дня в році. Для Грегоріанського календаря знаходиться в діапазоні від до\\*\\*`365`** або **`366`\\*\\*\n\n**`IntlCalendar::FIELD_DAY_OF_WEEK`**\n\nПоле календаря для номера дня тижня. Починається з (Воскресенье, смотри[**`IntlCalendar::DOW_SUNDAY`**](class.intlcalendar.md#intlcalendar.constants.dow-sunday) і пов'язані константи) і закінчується 7 (субота).\n\n**`IntlCalendar::FIELD_DAY_OF_WEEK_IN_MONTH`**\n\nНомер дня тижня (Неділя, Понеділок, …) на місяць. Допустимо це значення одно , а значення дня тижня рівне (Понеділок), отже, це перший понеділок місяця. Максимальне значення дорівнює `5`\n\nТакож допустимі значення та нижче (негативні). Значення охоплює 7 днів безпосередньо перед початком місяця (перший відповідний день у місяці має значення ). Негативні значення відраховуються від кінця місяця. Так, значення `-1` вказує на останній відповідний день місяця, `-2` на другий з кінця і т.д.\n\nВ отличие от[**`IntlCalendar::FIELD_WEEK_OF_MONTH`**](class.intlcalendar.md#intlcalendar.constants.field-week-of-month) і [**`IntlCalendar::FIELD_WEEK_OF_YEAR`**](class.intlcalendar.md#intlcalendar.constants.field-week-of-year), це значення не залежить від [IntlCalendar::getFirstDayOfWeek()](intlcalendar.getfirstdayofweek.md) і [IntlCalendar::getMinimalDaysInFirstWeek()](intlcalendar.getminimaldaysinfirstweek.md). Перше середовище - це перше середовище, навіть якщо тиждень розпочався попереднього місяця.\n\n**`IntlCalendar::FIELD_AM_PM`**\n\nПоле календаря определяющее время до/после полудня. Соответственно - до полудня, ( ) - після. Північ вважається як \"до полудня\", опівдні як \"після полудня\".\n\n**`IntlCalendar::FIELD_HOUR`**\n\nПоле календаря для годинника, без вказівки до або після полудня. Допустимі значення в інтервалі від до`11`\n\n**`IntlCalendar::FIELD_HOUR_OF_DAY`**\n\nПоле календаря для повного (24-годинного формату) годинника. Допустимі значення від до`23`\n\n**`IntlCalendar::FIELD_MINUTE`**\n\nПоле календар для хвилин.\n\n**`IntlCalendar::FIELD_SECOND`**\n\nПоле календар для секунд.\n\n**`IntlCalendar::FIELD_MILLISECOND`**\n\nПоле календар для мілісекунд.\n\n**`IntlCalendar::FIELD_ZONE_OFFSET`**\n\nПоле календаря для «сирого» усунення часового поясу, в мілісекундах. \"Сире\" усунення не враховує переходи на літній/зимовий час.\n\n**`IntlCalendar::FIELD_DST_OFFSET`**\n\nПоле календаря для зміщення часового поясу в мілісекундах залежно від літнього/зимового часу, якщо застосовується до цього часового поясу.\n\n**`IntlCalendar::FIELD_YEAR_WOY`**\n\nПоле календаря представляющее год для[тижня року](class.intlcalendar.md#intlcalendar.constants.field-week-of-year)\n\n**`IntlCalendar::FIELD_DOW_LOCAL`**\n\nПоле календар для локалізованого дня тижня. Приймає значення в діапазоні від до`7`. . використовується для дня тижня відповідного значення повертається функцією [IntlCalendar::getFirstDayOfWeek()](intlcalendar.getfirstdayofweek.md)\n\n**`IntlCalendar::FIELD_EXTENDED_YEAR`**\n\nПоле календаря для представлення номера року у контексті забезпечення безперервності між епохами. Наприклад, для Грегоріанського календаря, це значення для епохи \"після Різдва Христового\" буде відповідати **`IntlCalendar::FIELD_YEAR`**, а для епохи \"до Різдва Христового\", рік `y`будет представлен как`-y + 1`\n\n**`IntlCalendar::FIELD_JULIAN_DAY`**\n\nПоле календар для модифікованих номерів днів Юліанського календаря. На відміну від стандартного Юліанського календаря, у ньому перехід відбувається опівночі за локальним часом, а не опівдні за UTC. Він однозначно ідентифікує дату.\n\n**`IntlCalendar::FIELD_MILLISECONDS_IN_DAY`**\n\nПоле календаря, що охоплює **`IntlCalendar::FIELD_HOUR_OF_DAY`** **`IntlCalendar::FIELD_MINUTE`** \\*\\*`IntlCalendar::FIELD_SECOND`** і **`IntlCalendar::FIELD_MILLISECOND`\\*\\*Находится в диапазоне от до`24 * 3600 * 1000 - 1`. Це не кількість мілісекунд, що минула з півночі, тому що в моменти переходу на літній/зимовий час матиме розриви.\n\n**`IntlCalendar::FIELD_IS_LEAP_MONTH`**\n\nПоле календаря принимающее значение для високосного месяца и для звичайного.\n\n**`IntlCalendar::FIELD_FIELD_COUNT`**\n\nЗагальна кількість полів.\n\n**`IntlCalendar::FIELD_DAY_OF_MONTH`**\n\nПсевдоним для[**`IntlCalendar::FIELD_DATE`**](class.intlcalendar.md#intlcalendar.constants.field-date)\n\n**`IntlCalendar::DOW_SUNDAY`**\n\nНеділя.\n\n**`IntlCalendar::DOW_MONDAY`**\n\nПонеділок.\n\n**`IntlCalendar::DOW_TUESDAY`**\n\nВівторок.\n\n**`IntlCalendar::DOW_WEDNESDAY`**\n\nСереда.\n\n**`IntlCalendar::DOW_THURSDAY`**\n\nЧетвер.\n\n**`IntlCalendar::DOW_FRIDAY`**\n\nП'ятниця.\n\n**`IntlCalendar::DOW_SATURDAY`**\n\nСубота.\n\n**`IntlCalendar::DOW_TYPE_WEEKDAY`**\n\nВисновок [IntlCalendar::getDayOfWeekType()](intlcalendar.getdayofweektype.md)означает, что день будний.\n\n**`IntlCalendar::DOW_TYPE_WEEKEND`**\n\nВисновок [IntlCalendar::getDayOfWeekType()](intlcalendar.getdayofweektype.md) означає, що вихідний день.\n\n**`IntlCalendar::DOW_TYPE_WEEKEND_OFFSET`**\n\nВисновок [IntlCalendar::getDayOfWeekType()](intlcalendar.getdayofweektype.md) означає, що вихідні розпочинаються у цей день.\n\n**`IntlCalendar::DOW_TYPE_WEEKEND_CEASE`**\n\nВисновок [IntlCalendar::getDayOfWeekType()](intlcalendar.getdayofweektype.md) означає, що вихідні закінчуються у цей день.\n\n**`IntlCalendar::WALLTIME_FIRST`**\n\nВисновок [IntlCalendar::getSkippedWallTimeOption()](intlcalendar.getskippedwalltimeoption.md) означає, що час у пропущеному діапазоні має посилатися на час менший на одну годину і висновок [IntlCalendar::getRepeatedWallTimeOption()](intlcalendar.getrepeatedwalltimeoption.md) означає, що час у діапазоні, що повторюється, повинен ставитися до моменту першої появи такого часу.\n\n**`IntlCalendar::WALLTIME_LAST`**\n\nВисновок [IntlCalendar::getSkippedWallTimeOption()](intlcalendar.getskippedwalltimeoption.md) означає, що час у пропущеному діапазоні має посилатися на час більший на одну годину і висновок [IntlCalendar::getRepeatedWallTimeOption()](intlcalendar.getrepeatedwalltimeoption.md) означає, що час у діапазоні, що повторюється, повинен ставитися до моменту другої появи такого часу.\n\n**`IntlCalendar::WALLTIME_NEXT_VALID`**\n\nВисновок [IntlCalendar::getSkippedWallTimeOption()](intlcalendar.getskippedwalltimeoption.md) означає, що час у пропущеному діапазоні відноситься до моменту, коли стався перехід на зимовий/літній час.\n\n## Зміст\n\n-   [IntlCalendar::add](intlcalendar.add.md) \\- Додає кількість (зі знаком) часу в полі\n-   [IntlCalendar::after](intlcalendar.after.md) \\- Визначає, час цього об'єкта пізніше часу переданого об'єкта\n-   [IntlCalendar::before](intlcalendar.before.md)— Визначає, час цього об'єкта раніше переданого об'єкта\n-   [IntlCalendar::clear](intlcalendar.clear.md)— Очищає поле чи всі поля\n-   [IntlCalendar::\\_\\_construct](intlcalendar.construct.md)— Закритий конструктор для заборони створення екземплярів\n-   [IntlCalendar::createInstance](intlcalendar.createinstance.md)— Створює новий об'єкт IntlCalendar\n-   [IntlCalendar::equals](intlcalendar.equals.md)— Порівнює час двох об'єктів IntlCalendar щодо рівності\n-   [IntlCalendar::fieldDifference](intlcalendar.fielddifference.md)— Обчислює різницю між заданим часом та часом об'єкта\n-   [IntlCalendar::fromDateTime](intlcalendar.fromdatetime.md)— Створює IntlCalendar з об'єкта чи рядка DateTime\n-   [IntlCalendar::get](intlcalendar.get.md)— Отримує значення поля\n-   [IntlCalendar::getActualMaximum](intlcalendar.getactualmaximum.md)— Максимальне значення для поля з урахуванням поточного часу об'єкта\n-   [IntlCalendar::getActualMinimum](intlcalendar.getactualminimum.md)— Мінімальне значення для поля з урахуванням поточного часу об'єкта\n-   [IntlCalendar::getAvailableLocales](intlcalendar.getavailablelocales.md)— Отримує масив мовних стандартів, для яких є дані\n-   [IntlCalendar::getDayOfWeekType](intlcalendar.getdayofweektype.md)— Повідомляє, чи є день буднім, вихідним чи днем ​​із переходом між ними\n-   [IntlCalendar::getErrorCode](intlcalendar.geterrorcode.md)— Отримує останній код помилки об'єкта\n-   [IntlCalendar::getErrorMessage](intlcalendar.geterrormessage.md)— Отримує останнє повідомлення про помилку об'єкта\n-   [IntlCalendar::getFirstDayOfWeek](intlcalendar.getfirstdayofweek.md)— отримує перший день тижня для мовного стандарту календаря\n-   [IntlCalendar::getGreatestMinimum](intlcalendar.getgreatestminimum.md)— Отримує найбільше локальне мінімальне значення поля\n-   [IntlCalendar::getKeywordValuesForLocale](intlcalendar.getkeywordvaluesforlocale.md)— Набір значень ключових слів мовного стандарту\n-   [IntlCalendar::getLeastMaximum](intlcalendar.getleastmaximum.md)— Отримує найменший локальний максимум для поля\n-   [IntlCalendar::getLocale](intlcalendar.getlocale.md)— Отримує мовний стандарт, пов'язаний із об'єктом\n-   [IntlCalendar::getMaximum](intlcalendar.getmaximum.md)— Отримує глобальне максимальне значення поля\n-   [IntlCalendar::getMinimalDaysInFirstWeek](intlcalendar.getminimaldaysinfirstweek.md)— Отримує мінімальну кількість днів, яка може бути у першому тижні на рік чи місяць\n-   [IntlCalendar::getMinimum](intlcalendar.getminimum.md)— Отримує глобальне мінімальне значення поля\n-   [IntlCalendar::getNow](intlcalendar.getnow.md)— Отримує число, що становить поточний час\n-   [IntlCalendar::getRepeatedWallTimeOption](intlcalendar.getrepeatedwalltimeoption.md)— Отримує поведінку для обробки часу процесора, що повторюється.\n-   [IntlCalendar::getSkippedWallTimeOption](intlcalendar.getskippedwalltimeoption.md)— Отримує поведінку для обробки пропущеного часу процесора\n-   [IntlCalendar::getTime](intlcalendar.gettime.md)— Отримує час, представлений на даний момент об'єктом\n-   [IntlCalendar::getTimeZone](intlcalendar.gettimezone.md)— Отримує часовий пояс об'єкту\n-   [IntlCalendar::getType](intlcalendar.gettype.md)— Отримує тип календаря\n-   [IntlCalendar::getWeekendTransition](intlcalendar.getweekendtransition.md)— Отримує час, коли вихідні починаються або закінчуються.\n-   [IntlCalendar::inDaylightTime](intlcalendar.indaylighttime.md)— Визначає, чи час об'єкта переходить на літній час.\n-   [IntlCalendar::isEquivalentTo](intlcalendar.isequivalentto.md)— Визначає, чи дорівнює інший календар, але для іншого часу\n-   [IntlCalendar::isLenient](intlcalendar.islenient.md)— Визначає, чи інтерпретація дати/часу є м'якою.\n-   [IntlCalendar::isSet](intlcalendar.isset.md)— Визначає, чи встановлено поле\n-   [IntlCalendar::isWeekend](intlcalendar.isweekend.md)— Визначає, чи доводиться певна дата/час на вихідні\n-   [IntlCalendar::roll](intlcalendar.roll.md)— Додає значення в поле без перенесення до найважливіших полів\n-   [IntlCalendar::set](intlcalendar.set.md)— Встановлює поле часу або одразу кілька спільних полів\n-   [IntlCalendar::setDate](intlcalendar.setdate.md) \\- Встановлює поля дати\n-   [IntlCalendar::setDateTime](intlcalendar.setdatetime.md)— Встановлює поля дати та часу\n-   [IntlCalendar::setFirstDayOfWeek](intlcalendar.setfirstdayofweek.md)— Встановлює день, який є початком тижня\n-   [IntlCalendar::setLenient](intlcalendar.setlenient.md)— Встановлює, чи інтерпретація дати/часу повинна бути м'якою.\n-   [IntlCalendar::setMinimalDaysInFirstWeek](intlcalendar.setminimaldaysinfirstweek.md)— Встановлює мінімальну кількість днів, яка може бути у першому тижні на рік чи місяць\n-   [IntlCalendar::setRepeatedWallTimeOption](intlcalendar.setrepeatedwalltimeoption.md)— Встановлює поведінку для обробки часу процесора, що повторюється, при негативних переходах зміщення часового поясу.\n-   [IntlCalendar::setSkippedWallTimeOption](intlcalendar.setskippedwalltimeoption.md)— Встановлює поведінку для обробки пропущеного часу процесора при позитивних переходах усунення часового поясу\n-   [IntlCalendar::setTime](intlcalendar.settime.md)— Встановлює календарний час у мілісекундах від початку епохи Unix\n-   [IntlCalendar::setTimeZone](intlcalendar.settimezone.md)— Встановлює часовий пояс, який використовується календарем.\n-   [IntlCalendar::toDateTime](intlcalendar.todatetime.md)— Перетворює об'єкт IntlCalendar на об'єкт DateTime\n","title":"Клас IntlCalendar","contentType":2,"navigation":[{"messageformatter.setpattern.md":"« MessageFormatter::setPattern"},{"intlcalendar.add.md":"IntlCalendar::add »"},{"index.md":"PHP Manual"},{"book.intl.md":"intl"}]}},"__N_SSG":true}