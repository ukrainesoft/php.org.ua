{"pageProps":{"page":{"slug":"memcache.setcompressthreshold.md","content":"# Memcache::setCompressThreshold\n\n(PECL memcache >= 2.0.0)\n\nMemcache::setCompressThreshold — Увімкнути автоматичний стиск для великих значень.\n\n### Опис\n\n```methodsynopsis\nMemcache::setCompressThreshold(int $threshold, float $min_savings = ?): bool\n```\n\n**Memcache::setCompressThreshold()** включає автоматичне стиск для великих значень. Ви також можете використати функцію **memcache\\_set\\_compress\\_threshold()**\n\n> **Зауваження** :\n> \n> Ця функція була додана до Memcache версії 2.0.0.\n\n### Список параметрів\n\n`threshold`\n\nВстановлює мінімальний розмір елементів для спроб автоматичного стиснення.\n\n`min_saving`\n\nВказує мінімальний розмір заощадженого розміру. Передане значення має бути в межах від 0 до 1. Значення за умовчанням 0.2, що задає мінімальний розмір заощадженого розміру 20%.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Memcache::setCompressThreshold()\\*\\*\\*\\*\n\n```php\n<?php\n\n/* объектно-ориентированное API */\n\n$memcache_obj = new Memcache;\n$memcache_obj->addServer('memcache_host', 11211);\n$memcache_obj->setCompressThreshold(20000, 0.2);\n\n/* процедурное API */\n\n$memcache_obj = memcache_connect('memcache_host', 11211);\nmemcache_set_compress_threshold($memcache_obj, 20000, 0.2);\n\n?>\n```\n","title":"Memcache::setCompressThreshold","contentType":2,"navigation":[{"memcache.set.md":"« Memcache::set"},{"memcache.setserverparams.md":"Memcache::setServerParams »"},{"index.md":"PHP Manual"},{"class.memcache.md":"Memcache"}]}},"__N_SSG":true}