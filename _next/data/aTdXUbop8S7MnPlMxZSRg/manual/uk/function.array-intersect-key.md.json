{"pageProps":{"page":{"slug":"function.array-intersect-key.md","content":"# array\\_intersect\\_key\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\narray\\_intersect\\_key — обчислює перетин масивів, порівнюючи ключі\n\n### Опис\n\n```methodsynopsis\narray_intersect_key(array $array, array ...$arrays): array\n```\n\nФункция**array\\_intersect\\_key()** повертає масив, що містить усі елементи масиву `array`, що мають ключі, що містяться у всіх інших параметрах.\n\n### Список параметрів\n\n`array`\n\nОсновний масив, що перевіряється.\n\n`arrays`\n\nМасив, з яким йде порівняння.\n\n### Значення, що повертаються\n\nПовертає асоціативний масив, що містить усі елементи масиву `array`, що мають ключі, що містяться у всіх інших параметрах.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Тепер функцію можна викликати лише з одним параметром. Раніше потрібно не менше двох параметрів. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** array\\_intersect\\_key()\\*\\*\\*\\*\n\n```php\n<?php\n$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);\n$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);\n\nvar_dump(array_intersect_key($array1, $array2));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(2) {\n  [\"blue\"]=>\n  int(1)\n  [\"green\"]=>\n  int(3)\n}\n```\n\nУ цьому прикладі тільки ключі `'blue'`и`'green'` містяться в обох масивах і тому повертаються. Зверніть увагу, що значення клюєм `'blue'`и`'green'` неоднакові у двох масивах. Збіг все одно є, тому що порівнюються лише ключі. Значення, що повертаються, беруться з масиву `array`\n\nДва ключа пар`key => value` визнаються рівними, тільки якщо вираз `(string) $key1 === (string) $key2` істинно. Простіше кажучи, виконується строга перевірка рядкових уявлень, які мають бути однаковими.\n\n### Дивіться також\n\n-   [array\\_diff()](function.array-diff.md) \\- обчислює розбіжність масивів\n-   [array\\_udiff()](function.array-udiff.md) \\- обчислює розбіжність масивів, використовуючи для порівняння callback-функцію\n-   [array\\_diff\\_assoc()](function.array-diff-assoc.md) \\- обчислює розбіжність масивів з додатковою перевіркою індексу\n-   [array\\_diff\\_uassoc()](function.array-diff-uassoc.md) \\- Обчислює розбіжність масивів з додатковою перевіркою індексу через пользовательскую callback-функцію\n-   [array\\_udiff\\_assoc()](function.array-udiff-assoc.md) \\- обчислює розбіжність у масивах з додатковою перевіркою індексів, використовуючи порівняння значень callback-функцию\n-   [array\\_udiff\\_uassoc()](function.array-udiff-uassoc.md) \\- обчислює розбіжність у масивах з додатковою перевіркою індексів, використовуючи для порівняння значень та індексів callback-функцію\n-   [array\\_diff\\_key()](function.array-diff-key.md) \\- обчислює розбіжність масивів, порівнюючи ключі\n-   [array\\_diff\\_ukey()](function.array-diff-ukey.md) \\- обчислює розбіжність масивів, використовуючи callback-функцію для порівняння ключів\n-   [array\\_intersect()](function.array-intersect.md) \\- обчислює перетин масивів\n-   [array\\_intersect\\_assoc()](function.array-intersect-assoc.md) \\- обчислює перетин масивів з додатковою перевіркою індексу\n-   [array\\_intersect\\_uassoc()](function.array-intersect-uassoc.md) \\- обчислює перетин масивів з додатковою перевіркою індексу, порівнюючи індекси через callback-функцію\n-   [array\\_intersect\\_ukey()](function.array-intersect-ukey.md) \\- обчислює перетин масивів, використовуючи callback-функцію для порівняння ключів\n","title":"array\\_intersect\\_key","contentType":2,"navigation":[{"function.array-intersect-assoc.md":"« array\\_intersect\\_assoc"},{"function.array-intersect-uassoc.md":"array\\_intersect\\_uassoc »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}