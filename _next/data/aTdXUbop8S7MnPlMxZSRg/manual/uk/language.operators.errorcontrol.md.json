{"pageProps":{"page":{"slug":"language.operators.errorcontrol.md","content":"## Оператор управления ошибками\n\nPHP підтримує один оператор керування помилками: знак `@`. Якщо він передує будь-якому виразу в PHP-коді, будь-які повідомлення про помилки, що генеруються цим виразом, будуть придушені.\n\nЯкщо користувальницьку функцію обробника помилок встановлено функцією [set\\_error\\_handler()](function.set-error-handler.md), вона все одно буде викликатись, навіть якщо діагностика була пригнічена.\n\n**Увага**\n\nДо версії PHP 8.0.0 функція [error\\_reporting()](function.error-reporting.md), що викликається всередині оброблювача помилок, завжди повертала якщо помилка була пригнічена оператором `@`. Починаючи з PHP 8.0.0, вона повертає значення цього (побітового) виразу: `E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR | E_USER_ERROR | E_RECOVERABLE_ERROR | E_PARSE`\n\nБудь-яке повідомлення про помилку, згенероване виразом, доступне в елементі масиву з ключем `«message»`, що повертається функцією [error\\_get\\_last()](function.error-get-last.md). Результат цієї функції змінюватиметься при кожній помилці, тому його необхідно перевірити заздалегідь.\n\n```php\n<?php\n\n/* Преднамеренная ошибка при работе с файлами */\n$my_file = @file ('non_existent_file') or\n    die (\"Ошибка при открытии файла: сообщение об ошибке было таким: '\" . error_get_last()['message'] . \"'\");\n\n// работает для любых выражений, а не только для функций\n$value = @$cache[$key];\n// В случае если ключа $key нет, сообщение об ошибке (notice) не будет отображено\n```\n\n> **Зауваження**: Оператор`@` працює тільки з [виразами](language.expressions.md). Є просте правило: якщо щось повертає значення, то можна вказати перед ним оператор `@`. Наприклад, можна вказати оператор `@` перед ім'ям змінної, довільною функцією, викликом виразу [include](function.include.md) і т. д. При цьому не можна вказувати цей оператор перед визначенням функції або класу умовними конструкціями, наприклад: `if` [foreach](control-structures.foreach.md)и т. д.\n\n**Увага**\n\nДо PHP 8.0.0 оператор`@` міг пригнічувати критичні помилки, які переривали виконання скрипту. Наприклад, додавання оператора `@` до виклику неіснуючої функції, коли вона недоступна або викликана з друкарською помилкою, призведе до переривання виконання скрипту без вказівки причини.\n\n### Дивіться також\n\n-   [error\\_reporting()](function.error-reporting.md)\n-   [Обробка помилок та функції логування](ref.errorfunc.md)\n","title":"Оператор управления ошибками","contentType":2,"navigation":[{"language.operators.comparison.md":"« Порівняння"},{"language.operators.execution.md":"Виконання »"},{"index.md":"PHP Manual"},{"language.operators.md":"Оператори"}]}},"__N_SSG":true}