{"pageProps":{"page":{"slug":"function.stream-get-meta-data.md","content":"# stream\\_get\\_meta\\_data\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\nstream\\_get\\_meta\\_data — Витягує заголовок/метадані з потоків/файлових покажчиків\n\n### Опис\n\n```methodsynopsis\nstream_get_meta_data(resource $stream): array\n```\n\nОтримує інформацію про існуючий потік `stream`\n\n### Список параметрів\n\n`stream`\n\nПараметр stream може бути будь-яким потоком, створеним за допомогою функцій [fopen()](function.fopen.md) [fsockopen()](function.fsockopen.md) [pfsockopen()](function.pfsockopen.md) і [stream\\_socket\\_client()](function.stream-socket-client.md)\n\n### Значення, що повертаються\n\nОтримуваний масив містить такі елементи:\n\n-   `timed_out`(bool) -**`true`**, якщо потік перевищив час очікування даних під час останнього виклику функції[fread()](function.fread.md) або [fgets()](function.fgets.md)\n    \n-   `blocked`(bool) -\\*\\*`true`\\*\\*якщо потік знаходиться в режимі блокуючого введення-виводу. Дивіться функцію[stream\\_set\\_blocking()](function.stream-set-blocking.md)\n    \n-   `eof`(bool) -**`true`**якщо потік досяг кінця файлу. Зауважте, що для потоків типу socket цей член може дорівнювати**`true`**, навіть коли`unread_bytes`не дорівнює нулю. Для того, щоб визначити, чи є ще дані для читання, використовуйте[feof()](function.feof.md)замість читання цього елемента.\n    \n-   `unread_bytes`(int) - кількість байт, що знаходяться зараз у своєму внутрішньому буфері PHP.\n    \n    > **Зауваження**: Ви не повинні використовувати це значення у скрипті.\n    \n-   `stream_type`(string) - Мітка, що описує внутрішню реалізацію потоку.\n    \n-   `wrapper_type`(string) - Мітка, що описує реалізацію обгортки протоколу, накладеного на потік. Дивіться розділ[Підтримувані протоколи та обгортки](wrappers.md)для детальної інформації про обгортки.\n    \n-   `wrapper_data`(mixed) – специфічні для обгортки дані, прикріплені до цього потоку. Дивіться розділ[Підтримувані протоколи та обгортки](wrappers.md)для детальної інформації про обгортки та їх дані.\n    \n-   `mode`(string) - тип доступу, необхідний цього потоку (див. таблицю 1 у описі функції[fopen()](function.fopen.md)) .\n    \n-   `seekable`(bool) - можна переміщатися по поточному потоку.\n    \n-   `uri`(string) – URI/ім'я файлу, пов'язане з цим потоком.\n    \n-   `crypto`(Array) - метадані TLS-з'єднання потоку. Примітка: вказується лише в тому випадку, якщо ресурс потоку використовує TLS.\n    \n\n### Приклади\n\n**Приклад #1 Приклад використання** stream\\_get\\_meta\\_data()**с использованием[fopen()](function.fopen.md) з http**\n\n```php\n<?php\n$url = 'http://www.example.com/';\n\nif (!$fp = fopen($url, 'r')) {\n    trigger_error(\"Невозможно открыть URL ($url)\", E_USER_ERROR);\n}\n\n$meta = stream_get_meta_data($fp);\n\nvar_dump($meta);\n\nfclose($fp);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(10) {\n  'timed_out' =>\n  bool(false)\n  'blocked' =>\n  bool(true)\n  'eof' =>\n  bool(false)\n  'wrapper_data' =>\n  array(13) {\n    [0] =>\n    string(15) \"HTTP/1.1 200 OK\"\n    [1] =>\n    string(11) \"Age: 244629\"\n    [2] =>\n    string(29) \"Cache-Control: max-age=604800\"\n    [3] =>\n    string(38) \"Content-Type: text/html; charset=UTF-8\"\n    [4] =>\n    string(35) \"Date: Sat, 20 Nov 2021 18:17:57 GMT\"\n    [5] =>\n    string(24) \"Etag: \"3147526947+ident\"\"\n    [6] =>\n    string(38) \"Expires: Sat, 27 Nov 2021 18:17:57 GMT\"\n    [7] =>\n    string(44) \"Last-Modified: Thu, 17 Oct 2019 07:18:26 GMT\"\n    [8] =>\n    string(22) \"Server: ECS (chb/0286)\"\n    [9] =>\n    string(21) \"Vary: Accept-Encoding\"\n    [10] =>\n    string(12) \"X-Cache: HIT\"\n    [11] =>\n    string(20) \"Content-Length: 1256\"\n    [12] =>\n    string(17) \"Connection: close\"\n  }\n  'wrapper_type' =>\n  string(4) \"http\"\n  'stream_type' =>\n  string(14) \"tcp_socket/ssl\"\n  'mode' =>\n  string(1) \"r\"\n  'unread_bytes' =>\n  int(1256)\n  'seekable' =>\n  bool(false)\n  'uri' =>\n  string(23) \"http://www.example.com/\"\n}\n```\n\n**Приклад #2 Приклад використання** stream\\_get\\_meta\\_data()**с использованием[stream\\_socket\\_client()](function.stream-socket-client.md) з https**\n\n```php\n<?php\n$streamContext = stream_context_create(\n    [\n        'ssl' => [\n            'capture_peer_cert' => true,\n            'capture_peer_cert_chain' => true,\n            'disable_compression' => true,\n        ],\n    ]\n);\n$client = stream_socket_client(\n    'ssl://www.example.com:443',\n    $errorNumber,\n    $errorDescription,\n    40,\n    STREAM_CLIENT_CONNECT,\n    $streamContext\n);\n$meta = stream_get_meta_data($client);\nvar_dump($meta);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(8) {\n  'crypto' =>\n  array(4) {\n    'protocol' =>\n    string(7) \"TLSv1.3\"\n    'cipher_name' =>\n    string(22) \"TLS_AES_256_GCM_SHA384\"\n    'cipher_bits' =>\n    int(256)\n    'cipher_version' =>\n    string(7) \"TLSv1.3\"\n  }\n  'timed_out' =>\n  bool(false)\n  'blocked' =>\n  bool(true)\n  'eof' =>\n  bool(false)\n  'stream_type' =>\n  string(14) \"tcp_socket/ssl\"\n  'mode' =>\n  string(2) \"r+\"\n  'unread_bytes' =>\n  int(0)\n  'seekable' =>\n  bool(false)\n}\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Ця функція НЕ працюватиме із сокетами, створеними за допомогою [модуля Socket](ref.sockets.md)\n\n### Дивіться також\n\n-   [get\\_headers()](function.get-headers.md) \\- Повертає всі заголовки з відповіді сервера на запит HTTP\n-   [$http\\_response\\_header](reserved.variables.httpresponseheader.md)\n","title":"stream\\_get\\_meta\\_data","contentType":2,"navigation":[{"function.stream-get-line.md":"« stream\\_get\\_line"},{"function.stream-get-transports.md":"stream\\_get\\_transports »"},{"index.md":"PHP Manual"},{"ref.stream.md":"Функції для роботи з потоками"}]}},"__N_SSG":true}