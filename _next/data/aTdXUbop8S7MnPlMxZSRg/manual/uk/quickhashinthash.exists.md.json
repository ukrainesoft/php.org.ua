{"pageProps":{"page":{"slug":"quickhashinthash.exists.md","content":"# QuickHashIntHash::exists\n\n(PECL quickhash >= Unknown)\n\nQuickHashIntHash::exists — Метод перевіряє, чи є ключ частиною хеша\n\n### Опис\n\n```methodsynopsis\npublic QuickHashIntHash::exists(int $key): bool\n```\n\nМетод перевіряє, чи існує у хеші запис із зазначеним ключем.\n\n### Список параметрів\n\n`key`\n\nКлюч запису для перевірки її існування у хеші.\n\n### Значення, що повертаються\n\nМетод возвращает\\*\\*`true`\\*\\*, якщо запис було знайдено або **`false`**, якщо запис не було знайдено.\n\n### Приклади\n\n**Приклад #1 Приклад використання** QuickHashIntHash::exists()\\*\\*\\*\\*\n\n```php\n<?php\n// Генерация 200000 элементов\n$array = range( 0, 199999 );\n$existingEntries = array_rand( array_flip( $array ), 180000 );\n$testForEntries = array_rand( array_flip( $array ), 1000 );\n$foundCount = 0;\n\necho \"Создание хеша: \", microtime( true ), \"\\n\";\n$hash = new QuickHashIntHash( 100000 );\necho \"Добавление элементов: \", microtime( true ), \"\\n\";\nforeach( $existingEntries as $key )\n{\n     $hash->add( $key, 56 );\n}\n\necho \"Запуск 1000 тестов: \", microtime( true ), \"\\n\";\nforeach( $testForEntries as $key )\n{\n     $foundCount += $hash->exists( $key );\n}\necho \"Готово, $foundCount найдено: \", microtime( true ), \"\\n\";\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nСоздание хеша: 1263588703.0748\nДобавление элементов: 1263588703.0757\nЗапуск 1000 тестов: 1263588703.7851\nГотово, 898 найдено: 1263588703.7897\n```\n","title":"QuickHashIntHash::exists","contentType":2,"navigation":[{"quickhashinthash.delete.md":"« QuickHashIntHash::delete"},{"quickhashinthash.get.md":"QuickHashIntHash::get »"},{"index.md":"PHP Manual"},{"class.quickhashinthash.md":"QuickHashIntHash"}]}},"__N_SSG":true}