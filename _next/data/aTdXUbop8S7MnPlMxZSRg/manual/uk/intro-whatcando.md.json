{"pageProps":{"page":{"slug":"intro-whatcando.md","content":"# Можливості PHP\n\nPHP може все. Головна сфера застосування PHP - написання скриптів, що працюють на стороні сервера; таким чином, PHP здатний виконувати все те, що виконує будь-яка інша програма CGI, наприклад, обробляти дані форм, генерувати динамічні сторінки або надсилати та приймати cookies. Але PHP здатний виконувати набагато більше.\n\nІснують три основні сфери застосування PHP.\n\n-   Створення сценаріїв для виконання на стороні сервера. PHP традиційно і найбільше широко використовується саме таким чином. Для цього вам знадобляться три речі. Інтерпретатор PHP (у вигляді програми CGI або серверного модуля), веб-сервер та браузер. Для того щоб можна було переглядати результати виконання PHP-скриптів у браузері, потрібен веб-сервер і встановлений PHP. Переглянути висновок PHP-програми можна у браузері, отримавши PHP-сторінку, згенеровану сервером. У випадку, якщо ви просто експериментуєте, ви можете використовувати свій домашній комп'ютер замість сервера. За більш детальною інформацією зверніться до розділу[Поради щодо встановлення](install.md)\n-   Створення скриптів для виконання у командному рядку. Ви можете створити PHP-скрипт, здатний запускатись без сервера або браузера. Все, що вам потрібно - парсер PHP. Такий спосіб використання PHP ідеально підходить для скриптів, які повинні виконуватися регулярно, наприклад, за допомогою cron (на платформах\\*nix або Linux) або за допомогою планувальника завдань (Task Scheduler) на платформах Windows. Ці скрипти також можуть бути використані у задачах простої обробки текстів. За додатковою інформацією звертайтесь до розділу[Використання PHP у середовищі командного рядка](features.commandline.md)\n-   Створення віконних програм, що виконуються на стороні клієнта. Можливо, PHP є не найкращою мовою для створення подібних додатків, але якщо ви дуже добре знаєте PHP і хотіли б використовувати деякі його можливості у своїх клієнтських додатках, ви можете використовувати PHP-GTK для створення таких додатків. Подібним чином ви можете створювати і крос-платформні програми. PHP-GTK є модулем PHP і не постачається разом із основним дистрибутивом PHP. Якщо ви зацікавлені, відвідайте[» сайт PHP-GTK](http://gtk.php.net/)\n\nPHP[доступний](install.md) для більшості операційних систем, включаючи Linux, багато модифікацій Unix (такі як HP-UX, Solaris та OpenBSD), Microsoft Windows, macOS, RISC OS та багато інших. Також у PHP включена підтримка більшості сучасних веб-серверів, таких як Apache, IIS та багато інших. В принципі підійде будь-який веб-сервер, здатний використовувати бінарний файл FastCGI PHP, наприклад, lighttpd або nginx. PHP може працювати як модуль або функціонувати як процесор CGI.\n\nТаким чином, вибираючи PHP, ви отримуєте свободу вибору операційної системи та веб-сервера. Більш того, у вас з'являється вибір між використанням процедурного або об'єктно-орієнтованого програмування (ООП) або їх поєднання.\n\nВикористання PHP не обмежується виводом HTML. Можливості PHP включають виведення різних типів файлів, таких як зображення або PDF-файли, шифрування даних і відправку електронної пошти. Ви також можете легко виводити будь-який текст, наприклад, JSON або XML. PHP може автоматично генерувати ці файли та зберігати їх у файловій системі замість виведення на друк, формуючи серверний кеш для динамічного вмісту.\n\nОднією із значних переваг PHP є підтримка [широкого кола баз даних](refs.database.md). Створити скрипт, який використовує бази даних, неймовірно просто. Можна скористатися модулем, специфічним для окремої бази даних (такі як [mysql](book.mysqli.md)) або використовувати рівень абстракції від бази даних, такий як [PDO](book.pdo.md), або приєднатися до будь-якої бази даних, що підтримує Відкритий Стандарт З'єднання Баз Даних (ODBC), за допомогою однойменного модуля [ODBC](book.uodbc.md). Для інших баз даних, таких як CouchDB, можна скористатися [cURL](book.curl.md) або [сокетами](book.sockets.md)\n\nPHP також підтримує взаємодію з іншими сервісами через такі протоколи як LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (на платформах Windows) та багатьох інших. Крім того, ви отримуєте можливість працювати з мережними сокетами безпосередньо. PHP підтримує стандарт обміну складними структурами даних WDDX практично між усіма мовами веб-програмування. Звертаючи увагу на взаємодію між різними мовами, слід згадати про підтримку об'єктів Java та можливості їх використання як об'єкти PHP.\n\nPHP має багато можливостей з [обробці тексту](refs.basic.text.md), включаючи регулярні вирази Perl ([PCRE](book.pcre.md)) та багато інших модулів та інструментів [для обробки та доступу до XML-документів](refs.xml.md). У PHP обробка XML-документів стандартизована та відбувається на базі потужної бібліотеки [libxml2](book.libxml.md), розширивши можливості обробки XML додаванням нових модулів [SimpleXML](book.simplexml.md) [XMLReader](book.xmlreader.md) і [XMLWriter](book.xmlwriter.md)\n\nЄ ще багато інших цікавих модулів, які можна переглянути як у [алфавітному порядку](extensions.md), так и[за категоріями](funcref.md). Є ще багато додаткових [модулів PECL](install.pecl.intro.md), які також можуть (а можуть і ні) бути документовані у цьому посібнику, такі як [» XDebug](http://xdebug.org/)\n\nЯк ви бачите, цієї сторінки не вистачить, щоб перерахувати все, що може запропонувати вам PHP. Читайте наступний розділ, [Встановлення PHP](install.md)и обратитесь к главе[Довідник з функцій](funcref.md) за більш детальними відомостями про перераховані вище модулі.\n","title":"Можливості PHP","contentType":2,"navigation":[{"intro-whatis.md":"Що таке PHP?"},{"tutorial.md":"Простий підручник »"},{"index.md":"PHP Manual"},{"introduction.md":"Вступ"}]}},"__N_SSG":true}