{"pageProps":{"page":{"slug":"ds-map.merge.md","content":"# Ds\\\\Map::merge\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Map::merge — Повертає результат додавання всіх заданих елементів до колекції\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Map::merge(mixed $values): Ds\\Map\n```\n\nПовертає результат додавання всіх ключів переданого об'єкта класу [traversable](class.traversable.md) або масиву (array) з відповідними значеннями поточної колекції.\n\n> **Зауваження** :\n> \n> Значення поточної колекції буде перезаписано, якщо передані ключі вже існують.\n\n### Список параметрів\n\n`values`\n\nОб'єкт класу [traversable](class.traversable.md)или array.\n\n### Значення, що повертаються\n\nПовертає результат додавання всіх ключів переданого об'єкта класу [traversable](class.traversable.md) або масиву з відповідними значеннями до поточної колекції\n\n> **Зауваження** :\n> \n> Поточний екземпляр колекції залишиться недоторканим.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Map::merge()\\*\\*\\*\\*\n\n```php\n<?php\n$map = new \\Ds\\Map([\"a\" => 1, \"b\" => 2, \"c\" => 3]);\n\nprint_r($map->merge([\"a\" => 10, \"e\" => 50]));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nDs\\Map Object\n(\n    [0] => Ds\\Pair Object\n        (\n            [key] => a\n            [value] => 10\n        )\n\n    [1] => Ds\\Pair Object\n        (\n            [key] => b\n            [value] => 2\n        )\n\n    [2] => Ds\\Pair Object\n        (\n            [key] => c\n            [value] => 3\n        )\n\n    [3] => Ds\\Pair Object\n        (\n            [key] => e\n            [value] => 50\n        )\n\n)\n```\n","title":"Ds\\\\Map::merge","contentType":2,"navigation":[{"ds-map.map.md":"« Ds\\\\Map::map"},{"ds-map.pairs.md":"Ds\\\\Map::pairs »"},{"index.md":"PHP Manual"},{"class.ds-map.md":"Ds\\\\Map"}]}},"__N_SSG":true}