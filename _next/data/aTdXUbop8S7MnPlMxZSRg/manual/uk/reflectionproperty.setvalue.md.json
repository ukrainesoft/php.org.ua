{"pageProps":{"page":{"slug":"reflectionproperty.setvalue.md","content":"# ReflectionProperty::setValue\n\n(PHP 5, PHP 7, PHP 8)\n\nReflectionProperty::setValue — Встановлення значення властивості\n\n### Опис\n\n```methodsynopsis\npublic ReflectionProperty::setValue(object $object, mixed $value): void\n```\n\n```methodsynopsis\npublic ReflectionProperty::setValue(mixed $value): void\n```\n\nЗадає (змінює) значення якості.\n\n> **Зауваження**: Починаючи з PHP 8.3.0, виклик цього методу з єдиним аргументом застарів, замість нього необхідно викликати метод [ReflectionClass::setStaticPropertyValue()](reflectionclass.setstaticpropertyvalue.md)\n\n### Список параметрів\n\n`object`\n\nЯкщо властивість нестатична, необхідно передати об'єкт, властивість якого потрібно змінити. Якщо властивість статична, *повинно бути*передано значение\\*\\*`null`\\*\\*\n\n`value`\n\nНове значення.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Виклик цього з єдиним аргументом застарів, замість нього зміни статичного властивості необхідно викликати метод [ReflectionClass::setStaticPropertyValue()](reflectionclass.setstaticpropertyvalue.md) |\n| 8.1.0 | Доступ до закритих та захищених властивостей можна відразу ж отримати за допомогою методу [ReflectionProperty::getValue()](reflectionproperty.getvalue.md). . Раніше їх потрібно було зробити за допомогою методу [ReflectionProperty::setAccessible()](reflectionproperty.setaccessible.md); в іншому випадку викидався виняток [ReflectionException](class.reflectionexception.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionProperty::setValue()\\*\\*\\*\\*\n\n```php\n<?php\nclass Foo {\n    public static $staticProperty;\n\n    public $property;\n    protected $privateProperty;\n}\n\n$reflectionClass = new ReflectionClass('Foo');\n\n// С PHP 8.3 больше не нужно вызывать метод setValue для установки значения статического свойства, вместо него необходимо использовать метод setStaticPropertyValue()\n$reflectionClass->setStaticPropertyValue('staticProperty', 'foo');\nvar_dump(Foo::$staticProperty);\n\n$foo = new Foo;\n\n$reflectionClass->getProperty('property')->setValue($foo, 'bar');\nvar_dump($foo->property);\n\n$reflectionProperty = $reflectionClass->getProperty('privateProperty');\n$reflectionProperty->setAccessible(true); // требуется только до PHP 8.1.0\n$reflectionProperty->setValue($foo, 'foobar');\nvar_dump($reflectionProperty->getValue($foo));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(3) \"foo\"\nstring(3) \"bar\"\nstring(6) \"foobar\"\n```\n\n### Дивіться також\n\n-   [ReflectionProperty::getValue()](reflectionproperty.getvalue.md) \\- набуває значення\n-   [ReflectionProperty::setAccessible()](reflectionproperty.setaccessible.md) \\- Робить властивість доступною\n-   [ReflectionClass::setStaticPropertyValue()](reflectionclass.setstaticpropertyvalue.md) \\- Встановлює значення статичної властивості\n","title":"ReflectionProperty::setValue","contentType":2,"navigation":[{"reflectionproperty.setaccessible.md":"« ReflectionProperty::setAccessible"},{"reflectionproperty.tostring.md":"ReflectionProperty::\\_\\_toString »"},{"index.md":"PHP Manual"},{"class.reflectionproperty.md":"ReflectionProperty"}]}},"__N_SSG":true}