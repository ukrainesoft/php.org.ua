{"pageProps":{"page":{"slug":"class.normalizer.md","content":"# Клас Normalizer\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\n## Вступ\n\nНормалізація - це процес перетворення символів та його послідовностей у формальне уявлення нижчого рівня. Цей процес дуже важливий при порівнянні рядків при сортуванні або пошуку, але також використовується при збереженні тексту, щоб бути впевненим в тому, що він зберігся коректно.\n\nКонсорціум Unicode визначив кілька форм нормалізації, що відображають різні потреби додатків:\n\n-   Normalization Form D (NFD) - Канонічне розкладання\n-   Normalization Form C (NFC) - Канонічне розкладання з наступним канонічним складанням\n-   Normalization Form KD (NFKD) - Сумісне розкладання\n-   Normalization Form KC (NFKC) - Сумісне розкладання з подальшим канонічним складанням\n\nРізні форми задаються у вимогах наборів перетворень тексту. Перетворення обчислюються з алгоритму та набору файлів даних.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class Normalizer\n     {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      FORM_D;\n\n    public\n     const\n     int\n      NFD;\n\n    public\n     const\n     int\n      FORM_KD;\n\n    public\n     const\n     int\n      NFKD;\n\n    public\n     const\n     int\n      FORM_C;\n\n    public\n     const\n     int\n      NFC;\n\n    public\n     const\n     int\n      FORM_KC;\n\n    public\n     const\n     int\n      NFKC;\n\n    public\n     const\n     int\n      FORM_KC_CF;\n\n    public\n     const\n     int\n      NFKC_CF;\n\n\n    /* Методы */\n    \n   public static getRawDecomposition(string $string, int $form = Normalizer::FORM_C): ?string\npublic static isNormalized(string $string, int $form = Normalizer::FORM_C): bool\npublic static normalize(string $string, int $form = Normalizer::FORM_C): string|false\n\n   }\n```\n\n## Обумовлені константи\n\nДані константи задають форму нормалізації, що використовується нормалізатором:\n\n**`Normalizer::FORM_C`**\n\nФорма нормалізації C (NFC) - канонічне розкладання, після якого канонічна збірка\n\n**`Normalizer::FORM_D`**\n\nФорма нормалізації D (NFD) - Канонічне розкладання\n\n**`Normalizer::NFD`**\n\n**`Normalizer::FORM_KC`**\n\nФорма нормалізації KC (NFKC) – Сумісне розкладання, після якого канонічна збірка\n\n**`Normalizer::NFKC`**\n\n**`Normalizer::FORM_KC_CF`**\n\n**`Normalizer::FORM_KD`**\n\nФорма нормалізації KD (NFKD) - Сумісне розкладання\n\n**`Normalizer::NFKD`**\n\n**`Normalizer::NFC`**\n\n**`Normalizer::NFKC_CF`**\n\n## Дивіться також\n\n-   [»  Нормалізація Unicode](http://unicode.org/reports/tr15/)\n-   [» Нормалізація Unicode. FAQ](http://unicode.org/faq/normalization.md)\n-   [»  ICU Посібник користувача - нормалізація](https://unicode-org.github.io/icu/userguide/transforms/normalization/)\n-   [»  ICU Опис API - нормалізація](https://unicode-org.github.io/icu-docs/apidoc/dev/icu4c/unorm_8h.md)\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Константа\\*\\*`Normalizer::NONE`\\*\\* було видалено. |\n\n## Зміст\n\n-   [Normalizer::getRawDecomposition](normalizer.getrawdecomposition.md)— Витягує властивість Decomposition\\_Mapping для заданого символу UTF-8\n-   [Normalizer::isNormalized](normalizer.isnormalized.md)— Перевірити, чи переданий рядок відповідає заданій формі нормалізації\n-   [Normalizer::normalize](normalizer.normalize.md) \\- Нормалізація рядка\n","title":"Клас Normalizer","contentType":2,"navigation":[{"locale.setdefault.md":"« Locale::setDefault"},{"normalizer.getrawdecomposition.md":"Normalizer::getRawDecomposition »"},{"index.md":"PHP Manual"},{"book.intl.md":"intl"}]}},"__N_SSG":true}