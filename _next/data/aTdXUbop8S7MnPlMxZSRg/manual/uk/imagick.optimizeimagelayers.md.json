{"pageProps":{"page":{"slug":"imagick.optimizeimagelayers.md","content":"# Imagick::optimizeImageLayers\n\n(PECL imagick 2, PECL imagick 3)\n\nImagick::optimizeImageLayers — Видаляє повторювані частини зображень для оптимізації\n\n### Опис\n\n```methodsynopsis\npublic Imagick::optimizeImageLayers(): bool\n```\n\nПорівнює кожне зображення, розташоване у форматі GIF, із попереднім зображенням у послідовності. Виходячи з цього, функція намагається вибрати найменше зображення, що обрізає, для заміни кожного кадру, зберігаючи при цьому результати анімації. Цей метод доступний, якщо Imagick був скомпільований із версією ImageMagick 6.2.9 або старшим.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Помилки\n\nВикликає ImagickException у разі виникнення помилки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::optimizeImageLayers()\\*\\*\\*\\*\n\nЧитання, оптимізація та запис зображення у форматі GIF\n\n```php\n<?php\n/* создание нового объекта imagick */\n$im = new Imagick(\"test.gif\");\n\n/* оптимизация слоёв изображения */\n$im->optimizeImageLayers();\n\n/* запись изображения обратно */\n$im->writeImages(\"test_optimized.gif\", true);\n?>\n```\n\n### Дивіться також\n\n-   [Imagick::compareImageLayers()](imagick.compareimagelayers.md) \\- Повертає максимальну обмежуючу область між зображеннями\n-   [Imagick::writeImages()](imagick.writeimages.md) \\- Записує зображення або послідовність зображень\n-   [Imagick::writeImage()](imagick.writeimage.md) \\- Записує зображення за вказаним ім'ям файлу\n","title":"Imagick::optimizeImageLayers","contentType":2,"navigation":[{"imagick.opaquepaintimage.md":"« Imagick::opaquePaintImage"},{"imagick.orderedposterizeimage.md":"Imagick::orderedPosterizeImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}