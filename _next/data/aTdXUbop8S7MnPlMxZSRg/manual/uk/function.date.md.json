{"pageProps":{"page":{"slug":"function.date.md","content":"# date\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\ndate — Форматує тимчасову мітку Unix\n\n### Опис\n\n```methodsynopsis\ndate(string $format, ?int $timestamp = null): string\n```\n\nПовертає рядок, відформатований відповідно до зазначеного у параметрі `format`шаблоном. Используется метка времени, заданная параметром`timestamp` (мітка часу Unix), або поточний системний час, якщо параметр `timestamp`не задан. Таким образом, параметр`timestamp` є необов'язковим і за умовчанням дорівнює значенню, що повертається функцією [time()](function.time.md)\n\n**Увага**\n\nМітки часу Unix не обробляють часові пояси. Використовуйте клас [DateTimeImmutable](class.datetimeimmutable.md) та його метод форматування [DateTimeInterface::format()](datetime.format.md)для форматирования информации о дате/времени с привязкой к часовому поясу.\n\n### Список параметрів\n\n`format`\n\nПрийнятий формат [DateTimeInterface::format()](datetime.format.md)\n\n> **Зауваження**: Функция**date()** завжди генеруватиме `000000` як мікросекунд, оскільки вона приймає параметр int, тоді як [DateTime::format()](datetime.format.md) підтримує мікросекунди, якщо [DateTime](class.datetime.md) був створений із мікросекундами.\n\n`timestamp`\n\nНеобов'язковий параметр `timestamp` — це ціла (int) мітка часу, за умовчанням рівна поточному місцевому часу, якщо параметр `timestamp` не вказано або дорівнює \\*\\*`null`\\*\\*Говоря по другому, значение по умолчанию равно результату функции[time()](function.time.md)\n\n### Значення, що повертаються\n\nПовертає відформатований рядок із датою.\n\n### Помилки\n\nКожен виклик до функцій дати/часу при неправильних налаштуваннях часового поясу згенерує помилку рівня **`E_WARNING`**, якщо часовий пояс неправильний. Дивіться також [date\\_default\\_timezone\\_set()](function.date-default-timezone-set.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `timestamp` тепер допускає значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції **date()****\n\n```php\n<?php\n// установка часового пояса по умолчанию.\ndate_default_timezone_set('UTC');\n\n\n// выведет Прикладно следующее: Monday\necho date(\"l\");\n\n// выведет Прикладно следующее: Monday 8th of August 2005 03:12:46 PM\necho date('l jS \\of F Y h:i:s A');\n\n// выведет: July 1, 2000 is on a Saturday\necho \"July 1, 2000 is on a \" . date(\"l\", mktime(0, 0, 0, 7, 1, 2000));\n\n/* Приклад использования константы в качестве форматирующего параметра */\n// выведет Прикладно следующее: Mon, 15 Aug 2005 15:12:46 UTC\necho date(DATE_RFC822);\n\n// выведет Прикладно следующее: 2000-07-01T00:00:00+00:00\necho date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));\n?>\n```\n\nЩоб заборонити розпізнавання символу як форматуючого, слід екранувати його за допомогою зворотного слішу. Якщо екранований символ також є послідовністю, що форматує, то слід екранувати його повторно.\n\n**Приклад #2 Екранування символів у функції **date()****\n\n```php\n<?php\n// выведет Прикладно следующее: Wednesday the 15th\necho date('l \\t\\h\\e jS');\n?>\n```\n\nДля виведення минулих та майбутніх дат зручно використовувати функції \\*\\*date()\\*\\*и[mktime()](function.mktime.md)\n\n\\*\\*Приклад #3 Приклад спільного використання функцій \\*\\*date()**и[mktime()](function.mktime.md)**\n\n```php\n<?php\n$tomorrow  = mktime(0, 0, 0, date(\"m\")  , date(\"d\")+1, date(\"Y\"));\n$lastmonth = mktime(0, 0, 0, date(\"m\")-1, date(\"d\"),   date(\"Y\"));\n$nextyear  = mktime(0, 0, 0, date(\"m\"),   date(\"d\"),   date(\"Y\")+1);\n?>\n```\n\n> **Зауваження** :\n> \n> Цей спосіб більш надійний, ніж просте віднімання та додавання секунд до мітки часу, оскільки дозволяє при необхідності гнучко здійснити перехід на літній/зимовий час.\n\nЩе кілька прикладів використання функції **date()**. Важливо, що слід екранувати всі символи, які потрібно залишити без змін. Це справедливо і для тих символів, які в поточній версії PHP не розпізнаються як форматуючі, оскільки це може бути введено в наступних версіях. Для екранування керуючих послідовностей (наприклад, \\\\n) слід використовувати одинарні лапки.\n\n**Приклад #4 Форматирование с использованием**date()\\*\\*\\*\\*\n\n```php\n<?php\n// Предположим, что текущей датой является 10 марта 2001, 5:16:18 вечера,\n// и мы находимся в часовом поясе Mountain Standard Time (MST)\n\n$today = date(\"F j, Y, g:i a\");                 // March 10, 2001, 5:16 pm\n$today = date(\"m.d.y\");                         // 03.10.01\n$today = date(\"j, n, Y\");                       // 10, 3, 2001\n$today = date(\"Ymd\");                           // 20010310\n$today = date('h-i-s, j-m-y, it is w Day');     // 05-16-18, 10-03-01, 1631 1618 6 Satpm01\n$today = date('\\i\\t \\i\\s \\t\\h\\e jS \\d\\a\\y.');   // it is the 10th day.\n$today = date(\"D M j G:i:s T Y\");               // Sat Mar 10 17:16:18 MST 2001\n$today = date('H:m:s \\m \\i\\s\\ \\m\\o\\n\\t\\h');     // 17:03:18 m is month\n$today = date(\"H:i:s\");                         // 17:16:18\n$today = date(\"Y-m-d H:i:s\");                   // 2001-03-10 17:16:18 (формат MySQL DATETIME)\n?>\n```\n\nДля форматування дат іншими мовами замість функції **date()** можна використовувати метод [IntlDateFormatter::format()](intldateformatter.format.md)\n\n### Примітки\n\n> **Зауваження** :\n> \n> Для отримання мітки часу з строкового представлення дати можна скористатися функцією [strtotime()](function.strtotime.md). Крім того, деякі бази даних мають власні функції для перетворення внутрішнього подання дати на мітку часу (наприклад, функція MySQL [» UNIX\\_TIMESTAMP](http://dev.mysql.com/doc/mysql/en/date-and-time-functions.md)\n\n**Підказка**\n\nВременную метку начала запроса можно получить из поля[$\\_SERVER\\['REQUEST\\_TIME'\\]](reserved.variables.server.md)\n\n### Дивіться також\n\n-   [DateTimeImmutable::\\_\\_construct()](datetimeimmutable.construct.md) \\- Повертає новий об'єкт DateTimeImmutable\n-   [DateTimeInterface::format()](datetime.format.md) \\- Повертає дату, відформатовану згідно з переданим форматом\n-   [gmdate()](function.gmdate.md) \\- Форматує дату/час за Грінвічем\n-   [idate()](function.idate.md) \\- Перетворює локальний час/дату на ціле число\n-   [getdate()](function.getdate.md) \\- Повертає інформацію про дату/час\n-   [getlastmod()](function.getlastmod.md) \\- Отримує час останньої модифікації сторінки\n-   [mktime()](function.mktime.md) \\- Повертає позначку часу Unix для заданої дати\n-   [IntlDateFormatter::format()](intldateformatter.format.md) \\- Форматує значення дати/часу у вигляді рядка\n-   [time()](function.time.md) \\- Повертає поточну мітку системного часу Unix\n-   [Обумовлені константи дати та часу](class.datetimeinterface.md#datetimeinterface.constants.types)\n","title":"date","contentType":2,"navigation":[{"function.date-timezone-set.md":"« date\\_timezone\\_set"},{"function.getdate.md":"getdate »"},{"index.md":"PHP Manual"},{"ref.datetime.md":"Функції дати та часу"}]}},"__N_SSG":true}