{"pageProps":{"page":{"slug":"function.array-walk.md","content":"# array\\_walk\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\narray\\_walk — Застосовує задану користувачем функцію кожного елемента масиву\n\n### Опис\n\n```methodsynopsis\narray_walk(array|object &$array, callable $callback, mixed $arg = null): bool\n```\n\nЗастосовує функцію користувача `callback` до кожного елементу масиву `array`\n\n**array\\_walk()** не схильна до впливу внутрішнього покажчика масиву `array`. . **array\\_walk()** обійде всі елементи масиву незалежно від позиції покажчика.\n\n### Список параметрів\n\n`array`\n\nВхідний масив\n\n`callback`\n\nЗазвичай функція `callback` приймає два параметри. Як перший параметр йде значення елемента масиву `array`, а ключ - як другий.\n\n> **Зауваження** :\n> \n> Якщо потрібно, щоб функція `callback` змінила значення у масиві, визначте перший параметр `callback` як [посилання](language.references.md). Тоді всі зміни будуть застосовані до елементів оригінального масиву.\n\n> **Зауваження** :\n> \n> Багато вбудованих функцій (наприклад, [strtolower()](function.strtolower.md)) виводять попередження, якщо їм передано більше параметрів, ніж вони очікують, або які не можуть безпосередньо використовуватись у `callback`\n\nПотенційно змінені можуть бути лише значення масиву `array`; структура самого масиву може бути змінена, тобто не можна додати, видалити чи змінити порядок елементів. Якщо callback-функція не відповідає цій вимогі, поведінка цієї функції стане невизначеною і непередбачуваною.\n\n`arg`\n\nЯкщо вказано необов'язковий параметр `arg`, він буде переданий як третій параметр в callback-функцію `callback`\n\n### Значення, що повертаються\n\nПовертає **`true`**\n\n### Помилки\n\nПочинаючи з PHP 7.1.0, якщо `callback`\\-функція вимагає більше двох параметрів (значення та ключ елемента масиву) або більше 3 параметрів, якщо також передається параметр `arg`, буде викинуто виняток [ArgumentCountError](class.argumentcounterror.md). Раніше в такому разі при кожному виклику `callback`, генерувалася помилка рівня [E\\_WARNING](errorfunc.constants.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Якщо параметр `callback` очікує, що значення другого чи третього параметра буде передано за посиланням, функція тепер видасть помилку рівня **`E_WARNING`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** array\\_walk()\\*\\*\\*\\*\n\n```php\n<?php\n$fruits = array(\"d\" => \"lemon\", \"a\" => \"orange\", \"b\" => \"banana\", \"c\" => \"apple\");\n\nfunction test_alter(&$item1, $key, $prefix)\n{\n    $item1 = \"$prefix: $item1\";\n}\n\nfunction test_print($item2, $key)\n{\n    echo \"$key. $item2\\n\";\n}\n\necho \"До ...:\\n\";\narray_walk($fruits, 'test_print');\n\narray_walk($fruits, 'test_alter', 'fruit');\necho \"... и после:\\n\";\n\narray_walk($fruits, 'test_print');\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nДо ...:\nd. lemon\na. orange\nb. banana\nc. apple\n... и после:\nd. fruit: lemon\na. fruit: orange\nb. fruit: banana\nc. fruit: apple\n```\n\n**Приклад #2 Приклад використання** array\\_walk()\\*\\* з анонімною функцією\\*\\*\n\n```php\n<?php\n$elements = ['a', 'b', 'c'];\n\narray_walk($elements, function ($value, $key) {\n  echo \"{$key} => {$value}\\n\";\n});\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n0 => a\n1 => b\n2 => c\n```\n\n### Дивіться також\n\n-   [array\\_walk\\_recursive()](function.array-walk-recursive.md) \\- Рекурсивно застосовує функцію користувача до кожного елементу масиву\n-   [iterator\\_apply()](function.iterator-apply.md) \\- Викликає функцію кожного елемента в итераторе\n-   [list()](function.list.md) \\- надає змінним значення схожим на масиви синтаксисом\n-   [each()](function.each.md) \\- Повертає поточну пару ключ/значення з масиву та зміщує його покажчик\n-   [call\\_user\\_func\\_array()](function.call-user-func-array.md) \\- Викликає callback-функцію з масивом параметрів\n-   [array\\_map()](function.array-map.md) \\- Застосовує callback-функцію до всіх елементів зазначених масивів\n-   [foreach](control-structures.foreach.md)\n","title":"array\\_walk","contentType":2,"navigation":[{"function.array-walk-recursive.md":"« array\\_walk\\_recursive"},{"function.array.md":"array »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}