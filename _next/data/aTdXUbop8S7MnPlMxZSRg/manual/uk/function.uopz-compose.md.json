{"pageProps":{"page":{"slug":"function.uopz-compose.md","content":"# uopz\\_compose\n\n(PECL uopz 1, PECL uopz 2)\n\nuopz\\_compose — Скласти клас\n\n**Увага**\n\nЦя функція була *ВИДАЛЕНО*в PECL uopz 5.0.0.\n\n### Опис\n\n```methodsynopsis\nuopz_compose(    string $name,    array $classes,    array $methods = ?,    array $properties = ?,    int $flags = ?): void\n```\n\nСтворює клас заданого імені, який реалізує, успадковує чи використовує всі надані класи\n\n### Список параметрів\n\n`name`\n\nКоректне ім'я класу\n\n`classes`\n\nМасив імен класів, інтерфейсів та трейтів\n\n`methods`\n\nАсоціативний масив методів, де значення або замикання, або представлені структурою \\[модифікатори => замикання\\]\n\n`properties`\n\nАсоціативний масив властивостей, де ключі – імена, а значення – модифікатори\n\n`flags`\n\nТип запису за замовчуванням ZEND\\_ACC\\_CLASS\n\n### Значення, що повертаються\n\n### Приклади\n\n**Приклад #1 Приклад використання** uopz\\_compose()\\*\\*\\*\\*\n\n```php\n<?php\nclass myClass {}\ntrait myTrait {}\ninterface myInterface {}\n\nuopz_compose(\n    Composed::class, [\n        myClass::class,\n        myTrait::class,\n        myInterface::class\n    ], [\n    \"__construct\" => function() {\n        /* ... */\n    }\n]);\n\nvar_dump(\n class_uses(Composed::class),\n class_parents(Composed::class),\n class_implements(Composed::class));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(1) {\n  [\"myTrait\"]=>\n  string(7) \"myTrait\"\n}\narray(1) {\n  [\"myClass\"]=>\n  string(7) \"myClass\"\n}\narray(1) {\n  [\"myInterface\"]=>\n  string(11) \"myInterface\"\n}\n```\n","title":"uopz\\_compose","contentType":2,"navigation":[{"function.uopz-backup.md":"« uopz\\_backup"},{"function.uopz-copy.md":"uopz\\_copy »"},{"index.md":"PHP Manual"},{"ref.uopz.md":"Функції Uopz"}]}},"__N_SSG":true}