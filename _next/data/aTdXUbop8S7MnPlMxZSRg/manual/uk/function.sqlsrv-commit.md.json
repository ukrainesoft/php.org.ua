{"pageProps":{"page":{"slug":"function.sqlsrv-commit.md","content":"# sqlsrv\\_commit\n\n(No version information available, might only be in Git)\n\nsqlsrv\\_commit - Фіксує транзакцію, розпочату за допомогою [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md)\n\n### Опис\n\n```methodsynopsis\nsqlsrv_commit(resource $conn): bool\n```\n\nФіксує транзакцію, розпочату за допомогою [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md). З'єднання повертається в режим автоматичної фіксації після дзвінка **sqlsrv\\_commit()**. Підтверджена транзакція включає всі оператори, які були виконані після виклику [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md). Явні транзакції повинні запускатися та фіксуватися або відкочуватися з використанням цих функцій замість виконання SQL-операторів, які запускають та фіксують/відкочують транзакції. Для отримання додаткової інформації дивіться [» Транзакції SQLSRV](http://msdn.microsoft.com/en-us/library/cc296206.aspx)\n\n### Список параметрів\n\n`conn`\n\nЗ'єднання, на якому має бути здійснено транзакцію.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** sqlsrv\\_commit()\\*\\*\\*\\*\n\nУ наступному прикладі показано, як використовувати \\*\\*sqlsrv\\_commit()\\*\\*вместе с[sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md) і [sqlsrv\\_rollback()](function.sqlsrv-rollback.md)\n\n```php\n<?php\n$serverName = \"serverName\\sqlexpress\";\n$connectionInfo = array( \"Database\"=>\"dbName\", \"UID\"=>\"userName\", \"PWD\"=>\"password\");\n$conn = sqlsrv_connect( $serverName, $connectionInfo);\nif( $conn === false ) {\n    die( print_r( sqlsrv_errors(), true ));\n}\n\n/* Начало транзакции. */\nif ( sqlsrv_begin_transaction( $conn ) === false ) {\n     die( print_r( sqlsrv_errors(), true ));\n}\n\n/* Инициализация значения параметров. */\n$orderId = 1; $qty = 10; $productId = 100;\n\n/* Настройка и выполнение первого запроса. */\n$sql1 = \"INSERT INTO OrdersTable (ID, Quantity, ProductID)\n         VALUES (?, ?, ?)\";\n$params1 = array( $orderId, $qty, $productId );\n$stmt1 = sqlsrv_query( $conn, $sql1, $params1 );\n\n/* Настройка и выполнение второго запроса. */\n$sql2 = \"UPDATE InventoryTable\n         SET Quantity = (Quantity - ?)\n         WHERE ProductID = ?\";\n$params2 = array($qty, $productId);\n$stmt2 = sqlsrv_query( $conn, $sql2, $params2 );\n\n/* Если оба запроса были успешными, зафиксируйте транзакцию. */\n/* В противном случае откатите транзакцию */\nif( $stmt1 && $stmt2 ) {\n     sqlsrv_commit( $conn );\n     echo \"Транзакция зафиксирована.<br />\";\n} else {\n     sqlsrv_rollback( $conn );\n     echo \"Транзакция откачена.<br />\";\n}\n?>\n```\n\n### Дивіться також\n\n-   [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md) \\- Починає транзакцію бази даних\n-   [sqlsrv\\_rollback()](function.sqlsrv-rollback.md) \\- Відкочує транзакцію, розпочату sqlsrv\\_begin\\_transaction\n","title":"sqlsrv\\_commit","contentType":2,"navigation":[{"function.sqlsrv-close.md":"« sqlsrv\\_close"},{"function.sqlsrv-configure.md":"sqlsrv\\_configure »"},{"index.md":"PHP Manual"},{"ref.sqlsrv.md":"Функції SQLSRV"}]}},"__N_SSG":true}