{"pageProps":{"page":{"slug":"datetime.examples-arithmetic.md","content":"## Арифметика дати/часу\n\nУ наступних прикладах показуються деякі підводні камені обчислень дати/часу, щодо переходів на літній та зимовий час (DST), та місяців, що мають різну кількість днів.\n\n**Приклад #1 DateTimeImmutable::add/sub додає інтервали, що охоплюють час, що минув.**\n\nДодавання PT24H через перехід DST призведе до додавання 23/25 годин (для більшості часових поясів).\n\n```php\n<?php\n$dt = new DateTimeImmutable(\"2015-11-01 00:00:00\", new DateTimeZone(\"America/New_York\"));\necho \"Начало: \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n$dt = $dt->add(new DateInterval(\"PT3H\"));\necho \"Конец:  \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nНачало: 2015-11-01 00:00:00 -04:00\nКонец:  2015-11-01 02:00:00 -05:00\n```\n\n**Приклад #2 DateTimeImmutable::modify та strtotime збільшить або зменшить значення індивідуальних компонентів**\n\nДодавання +24 годин через перехід DST додасть точно 24 години (замість обліку переходу на зимовий або літній час).\n\n```php\n<?php\n$dt = new DateTimeImmutable(\"2015-11-01 00:00:00\", new DateTimeZone(\"America/New_York\"));\necho \"Начало: \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n$dt = $dt->modify(\"+24 hours\");\necho \"Конец:  \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nНачало:  2015-11-01 00:00:00 -04:00\nКонец:   2015-11-02 00:00:00 -05:00\n```\n\n**Приклад #3 Додавання або віднімання часу може зменшити або збільшити дату**\n\nНаприклад, 31 січня + 1 місяць поверне 2 березня (високосний рік) чи 3 березня (звичайний рік).\n\n```php\n<?php\necho \"Обычный год:\\n\"; // В феврале 28 дней\n$dt = new DateTimeImmutable(\"2015-01-31 00:00:00\", new DateTimeZone(\"America/New_York\"));\necho \"Начало: \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n$dt = $dt->modify(\"+1 month\");\necho \"Конец:  \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n\necho \"Високосный год:\\n\"; // В феврале 29 дней\n$dt = new DateTimeImmutable(\"2016-01-31 00:00:00\", new DateTimeZone(\"America/New_York\"));\necho \"Начало: \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n$dt = $dt->modify(\"+1 month\");\necho \"Конец:  \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nОбычный год:\nНачало: 2015-01-31 00:00:00 -05:00\nКонец:  2015-03-03 00:00:00 -05:00\nВисокосный год:\nНачало: 2016-01-31 00:00:00 -05:00\nКонец:  2016-03-02 00:00:00 -05:00\n```\n\nДля отримання останнього дня наступного місяця (тобто щоб запобігти переповненню) існує директива `last day of`\n\n```php\n<?php\necho \"Обычный год:\\n\"; // Февраль содержит 28 дней\n$dt = new DateTimeImmutable(\"2015-01-31 00:00:00\", new DateTimeZone(\"America/New_York\"));\necho \"Начало: \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n$dt = $dt->modify(\"last day of next month\");\necho \"Конец:  \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n\necho \"Високосный год:\\n\"; // Февраль содержит 29 дней\n$dt = new DateTimeImmutable(\"2016-01-31 00:00:00\", new DateTimeZone(\"America/New_York\"));\necho \"Начало: \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n$dt = $dt->modify(\"last day of next month\");\necho \"Конец:  \", $dt->format(\"Y-m-d H:i:s P\"), PHP_EOL;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nОбычный год:\nНачало: 2015-01-31 00:00:00 -05:00\nКонец:  2015-02-28 00:00:00 -05:00\nВисокосный год:\nНачало: 2016-01-31 00:00:00 -05:00\nКонец:  2016-02-29 00:00:00 -05:00\n```\n","title":"Арифметика дати/часу","contentType":2,"navigation":[{"datetime.examples.md":"« Приклади"},{"class.datetime.md":"DateTime »"},{"index.md":"PHP Manual"},{"datetime.examples.md":"Приклади"}]}},"__N_SSG":true}