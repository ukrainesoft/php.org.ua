{"pageProps":{"page":{"slug":"eventbuffer.pullup.md","content":"# EventBuffer::pullup\n\n(PECL event >= 1.2.6-beta)\n\nEventBuffer::pullup — Лінеаризує дані в буфері та повертає їх вміст у вигляді рядка\n\n### Опис\n\n```methodsynopsis\npublic\n   EventBuffer::pullup(\n    int\n     $size\n   ): string\n```\n\n\"Лінеаризує\" перші `size` байти буфера, копіюючи або переміщуючи їх за необхідності, щоб гарантувати, що всі вони є суміжними і займають один і той же шматок пам'яті. Якщо розмір негативний, функція лінеаризує весь буфер.\n\n**Увага**\n\nВиклик **EventBuffer::pullup()** з великим розміром може бути досить повільним, оскільки потенційно може знадобитися копіювання всього вмісту буфера.\n\n### Список параметрів\n\n`size`\n\nКількість байтів має бути безперервним у буфері.\n\n### Значення, що повертаються\n\nЯкщо `size` більше, ніж кількість байтів у буфері, функція повертає **`null`**. В іншому випадку повертає рядок **EventBuffer::pullup()**\n\n### Дивіться також\n\n-   [EventBuffer::copyout()](eventbuffer.copyout.md) \\- Копіює вказану кількість байтів з початку буфера\n-   [EventBuffer::drain()](eventbuffer.drain.md) \\- Видаляє вказану кількість байтів з початку буфера, нікуди не копіюючи\n-   [EventBuffer::read()](eventbuffer.read.md) \\- Читає дані з evbuffer та виснажує прочитані байти\n-   [EventBuffer::readLine()](eventbuffer.readline.md) \\- Витягує рядок із початку буфера\n-   [EventBuffer::appendFrom()](eventbuffer.appendfrom.md) \\- Переміщує вказану кількість байтів з вихідного буфера до кінця поточного буфера\n","title":"EventBuffer::pullup","contentType":2,"navigation":[{"eventbuffer.prependbuffer.md":"« EventBuffer::prependBuffer"},{"eventbuffer.read.md":"EventBuffer::read »"},{"index.md":"PHP Manual"},{"class.eventbuffer.md":"EventBuffer"}]}},"__N_SSG":true}