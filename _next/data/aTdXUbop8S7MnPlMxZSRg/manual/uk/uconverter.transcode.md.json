{"pageProps":{"page":{"slug":"uconverter.transcode.md","content":"# UConverter::transcode\n\n(PHP 5 >= 5.5.0, PHP 7, PHP 8, PECL >= 3.0.0a1)\n\nUConverter::transcode — Перетворює рядок з одного кодування символів на інший\n\n### Опис\n\n```methodsynopsis\npublic static UConverter::transcode(    string $str,    string $toEncoding,    string $fromEncoding,    ?array $options = null): string|false\n```\n\nПеретворює рядок `str`из кодировки`fromEncoding`в`toEncoding`\n\n### Список параметрів\n\n`str`\n\nРядок (string) для перетворення.\n\n`toEncoding`\n\nНеобхідне кодування результату.\n\n`fromEncoding`\n\nПоточне кодування рядка `str`\n\n`options`\n\nНеобов'язковий масив (array), який може містити такі ключі:\n\n-   `'to_subst'`\\- підстановочний символ, який використовується замість будь-якого символу рядка`str`, який не може бути закодований у`toEncoding`. Якщо ключ вказано, він повинен представляти один символ у цільовому кодуванні.\n\n### Значення, що повертаються\n\nВозвращает преобразованную строку или\\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Перетворення з UTF-8 на UTF-16 і назад**\n\n```php\n<?php\n$utf8_string = \"\\x5A\\x6F\\xC3\\xAB\"; // 'Zoë' в UTF-8\n$utf16_string = UConverter::transcode($utf8_string, 'UTF-16BE', 'UTF-8');\necho bin2hex($utf16_string), \"\\n\";\n\n$new_utf8_string = UConverter::transcode($utf16_string, 'UTF-8', 'UTF-16BE');\necho bin2hex($new_utf8_string), \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n005a006f00eb\n5a6fc3ab\n```\n\n**Приклад #2 Неприпустимі символи у вхідному рядку**\n\nЯкщо вхідний рядок містить послідовність байтів, яка не є допустимою у кодуванні, зазначеній у `fromEncoding`, то перед преобразованием в`toEncoding`она заменяется кодовой точкой Unicode U+FFFD (Заменяющий символ).\n\n```php\n<?php\n$invalid_utf8_string = \"\\xC3\"; // неполная многобайтовая последовательность UTF-8\n$utf16_string = UConverter::transcode($invalid_utf8_string, 'UTF-16BE', 'UTF-8');\necho bin2hex($utf16_string), \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nfffd\n```\n\n**Приклад #3 Символи, які не можуть бути закодовані**\n\nЯкщо вхідний рядок містить символи, які не можуть бути представлені у кодуванні `toEncoding`, вони замінюються одним символом. За замовчуванням символ залежить від кодування і може керуватися за допомогою параметра `'to_subst'`\n\n```php\n<?php\n$utf8_string = \"\\xE2\\x82\\xAC\"; // € (Знак евро) не существует в ISO 8859-1\n\n// Замена по умолчанию в ISO 8859-1 - \"\\x1A\" (Заменитель)\n$iso8859_1_string = UConverter::transcode($utf8_string, 'ISO-8859-1', 'UTF-8');\necho bin2hex($iso8859_1_string), \"\\n\";\n\n// Использование в качестве заменителя символа '?' (\"\\x3F\").\n$iso8859_1_string = UConverter::transcode(\n    $utf8_string, 'ISO-8859-1', 'UTF-8', ['to_subst' => '?']\n);\necho bin2hex($iso8859_1_string), \"\\n\";\n\n// Поскольку ISO 8859-1 не может отобразить U+FFFD, недействительная входная строка также заменяется на to_subst\n$invalid_utf8_string = \"\\xC3\"; // неполная многобайтовая последовательность UTF-8\n$iso8859_1_string = UConverter::transcode(\n    $invalid_utf8_string, 'ISO-8859-1', 'UTF-8', ['to_subst' => '?']\n);\necho bin2hex($iso8859_1_string), \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n1a\n3f\n3f\n```\n\n### Дивіться також\n\n-   [mb\\_convert\\_encoding()](function.mb-convert-encoding.md) \\- Перетворює рядок з одного кодування символів на інший\n-   [iconv()](function.iconv.md) \\- Перетворює рядок з одного кодування символів на інший\n","title":"UConverter::transcode","contentType":2,"navigation":[{"uconverter.toucallback.md":"« UConverter::toUCallback"},{"ref.intl.grapheme.md":"Функції Grapheme »"},{"index.md":"PHP Manual"},{"class.uconverter.md":"UConverter"}]}},"__N_SSG":true}