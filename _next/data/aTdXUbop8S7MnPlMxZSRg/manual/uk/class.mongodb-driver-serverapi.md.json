{"pageProps":{"page":{"slug":"class.mongodb-driver-serverapi.md","content":"# Клас MongoDB\\\\Driver\\\\ServerApi\n\n(mongodb >=1.10.0)\n\n## Вступ\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     final\n     \n      class MongoDB\\Driver\\ServerApi\n     \n     implements \n       MongoDB\\BSON\\Serializable,  Serializable {\n\n    /* Константы */\n    \n     const\n     string\n      MongoDB\\Driver\\ServerAPI::V1 = \"1\";\n\n\n    /* Методы */\n    \n   final public bsonSerialize(): stdClass\nfinal public __construct(string $version, ?bool $strict = null, ?bool $deprecationErrors = null)\nfinal public serialize(): string\nfinal public unserialize(string $data): void\n\n   }\n```\n\n## Обумовлені константи\n\n**`MongoDB\\Driver\\ServerApi::V1`**\n\nServer API Версія 1.\n\n## Приклади\n\n**Приклад #1 Приклад оголошення версії API у диспетчері**\n\n```php\n<?php\n\nuse MongoDB\\Driver\\Manager;\nuse MongoDB\\Driver\\ServerApi;\n\n$v1 = new ServerApi(ServerApi::v1);\n$manager = new Manager('mongodb://localhost:27017', [], ['serverApi' => $v1]);\n\n$command = new MongoDB\\Driver\\Command(['buildInfo' => 1]);\n\ntry {\n    $cursor = $manager->executeCommand('admin', $command);\n} catch(MongoDB\\Driver\\Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n    exit;\n}\n\n/* Команда buildInfo возвращает единственный документ результата, поэтому нам нужно получить доступ\n * к первому результату в курсоре. */\n$buildInfo = $cursor->toArray()[0];\n\necho $buildInfo->version, \"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n4.9.0-alpha7-49-gb968ca0\n```\n\n**Приклад #2 Приклад оголошення строгої версії API для менеджера**\n\nУ наступному прикладі встановлюється прапор `strict`, який повідомляє серверу відхилити будь-яку команду, яка не є частиною оголошеної версії API. Це призводить до помилки під час виконання команди buildInfo.\n\n```php\n<?php\n\nuse MongoDB\\Driver\\Manager;\nuse MongoDB\\Driver\\ServerApi;\n\n$v1 = new ServerApi(ServerApi::v1, true);\n$manager = new Manager('mongodb://localhost:27017', [], ['serverApi' => $v1]);\n\n$command = new MongoDB\\Driver\\Command(['buildInfo' => 1]);\n\ntry {\n    $cursor = $manager->executeCommand('admin', $command);\n} catch(MongoDB\\Driver\\Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n    exit;\n}\n\n/* Команда buildInfo возвращает единственный документ результата, поэтому нам нужно получить доступ\n * к первому результату в курсоре. */\n$buildInfo = $cursor->toArray()[0];\n\necho $buildInfo->version, \"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nProvided apiStrict:true, but the command buildInfo is not in API Version 1\n```\n\n## Зміст\n\n-   [MongoDB\\\\Driver\\\\ServerApi::bsonSerialize](mongodb-driver-serverapi.bsonserialize.md)— Повертає об'єкт для серіалізації BSON\n-   [MongoDB\\\\Driver\\\\ServerApi::\\_\\_construct](mongodb-driver-serverapi.construct.md)— Створює новий примірник ServerApi\n-   [MongoDB\\\\Driver\\\\ServerApi::serialize](mongodb-driver-serverapi.serialize.md) \\- Серіалізує ServerApi\n-   [MongoDB\\\\Driver\\\\ServerApi::unserialize](mongodb-driver-serverapi.unserialize.md) \\- Десеріалізує ServerApi\n","title":"Клас MongoDB\\\\Driver\\\\ServerApi","contentType":2,"navigation":[{"mongodb-driver-clientencryption.rewrapmanydatakey.md":"« MongoDB\\\\Driver\\\\ClientEncryption::rewrapManyDataKey"},{"mongodb-driver-serverapi.bsonserialize.md":"MongoDB\\\\Driver\\\\ServerApi::bsonSerialize »"},{"index.md":"PHP Manual"},{"book.mongodb.md":"MongoDB\\\\Driver"}]}},"__N_SSG":true}