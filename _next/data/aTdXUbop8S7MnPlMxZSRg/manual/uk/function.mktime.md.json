{"pageProps":{"page":{"slug":"function.mktime.md","content":"# mktime\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nmktime — Повертає позначку часу Unix для заданої дати\n\n### Опис\n\n```methodsynopsis\nmktime(    int $hour,    ?int $minute = null,    ?int $second = null,    ?int $month = null,    ?int $day = null,    ?int $year = null): int|false\n```\n\nФункція повертає мітку часу Unix, що відповідає даті та часу, переданих як аргументи. Мітка часу - це ціле число, що дорівнює різниці в секундах між заданою датою/часом і початком епохи Unix (1 січня 1970 00:00:00 GMT).\n\nБудь-які необов'язкові аргументи, опущені чи рівні **`null`**, будуть встановлені в поточне значення відповідно до локальної дати та часу.\n\n**Увага**\n\nЗверніть увагу, що порядок аргументів непарний: `month` `day` `year`, а не в більш розумній послідовності `year` `month` `day`\n\nВиклик функції **mktime()** без аргументів не підтримується і призведе до помилки [ArgumentCountError](class.argumentcounterror.md)\n\n### Список параметрів\n\n`hour`\n\nКількість годин, що минули з початку дня, вказаного параметрами `month` `day`и`year`. Негативні значення визначають годинник до півночі зазначеного дня. Значення більше ніж 23 визначають відповідну годину наступного дня (або днів).\n\n`minute`\n\nКількість хвилин, що минули від початку години, вказаної параметром `hour`. Негативні значення визначають хвилини попередньої години. Значення більше 59 визначають відповідні хвилини наступної години (або годинника).\n\n`second`\n\nКількість секунд, що минули від початку хвилини, вказаної параметром `minute`. Негативні значення визначають секунди попередньої хвилини. Значення більше ніж 59 визначають відповідні секунди наступної хвилини (або хвилин).\n\n`month`\n\nКількість місяців, що минули з кінця минулого року. Значення від 1 до 12 визначають нормальні звичайні календарні місяці року. Значення менше 1 (включаючи негативні значення) визначають місяці попереднього року у зворотному порядку, тобто 0 буде груднем, -1 - листопад і т.д. Значення більше ніж 12 визначають відповідний місяць наступного року (або роках).\n\n`day`\n\nКількість днів, що пройшли з кінця попереднього місяця. Значення від 1 до 28, 29, 30 чи 31 (залежно від місяця) визначають нормальні дні відповідного місяця. Значення менші за 1 (включаючи негативні значення) визначають дні попереднього місяця, таким чином, 0 є останнім днем ​​попереднього місяця, -1 - передостаннім днем ​​попереднього місяця і т.д. Значення більше за кількість днів відповідного місяця визначають відповідний день наступного місяця (або місяців).\n\n`year`\n\nНомер року може бути зазначений двома або чотирма цифрами, причому значення між 0-69 будуть трактовані як 2000-2069, а між 70-100 - як 1970-2000. На тих системах, де time\\_t є 32-бітовим знаковим цілим (найпоширеніший варіант на сьогодні), коректний діапазон для параметра `year` містить дати десь між 1901 та 2038.\n\n### Значення, що повертаються\n\nФункция**mktime()** повертає тимчасову мітку Unix відповідно до переданих аргументів або \\*\\*`false`\\*\\*якщо тимчасова мітка не може бути представлена ​​у вигляді цілого числа PHP.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `hour` більше не є необов'язковим. Якщо вам потрібна тимчасова мітка Unix, використовуйте функцію [time()](function.time.md) |\n| 8.0.0 | `minute` `second` `month` `day`и`year` тепер допускають значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** mktime()\\*\\*\\*\\*\n\n```php\n<?php\n// Устанавливаем используемый по умолчанию часовой пояс.\ndate_default_timezone_set('UTC');\n\n// Выводит: July 1, 2000 is on a Saturday\necho \"July 1, 2000 is on a \" . date(\"l\", mktime(0, 0, 0, 7, 1, 2000));\n\n// Выводит что-то вроде: 2006-04-05T01:02:03+00:00\necho date('c', mktime(1, 2, 3, 4, 5, 2006));\n?>\n```\n\n**Приклад #2 Приклад використання** mktime()\\*\\*\\*\\*\n\nФункцию**mktime()** зручно використовуватиме виконання арифметичних операцій із датами, оскільки вона обчислює правильні значення при некоректних аргументах. Наприклад, у наступному прикладі кожен рядок виведе \"Jan-01-1998\".\n\n```php\n<?php\necho date(\"M-d-Y\", mktime(0, 0, 0, 12, 32, 1997));\necho date(\"M-d-Y\", mktime(0, 0, 0, 13, 1, 1997));\necho date(\"M-d-Y\", mktime(0, 0, 0, 1, 1, 1998));\necho date(\"M-d-Y\", mktime(0, 0, 0, 1, 1, 98));\n?>\n```\n\n**Приклад #3 Останній день місяця**\n\nОстанній день будь-якого місяця можна визначити як \"нульовий\" день наступного місяця, не -1 день. Обидва наведені нижче приклади виведуть \"Останній день лютого 2000: 29\".\n\n```php\n<?php\n$lastday = mktime(0, 0, 0, 3, 0, 2000);\necho strftime(\"Последний день февраля 2000 г.: %d\", $lastday);\n$lastday = mktime(0, 0, 0, 4, -31, 2000);\necho strftime(\"Последний день февраля 2000 г.: %d\", $lastday);\n?>\n```\n\n### Дивіться також\n\n-   Класс[DateTimeImmutable](class.datetimeimmutable.md)\n-   [checkdate()](function.checkdate.md) \\- Перевіряє коректність дати за григоріанським календарем\n-   [gmmktime()](function.gmmktime.md) \\- Повертає локальну мітку часу Unix для часу за Грінвічем\n-   [date()](function.date.md) \\- Форматує тимчасову мітку Unix\n-   [time()](function.time.md) \\- Повертає поточну мітку системного часу Unix\n","title":"mktime","contentType":2,"navigation":[{"function.microtime.md":"« microtime"},{"function.strftime.md":"strftime »"},{"index.md":"PHP Manual"},{"ref.datetime.md":"Функції дати та часу"}]}},"__N_SSG":true}