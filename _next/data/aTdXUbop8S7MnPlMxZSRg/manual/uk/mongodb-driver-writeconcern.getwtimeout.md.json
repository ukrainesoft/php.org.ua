{"pageProps":{"page":{"slug":"mongodb-driver-writeconcern.getwtimeout.md","content":"# MongoDB\\\\Driver\\\\WriteConcern::getWtimeout\n\n(mongodb >=1.0.0)\n\nMongoDB\\\\Driver\\\\WriteConcern::getWtimeout — Повертає опцію \"wtimeout\" WriteConcern\n\n### Опис\n\n```methodsynopsis\nfinal public MongoDB\\Driver\\WriteConcern::getWtimeout(): int\n```\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає опцію \"wtimeout\" WriteConcern.\n\n### Помилки\n\n-   При помилці парсингу аргумент кидає виняток[MongoDB\\\\Driver\\\\Exception\\\\InvalidArgumentException](class.mongodb-driver-exception-invalidargumentexception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL mongodb 1.7.0 | У 32-розрядних системах метод завжди буде усікати значення `wTimeout`якщо воно виходить за межі 32-бітного діапазону. У цьому випадку буде видано попередження. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** MongoDB\\\\Driver\\\\WriteConcern::getWtimeout()\\*\\*\\*\\*\n\n```php\n<?php\n\n$wc = new MongoDB\\Driver\\WriteConcern(1);\nvar_dump($wc->getWtimeout());\n\n$wc = new MongoDB\\Driver\\WriteConcern(MongoDB\\Driver\\WriteConcern::MAJORITY, 3000);\nvar_dump($wc->getWtimeout());\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(0)\nint(3000)\n```\n\n### Дивіться також\n\n-   [» Посібник з гарантії запису](https://www.mongodb.com/docs/manual/reference/write-concern/)\n","title":"MongoDB\\\\Driver\\\\WriteConcern::getWtimeout","contentType":2,"navigation":[{"mongodb-driver-writeconcern.getw.md":"« MongoDB\\\\Driver\\\\WriteConcern::getW"},{"mongodb-driver-writeconcern.isdefault.md":"MongoDB\\\\Driver\\\\WriteConcern::isDefault »"},{"index.md":"PHP Manual"},{"class.mongodb-driver-writeconcern.md":"MongoDB\\\\Driver\\\\WriteConcern"}]}},"__N_SSG":true}