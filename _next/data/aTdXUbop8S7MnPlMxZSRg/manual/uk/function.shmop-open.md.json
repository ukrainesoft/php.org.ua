{"pageProps":{"page":{"slug":"function.shmop-open.md","content":"# shmop\\_open\n\n(PHP 4 >= 4.0.4, PHP 5, PHP 7, PHP 8)\n\nshmop\\_open — Резервування або використання блоку пам'яті, що розділяється.\n\n### Опис\n\n```methodsynopsis\nshmop_open(    int $key,    string $mode,    int $permissions,    int $size): Shmop|false\n```\n\n**shmop\\_open()** резервує або використовує існуючий блок пам'яті, що розділяється.\n\n### Список параметрів\n\n`key`\n\nСистемний ідентифікатор блоку пам'яті, що розділяється. Може бути заданий у десятковому або шістнадцятковому кодуванні.\n\n`mode`\n\nДоступні для використання прапори:\n\n-   \"a\" для доступу (встановлює прапор SHM\\_RDONLY) Слід застосовувати цей прапор, коли необхідно використовувати раніше зарезервовану ділянку пам'яті, що розділяється, вже містить будь-які дані. У цьому випадку доступ можливий лише для читання.\n-   \"c\" для резервування (встановлює прапор IPC\\_CREATE) Слід використовувати цей прапор для створення нової зарезервованої ділянки пам'яті, що розділяється. Якщо ділянку пам'яті з таким ідентифікатором вже існує, спроба доступу до неї виконується для подальших операцій читання та запису.\n-   \"w\" для виконання операцій читання та запису Слід використовувати цей прапор для читання та запису даних, що зберігаються в пам'яті, що розділяється. Цей прапор використовується в більшості випадків.\n-   \"n\" для створення у пам'яті нового сегмента (встановлює прапор IPC\\_CREATE|IPC\\_EXCL) Слід використовувати цей прапор для створення нового сегмента в пам'яті, що розділяється, але якщо сегмент вже існує з тим же прапором, відбувається відмова. Це корисно з метою безпеки, т.к. дозволяє уникнути помилок синхронізації (Race condition exploits).\n\n`permissions`\n\nПрава доступу до ділянки пам'яті такі ж, як і до звичайного файлу. Їх можна вказувати у вісімковому вигляді, наприклад `0644`\n\n`size`\n\nРозмір резервованого блоку в пам'яті, що розділяється в байтах\n\n> **Зауваження** :\n> \n> Зверніть увагу: треті та четверті параметри повинні бути вказані як 0, якщо необхідно отримати доступ до існуючої ділянки пам'яті.\n\n### Значення, що повертаються\n\nУ разі успішного виконання **shmop\\_open()** повертає екземпляр [Shmop](class.shmop.md), який може бути використаний для доступу до зарезервованої ділянці пам'яті. У разі виникнення помилки повертає **`false`**\n\n### Помилки\n\nЯкщо параметр `mode` вказано некоректно або параметр `size` менше або дорівнює нулю, видається помилка [ValueError](class.valueerror.md). У разі виникнення інших помилок видається помилка рівня **`E_WARNING`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | У разі успішного виконання повертається екземпляр [Shmop](class.shmop.md); раніше повертався ресурс (resource). |\n| 8.0.0 | Якщо параметр `mode` вказано некоректно або параметр `size` менше або дорівнює нулю, видається помилка [ValueError](class.valueerror.md). previously **`E_WARNING`** was emitted instead, раніше натомість видавалася помилка рівня **`E_WARNING`** та функція повертала **`false`** |\n\n### Приклади\n\n**Приклад #1 Резервування ділянки пам'яті, що розділяється**\n\n```php\n<?php\n$shm_key = ftok(__FILE__, 't');\n$shm_id = shmop_open($shm_key, \"c\", 0644, 100);\n?>\n```\n\nУ наведеному прикладі виконується доступ до блоку з ідентифікатором, що повертається функцією [ftok()](function.ftok.md)\n\n### Дивіться також\n\n-   [shmop\\_close()](function.shmop-close.md) \\- Закриття блоку пам'яті, що розділяється\n-   [shmop\\_delete()](function.shmop-delete.md) \\- Видалення блоку пам'яті, що розділяється\n","title":"shmop\\_open","contentType":2,"navigation":[{"function.shmop-delete.md":"« shmop\\_delete"},{"function.shmop-read.md":"shmop\\_read »"},{"index.md":"PHP Manual"},{"ref.shmop.md":"Пам'ять, що розділяється (shared)"}]}},"__N_SSG":true}