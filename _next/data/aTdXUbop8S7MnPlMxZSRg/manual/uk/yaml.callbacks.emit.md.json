{"pageProps":{"page":{"slug":"yaml.callbacks.emit.md","content":"## Публікуючі callback-функції\n\nПублікуючі callback-функції викликаються тоді, коли за допомогою [yaml\\_emit()](function.yaml-emit.md) або [yaml\\_emit\\_file()](function.yaml-emit-file.md) публікуються екземпляри зареєстрованих класів. У функцію передається об'єкт, що публікується. Callback-функція повинна повернути масив із двома ключами: \"`tag`\"і\"`data`\". Значення, пов'язане з ключем\"`tag`\" має бути рядком, що містить тег YAML для виведення. Значення, пов'язане з ключем \"`data`\" повинно бути закодовано як YAML та опубліковано замість перехопленого об'єкта.\n\n**Приклад #1 Приклад публікуючої callback функції**\n\n```php\n<?php\nclass EmitExample {\n  public $data;    // данные должны быть понятного pecl/yaml типа\n\n  public function __construct ($d) {\n    $this->data = $d;\n  }\n\n  /**\n   * Публикующая callback-функция Yaml.\n   *\n   * Ожидается возвращение массива с двумя значениями 2:\n   *   - 'tag': пользовательский тег для этой сериализации\n   *   - 'data': значение для преобразование в yaml (массив, строка, логическое, число)\n   *\n   * @param object $obj Публикуемый объект\n   * @return array Тег и замещающие данные для публикации\n   */\n  public static function yamlEmit (EmitExample $obj) {\n    return array(\n      'tag' => '!example/emit',\n      'data' => $obj->data,\n    );\n  }\n}\n\n$emit_callbacks = array(\n  'EmitExample' => array('EmitExample', 'yamlEmit')\n);\n\n$t = new EmitExample(array('a','b','c'));\n$yaml = yaml_emit(\n  array(\n    'example' => $t,\n  ),\n  YAML_ANY_ENCODING,\n  YAML_ANY_BREAK,\n  $emit_callbacks\n);\nvar_dump($yaml);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nstring(43) \"---\nexample: !example/emit\n- a\n- b\n- c\n...\n\"\n```\n","title":"Публікуючі callback-функції","contentType":2,"navigation":[{"yaml.callbacks.parse.md":"Callback-функції парсингу"},{"ref.yaml.md":"Функції Yaml »"},{"index.md":"PHP Manual"},{"yaml.callbacks.md":"Callback-функції"}]}},"__N_SSG":true}