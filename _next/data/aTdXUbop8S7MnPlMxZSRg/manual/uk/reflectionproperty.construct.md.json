{"pageProps":{"page":{"slug":"reflectionproperty.construct.md","content":"# ReflectionProperty::\\_\\_construct\n\n(PHP 5, PHP 7, PHP 8)\n\nReflectionProperty::\\_\\_construct - Конструктор класу ReflectionProperty\n\n### Опис\n\npublic **ReflectionProperty::\\_\\_construct**(object|string`$class`, string`$property`) .\n\n### Список параметрів\n\n`class`\n\nАбо рядок, що містить ім'я класу, що відображається, або об'єкт.\n\n`property`\n\nІм'я властивості, яку потрібно відобразити.\n\n### Помилки\n\nСпроба отримати або встановити значення захищеної або закритої властивості призведе до викидання винятку.\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionProperty::\\_\\_construct()\\*\\*\\*\\*\n\n```php\n<?php\nclass Str\n{\n    public $length  = 5;\n}\n\n// Создание нового объекта класса ReflectionProperty\n$prop = new ReflectionProperty('Str', 'length');\n\n// Вывод основной информации об объекте\nprintf(\n    \"===> %s%s%s%s свойство '%s' (которое %s)\\n\" .\n    \"     имеющее модификаторы %s\\n\",\n        $prop->isPublic() ? ' общедоступное' : '',\n        $prop->isPrivate() ? ' закрытое' : '',\n        $prop->isProtected() ? ' защищённое' : '',\n        $prop->isStatic() ? ' статическое' : '',\n        $prop->getName(),\n        $prop->isDefault() ? 'объявлено во время компиляции' : 'создано во время выполнения',\n        var_export(Reflection::getModifierNames($prop->getModifiers()), 1)\n);\n\n// создание экземпляра класса Str\n$obj= new Str();\n\n// получение текущего значения\nprintf(\"---> Значение: \");\nvar_dump($prop->getValue($obj));\n\n// Изменение значения\n$prop->setValue($obj, 10);\nprintf(\"---> Установка значения 10, новое значение: \");\nvar_dump($prop->getValue($obj));\n\n// Сбросить объект\nvar_dump($obj);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n===> общедоступное свойство 'length' (которое объявлено во время компиляции)\n     имеющее модификаторы array (\n  0 => 'public',\n)\n---> Значение: int(5)\n---> Установка значения 10, новое значение: int(10)\nobject(Str)#2 (1) {\n  [\"length\"]=>\n  int(10)\n}\n```\n\n**Приклад #2 Отримання значень захищених та закритих властивостей за допомогою класу [ReflectionProperty](class.reflectionproperty.md)**\n\n```php\n<?php\n\nclass Foo {\n    public $x = 1;\n    protected $y = 2;\n    private $z = 3;\n}\n\n$obj = new Foo;\n\n$prop = new ReflectionProperty('Foo', 'y');\n$prop->setAccessible(true);\nvar_dump($prop->getValue($obj)); // int(2)\n\n$prop = new ReflectionProperty('Foo', 'z');\n$prop->setAccessible(true);\nvar_dump($prop->getValue($obj)); // int(2)\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nint(2)\nint(3)\n```\n\n### Дивіться також\n\n-   [ReflectionProperty::getName()](reflectionproperty.getname.md) \\- Отримання імені властивості\n-   [Конструктори](language.oop5.decon.md#language.oop5.decon.constructor)\n","title":"ReflectionProperty::\\_\\_construct","contentType":2,"navigation":[{"reflectionproperty.clone.md":"« ReflectionProperty::\\_\\_clone"},{"reflectionproperty.export.md":"ReflectionProperty::export »"},{"index.md":"PHP Manual"},{"class.reflectionproperty.md":"ReflectionProperty"}]}},"__N_SSG":true}