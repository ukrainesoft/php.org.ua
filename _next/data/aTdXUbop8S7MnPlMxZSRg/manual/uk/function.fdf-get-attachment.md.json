{"pageProps":{"page":{"slug":"function.fdf-get-attachment.md","content":"# fdf\\_get\\_attachment\n\n(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL fdf SVN)\n\nfdf\\_get\\_attachment — Витягує завантажений файл, вбудований у FDF\n\n### Опис\n\n```methodsynopsis\nfdf_get_attachment(resource $fdf_document, string $fieldname, string $savepath): array\n```\n\nВиймає файл, завантажений за допомогою поля \"Вибір файлу\" `fieldname`, і зберігає його в `savepath`\n\n### Список параметрів\n\n`fdf_document`\n\nДескриптор документа FDF, що повертається [fdf\\_create()](function.fdf-create.md) [fdf\\_open()](function.fdf-open.md) або [fdf\\_open\\_string()](function.fdf-open-string.md)\n\n`fieldname`\n\n`savepath`\n\nМожливо, це ім'я простого файлу або існуючого каталогу, в якому файл має бути створений під його вихідним ім'ям. Будь-який існуючий файл з таким самим ім'ям буде перезаписано.\n\n> **Зауваження** :\n> \n> Здається, немає іншого способу дізнатися вихідне ім'я файлу, крім як зберегти файл, використовуючи каталог як `savepath` та перевірити базове ім'я, під яким його було збережено.\n\n### Значення, що повертаються\n\nПовернутий масив містить такі поля:\n\n-   `path`\\- шлях, де зберігається файл\n-   `size`\\- розмір файлу, що зберігається в байтах\n-   `type`\\- mimetype, якщо він вказаний у FDF\n\n### Приклади\n\n**Приклад #1 Збереження завантаженого файлу**\n\n```php\n<?php\n  $fdf = fdf_open_string($HTTP_FDF_DATA);\n  $data = fdf_get_attachment($fdf, \"filename\", \"/tmpdir\");\n  echo \"Загруженный файл хранится в $data[path]\";\n?>\n```\n","title":"fdf\\_get\\_attachment","contentType":2,"navigation":[{"function.fdf-get-ap.md":"« fdf\\_get\\_ap"},{"function.fdf-get-encoding.md":"fdf\\_get\\_encoding »"},{"index.md":"PHP Manual"},{"ref.fdf.md":"FDF"}]}},"__N_SSG":true}