{"pageProps":{"page":{"slug":"language.attributes.overview.md","content":"## Введення в атрибути\n\n(PHP 8)\n\nАтрибути — це структуровані машиночитані метадані, оголошені кодом. Метою атрибутів можуть бути: класи (включаючи анонімні), методи, функції, параметри, властивості та константи класу. Потім описані атрибутами метадані можна проаналізувати під час виконання засобами [Reflection API](book.reflection.md). Тому атрибути можна розглядати як вбудовану в код мову конфігурації.\n\nАтрибути поділяють загальну та специфічну поведінку сутностей у додатку. В якомусь сенсі це схоже на інтерфейс із його реалізаціями. Але інтерфейси та реалізації – це про код, а атрибути – про додавання додаткової інформації та конфігурацію. Інтерфейси можуть реалізовуватися лише класами, тоді як атрибути можна націлювати на методи, функції, параметри, властивості та константи класів. Тому атрибути — значно більш гнучкий механізм, ніж інтерфейси.\n\nПростий приклад заміни інтерфейсу з необов'язковими методами коду з атрибутами. Припустимо, інтерфейс `ActionHandler` описує у додатку операцію, до виконання якої одним реалізаціям потрібна попередня настройка, а іншим — ні. І замість внесення до інтерфейсу `ActionHandler`дополнительного метода`setUp()`, Що для частини реалізацій буде порожнім, можна використовувати атрибут. Однією з переваг цього підходу є те, що ми можемо використати атрибут кілька разів.\n\n**Приклад #1 Реалізація опціональних методів інтерфейсу за допомогою атрибутів**\n\n```php\n<?php\ninterface ActionHandler\n{\n    public function execute();\n}\n\n#[Attribute]\nclass SetUp {}\n\nclass CopyFile implements ActionHandler\n{\n    public string $fileName;\n    public string $targetDirectory;\n\n    #[SetUp]\n    public function fileExists()\n    {\n        if (!file_exists($this->fileName)) {\n            throw new RuntimeException(\"File does not exist\");\n        }\n    }\n\n    #[SetUp]\n    public function targetDirectoryExists()\n    {\n        if (!file_exists($this->targetDirectory)) {\n            mkdir($this->targetDirectory);\n        } elseif (!is_dir($this->targetDirectory)) {\n            throw new RuntimeException(\"Target directory $this->targetDirectory is not a directory\");\n        }\n    }\n\n    public function execute()\n    {\n        copy($this->fileName, $this->targetDirectory . '/' . basename($this->fileName));\n    }\n}\n\nfunction executeAction(ActionHandler $actionHandler)\n{\n    $reflection = new ReflectionObject($actionHandler);\n\n    foreach ($reflection->getMethods() as $method) {\n        $attributes = $method->getAttributes(SetUp::class);\n\n        if (count($attributes) > 0) {\n            $methodName = $method->getName();\n\n            $actionHandler->$methodName();\n        }\n    }\n\n    $actionHandler->execute();\n}\n\n$copyAction = new CopyFile();\n$copyAction->fileName = \"/tmp/foo.jpg\";\n$copyAction->targetDirectory = \"/home/user\";\n\nexecuteAction($copyAction);\n```\n","title":"Введення в атрибути","contentType":2,"navigation":[{"language.attributes.md":"« Атрибути"},{"language.attributes.syntax.md":"Синтаксис атрибутів »"},{"index.md":"PHP Manual"},{"language.attributes.md":"Атрибути"}]}},"__N_SSG":true}