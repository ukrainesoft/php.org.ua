{"pageProps":{"page":{"slug":"function.uasort.md","content":"# uasort\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nuasort — Сортує масив користувальницької функції порівняння, зберігаючи асоціацію індексів\n\n### Опис\n\n```methodsynopsis\nuasort(array &$array, callable $callback): true\n```\n\nСортує масив `array` функцією користувача порівняння так, щоб ключі масиву зберігали кореляцію зі значеннями, з якими вони пов'язані.\n\nФункцією користуються для сортування асоціативних масивів, котрим важливий поточний порядок елементів.\n\n> **Зауваження** :\n> \n> Якщо обидва порівнювані значення еквівалентні, вони зберігають свій початковий порядок. До PHP 8.0.0 їх відносний порядок у відсортованому масиві не було визначено.\n\n> **Зауваження** :\n> \n> Скидає внутрішній покажчик масиву перший елемент.\n\n### Список параметрів\n\n`array`\n\nВхідний масив\n\n`callback`\n\nФункція порівняння повинна повертати ціле, яке менше, дорівнює чи більше нуля, якщо перший аргумент є відповідно меншим, рівним чи більшим, ніж другий.\n\n```methodsynopsis\ncallback(mixed $a, mixed $b): int\n```\n\n**Застереження**\n\nВозвращение*нецілих* значень з функції порівняння, таких як число з плаваючою точкою (float), призведе до внутрішнього приведення значення callback-функції, що повертається, до цілого числа (int). Таким чином, значення `0.99`и`0.1` будуть приведені до цілого значення що дозволить порівняти ці значення як рівні.\n\n### Значення, що повертаються\n\nФункція завжди повертає **`true`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Тип значення, що повертається тепер **`true`**; раніше було bool. |\n| 8.0.0 | Тепер функція видасть помилку рівня **`E_WARNING`**, якщо параметр callback-функції, переданої у параметр `callback`, очікує на передачу значення за посиланням. |\n\n### Приклади\n\n**Приклад #1 Простий приклад використання функції **uasort()****\n\n```php\n<?php\n\n// Функция сравнения\nfunction cmp($a, $b) {\n    if ($a == $b) {\n        return 0;\n    }\n    return ($a < $b) ? -1 : 1;\n}\n\n// Сортируемый массив\n$array = array('a' => 4, 'b' => 8, 'c' => -1, 'd' => -9, 'e' => 2, 'f' => 5, 'g' => 3, 'h' => -4);\nprint_r($array);\n\n// Сортируем и выводим получившийся массив\nuasort($array, 'cmp');\nprint_r($array);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [a] => 4\n    [b] => 8\n    [c] => -1\n    [d] => -9\n    [e] => 2\n    [f] => 5\n    [g] => 3\n    [h] => -4\n)\nArray\n(\n    [d] => -9\n    [h] => -4\n    [c] => -1\n    [e] => 2\n    [g] => 3\n    [a] => 4\n    [f] => 5\n    [b] => 8\n)\n```\n\n### Дивіться також\n\n-   [usort()](function.usort.md) \\- Сортує масив за значеннями використовуючи функцію користувача для порівняння елементів\n-   [uksort()](function.uksort.md) \\- Сортує масив за ключами користувальницькою функцією порівняння\n-   [Порівняння функцій сортування масивів](array.sorting.md)\n","title":"uasort","contentType":2,"navigation":[{"function.sort.md":"« sort"},{"function.uksort.md":"uksort »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}