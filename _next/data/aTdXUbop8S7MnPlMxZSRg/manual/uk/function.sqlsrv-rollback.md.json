{"pageProps":{"page":{"slug":"function.sqlsrv-rollback.md","content":"# sqlsrv\\_rollback\n\n(No version information available, might only be in Git)\n\nsqlsrv\\_rollback - Відкочує транзакцію, розпочату [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md)\n\n### Опис\n\n```methodsynopsis\nsqlsrv_rollback(resource $conn): bool\n```\n\nВідкочує транзакцію, розпочату [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md) та повертає з'єднання з режимом автоматичної фіксації.\n\n### Список параметрів\n\n`conn`\n\nРесурс підключення, що повертається викликом [sqlsrv\\_connect()](function.sqlsrv-connect.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** sqlsrv\\_rollback()\\*\\*\\*\\*\n\nУ наступному прикладі показано, як використовувати [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md)вместе с[sqlsrv\\_commit()](function.sqlsrv-commit.md)или**sqlsrv\\_rollback()**\n\n```php\n<?php\n$serverName = \"serverName\\sqlexpress\";\n$connectionInfo = array( \"Database\"=>\"dbName\", \"UID\"=>\"userName\", \"PWD\"=>\"password\");\n$conn = sqlsrv_connect( $serverName, $connectionInfo);\nif( $conn === false ) {\n    die( print_r( sqlsrv_errors(), true ));\n}\n\n/* Начало транзакции. */\nif ( sqlsrv_begin_transaction( $conn ) === false ) {\n     die( print_r( sqlsrv_errors(), true ));\n}\n\n/* Инициализация значений параметров. */\n$orderId = 1; $qty = 10; $productId = 100;\n\n/* Настройка и выполнение первого запроса */\n$sql1 = \"INSERT INTO OrdersTable (ID, Quantity, ProductID)\n         VALUES (?, ?, ?)\";\n$params1 = array( $orderId, $qty, $productId );\n$stmt1 = sqlsrv_query( $conn, $sql1, $params1 );\n\n/* Настройка и выполнение второго запроса */\n$sql2 = \"UPDATE InventoryTable\n         SET Quantity = (Quantity - ?)\n         WHERE ProductID = ?\";\n$params2 = array($qty, $productId);\n$stmt2 = sqlsrv_query( $conn, $sql2, $params2 );\n\n/* Если оба запроса выполнены успешно, зафиксируйте транзакцию. */\n/* В противном случае, откатите транзакцию. */\nif( $stmt1 && $stmt2 ) {\n     sqlsrv_commit( $conn );\n     echo \"Транзакция зафиксирована.<br />\";\n} else {\n     sqlsrv_rollback( $conn );\n     echo \"Транзакция откачена.<br />\";\n}\n?>\n```\n\n### Дивіться також\n\n-   [sqlsrv\\_begin\\_transaction()](function.sqlsrv-begin-transaction.md) \\- Починає транзакцію бази даних\n-   [sqlsrv\\_commit()](function.sqlsrv-commit.md) \\- Фіксує транзакцію, розпочату за допомогою sqlsrv\\_begin\\_transaction\n","title":"sqlsrv\\_rollback","contentType":2,"navigation":[{"function.sqlsrv-query.md":"« sqlsrv\\_query"},{"function.sqlsrv-rows-affected.md":"sqlsrv\\_rows\\_affected »"},{"index.md":"PHP Manual"},{"ref.sqlsrv.md":"Функції SQLSRV"}]}},"__N_SSG":true}