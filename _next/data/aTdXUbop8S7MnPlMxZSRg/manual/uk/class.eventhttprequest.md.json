{"pageProps":{"page":{"slug":"class.eventhttprequest.md","content":"# Клас EventHttpRequest\n\n(PECL event >= 1.4.0-beta)\n\n## Вступ\n\nНадає HTTP-запит.\n\n## Огляд класів\n\n```classsynopsis\n\n     \n    \n    \n    \n     \n      class EventHttpRequest\n     \n     {\n    \n    /* Константы */\n    \n     const\n     int\n      CMD_GET = 1;\n\n    const\n     int\n      CMD_POST = 2;\n\n    const\n     int\n      CMD_HEAD = 4;\n\n    const\n     int\n      CMD_PUT = 8;\n\n    const\n     int\n      CMD_DELETE = 16;\n\n    const\n     int\n      CMD_OPTIONS = 32;\n\n    const\n     int\n      CMD_TRACE = 64;\n\n    const\n     int\n      CMD_CONNECT = 128;\n\n    const\n     int\n      CMD_PATCH = 256;\n\n    const\n     int\n      INPUT_HEADER = 1;\n\n    const\n     int\n      OUTPUT_HEADER = 2;\n\n    /* Методы */\n    \n   public\n   addHeader(\n    string\n     $key\n   , \n    string\n     $value\n   , \n    int\n     $type\n   ): bool\npublic\n   cancel(): void\npublic\n   clearHeaders(): void\npublic\n   closeConnection(): void\npublic\n   __construct(\n    callable\n     $callback\n   , \n    mixed\n     $data\n     = null\n   )\npublic\n   findHeader(\n    string\n     $key\n   , \n    string\n     $type\n   ): void\npublic\n   free(): void\npublic\n   closeConnection(): EventBufferEvent\npublic\n   getCommand(): void\npublic\n   closeConnection(): EventHttpConnection\npublic\n   getHost(): string\npublic\n   getInputBuffer(): EventBuffer\npublic\n   getInputHeaders(): array\npublic\n   getOutputBuffer(): EventBuffer\npublic\n   getOutputHeaders(): void\npublic\n   getResponseCode(): int\npublic\n   getUri(): string\npublic\n   removeHeader(\n    string\n     $key\n   , \n    string\n     $type\n   ): void\npublic\n   sendError(\n    int\n     $error\n   , \n    string\n     $reason\n     = null\n   ): void\npublic\n   sendReply(\n    int\n     $code\n   , \n    string\n     $reason\n   , \n    EventBuffer\n     $buf\n    = ?): void\npublic\n   sendReplyChunk(\n    EventBuffer\n     $buf\n   ): void\npublic\n   sendReplyEnd(): void\npublic\n   sendReplyStart(\n    int\n     $code\n   , \n    string\n     $reason\n   ): void\n\n   }\n```\n\n## Обумовлені константи\n\n**`EventHttpRequest::CMD_GET`**\n\nМетод GET (команда)\n\n**`EventHttpRequest::CMD_POST`**\n\nМетод POST (команда)\n\n**`EventHttpRequest::CMD_HEAD`**\n\nМетод HEAD (команда)\n\n**`EventHttpRequest::CMD_PUT`**\n\nМетод PUT (команда)\n\n**`EventHttpRequest::CMD_DELETE`**\n\nМетод DELETE (команда)\n\n**`EventHttpRequest::CMD_OPTIONS`**\n\nМетод OPTIONS (команда)\n\n**`EventHttpRequest::CMD_TRACE`**\n\nМетод TRACE (команда)\n\n**`EventHttpRequest::CMD_CONNECT`**\n\nМетод CONNECT (команда)\n\n**`EventHttpRequest::CMD_PATCH`**\n\nМетод PATCH (команда)\n\n**`EventHttpRequest::INPUT_HEADER`**\n\nТип вхідного заголовка запиту.\n\n**`EventHttpRequest::OUTPUT_HEADER`**\n\nТип вихідного заголовка запиту.\n\n## Зміст\n\n-   [EventHttpRequest::addHeader](eventhttprequest.addheader.md)— Додає заголовок HTTP до заголовків запиту\n-   [EventHttpRequest::cancel](eventhttprequest.cancel.md)— Скасує очікування HTTP-запиту\n-   [EventHttpRequest::clearHeaders](eventhttprequest.clearheaders.md)— Видаляє всі вихідні заголовки зі списку заголовків запиту\n-   [EventHttpRequest::closeConnection](eventhttprequest.closeconnection.md)— Закриває пов'язане з'єднання HTTP\n-   [EventHttpRequest::\\_\\_construct](eventhttprequest.construct.md)— Створює об'єкт EventHttpRequest\n-   [EventHttpRequest::findHeader](eventhttprequest.findheader.md)— Отримує значення заголовка\n-   [EventHttpRequest::free](eventhttprequest.free.md)— Звільняє об'єкт та видаляє пов'язані події\n-   [EventHttpRequest::getBufferEvent](eventhttprequest.getbufferevent.md)— Повертає об'єкт EventBufferEvent\n-   [EventHttpRequest::getCommand](eventhttprequest.getcommand.md) \\- Повертає команду запиту (метод)\n-   [EventHttpRequest::getConnection](eventhttprequest.getconnection.md)— Повертає об'єкт EventHttpConnection\n-   [EventHttpRequest::getHost](eventhttprequest.gethost.md) \\- Повертає хост запиту\n-   [EventHttpRequest::getInputBuffer](eventhttprequest.getinputbuffer.md) \\- Повертає вхідний буфер\n-   [EventHttpRequest::getInputHeaders](eventhttprequest.getinputheaders.md) \\- Повертає асоціативний масив вхідних заголовків\n-   [EventHttpRequest::getOutputBuffer](eventhttprequest.getoutputbuffer.md)— Повертає вихідний буфер запиту\n-   [EventHttpRequest::getOutputHeaders](eventhttprequest.getoutputheaders.md)— Повертає асоціативний масив вихідних заголовків\n-   [EventHttpRequest::getResponseCode](eventhttprequest.getresponsecode.md) \\- Повертає код відповіді\n-   [EventHttpRequest::getUri](eventhttprequest.geturi.md)— Повертає запит URI\n-   [EventHttpRequest::removeHeader](eventhttprequest.removeheader.md)— Видаляє заголовок HTTP із заголовків запиту\n-   [EventHttpRequest::sendError](eventhttprequest.senderror.md)— Надсилає HTML-повідомлення про помилку клієнту\n-   [EventHttpRequest::sendReply](eventhttprequest.sendreply.md)— Відправляє HTML-відповідь клієнту\n-   [EventHttpRequest::sendReplyChunk](eventhttprequest.sendreplychunk.md)— Відправляє блок даних як частину поточної фрагментованої відповіді\n-   [EventHttpRequest::sendReplyEnd](eventhttprequest.sendreplyend.md)— Заповнює фрагментарну відповідь, звільняючи запит належним чином\n-   [EventHttpRequest::sendReplyStart](eventhttprequest.sendreplystart.md)— Ініціює фрагментарну відповідь\n","title":"Клас EventHttpRequest","contentType":2,"navigation":[{"eventhttpconnection.settimeout.md":"« EventHttpConnection::setTimeout"},{"eventhttprequest.addheader.md":"EventHttpRequest::addHeader »"},{"index.md":"PHP Manual"},{"book.event.md":"Event"}]}},"__N_SSG":true}