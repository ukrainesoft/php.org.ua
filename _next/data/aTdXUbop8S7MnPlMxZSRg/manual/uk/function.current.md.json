{"pageProps":{"page":{"slug":"function.current.md","content":"# current\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\ncurrent — Повертає поточний елемент масиву\n\n### Опис\n\n```methodsynopsis\ncurrent(array|object $array): mixed\n```\n\nУ кожного масиву є внутрішній покажчик з його \" поточний \" елемент, який ініціалізується першим елементом, доданим масив.\n\n### Список параметрів\n\n`array`\n\nМасив.\n\n### Значення, що повертаються\n\nФункция**current()** просто повертає значення елемента масиву, який вказує його внутрішній покажчик. Вона не переміщає покажчик будь-куди. Якщо внутрішній покажчик знаходиться за межами списку елементів або масив порожній, **current()** повертає **`false`**\n\n**Увага**\n\nЦя функція може повертати як логічне значення \\*\\*`false`\\*\\*так і значення не типу boolean, яке наводиться до **`false`**. За більш детальною інформацією зверніться до розділу [Логічний тип](language.types.boolean.md)Используйте[оператор ===](language.operators.comparison.md) для перевірки значення, яке повертається цією функцією.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Виклик функції в об'єкті (object) оголошено застарілим. Або спочатку перетворіть об'єкт (object) на масив (array) за допомогою функції [get\\_mangled\\_object\\_vars()](function.get-mangled-object-vars.md), або використовуйте методи, що надаються класом, що реалізує інтерфейс [Iterator](class.iterator.md), наПриклад,[ArrayIterator](class.arrayiterator.md) |\n| 7.4.0 | Примірники класів [SPL](book.spl.md) тепер обробляються як порожні об'єкти, які мають властивостей, замість виклику методу [Iterator](class.iterator.md) з тим самим ім'ям, що і ця функція. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** current()\\*\\* та дружніх функцій\\*\\*\n\n```php\n<?php\n$transport = array('foot', 'bike', 'car', 'plane');\n$mode = current($transport); // $mode = 'foot';\n$mode = next($transport);    // $mode = 'bike';\n$mode = current($transport); // $mode = 'bike';\n$mode = prev($transport);    // $mode = 'foot';\n$mode = end($transport);     // $mode = 'plane';\n$mode = current($transport); // $mode = 'plane';\n\n$arr = array();\nvar_dump(current($arr)); // bool(false)\n\n$arr = array(array());\nvar_dump(current($arr)); // array(0) { }\n?>\n```\n\n### Примітки\n\n> **Зауваження**: Результати виклику **current()** на порожньому масиві та на масиві, внутрішній покажчик якого вказує на кінець елементів, не відрізняються від елемента масиву типу bool зі значенням **`false`**. Для коректного обходу масиву, який може містити **`false`**, смотрите управляющую конструкцию[foreach](control-structures.foreach.md). Якщо ви хочете використовувати функцію **current()** та при цьому коректно відстежувати кінець масиву, використовуйте функцію [key()](function.key.md) на тому ж елементі, на якому використовували **current()** і перевіряйте її результат на сувору нерівність **`null`**\n\n### Дивіться також\n\n-   [end()](function.end.md) - Встановлює внутрішній покажчик масиву на останній елемент\n-   [key()](function.key.md) \\- Вибирає ключ із масиву\n-   [each()](function.each.md) \\- Повертає поточну пару ключ/значення з масиву та зміщує його покажчик\n-   [prev()](function.prev.md) \\- Пересуває внутрішній покажчик масиву на одну позицію назад\n-   [reset()](function.reset.md) - Встановлює внутрішній покажчик масиву на перший елемент\n-   [next()](function.next.md) \\- Переміщує покажчик масиву вперед на один елемент\n-   [foreach](control-structures.foreach.md)\n","title":"current","contentType":2,"navigation":[{"function.count.md":"« count"},{"function.each.md":"each »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}