{"pageProps":{"page":{"slug":"language.types.intro.md","content":"## Вступ\n\nУ кожного виразу в PHP один із наступних вбудованих типів залежно від його значення:\n\n-   null\n-   bool\n-   int\n-   float (floating-point number)\n-   string\n-   array\n-   object\n-   [callable](language.types.callable.md)\n-   resource\n\nPHP – динамічно типізована мова, що означає, що за замовчуванням немає необхідності вказувати тип змінної, оскільки вона буде визначена під час виконання. Проте можна статично типізувати деякі аспекти мови, використовуючи [декларації типів](language.types.declarations.md)\n\nТипи обмежують тип операцій, які можуть бути виконані з них. Однак, якщо вираз/змінна використовується в операції, яку не підтримує її тип, PHP спробує [перетворити](language.types.type-juggling.md) значення тип, який підтримує операцію. Цей процес залежить від контексту, де використовується значення. Для отримання додаткової інформації дивіться розділ [Маніпуляції з типами](language.types.type-juggling.md)\n\n**Підказка**\n\n[Таблиці порівняння типів](types.comparisons.md) також можуть бути корисними, оскільки в них представлені різні приклади порівняння значень різних типів.\n\n> **Зауваження**: Можна змусити вираз оцінюватися з певним типом, використовуючи [приведення типів](language.types.type-juggling.md#language.types.typecasting). Змінна також може бути наведена до певного типу за допомогою функції [settype()](function.settype.md)\n\nЩоб перевірити значення та тип [вирази](language.expressions.md), используйте функцию[var\\_dump()](function.var-dump.md). Щоб отримати тип [вирази](language.expressions.md), используйте функцию[get\\_debug\\_type()](function.get-debug-type.md). Проте, щоб перевірити, чи є вираз певним типом, використовуйте функції `is_type`\n\n```php\n<?php\n$a_bool = true;   // логическое значение\n$a_str  = \"foo\";  // строка\n$a_str2 = 'foo';  // строка\n$an_int = 12;     // целое число\n\necho get_debug_type($a_bool), \"\\n\";\necho get_debug_type($a_str), \"\\n\";\n\n// Если это целое число, увеличить на четыре\nif (is_int($an_int)) {\n    $an_int += 4;\n}\nvar_dump($an_int);\n\n// Если $a_bool - это строка, вывести её\nif (is_string($a_bool)) {\n    echo \"Строка: $a_bool\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу в PHP 8:\n\n```\nbool\nstring\nint(16)\n```\n\n> **Зауваження**: Замість функції [get\\_debug\\_type()](function.get-debug-type.md), яка була недоступна до PHP 8.0.0, викликали функцію [gettype()](function.gettype.md). Проте вона повертає канонічні імена типів.\n","title":"Вступ","contentType":2,"navigation":[{"language.types.md":"« Типи"},{"language.types.type-system.md":"Система типів »"},{"index.md":"PHP Manual"},{"language.types.md":"Типи"}]}},"__N_SSG":true}