{"pageProps":{"page":{"slug":"control-structures.else.md","content":"## else\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nЧасто необхідно виконати один вираз, якщо умова вірна, та інша — якщо неправильна. Ось, для чого потрібна конструкція `else`Конструкция`else` розширює конструкцію `if`, щоб виконувати інший вираз тоді, коли умова всередині `if` оцінюється як **`false`**. Наприклад, наступний код виведе \"a більше b\", якщо значення змінної $a більше, ніж значення змінної $b, інакше - \"a НЕ більше b\":\n\n```php\n<?php\n\nif ($a > $b) {\n  echo \"a больше b\";\n} else {\n  echo \"a НЕ больше b\";\n}\n\n?>\n```\n\nВираз `else` виконується, тільки якщо умова `if` обчислюється як **`false`**, а якщо були умови `elseif` — лише якщо вони теж обчислюються як **`false`**. . [Про конструкцію elseif](control-structures.elseif.md)\n\n> **Зауваження** **Болтаючий else**\n> \n> У разі вкладених конструкцій `if`\\-`else`, конструкция`else` зв'язується з довколишньою конструкцією `if`\n> \n> ```php\n> <?php\n> \n> $a = false;\n> $b = true;\n> if ($a)\n>     if ($b)\n>         echo \"b\";\n> else\n>     echo \"c\";\n> \n> ?>\n> ```\n> \n> Незалежно від розміщення відступів, які не впливають на PHP-код, конструкція `else` пов'язана з виразом `if ($b)`тому приклад нічого не виведе. Код з такою розстановкою відступів працюватиме, але краще уникати такого коду та використовувати фігурні дужки, щоб усунути неоднозначності.\n","title":"else","contentType":2,"navigation":[{"control-structures.if.md":"« if"},{"control-structures.elseif.md":"elseif/else if »"},{"index.md":"PHP Manual"},{"language.control-structures.md":"Керуючі конструкції"}]}},"__N_SSG":true}