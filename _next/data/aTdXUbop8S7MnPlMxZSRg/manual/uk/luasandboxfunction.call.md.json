{"pageProps":{"page":{"slug":"luasandboxfunction.call.md","content":"# LuaSandboxFunction::call\n\n(PECL luasandbox >= 1.0.0)\n\nLuaSandboxFunction::call — Викликає Lua-функцію\n\n### Опис\n\n```methodsynopsis\npublic LuaSandboxFunction::call(string ...$args): array|bool\n```\n\nВикликає Lua-функцію.\n\nПомилки, викликані PHP-кодом, призведуть до того, що функція поверне **`false`** і буде викликано попередження \\*\\*`E_WARNING`\\*\\*наприклад, коли тип ресурсу (resource) використовується як аргумент. У разі виникнення помилок Lua буде викинуто виняток [LuaSandboxRuntimeError](class.luasandboxruntimeerror.md)\n\nТипи PHP і Lua перетворюються так:\n\n-   \\*\\*`null`\\*\\*в PHP - це`nil`в Lua і навпаки.\n    \n-   Цілі числа (int) і числа з плаваючою точкою (float) у PHP перетворюються на числа Lua. Підтримуються нескінченність та\\*\\*`NAN`\\*\\*\n    \n-   Числа Lua без дробової частини у діапазоні приблизно від`-2**53`и`2**53`перетворюються на цілі числа (int) PHP, інші - у числа PHP з плаваючою точкою (float).\n    \n-   Логічні значення в PHP (bool) - це значення типу boolean у Lua і навпаки.\n    \n-   Рядки в PHP (string) - це значення типу string у Lua і навпаки.\n    \n-   Функції Lua – це об'єкти PHP[LuaSandboxFunction](class.luasandboxfunction.md), і навпаки. Callback-функції PHP ([callable](language.types.callable.md)) не підтримуються.\n    \n-   Масиви PHP (array) перетворюються на таблиці Lua і навпаки.\n    \n    -   Зверніть увагу, що Lua зазвичай індексує масиви з 1, у той час як PHP індексує масиви з 0. Жодних коригувань для цих різних угод не робиться.\n        \n    -   Масиви, що посилаються самі на себе, не підтримуються в жодному напрямі.\n        \n    -   Посилання PHP розіменовуються.\n        \n    -   `__pairs`и`__ipairs` из Lua обрабатываются . `__index` ігнорується.\n        \n    -   При перетворенні з PHP в Lua цілі ключі від`-2**53`до`2**53`видаються як числа в Lua. Всі інші ключі представлені у вигляді рядків Lua.\n        \n    -   При перетворенні з Lua на PHP відмінні від рядків і чисел ключі призведуть до виникнення помилки, як і конфлікти при перетворенні чисел на рядки або навпаки (оскільки PHP вважає такі конструкції, як`$a[0]`и`$a[\"0\"]`еквівалентними).\n        \n-   Всі інші типи не підтримуються і викликають помилку/викинуть виняток, включаючи PHP-об'єкти (object), дані користувача Lua і типи потоків.\n    \n\nФункції Lua по суті повертають список результатів. Таким чином, у разі успішного виконання цей метод повертає масив (array), що містить всі значення, що повертаються Lua, з цілими ключами (int), що починаються з нуля. Lua може не повертати результатів і в цьому випадку повертається порожній масив.\n\n### Список параметрів\n\n`args`\n\nАргументи, що передаються у функцію.\n\n### Значення, що повертаються\n\nПовертає масив значень (array), що повертаються функцією, який може бути порожнім або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n","title":"LuaSandboxFunction::call","contentType":2,"navigation":[{"class.luasandboxfunction.md":"« LuaSandboxFunction"},{"luasandboxfunction.construct.md":"LuaSandboxFunction::\\_\\_construct »"},{"index.md":"PHP Manual"},{"class.luasandboxfunction.md":"LuaSandboxFunction"}]}},"__N_SSG":true}