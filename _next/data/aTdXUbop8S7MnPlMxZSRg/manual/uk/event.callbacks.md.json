{"pageProps":{"page":{"slug":"event.callbacks.md","content":"# Callback-функції\n\nЯкщо для події зареєстрована callback-функція, вона буде викликана, коли подія перейде в активний статус. Для прив'язування функції до події необхідно передати її як параметр [callable](language.types.callable.md)в[Event::\\_\\_construct()](event.construct.md) або [Event::set()](event.set.md) або в один із фабричних методів, таких як [Event::timer()](event.timer.md)\n\nФункція повинна відповідати наступному прототипу:\n\n```methodsynopsis\ncallback(\n   mixed\n     $fd\n     = null\n  , \n   int\n     $what\n   = ?, \n   mixed\n     $arg\n     = null\n  ): void\n```\n\n`fd`\n\nДескриптор файлу, потокового ресурсу чи сокету, пов'язані з подією. Для подій сигналів `fd` збігається із номером сигналу.\n\n`what`\n\nПобітова маска *всіх* оброблюваних подій.\n\n`arg`\n\nДані користувача.\n\nДля[Event::timer()](event.timer.md)callback-функция должна соответствовать следующему прототипу:\n\n```methodsynopsis\ncallback(\n   mixed\n     $arg\n     = null\n  ): void\n```\n\n`arg`\n\nДані користувача.\n\nДля[Event::signal()](event.signal.md)callback-функция должна соответствовать следующему прототипу:\n\n```methodsynopsis\ncallback(\n   int\n     $signum\n   = ?, \n   mixed\n     $arg\n     = null\n  ): void\n```\n\n`signum`\n\nНомер сигналу (наприклад, **`SIGTERM`**\n\n`arg`\n\nДані користувача.\n","title":"Callback-функції","contentType":2,"navigation":[{"event.persistence.md":"« Про постійні (persistent) події"},{"event.constructing.signal.events.md":"Створення подій для сигналів »"},{"index.md":"PHP Manual"},{"book.event.md":"Event"}]}},"__N_SSG":true}