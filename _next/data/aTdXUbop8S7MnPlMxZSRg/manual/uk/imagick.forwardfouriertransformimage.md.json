{"pageProps":{"page":{"slug":"imagick.forwardfouriertransformimage.md","content":"# Imagick::forwardFourierTransformImage\n\n(PECL imagick 3 >= 3.3.0)\n\nImagick::forwardFourierTransformImage — Реалізує дискретне перетворення Фур'є\n\n### Опис\n\n```methodsynopsis\npublic Imagick::forwardFourierTransformimage(bool $magnitude): bool\n```\n\nРеалізує дискретне перетворення Фур'є (ДПФ) зображення у вигляді пари величина/фаза або пари, що складається з реального/уявного зображень.\n\n### Список параметрів\n\n`magnitude`\n\nЯкщо значення дорівнює true, буде повернуто пару величина/фаза, інакше – пара, що складається з реального/уявного зображень.\n\n### Значення, що повертаються\n\nУ разі успішної роботи повертає **`true`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::forwardFourierTransformImage()\\*\\*\\*\\*\n\n```php\n<?php\n//Служебная функция для forwardTransformImage\nfunction createMask() {\n    $draw = new \\ImagickDraw();\n\n    $draw->setStrokeOpacity(0);\n    $draw->setStrokeColor('rgb(255, 255, 255)');\n    $draw->setFillColor('rgb(255, 255, 255)');\n\n    //Рисование круга на оси Y с центром в точках\n    //x, y, который касается начала координат\n    $draw->circle(250, 250, 220, 250);\n\n    $imagick = new \\Imagick();\n    $imagick->newImage(512, 512, \"black\");\n    $imagick->drawImage($draw);\n    $imagick->gaussianBlurImage(20, 20);\n    $imagick->autoLevelImage();\n\n    return $imagick;\n}\n\n\nfunction forwardFourierTransformImage($imagePath) {\n    $imagick = new \\Imagick(realpath($imagePath));\n    $imagick->resizeimage(512, 512, \\Imagick::FILTER_LANCZOS, 1);\n\n    $mask = createMask();\n    $imagick->forwardFourierTransformImage(true);\n\n    @$imagick->setimageindex(0);\n    $magnitude = $imagick->getimage();\n\n    @$imagick->setimageindex(1);\n    $imagickPhase = $imagick->getimage();\n\n    if (true) {\n        $imagickPhase->compositeImage($mask, \\Imagick::COMPOSITE_MULTIPLY, 0, 0);\n    }\n\n    if (false) {\n        $output = clone $imagickPhase;\n        $output->setimageformat('png');\n        header(\"Content-Type: image/png\");\n        echo $output->getImageBlob();\n    }\n\n    $magnitude->inverseFourierTransformImage($imagickPhase, true);\n\n    $magnitude->setimageformat('png');\n    header(\"Content-Type: image/png\");\n    echo $magnitude->getImageBlob();\n}\n\n?>\n```\n","title":"Imagick::forwardFourierTransformImage","contentType":2,"navigation":[{"imagick.flopimage.md":"« Imagick::flopImage"},{"imagick.frameimage.md":"Imagick::frameImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}