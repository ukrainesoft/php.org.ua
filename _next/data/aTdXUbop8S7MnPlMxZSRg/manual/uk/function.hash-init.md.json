{"pageProps":{"page":{"slug":"function.hash-init.md","content":"# hash\\_init\n\n(PHP 5 >= 5.1.2, PHP 7, PHP 8, PECL hash >= 1.1)\n\nhash\\_init - Ініціалізація інкрементального контексту хешування\n\n### Опис\n\n```methodsynopsis\nhash_init(    string $algo,    int $flags = 0,    string $key = \"\",    array $options = []): HashContext\n```\n\n### Список параметрів\n\n`algo`\n\nІм'я обраного алгоритму хешування (наприклад, \"md5\", \"sha256\", \"haval160,4\" тощо). Увесь список підтримуваних алгоритмів можна переглянути в описі функції [hash\\_algos()](function.hash-algos.md)\n\n`flags`\n\nНеобов'язкові налаштування для генерації хешу, в даний час підтримується лише один варіант: **`HASH_HMAC`**. При цьому параметр `key` *повинен* бути вказано.\n\n`key`\n\nЯкщо \\*\\*`HASH_HMAC`\\*\\*указан в параметре`flags`, то в цьому параметрі потрібно надати загальний секретний ключ, який використовуватиметься з методом хешування HMAC.\n\n`options`\n\nБезліч опцій для різних алгоритмів хешування. В даний час у варіантах MurmurHash підтримується лише параметр \"seed\".\n\n### Значення, що повертаються\n\nПовертає контекст хешування для використання у функціях [hash\\_update()](function.hash-update.md) [hash\\_update\\_stream()](function.hash-update-stream.md) [hash\\_update\\_file()](function.hash-update-file.md) і [hash\\_final()](function.hash-final.md)\n\n### Помилки\n\nВикидає виняток [ValueError](class.valueerror.md), якщо параметр `algo` невідомий або не є криптографічною хеш-функцією або якщо параметр `key`не задан.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Добавлен параметр`options` |\n| 8.0.0 | Тепер викидає виняток [ValueError](class.valueerror.md), якщо параметр `algo` невідомий або не є криптографічною хеш-функцією або якщо параметр `key` не заданий; раніше поверталося значення **`false`** і видавалася помилка рівня **`E_WARNING`**. emitted. |\n| 7.2.0 | Заборонено використання некриптографічних хеш-функцій (adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat) з константою **`HASH_HMAC`** |\n| 7.2.0 | Повертає [HashContext](class.hashcontext.md), а чи не ресурс. |\n\n### Приклади\n\n**Приклад #1 Приклад інкрементального хешування**\n\n```php\n<?php\n$hash = hash('sha256', 'Наглый коричневый лисёнок прыгает вокруг ленивой собаки.');\n\n$ctx = hash_init('sha256');\n\nhash_update($ctx, 'Наглый коричневый лисёнок ');\nhash_update($ctx, 'прыгает вокруг ленивой собаки.');\n\n$incremental_hash = hash_final($ctx);\n\necho $incremental_hash, PHP_EOL;\nvar_dump($hash === $incremental_hash);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n199f52fc9f2492c64449ed96003f135f8ea428e353e50c40b0c1a16b9c16f571\nbool(true)\n```\n\n### Дивіться також\n\n-   [hash()](function.hash.md) \\- Генерує хеш-код (підпис повідомлення)\n-   [hash\\_algos()](function.hash-algos.md) \\- Повертає список зареєстрованих алгоритмів хешування\n-   [hash\\_file()](function.hash-file.md) \\- Генерація хеш-значення, використовуючи вміст заданого файлу\n-   [hash\\_hmac()](function.hash-hmac.md) \\- Генерація хеш-коду на основі ключа, використовуючи метод HMAC\n-   [hash\\_hmac\\_file()](function.hash-hmac-file.md) \\- Генерація хеш-коду на основі ключа, використовуючи метод HMAC та вміст отриманого файлу\n","title":"hash\\_init","contentType":2,"navigation":[{"function.hash-hmac.md":"« hash\\_hmac"},{"function.hash-pbkdf2.md":"hash\\_pbkdf2 »"},{"index.md":"PHP Manual"},{"ref.hash.md":"Функції Hash"}]}},"__N_SSG":true}