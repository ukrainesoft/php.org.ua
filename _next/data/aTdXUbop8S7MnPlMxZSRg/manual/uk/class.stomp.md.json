{"pageProps":{"page":{"slug":"class.stomp.md","content":"# Клас Stomp\n\n(PECL stomp >= 0.1.0)\n\n## Вступ\n\nПредставляє зв'язок між PHP та Stomp сумісним брокером повідомлень (Message Broker).\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     \n      class Stomp\n     \n     {\n\n\n    /* Методы */\n    \n    public __construct(    string $broker = ini_get(\"stomp.default_broker_uri\"),    string $username = ?,    string $password = ?,    array $headers = ?)\n\n    public abort(string $transaction_id, array $headers = ?): bool\nstomp_abort(resource $link, string $transaction_id, array $headers = ?): bool\npublic ack(mixed $msg, array $headers = ?): bool\nstomp_ack(resource $link, mixed $msg, array $headers = ?): bool\npublic begin(string $transaction_id, array $headers = ?): bool\nstomp_begin(resource $link, string $transaction_id, array $headers = ?): bool\npublic commit(string $transaction_id, array $headers = ?): bool\nstomp_commit(resource $link, string $transaction_id, array $headers = ?): bool\nstomp_connect(    string $broker = ini_get(\"stomp.default_broker_uri\"),    string $username = ?,    string $password = ?,    array $headers = ?): resource\nstomp_close(resource $link): bool\npublic error(): string\nstomp_error(resource $link): string\npublic getReadTimeout(): array\nstomp_get_read_timeout(resource $link): array\npublic getSessionId(): string|false\nstomp_get_session_id(resource $link): string|false\npublic hasFrame(): bool\nstomp_has_frame(resource $link): bool\npublic readFrame(string $class_name = \"stompFrame\"): stompframe\nstomp_read_frame(resource $link): array\npublic send(string $destination, mixed $msg, array $headers = ?): bool\nstomp_send(    resource $link,    string $destination,    mixed $msg,    array $headers = ?): bool\npublic setReadTimeout(int $seconds, int $microseconds = ?): void\nstomp_set_read_timeout(resource $link, int $seconds, int $microseconds = ?): void\npublic subscribe(string $destination, array $headers = ?): bool\nstomp_subscribe(resource $link, string $destination, array $headers = ?): bool\npublic unsubscribe(string $destination, array $headers = ?): bool\nstomp_unsubscribe(resource $link, string $destination, array $headers = ?): bool\n\n    public __destruct()\n\n   }\n```\n\n## Зміст\n\n-   [Stomp::abort](stomp.abort.md)— Скасує виконання поточної транзакції\n-   [Stomp::ack](stomp.ack.md)— Підтверджує отримання повідомлення\n-   [Stomp::begin](stomp.begin.md) \\- Створює транзакцію\n-   [Stomp::commit](stomp.commit.md) \\- Виконує поточну транзакцію\n-   [Stomp::\\_\\_construct](stomp.construct.md) \\- Відкриває з'єднання\n-   [Stomp::\\_\\_destruct](stomp.destruct.md) \\- Закриває Stomp-з'єднання\n-   [Stomp::error](stomp.error.md) \\- Повертає останню помилку Stomp\n-   [Stomp::getReadTimeout](stomp.getreadtimeout.md)— Повертає час максимального очікування на операцію читання\n-   [Stomp::getSessionId](stomp.getsessionid.md) \\- Повертає ідентифікатор поточної сесії Stomp\n-   [Stomp::hasFrame](stomp.hasframe.md)— Перевіряє, чи можливе читання кадру\n-   [Stomp::readFrame](stomp.readframe.md)— Виконує операцію для читання наступного кадру\n-   [Stomp::send](stomp.send.md)— Надсилає повідомлення\n-   [Stomp::setReadTimeout](stomp.setreadtimeout.md)— Встановлює граничний час очікування на операцію читання\n-   [Stomp::subscribe](stomp.subscribe.md)— Реєструє передплату на вказану розсилку\n-   [Stomp::unsubscribe](stomp.unsubscribe.md)— Видаляє існуючу передплату\n","title":"Клас Stomp","contentType":2,"navigation":[{"function.stomp-version.md":"« stomp\\_version"},{"stomp.abort.md":"Stomp::abort »"},{"index.md":"PHP Manual"},{"book.stomp.md":"Stomp"}]}},"__N_SSG":true}