{"pageProps":{"page":{"slug":"intlchar.getnumericvalue.md","content":"# IntlChar::getNumericValue\n\n(PHP 7, PHP 8)\n\nIntlChar::getNumericValue — Отримати числову виставу для символу Unicode\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::getNumericValue(int|string $codepoint): ?float\n```\n\nОтримує числове уявлення символу Unicode, як у базі символів Unicode.\n\nЕсли для символа отсутствует численное представление - будет возвращено\\*\\*`IntlChar::NO_NUMERIC_VALUE`\\*\\*\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nЧисленное значение`codepoint`, или\\*\\*`IntlChar::NO_NUMERIC_VALUE`\\*\\* якщо відсутня чи не задано. Ця константа з'явилася в PHP 7.0.6, до цієї версії у такому разі поверталося (float)`-123456789`. У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::getNumericValue(\"4\"));\nvar_dump(IntlChar::getNumericValue(\"x\"));\nvar_dump(IntlChar::getNumericValue(\"\\u{216C}\"));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nfloat(4)\nfloat(-123456789)\nfloat(50)\n```\n","title":"IntlChar::getNumericValue","contentType":2,"navigation":[{"intlchar.getintpropertyvalue.md":"« IntlChar::getIntPropertyValue"},{"intlchar.getpropertyenum.md":"IntlChar::getPropertyEnum »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}