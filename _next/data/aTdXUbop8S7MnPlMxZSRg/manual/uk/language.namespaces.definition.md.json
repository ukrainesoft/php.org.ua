{"pageProps":{"page":{"slug":"language.namespaces.definition.md","content":"## Визначення просторів імен\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nХоча будь-який коректний PHP-код може знаходитися всередині простору імен, тільки класи (включаючи абстрактні та трейти), інтерфейси, функції та константи залежать від нього.\n\nПростір імен оголошують, вказуючи зарезервоване слово `namespace`. Простір імен у файлах оголошують на початку, перед будь-яким іншим кодом, крім зарезервованого слова [declare](control-structures.declare.md)\n\n**Приклад #1 Оголошення єдиного простору імен**\n\n```php\n<?php\n\nnamespace MyProject;\n\nconst CONNECT_OK = 1;\nclass Connection { /* ... */ }\nfunction connect() { /* ... */  }\n\n?>\n```\n\n> **Зауваження**: Абсолютні імена (тобто імена, які починаються зі зворотної косою межі) не допускаються в оголошеннях простору імен, оскільки такі конструкції інтерпретуються як відносні вирази простору імен.\n\nТільки виразу `declare` дозволено перебувати перед оголошенням простору імен, щоб визначити кодування вихідного файлу. Крім сказаного, перед оголошенням простору імен не повинно бути іншого коду, ніж PHP-код, включаючи зайві прогалини:\n\n**Приклад #2 Оголошення простого простору імен**\n\n```php\n<html>\n<?php\n\nnamespace MyProject; // fatal error — объявление пространства имён должно быть первым выражением в скрипте\n\n?>\n```\n\nКрім того, той самий простір імен, на відміну від інших конструкцій PHP, можна визначати в декількох файлах, що допомагає розподіляти їх зміст по файловій системі.\n","title":"Визначення просторів імен","contentType":2,"navigation":[{"language.namespaces.rationale.md":"« Огляд"},{"language.namespaces.nested.md":"Підпростори імен »"},{"index.md":"PHP Manual"},{"language.namespaces.md":"Простори імен"}]}},"__N_SSG":true}