{"pageProps":{"page":{"slug":"reflectionmethod.getdeclaringclass.md","content":"# ReflectionMethod::getDeclaringClass\n\n(PHP 5, PHP 7, PHP 8)\n\nReflectionMethod::getDeclaringClass — Отримує клас, що оголошує відображений метод\n\n### Опис\n\n```methodsynopsis\npublic ReflectionMethod::getDeclaringClass(): ReflectionClass\n```\n\nОтримує клас, що оголошує відбитий метод.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nОб'єкт класу [ReflectionClass](class.reflectionclass.md)частиною якого є відбитий метод.\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionMethod::getDeclaringClass()\\*\\*\\*\\*\n\n```php\n<?php\nclass HelloWorld {\n\n    protected function sayHelloTo($name) {\n        return 'Привет, ' . $name;\n    }\n\n}\n\n$reflectionMethod = new ReflectionMethod(new HelloWorld(), 'sayHelloTo');\nvar_dump($reflectionMethod->getDeclaringClass());\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nobject(ReflectionClass)#2 (1) {\n  [\"name\"]=>\n  string(10) \"HelloWorld\"\n}\n```\n\n### Дивіться також\n\n-   [ReflectionMethod::isAbstract()](reflectionmethod.isabstract.md) \\- Перевіряє, чи є метод абстрактним\n","title":"ReflectionMethod::getDeclaringClass","contentType":2,"navigation":[{"reflectionmethod.getclosure.md":"« ReflectionMethod::getClosure"},{"reflectionmethod.getmodifiers.md":"ReflectionMethod::getModifiers »"},{"index.md":"PHP Manual"},{"class.reflectionmethod.md":"ReflectionMethod"}]}},"__N_SSG":true}