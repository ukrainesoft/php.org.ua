{"pageProps":{"page":{"slug":"book.intl.md","content":"# Функції інтернаціоналізації\n\n-   [Вступ](intro.intl.md)\n-   [Встановлення та налаштування](intl.setup.md)\n    -   [Вимоги](intl.requirements.md)\n    -   [Установка](intl.installation.md)\n    -   [Налаштування під час виконання](intl.configuration.md)\n    -   [Типи ресурсів](intl.resources.md)\n-   [Обумовлені константи](intl.constants.md)\n-   [Приклади](intl.examples.md)\n    -   [Основи використання модуля](intl.examples.basic.md)\n-   [Collator](class.collator.md) \\- Клас Collator\n    -   [Collator::asort](collator.asort.md)— Сортує масив із збереженням асоціації індексу\n    -   [Collator::compare](collator.compare.md)— Порівнює два рядки Unicode\n    -   [Collator::\\_\\_construct](collator.construct.md) \\- Створює новий екземпляр Collator\n    -   [Collator::create](collator.create.md) \\- Створює новий екземпляр Collator\n    -   [Collator::getAttribute](collator.getattribute.md)— Отримує значення атрибуту зіставлення\n    -   [Collator::getErrorCode](collator.geterrorcode.md)— Отримує останній код помилки Collator\n    -   [Collator::getErrorMessage](collator.geterrormessage.md)— Отримує текст для останньої помилки коду Collator\n    -   [Collator::getLocale](collator.getlocale.md) \\- Отримує назву локалі для Collator\n    -   [Collator::getSortKey](collator.getsortkey.md)— Отримує ключ сортування рядка\n    -   [Collator::getStrength](collator.getstrength.md)— Отримує поточну силу зіставлення\n    -   [Collator::setAttribute](collator.setattribute.md) \\- Встановлює атрибут зіставлення\n    -   [Collator::setStrength](collator.setstrength.md) \\- Встановлює силу зіставлення\n    -   [Collator::sortWithSortKeys](collator.sortwithsortkeys.md)— Сортує масив із використанням зазначеного Collator та ключів сортування\n    -   [Collator::sort](collator.sort.md)— Сортує масив із використанням зазначеного засобу сортування\n-   [NumberFormatter](class.numberformatter.md)— The NumberFormatter class\n    -   [NumberFormatter::create](numberformatter.create.md)— Створює засіб форматування чисел\n    -   [NumberFormatter::formatCurrency](numberformatter.formatcurrency.md) \\- Форматує значення валюти\n    -   [NumberFormatter::format](numberformatter.format.md) \\- Форматує число\n    -   [NumberFormatter::getAttribute](numberformatter.getattribute.md)— Отримує атрибут\n    -   [NumberFormatter::getErrorCode](numberformatter.geterrorcode.md)— Отримує останній код помилки засобу форматування\n    -   [NumberFormatter::getErrorMessage](numberformatter.geterrormessage.md)— Отримує останнє повідомлення про помилку засобу форматування\n    -   [NumberFormatter::getLocale](numberformatter.getlocale.md)— Отримує локаль засобу форматування\n    -   [NumberFormatter::getPattern](numberformatter.getpattern.md)— Отримує шаблон засобу форматування\n    -   [NumberFormatter::getSymbol](numberformatter.getsymbol.md)— Отримує значення символу\n    -   [NumberFormatter::getTextAttribute](numberformatter.gettextattribute.md)— Отримує текстовий атрибут\n    -   [NumberFormatter::parseCurrency](numberformatter.parsecurrency.md) \\- Розбирає номер валюти\n    -   [NumberFormatter::parse](numberformatter.parse.md) \\- Розбирає число\n    -   [NumberFormatter::setAttribute](numberformatter.setattribute.md) \\- Встановлює атрибут\n    -   [NumberFormatter::setPattern](numberformatter.setpattern.md)— Встановлює шаблон засобу форматування\n    -   [NumberFormatter::setSymbol](numberformatter.setsymbol.md)— Встановлює значення символу\n    -   [NumberFormatter::setTextAttribute](numberformatter.settextattribute.md) \\- Встановлює текстовий атрибут\n-   [Locale](class.locale.md) \\- Клас Locale\n    -   [Locale::acceptFromHttp](locale.acceptfromhttp.md) — Спробувати визначити найкращу локаль на основі заголовку HTTP \"Accept-Language\"\n    -   [Locale::canonicalize](locale.canonicalize.md) \\- Канонізувати рядок локалі\n    -   [Locale::composeLocale](locale.composelocale.md)— Повертає коректно відсортовані та розділені ідентифікатори локалі\n    -   [Locale::filterMatches](locale.filtermatches.md)— Перевірити, чи тег фільтра мови локалі відповідає\n    -   [Locale::getAllVariants](locale.getallvariants.md)— Отримання варіантів із переданої локалі\n    -   [Locale::getDefault](locale.getdefault.md) — Отримання значення локалі INTL за замовчуванням із опції 'default\\_locale'\n    -   [Locale::getDisplayLanguage](locale.getdisplaylanguage.md)— Повертає відповідним чином локалізоване ім'я мови для заданої локалі\n    -   [Locale::getDisplayName](locale.getdisplayname.md) \\- Повертає відповідним чином локалізоване ім'я локалі\n    -   [Locale::getDisplayRegion](locale.getdisplayregion.md)— Повертає відповідним чином локалізовану назву регіону для заданої локалі\n    -   [Locale::getDisplayScript](locale.getdisplayscript.md)— Повертає відповідним чином локалізовану назву алфавіту для заданої локалі\n    -   [Locale::getDisplayVariant](locale.getdisplayvariant.md)— Повертає відповідним чином локалізовану назву варіанта для заданої локалі\n    -   [Locale::getKeywords](locale.getkeywords.md)— Отримати ключові слова для локалі\n    -   [Locale::getPrimaryLanguage](locale.getprimarylanguage.md)— Отримати первинну мову для локалі\n    -   [Locale::getRegion](locale.getregion.md)— Отримати регіон для локалі\n    -   [Locale::getScript](locale.getscript.md) \\- Отримати алфавіт для локалі\n    -   [Locale::lookup](locale.lookup.md)— Пошук мовних позначок найбільш відповідних заданої локалі\n    -   [Locale::parseLocale](locale.parselocale.md)— Здобути асоціативний масив усіх підтегів локалі\n    -   [Locale::setDefault](locale.setdefault.md)— Встановити локаль за умовчанням під час виконання\n-   [Normalizer](class.normalizer.md) \\- Клас Normalizer\n    -   [Normalizer::getRawDecomposition](normalizer.getrawdecomposition.md)— Витягує властивість Decomposition\\_Mapping для заданого символу UTF-8\n    -   [Normalizer::isNormalized](normalizer.isnormalized.md)— Перевірити, чи переданий рядок відповідає заданій формі нормалізації\n    -   [Normalizer::normalize](normalizer.normalize.md) \\- Нормалізація рядка\n-   [MessageFormatter](class.messageformatter.md) \\- Клас MessageFormatter\n    -   [MessageFormatter::create](messageformatter.create.md)— Створює засіб форматування повідомлень\n    -   [MessageFormatter::formatMessage](messageformatter.formatmessage.md)— Швидко форматує повідомлення\n    -   [MessageFormatter::format](messageformatter.format.md)— Форматує повідомлення\n    -   [MessageFormatter::getErrorCode](messageformatter.geterrorcode.md)— Повертає код помилки останньої операції\n    -   [MessageFormatter::getErrorMessage](messageformatter.geterrormessage.md)— Повертає текст помилки останньої операції\n    -   [MessageFormatter::getLocale](messageformatter.getlocale.md)— Повертає локаль, для якої було створено засіб форматування\n    -   [MessageFormatter::getPattern](messageformatter.getpattern.md)— Повертає шаблон, який використовує засіб форматування\n    -   [MessageFormatter::parseMessage](messageformatter.parsemessage.md)— Швидко розбирає вхідний рядок\n    -   [MessageFormatter::parse](messageformatter.parse.md)— Розбирає рядок згідно з шаблоном\n    -   [MessageFormatter::setPattern](messageformatter.setpattern.md)— Встановлює шаблон, який використовує засіб форматування\n-   [IntlCalendar](class.intlcalendar.md) \\- Клас IntlCalendar\n    -   [IntlCalendar::add](intlcalendar.add.md) \\- Додає кількість (зі знаком) часу в полі\n    -   [IntlCalendar::after](intlcalendar.after.md) \\- Визначає, час цього об'єкта пізніше часу переданого об'єкта\n    -   [IntlCalendar::before](intlcalendar.before.md)— Визначає, час цього об'єкта раніше переданого об'єкта\n    -   [IntlCalendar::clear](intlcalendar.clear.md)— Очищає поле чи всі поля\n    -   [IntlCalendar::\\_\\_construct](intlcalendar.construct.md)— Закритий конструктор для заборони створення екземплярів\n    -   [IntlCalendar::createInstance](intlcalendar.createinstance.md)— Створює новий об'єкт IntlCalendar\n    -   [IntlCalendar::equals](intlcalendar.equals.md)— Порівнює час двох об'єктів IntlCalendar щодо рівності\n    -   [IntlCalendar::fieldDifference](intlcalendar.fielddifference.md)— Обчислює різницю між заданим часом та часом об'єкта\n    -   [IntlCalendar::fromDateTime](intlcalendar.fromdatetime.md)— Створює IntlCalendar з об'єкта чи рядка DateTime\n    -   [IntlCalendar::get](intlcalendar.get.md)— Отримує значення поля\n    -   [IntlCalendar::getActualMaximum](intlcalendar.getactualmaximum.md)— Максимальне значення для поля з урахуванням поточного часу об'єкта\n    -   [IntlCalendar::getActualMinimum](intlcalendar.getactualminimum.md)— Мінімальне значення для поля з урахуванням поточного часу об'єкта\n    -   [IntlCalendar::getAvailableLocales](intlcalendar.getavailablelocales.md)— Отримує масив мовних стандартів, для яких є дані\n    -   [IntlCalendar::getDayOfWeekType](intlcalendar.getdayofweektype.md)— Повідомляє, чи є день буднім, вихідним чи днем ​​із переходом між ними\n    -   [IntlCalendar::getErrorCode](intlcalendar.geterrorcode.md)— Отримує останній код помилки об'єкта\n    -   [IntlCalendar::getErrorMessage](intlcalendar.geterrormessage.md)— Отримує останнє повідомлення про помилку об'єкта\n    -   [IntlCalendar::getFirstDayOfWeek](intlcalendar.getfirstdayofweek.md)— отримує перший день тижня для мовного стандарту календаря\n    -   [IntlCalendar::getGreatestMinimum](intlcalendar.getgreatestminimum.md)— Отримує найбільше локальне мінімальне значення поля\n    -   [IntlCalendar::getKeywordValuesForLocale](intlcalendar.getkeywordvaluesforlocale.md)— Набір значень ключових слів мовного стандарту\n    -   [IntlCalendar::getLeastMaximum](intlcalendar.getleastmaximum.md)— Отримує найменший локальний максимум для поля\n    -   [IntlCalendar::getLocale](intlcalendar.getlocale.md)— Отримує мовний стандарт, пов'язаний із об'єктом\n    -   [IntlCalendar::getMaximum](intlcalendar.getmaximum.md)— Отримує глобальне максимальне значення поля\n    -   [IntlCalendar::getMinimalDaysInFirstWeek](intlcalendar.getminimaldaysinfirstweek.md)— Отримує мінімальну кількість днів, яка може бути у першому тижні на рік чи місяць\n    -   [IntlCalendar::getMinimum](intlcalendar.getminimum.md)— Отримує глобальне мінімальне значення поля\n    -   [IntlCalendar::getNow](intlcalendar.getnow.md)— Отримує число, що становить поточний час\n    -   [IntlCalendar::getRepeatedWallTimeOption](intlcalendar.getrepeatedwalltimeoption.md)— Отримує поведінку для обробки часу процесора, що повторюється.\n    -   [IntlCalendar::getSkippedWallTimeOption](intlcalendar.getskippedwalltimeoption.md)— Отримує поведінку для обробки пропущеного часу процесора\n    -   [IntlCalendar::getTime](intlcalendar.gettime.md)— Отримує час, представлений на даний момент об'єктом\n    -   [IntlCalendar::getTimeZone](intlcalendar.gettimezone.md)— Отримує часовий пояс об'єкту\n    -   [IntlCalendar::getType](intlcalendar.gettype.md)— Отримує тип календаря\n    -   [IntlCalendar::getWeekendTransition](intlcalendar.getweekendtransition.md)— Отримує час, коли вихідні починаються або закінчуються.\n    -   [IntlCalendar::inDaylightTime](intlcalendar.indaylighttime.md)— Визначає, чи час об'єкта переходить на літній час.\n    -   [IntlCalendar::isEquivalentTo](intlcalendar.isequivalentto.md)— Визначає, чи дорівнює інший календар, але для іншого часу\n    -   [IntlCalendar::isLenient](intlcalendar.islenient.md)— Визначає, чи інтерпретація дати/часу є м'якою.\n    -   [IntlCalendar::isSet](intlcalendar.isset.md)— Визначає, чи встановлено поле\n    -   [IntlCalendar::isWeekend](intlcalendar.isweekend.md)— Визначає, чи доводиться певна дата/час на вихідні\n    -   [IntlCalendar::roll](intlcalendar.roll.md)— Додає значення в поле без перенесення до найважливіших полів\n    -   [IntlCalendar::set](intlcalendar.set.md)— Встановлює поле часу або одразу кілька спільних полів\n    -   [IntlCalendar::setDate](intlcalendar.setdate.md) \\- Встановлює поля дати\n    -   [IntlCalendar::setDateTime](intlcalendar.setdatetime.md)— Встановлює поля дати та часу\n    -   [IntlCalendar::setFirstDayOfWeek](intlcalendar.setfirstdayofweek.md)— Встановлює день, який є початком тижня\n    -   [IntlCalendar::setLenient](intlcalendar.setlenient.md)— Встановлює, чи інтерпретація дати/часу повинна бути м'якою.\n    -   [IntlCalendar::setMinimalDaysInFirstWeek](intlcalendar.setminimaldaysinfirstweek.md)— Встановлює мінімальну кількість днів, яка може бути у першому тижні на рік чи місяць\n    -   [IntlCalendar::setRepeatedWallTimeOption](intlcalendar.setrepeatedwalltimeoption.md)— Встановлює поведінку для обробки часу процесора, що повторюється, при негативних переходах зміщення часового поясу.\n    -   [IntlCalendar::setSkippedWallTimeOption](intlcalendar.setskippedwalltimeoption.md)— Встановлює поведінку для обробки пропущеного часу процесора при позитивних переходах усунення часового поясу\n    -   [IntlCalendar::setTime](intlcalendar.settime.md)— Встановлює календарний час у мілісекундах від початку епохи Unix\n    -   [IntlCalendar::setTimeZone](intlcalendar.settimezone.md)— Встановлює часовий пояс, який використовується календарем.\n    -   [IntlCalendar::toDateTime](intlcalendar.todatetime.md)— Перетворює об'єкт IntlCalendar на об'єкт DateTime\n-   [IntlGregorianCalendar](class.intlgregoriancalendar.md) \\- Клас IntlGregorianCalendar\n    -   [IntlGregorianCalendar::\\_\\_construct](intlgregoriancalendar.construct.md) \\- Конструктор класу григоріанського календаря\n    -   [IntlGregorianCalendar::createFromDate](intlgregoriancalendar.createfromdate.md)— Створює новий екземпляр Intel GregorianCalendar із дати\n    -   [IntlGregorianCalendar::createFromDateTime](intlgregoriancalendar.createfromdatetime.md)— Створює новий екземпляр Intel GregorianCalendar із дати та часу\n    -   [IntlGregorianCalendar::getGregorianChange](intlgregoriancalendar.getgregorianchange.md)— Отримує дату зміни григоріанського календаря\n    -   [IntlGregorianCalendar::isLeapYear](intlgregoriancalendar.isleapyear.md)— Визначає, чи цей рік є високосним.\n    -   [IntlGregorianCalendar::setGregorianChange](intlgregoriancalendar.setgregorianchange.md)— Встановлює дату зміни у григоріанському календарі\n-   [IntlTimeZone](class.intltimezone.md)— Клас IntlTimeZone\n    -   [IntlTimeZone::\\_\\_construct](intltimezone.construct.md) \\- Конструктор класу, який забороняє пряме створення екземпляра\n    -   [IntlTimeZone::countEquivalentIDs](intltimezone.countequivalentids.md)— Отримати кількість ідентифікаторів у групі схожих часових поясів, включаючи цей ідентифікатор\n    -   [IntlTimeZone::createDefault](intltimezone.createdefault.md)— Створити нову копію часового поясу за промовчанням для поточного хоста\n    -   [IntlTimeZone::createEnumeration](intltimezone.createenumeration.md)— Отримати перерахування з ідентифікаторів часових поясів за вказаною країною або усунення\n    -   [IntlTimeZone::createTimeZone](intltimezone.createtimezone.md)— Створити об'єкт часового поясу по заданому ідентифікатору\n    -   [IntlTimeZone::createTimeZoneIDEnumeration](intltimezone.createtimezoneidenumeration.md)— Отримати перерахування з ідентифікаторів системних часових поясів за умовами фільтрації\n    -   [IntlTimeZone::fromDateTimeZone](intltimezone.fromdatetimezone.md)— Створити об'єкт часового поясу з DateTimeZone\n    -   [IntlTimeZone::getCanonicalID](intltimezone.getcanonicalid.md)— Отримати канонічний системний ідентифікатор часового поясу або нормалізований ідентифікатор часового поясу по заданому ідентифікатору часового поясу\n    -   [IntlTimeZone::getDisplayName](intltimezone.getdisplayname.md)— Отримати ім'я часового поясу для відображення користувача\n    -   [IntlTimeZone::getDSTSavings](intltimezone.getdstsavings.md)— Отримати кількість мілісекунд, яку потрібно додати до місцевого поясного часу, щоб отримати літній час\n    -   [IntlTimeZone::getEquivalentID](intltimezone.getequivalentid.md)— Отримати ідентифікатор у групі схожих часових поясів, включаючи заданий ідентифікатор\n    -   [IntlTimeZone::getErrorCode](intltimezone.geterrorcode.md)— Отримати останній код про помилку в об'єкті\n    -   [IntlTimeZone::getErrorMessage](intltimezone.geterrormessage.md)— Отримати останнє повідомлення про помилку в об'єкті\n    -   [IntlTimeZone::getGMT](intltimezone.getgmt.md)— Створити часовий пояс GMT (UTC)\n    -   [IntlTimeZone::getID](intltimezone.getid.md)— Отримати ідентифікатор часового поясу\n    -   [IntlTimeZone::getIDForWindowsID](intltimezone.getidforwindowsid.md)— Перетворити часовий пояс для Windows на системний часовий пояс\n    -   [IntlTimeZone::getOffset](intltimezone.getoffset.md)— Отримати необроблене значення часового поясу та усунення за Грінвічем (GMT) за заданим моментом часу\n    -   [IntlTimeZone::getRawOffset](intltimezone.getrawoffset.md)— Отримати необроблене значення зсуву за Грінвічем (GMT) без урахування літнього часу\n    -   [IntlTimeZone::getRegion](intltimezone.getregion.md)— Отримати код регіону, який відповідає заданому ідентифікатору системного часового поясу\n    -   [IntlTimeZone::getTZDataVersion](intltimezone.gettzdataversion.md)— Отримати версію даних про часовий пояс, який зараз використовується в ICU\n    -   [IntlTimeZone::getUnknown](intltimezone.getunknown.md)— Отримати невідомий часовий пояс (unknown)\n    -   [IntlTimeZone::getWindowsID](intltimezone.getwindowsid.md)— Перетворити часовий пояс на часовий пояс для Windows\n    -   [IntlTimeZone::hasSameRules](intltimezone.hassamerules.md)— Перевірити, що в іншому часовому поясі використовуються ті самі правила та усунення, що й у першому заданому\n    -   [IntlTimeZone::toDateTimeZone](intltimezone.todatetimezone.md)— Перетворити на об'єкт DateTimeZone\n    -   [IntlTimeZone::useDaylightTime](intltimezone.usedaylighttime.md)— Перевірити, що в даному часовому поясі використовується літній час\n-   [IntlDateFormatter](class.intldateformatter.md) \\- Клас IntlDateFormatter\n    -   [IntlDateFormatter::create](intldateformatter.create.md)— Створює засіб форматування дати\n    -   [IntlDateFormatter::format](intldateformatter.format.md)— Форматує значення дати/часу у вигляді рядка\n    -   [IntlDateFormatter::formatObject](intldateformatter.formatobject.md) \\- Форматує об'єкт\n    -   [IntlDateFormatter::getCalendar](intldateformatter.getcalendar.md)— Отримує тип календаря для об'єкта IntlDateFormatter\n    -   [IntlDateFormatter::getDateType](intldateformatter.getdatetype.md)— Отримує тип дати, який використовується IntlDateFormatter\n    -   [IntlDateFormatter::getErrorCode](intldateformatter.geterrorcode.md)— Отримує код помилки останньої операції\n    -   [IntlDateFormatter::getErrorMessage](intldateformatter.geterrormessage.md)— Отримує текст помилки останньої операції\n    -   [IntlDateFormatter::getLocale](intldateformatter.getlocale.md)— Отримує мовний стандарт, який використовується засобом форматування\n    -   [IntlDateFormatter::getPattern](intldateformatter.getpattern.md)— Отримує шаблон, який використовується IntlDateFormatter\n    -   [IntlDateFormatter::getTimeType](intldateformatter.gettimetype.md)— Отримує тип часу, який використовується IntlDateFormatter\n    -   [IntlDateFormatter::getTimeZoneId](intldateformatter.gettimezoneid.md)— Отримує ідентифікатор часового поясу, який використовується IntlDateFormatter\n    -   [IntlDateFormatter::getCalendarObject](intldateformatter.getcalendarobject.md)— Отримує копію об'єкта календаря засобу форматування\n    -   [IntlDateFormatter::getTimeZone](intldateformatter.gettimezone.md)— Отримує часовий пояс засобу форматування\n    -   [IntlDateFormatter::isLenient](intldateformatter.islenient.md)— Отримує поблажливість, яка використовується для IntlDateFormatter\n    -   [IntlDateFormatter::localtime](intldateformatter.localtime.md)— Перетворює рядок на значення часу на основі поля\n    -   [IntlDateFormatter::parse](intldateformatter.parse.md)— Перетворює рядок на значення позначки часу\n    -   [IntlDateFormatter::setCalendar](intldateformatter.setcalendar.md)— Встановлює тип календаря за допомогою форматування.\n    -   [IntlDateFormatter::setLenient](intldateformatter.setlenient.md) \\- Встановлює м'який режим аналізатора\n    -   [IntlDateFormatter::setPattern](intldateformatter.setpattern.md)— Встановлює шаблон, який використовується IntlDateFormatter\n    -   [IntlDateFormatter::setTimeZone](intldateformatter.settimezone.md)— Встановлює часовий пояс засобу форматування\n-   [ResourceBundle](class.resourcebundle.md) \\- Клас ResourceBundle\n    -   [ResourceBundle::count](resourcebundle.count.md)— Отримати кількість елементів у пакеті\n    -   [ResourceBundle::create](resourcebundle.create.md) \\- Створити пакет ресурсів\n    -   [ResourceBundle::getErrorCode](resourcebundle.geterrorcode.md)— Отримати останній код помилки пакета\n    -   [ResourceBundle::getErrorMessage](resourcebundle.geterrormessage.md)— Отримати останнє повідомлення про помилку пакета\n    -   [ResourceBundle::get](resourcebundle.get.md)— Отримати дані з пакета\n    -   [ResourceBundle::getLocales](resourcebundle.locales.md)— Отримати підтримувані локалі\n-   [Spoofchecker](class.spoofchecker.md) \\- Клас Spoofchecker\n    -   [Spoofchecker::areConfusable](spoofchecker.areconfusable.md)— Перевірити, чи є рядки підозрілими\n    -   [Spoofchecker::\\_\\_construct](spoofchecker.construct.md) \\- Конструктор класу\n    -   [Spoofchecker::isSuspicious](spoofchecker.issuspicious.md)— Перевіряє, чи текст містить підозрілі символи\n    -   [Spoofchecker::setAllowedLocales](spoofchecker.setallowedlocales.md)— Локаль для використання у перевірках\n    -   [Spoofchecker::setChecks](spoofchecker.setchecks.md)— Встановити набір перевірок\n    -   [Spoofchecker::setRestrictionLevel](spoofchecker.setrestrictionlevel.md) \\- Встановлює рівень обмеження\n-   [Transliterator](class.transliterator.md) \\- Клас Transliterator\n    -   [Transliterator::\\_\\_construct](transliterator.construct.md) \\- Приватний конструктор\n    -   [Transliterator::create](transliterator.create.md) \\- Створити транслітератор\n    -   [Transliterator::createFromRules](transliterator.createfromrules.md) \\- Створити транслітератор на основі правил\n    -   [Transliterator::createInverse](transliterator.createinverse.md) \\- Створити інвертований транслітератор\n    -   [Transliterator::getErrorCode](transliterator.geterrorcode.md)— Отримати код останньої помилки\n    -   [Transliterator::getErrorMessage](transliterator.geterrormessage.md)— Отримати останнє повідомлення про помилку\n    -   [Transliterator::listIDs](transliterator.listids.md)— Отримати ідентифікатори транслітератора\n    -   [Transliterator::transliterate](transliterator.transliterate.md)— Транслітерувати рядок\n-   [IntlBreakIterator](class.intlbreakiterator.md) \\- Клас IntlBreakIterator\n    -   [IntlBreakIterator::\\_\\_construct](intlbreakiterator.construct.md)— Закритий конструктор, який забороняє створення екземплярів об'єкту\n    -   [IntlBreakIterator::createCharacterInstance](intlbreakiterator.createcharacterinstance.md)— Створює ітератор переривання меж комбінування послідовностей символів.\n    -   [IntlBreakIterator::createCodePointInstance](intlbreakiterator.createcodepointinstance.md)— Створює ітератор переривання меж кодових точок.\n    -   [IntlBreakIterator::createLineInstance](intlbreakiterator.createlineinstance.md)— Створює ітератор переривання для логічно можливих розривів рядків\n    -   [IntlBreakIterator::createSentenceInstance](intlbreakiterator.createsentenceinstance.md) \\- Створює ітератор переривання для розривів речень\n    -   [IntlBreakIterator::createTitleInstance](intlbreakiterator.createtitleinstance.md) \\- Створює ітератор переривання для розривів заголовків\n    -   [IntlBreakIterator::createWordInstance](intlbreakiterator.createwordinstance.md) \\- Створює ітератор переривання для розривів слів\n    -   [IntlBreakIterator::current](intlbreakiterator.current.md)— Повертає індекс поточної позиції\n    -   [IntlBreakIterator::first](intlbreakiterator.first.md)— Встановлює позицію першого символу в тексті\n    -   [IntlBreakIterator::following](intlbreakiterator.following.md)— Переміщає ітератор до першого кордону після вказаного усунення\n    -   [IntlBreakIterator::getErrorCode](intlbreakiterator.geterrorcode.md)— Повертає останній код помилки об'єкту\n    -   [IntlBreakIterator::getErrorMessage](intlbreakiterator.geterrormessage.md)— Повертає останнє повідомлення про помилку об'єкта\n    -   [IntlBreakIterator::getLocale](intlbreakiterator.getlocale.md)— Повертає локаль, пов'язану з об'єктом\n    -   [IntlBreakIterator::getPartsIterator](intlbreakiterator.getpartsiterator.md)— створює ітератор для переміщення фрагментів між кордонами.\n    -   [IntlBreakIterator::getText](intlbreakiterator.gettext.md)— Повертає текст, що сканується.\n    -   [IntlBreakIterator::isBoundary](intlbreakiterator.isboundary.md)— Повідомляє, чи є усунення зміщенням кордону\n    -   [IntlBreakIterator::last](intlbreakiterator.last.md)— Встановлює позицію ітератора до індексу за останнім символом\n    -   [IntlBreakIterator::next](intlbreakiterator.next.md)— Переміщує ітератор до наступного кордону\n    -   [IntlBreakIterator::preceding](intlbreakiterator.preceding.md)— Встановлює позицію ітератора до першого кордону перед усуненням\n    -   [IntlBreakIterator::previous](intlbreakiterator.previous.md)— Встановлює позицію ітератора на кордоні безпосередньо перед поточною\n    -   [IntlBreakIterator::setText](intlbreakiterator.settext.md)— Встановлює сканований текст\n-   [IntlRuleBasedBreakIterator](class.intlrulebasedbreakiterator.md)— Клас IntlRuleBasedBreakIterator\n    -   [IntlRuleBasedBreakIterator::\\_\\_construct](intlrulebasedbreakiterator.construct.md) \\- Створює ітератор на основі набору правил\n    -   [IntlRuleBasedBreakIterator::getBinaryRules](intlrulebasedbreakiterator.getbinaryrules.md)— Отримати бінарні дані зі скомпілованих правил\n    -   [IntlRuleBasedBreakIterator::getRules](intlrulebasedbreakiterator.getrules.md)— Отримати набір правил, які використовуються під час створення цього об'єкта\n    -   [IntlRuleBasedBreakIterator::getRuleStatus](intlrulebasedbreakiterator.getrulestatus.md)— Отримати найбільше значення статусу правил зупинки, що визначило поточну позицію зупинки\n    -   [IntlRuleBasedBreakIterator::getRuleStatusVec](intlrulebasedbreakiterator.getrulestatusvec.md)— отримати значення статусів із правил зупинки, які визначили поточну позицію зупинки\n-   [IntlCodePointBreakIterator](class.intlcodepointbreakiterator.md)— Клас IntlCodePointBreakIterator\n    -   [IntlCodePointBreakIterator::getLastCodePoint](intlcodepointbreakiterator.getlastcodepoint.md)— Отримати останній код символу, виданий під час переміщення ітератора вперед або назад\n-   [IntlDatePatternGenerator](class.intldatepatterngenerator.md) \\- Клас IntlDatePatternGenerator\n    -   [IntlDatePatternGenerator::create](intldatepatterngenerator.create.md)— Створює новий екземпляр IntlDatePatternGenerator\n    -   [IntlDatePatternGenerator::getBestPattern](intldatepatterngenerator.getbestpattern.md)— Визначає найбільш підходящий формат дати/часу\n-   [IntlPartsIterator](class.intlpartsiterator.md) \\- Клас IntlPartsIterator\n    -   [IntlPartsIterator::getBreakIterator](intlpartsiterator.getbreakiterator.md)— Отримати IntlBreakIterator, зберігаючи ітератор цієї частини\n-   [UConverter](class.uconverter.md) \\- Клас UConverter\n    -   [UConverter::\\_\\_construct](uconverter.construct.md)— Створити об'єкт UConverter\n    -   [UConverter::convert](uconverter.convert.md)— Конвертувати рядок з одного кодування в інше\n    -   [UConverter::fromUCallback](uconverter.fromucallback.md) — Callback-функція за промовчанням для \"from\"\n    -   [UConverter::getAliases](uconverter.getaliases.md)— Отримати псевдоніми для цього імені\n    -   [UConverter::getAvailable](uconverter.getavailable.md)— Отримати доступні імена канонічних конверторів\n    -   [UConverter::getDestinationEncoding](uconverter.getdestinationencoding.md)— Отримати кодування призначення\n    -   [UConverter::getDestinationType](uconverter.getdestinationtype.md)— Отримати тип конвертера призначення\n    -   [UConverter::getErrorCode](uconverter.geterrorcode.md)— Отримати код останньої помилки об'єкта\n    -   [UConverter::getErrorMessage](uconverter.geterrormessage.md)— Отримати останнє повідомлення про помилку в об'єкті\n    -   [UConverter::getSourceEncoding](uconverter.getsourceencoding.md)— Отримати вихідне кодування\n    -   [UConverter::getSourceType](uconverter.getsourcetype.md)— Отримати тип конвертера джерела\n    -   [UConverter::getStandards](uconverter.getstandards.md)— Отримати стандарти, пов'язані з іменами конвертерів\n    -   [UConverter::getSubstChars](uconverter.getsubstchars.md)— Отримати заміну символів\n    -   [UConverter::reasonText](uconverter.reasontext.md)— Отримати рядкове подання причини зворотного виклику\n    -   [UConverter::setDestinationEncoding](uconverter.setdestinationencoding.md)— Встановити кодування призначення\n    -   [UConverter::setSourceEncoding](uconverter.setsourceencoding.md)— Встановити вихідне кодування\n    -   [UConverter::setSubstChars](uconverter.setsubstchars.md)— Встановлення символів підстановки\n    -   [UConverter::toUCallback](uconverter.toucallback.md) - Callback-функція за промовчанням для \"to\"\n    -   [UConverter::transcode](uconverter.transcode.md)— Перетворює рядок з одного кодування символів на інший\n-   [Функції Grapheme](ref.intl.grapheme.md)\n    -   [grapheme\\_extract](function.grapheme-extract.md)— Функція для вилучення послідовності кластерів за замовчуванням графем з текстового буфера, яка повинна бути закодована в UTF-8\n    -   [grapheme\\_stripos](function.grapheme-stripos.md)— Знаходить позицію (в одиницях графеми) першої появи рядка без урахування регістру\n    -   [grapheme\\_stristr](function.grapheme-stristr.md)— Повертає частину рядка haystack від першої появи needle без урахування регістру до кінця haystack\n    -   [grapheme\\_strlen](function.grapheme-strlen.md)— Отримує довжину рядка в одиницях графеми\n    -   [grapheme\\_strpos](function.grapheme-strpos.md) \\- Знаходить позицію (в одиницях графеми) першого входження рядка\n    -   [grapheme\\_strripos](function.grapheme-strripos.md)— Знаходить позицію (в одиницях графеми) останнього входження рядка без урахування регістру\n    -   [grapheme\\_strrpos](function.grapheme-strrpos.md)— Знаходить позицію (в одиницях графеми) останнього входження рядка\n    -   [grapheme\\_strstr](function.grapheme-strstr.md)— Повертає частину рядка haystack від першої появи needle до кінця haystack\n    -   [grapheme\\_substr](function.grapheme-substr.md)— Повертає частину рядка\n-   [Функції IDN](ref.intl.idn.md)\n    -   [idn\\_to\\_ascii](function.idn-to-ascii.md)— Перетворює доменне ім'я на формат IDNA ASCII\n    -   [idn\\_to\\_utf8](function.idn-to-utf8.md)— Перетворення доменного імені з IDNA ASCII на Unicode\n-   [IntlChar](class.intlchar.md)\n    -   [IntlChar::charAge](intlchar.charage.md) — Отримати \"вік\" символьного коду\n    -   [IntlChar::charDigitValue](intlchar.chardigitvalue.md)— Отримати десяткову цифру із символу десяткової цифри\n    -   [IntlChar::charDirection](intlchar.chardirection.md)— Отримати категорію напряму листа для символу\n    -   [IntlChar::charFromName](intlchar.charfromname.md)— Знайти символ Unicode на його ім'я та повернути його код\n    -   [IntlChar::charMirror](intlchar.charmirror.md) — Отримати \"дзеркальний\" символ за кодом\n    -   [IntlChar::charName](intlchar.charname.md)— Отримати ім'я Unicode\n    -   [IntlChar::charType](intlchar.chartype.md)— Отримати головну категорію, до якої входить символ\n    -   [IntlChar::chr](intlchar.chr.md)— Отримати символ Unicode за його кодом\n    -   [IntlChar::digit](intlchar.digit.md)— Отримати десяткове число із символу Unicode із заданою основою\n    -   [IntlChar::enumCharNames](intlchar.enumcharnames.md)— Перелічує всі присвоєні символи Unicode у заданому діапазоні\n    -   [IntlChar::enumCharTypes](intlchar.enumchartypes.md)— Перелік послідовностей символів Unicode згрупованих за ними.\n    -   [IntlChar::foldCase](intlchar.foldcase.md)— Перетворює регістр заданого символу.\n    -   [IntlChar::forDigit](intlchar.fordigit.md)— Отримати символ, який представляє задане число в заданій основі\n    -   [IntlChar::getBidiPairedBracket](intlchar.getbidipairedbracket.md)— Отримати парну дужку для символу\n    -   [IntlChar::getBlockCode](intlchar.getblockcode.md)— Отримати блок розміщення символу Unicode\n    -   [IntlChar::getCombiningClass](intlchar.getcombiningclass.md)— Отримати комбінуючий клас для символу\n    -   [IntlChar::getFC\\_NFKC\\_Closure](intlchar.getfc-nfkc-closure.md) \\- Отримати властивість FC\\_NFKC\\_Closure для символу\n    -   [IntlChar::getIntPropertyMaxValue](intlchar.getintpropertymaxvalue.md)— Отримати мінімальне значення для властивості Unicode\n    -   [IntlChar::getIntPropertyMinValue](intlchar.getintpropertyminvalue.md)— Отримати мінімальне значення для властивості Unicode\n    -   [IntlChar::getIntPropertyValue](intlchar.getintpropertyvalue.md)— Отримати значення властивості Unicode для символу\n    -   [IntlChar::getNumericValue](intlchar.getnumericvalue.md)— Отримати числову виставу для символу Unicode\n    -   [IntlChar::getPropertyEnum](intlchar.getpropertyenum.md)— Отримати значення константи властивості на його ім'я\n    -   [IntlChar::getPropertyName](intlchar.getpropertyname.md) \\- Отримати Unicode ім'я властивості\n    -   [IntlChar::getPropertyValueEnum](intlchar.getpropertyvalueenum.md)— Повернути числовий ідентифікатор властивості на його ім'я\n    -   [IntlChar::getPropertyValueName](intlchar.getpropertyvaluename.md)— Отримати ім'я Unicode для значення властивості\n    -   [IntlChar::getUnicodeVersion](intlchar.getunicodeversion.md)— Отримати версію Unicode\n    -   [IntlChar::hasBinaryProperty](intlchar.hasbinaryproperty.md)— Перевірити бінарну властивість Unicode для символу\n    -   [IntlChar::isalnum](intlchar.isalnum.md)— Перевірити, чи є символ буквою чи цифрою\n    -   [IntlChar::isalpha](intlchar.isalpha.md)— Перевірити, чи є символ літерою\n    -   [IntlChar::isbase](intlchar.isbase.md)— Перевірити, чи символ є базовим\n    -   [IntlChar::isblank](intlchar.isblank.md) - Перевірити, чи є символ \"порожнім\" або \"горизонтальним пропуском\"\n    -   [IntlChar::iscntrl](intlchar.iscntrl.md)— Перевірити, чи є символ керуючим\n    -   [IntlChar::isdefined](intlchar.isdefined.md)— Перевірити, чи є символ.\n    -   [IntlChar::isdigit](intlchar.isdigit.md)— Перевірити, чи символ є цифрою\n    -   [IntlChar::isgraph](intlchar.isgraph.md)— Перевірити, чи є символом графічним символом\n    -   [IntlChar::isIDIgnorable](intlchar.isidignorable.md)— Перевірити, чи символ ігнорується\n    -   [IntlChar::isIDPart](intlchar.isidpart.md)— Перевірити, чи можна використовувати символ в ідентифікаторі\n    -   [IntlChar::isIDStart](intlchar.isidstart.md)— Перевірити, чи можна використовувати символ на початку ідентифікатора\n    -   [IntlChar::isISOControl](intlchar.isisocontrol.md)— Перевірити, чи є символ керуючим відповідно до ISO\n    -   [IntlChar::isJavaIDPart](intlchar.isjavaidpart.md)— Перевірити, чи символ допустимий в ідентифікаторі Java\n    -   [IntlChar::isJavaIDStart](intlchar.isjavaidstart.md)— Перевірити, чи символ може бути першим в ідентифікаторі Java\n    -   [IntlChar::isJavaSpaceChar](intlchar.isjavaspacechar.md)— Перевірити, чи є символ пробельним з точки зору Java\n    -   [IntlChar::islower](intlchar.islower.md)— Перевірити, чи у нижньому регістрі символ\n    -   [IntlChar::isMirrored](intlchar.ismirrored.md)— Перевірити, якщо символ має властивість Bidi\\_Mirrored\n    -   [IntlChar::isprint](intlchar.isprint.md)— Перевіряє, чи символ відображається.\n    -   [IntlChar::ispunct](intlchar.ispunct.md)— Перевіряє, чи є символом пунктуації.\n    -   [IntlChar::isspace](intlchar.isspace.md)— Перевіряє, чи символ є пробельним.\n    -   [IntlChar::istitle](intlchar.istitle.md)— Перевірити, чи символ є титульним (Titlecase)\n    -   [IntlChar::isUAlphabetic](intlchar.isualphabetic.md)— Перевірити, чи встановлено символ символу Alphabetic\n    -   [IntlChar::isULowercase](intlchar.isulowercase.md)— Перевірити, чи символ є символом у нижньому регістрі\n    -   [IntlChar::isupper](intlchar.isupper.md) — Перевірити, чи входить символ у категорію \"Lu\" (літера у верхньому регістрі)\n    -   [IntlChar::isUUppercase](intlchar.isuuppercase.md)— Перевірити, чи символ є символом у верхньому регістрі\n    -   [IntlChar::isUWhiteSpace](intlchar.isuwhitespace.md)— Перевірити, чи має символ властивість White\\_Space (пробіловий символ)\n    -   [IntlChar::isWhitespace](intlchar.iswhitespace.md)— Перевірити, чи символ є пробільним з точки зору ICU\n    -   [IntlChar::isxdigit](intlchar.isxdigit.md)— Перевіряє, чи кодова точка відноситься до шістнадцяткової цифри.\n    -   [IntlChar::ord](intlchar.ord.md)— Отримати код символ Unicode\n    -   [IntlChar::tolower](intlchar.tolower.md)— Перетворює символ Unicode на нижній регістр\n    -   [IntlChar::totitle](intlchar.totitle.md)— Перетворює символ Unicode на титульний регістр (titlecase)\n    -   [IntlChar::toupper](intlchar.toupper.md)— Перетворює символ Unicode у верхній регістр\n-   [IntlException](class.intlexception.md)— Клас винятків для помилок intl\n-   [IntlIterator](class.intliterator.md) \\- Клас IntlIterator\n    -   [IntlIterator::current](intliterator.current.md)— Отримати поточний елемент\n    -   [IntlIterator::key](intliterator.key.md)— Отримати ключ поточного елемента\n    -   [IntlIterator::next](intliterator.next.md)— Перейти до наступного елементу\n    -   [IntlIterator::rewind](intliterator.rewind.md)— Перейти до першого елементу\n    -   [IntlIterator::valid](intliterator.valid.md)— Перевірити, чи поточна позиція коректна\n-   [Функції intl](ref.intl.md)\n    -   [intl\\_error\\_name](function.intl-error-name.md)— Отримати ім'я помилки за її кодом\n    -   [intl\\_get\\_error\\_code](function.intl-get-error-code.md)— Отримати код останньої помилки\n    -   [intl\\_get\\_error\\_message](function.intl-get-error-message.md)— Отримати опис помилки\n    -   [intl\\_is\\_failure](function.intl-is-failure.md)— Перевірити, чи є код помилки ознакою збою\n","title":"Функції інтернаціоналізації","contentType":2,"navigation":[{"function.ob-iconv-handler.md":"« ob\\_iconv\\_handler"},{"intro.intl.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.international.md":"Підтримка мов та кодувань"}]}},"__N_SSG":true}