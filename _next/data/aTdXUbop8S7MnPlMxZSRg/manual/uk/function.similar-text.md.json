{"pageProps":{"page":{"slug":"function.similar-text.md","content":"# similar\\_text\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nsimilar\\_text — Обчислює ступінь схожості двох рядків\n\n### Опис\n\n```methodsynopsis\nsimilar_text(string $string1, string $string2, float &$percent = null): int\n```\n\nОбчислює ступінь схожості двох рядків за алгоритмом, описаним у Programming Classics: Implementing the World's Best Algorithms by Oliver (ISBN 0-131-00413-1). Ця реалізація алгоритму не використовує стека, використаного в оригіналі, натомість застосовуються рекурсивні виклики, що у деяких випадках може прискорити процес. Слід зазначити, що складність алгоритму становить O(N\\*\\*3), де N - довжина довшою з двох рядків.\n\n### Список параметрів\n\n`string1`\n\nПерший рядок.\n\n`string2`\n\nДругий рядок.\n\n> **Зауваження** :\n> \n> Изменение порядка`string1`и`string2`может привести к другому результату; см, Приклад ниже.\n\n`percent`\n\nПри передачі за посиланням третього аргументу, **similar\\_text()** привласнює йому ступінь схожості двох рядків у відсотках, ділячи результат **similar\\_text()** на середню кількість довжин заданих рядків раз.\n\n### Значення, що повертаються\n\nПовертається кількість символів, що збігаються, у двох рядках.\n\nКількість символів, що збігаються, обчислюється шляхом знаходження найдовшої першої загальної підрядки, а потім робить це для префіксів і суфіксів рекурсивно. Додаються довжини всіх знайдених загальних підрядок.\n\n### Приклади\n\n**Приклад #1 Приклад використання** similar\\_text()\\*\\* із заміною аргументів\\*\\*\n\nУ цьому прикладі показано, що зміна порядку аргументів `string1`и`string2` може дати різні результати.\n\n```php\n<?php\n$sim = similar_text('bafoobar', 'barfoo', $perc);\necho \"сходство: $sim ($perc %)\\n\";\n$sim = similar_text('barfoo', 'bafoobar', $perc);\necho \"сходство: $sim ($perc %)\\n\";\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nсходство: 5 (71.428571428571 %)\nсходство: 3 (42.857142857143 %)\n```\n\n### Дивіться також\n\n-   [levenshtein()](function.levenshtein.md) \\- обчислює відстань Левенштейна між двома рядками\n-   [soundex()](function.soundex.md) \\- Повертає ключ soundex для рядка\n","title":"similar\\_text","contentType":2,"navigation":[{"function.sha1.md":"« sha1"},{"function.soundex.md":"soundex »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}