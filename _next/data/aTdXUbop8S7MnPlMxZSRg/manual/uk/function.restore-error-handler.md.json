{"pageProps":{"page":{"slug":"function.restore-error-handler.md","content":"# restore\\_error\\_handler\n\n(PHP 4 >= 4.0.1, PHP 5, PHP 7, PHP 8)\n\nrestore\\_error\\_handler — Відновлює попередній обробник помилок\n\n### Опис\n\n```methodsynopsis\nrestore_error_handler(): true\n```\n\nВикористовується після зміни обробника помилок функцією [set\\_error\\_handler()](function.set-error-handler.md), щоб повернути попередній обробник (який може бути як вбудованою функцією, так і певною користувачем).\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nФункція завжди повертає **`true`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** restore\\_error\\_handler()\\*\\*\\*\\*\n\nОпределение, произошла ли ошибка в функции[unserialize()](function.unserialize.md), а потім відновлення вихідного обробника помилок.\n\n```php\n<?php\nfunction unserialize_handler($errno, $errstr)\n{\n    echo \"Сериализуемое значение недопустимо.\\n\";\n}\n\n$serialized = 'foo';\nset_error_handler('unserialize_handler');\n$original = unserialize($serialized);\nrestore_error_handler();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nСериализуемое значение недопустимо.\n```\n\n### Дивіться також\n\n-   [error\\_reporting()](function.error-reporting.md) \\- Встановлює, які помилки PHP потраплять у звіт\n-   [set\\_error\\_handler()](function.set-error-handler.md) \\- Задає користувальницький обробник помилок\n-   [restore\\_exception\\_handler()](function.restore-exception-handler.md) \\- Відновлює попередній обробник винятків\n-   [trigger\\_error()](function.trigger-error.md) \\- Викликає помилку користувача/попередження/повідомлення\n","title":"restore\\_error\\_handler","contentType":2,"navigation":[{"function.error-reporting.md":"« error\\_reporting"},{"function.restore-exception-handler.md":"restore\\_exception\\_handler »"},{"index.md":"PHP Manual"},{"ref.errorfunc.md":"Функції обробки помилок"}]}},"__N_SSG":true}