{"pageProps":{"page":{"slug":"function.version-compare.md","content":"# version\\_compare\n\n(PHP 4 >= 4.1.0, PHP 5, PHP 7, PHP 8)\n\nversion\\_compare — Порівнює два «стандартизовані» рядки з номером версії PHP\n\n### Опис\n\n```methodsynopsis\nversion_compare(string $version1, string $version2, ?string $operator = null): int|bool\n```\n\n**version\\_compare()** порівнює два \"PHP-стандартизовані\" рядки з номерами версій.\n\nФункція спочатку замінює підкреслення `_`, дефис`-`и знак плюса`+` на точку у рядках версій, а також додає точки до та після кожного символу, що не є числом. Наприклад, '4.3.2RC1' перетворюється на '4.3.2.RC.1'. Після цього порівнює частини рядків зліва направо. Якщо частина рядка містить спеціальні символи версій, вони обробляються так: `будь-який рядок, не знайдений у цьому списку` < `dev` < `alpha` `a` < `beta` `b` < `RC` `rc` < `#` < `pl` `p`. . Таким чином, можна порівнювати не тільки версії різних рівнів, на кшталт '4.1' і '4.1.2', а й специфічні версії, що включають статус розробки.\n\n### Список параметрів\n\n`version1`\n\nНомер першої версії.\n\n`version2`\n\nНомер другої версії.\n\n`operator`\n\nНеобов'язковий параметр `operator`. Можливі значення: `<` `lt` `<=` `le` `>` `gt` `>=` `ge` `==` `=` `eq` `!=` `<>` `ne`\n\nАргумент чутливий до регістру, тому значення мають бути в нижньому регістрі.\n\n### Значення, що повертаються\n\nПо умолчанию функция**version\\_compare()** повертає `-1`якщо перша версія менша за другу; коли вони рівні; , якщо друга менша за першу.\n\nПри использовании аргумента`operator` функція поверне **`true`**, якщо вираз відповідно до оператора вірний, і **`false`** в іншому випадку.\n\n### Приклади\n\nУ прикладі нижче використовується константа \\*\\*`PHP_VERSION`\\*\\*Вона містить номер версії PHP, який виконує код.\n\n**Приклад #1 Приклад використання** version\\_compare()\\*\\*\\*\\*\n\n```php\n<?php\nif (version_compare(PHP_VERSION, '7.0.0') >= 0) {\n    echo 'Я использую PHP версии не ниже 7.0.0, моя версия: ' . PHP_VERSION . \"\\n\";\n}\n\nif (version_compare(PHP_VERSION, '5.3.0') >= 0) {\n    echo 'Я использую PHP версии не ниже 5.3.0, моя версия: ' . PHP_VERSION . \"\\n\";\n}\n\nif (version_compare(PHP_VERSION, '5.0.0', '>=')) {\n    echo 'Я использую PHP 5.0.0 или выше, моя версия: ' . PHP_VERSION . \"\\n\";\n}\n\nif (version_compare(PHP_VERSION, '5.0.0', '<')) {\n    echo 'Я до сих пор использую PHP 4, моя версия: ' . PHP_VERSION . \"\\n\";\n}\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Константа\\*\\*`PHP_VERSION`\\*\\* зберігає номер поточної версії PHP.\n\n> **Зауваження** :\n> \n> Зауважте, що дорелізні версії, такі як 5.3.0-dev, вважаються меншими за фінальні (види 5.3.0).\n\n> **Зауваження** :\n> \n> Спеціальні слова начебто `alpha`и`beta` чутливі до регістру. Рядки версій, які не дотримуються PHP-стандарту, потрібно наводити до нижнього регістру функцією [strtolower()](function.strtolower.md) до виклику **version\\_compare()**\n\n### Дивіться також\n\n-   [phpversion()](function.phpversion.md) \\- Отримує поточну версію PHP\n-   [php\\_uname()](function.php-uname.md) \\- Повертає інформацію про операційну систему, на якій запущено PHP\n-   [function\\_exists()](function.function-exists.md) \\- Повертає true, якщо вказана функція визначена\n","title":"version\\_compare","contentType":2,"navigation":[{"function.sys-get-temp-dir.md":"« sys\\_get\\_temp\\_dir"},{"function.zend-thread-id.md":"zend\\_thread\\_id »"},{"index.md":"PHP Manual"},{"ref.info.md":"Опції PHP/інформаційні функції"}]}},"__N_SSG":true}