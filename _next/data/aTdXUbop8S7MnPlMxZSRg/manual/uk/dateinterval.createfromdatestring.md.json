{"pageProps":{"page":{"slug":"dateinterval.createfromdatestring.md","content":"# DateInterval::createFromDateString\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nDateInterval::createFromDateString — Створює об'єкт класу DateInterval із дати у відносному форматі\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic static DateInterval::createFromDateString(string $datetime): DateInterval|false\n```\n\nПроцедурний стиль\n\n```methodsynopsis\ndate_interval_create_from_date_string(string $datetime): DateInterval|false\n```\n\nВикористовує парсер дати/часу, який використовується в конструкторі [DateTimeImmutable](class.datetimeimmutable.md) для створення об'єкта [DateInterval](class.dateinterval.md) із відносних частин розібраного рядка.\n\n### Список параметрів\n\n`datetime`\n\nДата, що складається з відносних часових фрагментів. Зокрема, для створення об'єкта DateInterval із частин, записаних у відносному форматі, який підтримується парсером у функціях [DateTimeImmutable](class.datetimeimmutable.md) [DateTime](class.datetime.md) і [strtotime()](function.strtotime.md)\n\nЩоб використовувати рядок у форматі ISO-8601, наприклад `P7D`необхідно використовувати конструктор.\n\n### Значення, що повертаються\n\nПовертає новий об'єкт класу [DateInterval](class.dateinterval.md) у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Тільки властивості `from_string`и`date_string` буде видно при створенні об'єкта [DateInterval](class.dateinterval.md) за допомогою цього. |\n\n### Приклади\n\n**Приклад #1 Аналіз та розбір часових інтервалів**\n\n```php\n<?php\n// Интервалы в каждом Прикладе эквивалентны.\n$i = new DateInterval('P1D');\n$i = DateInterval::createFromDateString('1 day');\n\n$i = new DateInterval('P2W');\n$i = DateInterval::createFromDateString('2 weeks');\n\n$i = new DateInterval('P3M');\n$i = DateInterval::createFromDateString('3 months');\n\n$i = new DateInterval('P4Y');\n$i = DateInterval::createFromDateString('4 years');\n\n$i = new DateInterval('P1Y1D');\n$i = DateInterval::createFromDateString('1 year + 1 day');\n\n$i = new DateInterval('P1DT12H');\n$i = DateInterval::createFromDateString('1 day + 12 hours');\n\n$i = new DateInterval('PT3600S');\n$i = DateInterval::createFromDateString('3600 seconds');\n?>\n```\n\n**Приклад #2 Розбір комбінацій та негативних інтервалів**\n\n```php\n<?php\n$i = DateInterval::createFromDateString('62 weeks + 1 day + 2 weeks + 2 hours + 70 minutes');\necho $i->format('%d %h %i'), \"\\n\";\n\n$i = DateInterval::createFromDateString('1 year - 10 days');\necho $i->format('%y %d'), \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n449 2 70\n\n**Приклад #3 Розбір спеціальних відносних часових інтервалів**\n\n```php\n<?php\n$i = DateInterval::createFromDateString('last day of next month');\nvar_dump($i);\n\n$i = DateInterval::createFromDateString('last weekday');\nvar_dump($i);\n```\n\nРезультат виконання наведеного прикладу в PHP 8.2:\n\n```\nobject(DateInterval)#1 (2) {\n  [\"from_string\"]=>\n  bool(true)\n  [\"date_string\"]=>\n  string(22) \"last day of next month\"\n}\nobject(DateInterval)#2 (2) {\n  [\"from_string\"]=>\n  bool(true)\n  [\"date_string\"]=>\n  string(12) \"last weekday\"\n}\n```\n\nРезультат виконання наведеного прикладу PHP 8 аналогічний:\n\n```\nobject(DateInterval)#1 (16) {\n  [\"y\"]=>\n  int(0)\n  [\"m\"]=>\n  int(1)\n  [\"d\"]=>\n  int(0)\n  [\"h\"]=>\n  int(0)\n  [\"i\"]=>\n  int(0)\n  [\"s\"]=>\n  int(0)\n  [\"f\"]=>\n  float(0)\n  [\"weekday\"]=>\n  int(0)\n  [\"weekday_behavior\"]=>\n  int(0)\n  [\"first_last_day_of\"]=>\n  int(2)\n  [\"invert\"]=>\n  int(0)\n  [\"days\"]=>\n  bool(false)\n  [\"special_type\"]=>\n  int(0)\n  [\"special_amount\"]=>\n  int(0)\n  [\"have_weekday_relative\"]=>\n  int(0)\n  [\"have_special_relative\"]=>\n  int(0)\n}\nobject(DateInterval)#2 (16) {\n  [\"y\"]=>\n  int(0)\n  [\"m\"]=>\n  int(0)\n  [\"d\"]=>\n  int(0)\n  [\"h\"]=>\n  int(0)\n  [\"i\"]=>\n  int(0)\n  [\"s\"]=>\n  int(0)\n  [\"f\"]=>\n  float(0)\n  [\"weekday\"]=>\n  int(0)\n  [\"weekday_behavior\"]=>\n  int(0)\n  [\"first_last_day_of\"]=>\n  int(0)\n  [\"invert\"]=>\n  int(0)\n  [\"days\"]=>\n  bool(false)\n  [\"special_type\"]=>\n  int(1)\n  [\"special_amount\"]=>\n  int(-1)\n  [\"have_weekday_relative\"]=>\n  int(0)\n  [\"have_special_relative\"]=>\n  int(1)\n}\n```\n","title":"DateInterval::createFromDateString","contentType":2,"navigation":[{"dateinterval.construct.md":"« DateInterval::\\_\\_construct"},{"dateinterval.format.md":"DateInterval::format »"},{"index.md":"PHP Manual"},{"class.dateinterval.md":"DateInterval"}]}},"__N_SSG":true}