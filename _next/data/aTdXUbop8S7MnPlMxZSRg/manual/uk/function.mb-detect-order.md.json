{"pageProps":{"page":{"slug":"function.mb-detect-order.md","content":"# mb\\_detect\\_order\n\n(PHP 4 >= 4.0.6, PHP 5, PHP 7, PHP 8)\n\nmb\\_detect\\_order — Встановлює/отримує порядок визначення кодування символів\n\n### Опис\n\n```methodsynopsis\nmb_detect_order(array|string|null $encoding = null): array|bool\n```\n\nВстановлює порядок автоматичного визначення кодування символів значення, передане в параметр `encoding`\n\n### Список параметрів\n\n`encoding`\n\nПараметр`encoding` - масив (array) або розділений комами список кодувань символів. Докладніше про кодування символів, що існують в PHP, розказано в розділі «[Кодування символів, що підтримуються](mbstring.supported-encodings.md)».\n\nЯкщо параметр `encoding` не заданий або дорівнює **`null`**, функція поверне поточний порядок визначення кодувань символів як масиву.\n\nЦя установка впливає на роботу функцій [mb\\_detect\\_encoding()](function.mb-detect-encoding.md) і [mb\\_send\\_mail()](function.mb-send-mail.md)\n\nМодуль`mbstring` містить наступні фільтри визначення кодувань. Якщо для наступних кодувань існує неприпустима послідовність байтів, кодування завершиться невдало:\n\n`UTF-8` `UTF-7` `ASCII` `EUC-JP`,`SJIS` `eucJP-win` `SJIS-win` `JIS` `ISO-2022-JP`\n\nМодуль`mbstring` визначає кодування `ISO-8859-*` як `ISO-8859-*`\n\nОпределение кодировок`UTF-16` `UTF-32` `UCS2`и`UCS4` завжди буде невдалим.\n\n### Значення, що повертаються\n\nПри установке порядка определения кодировки: возвращает\\*\\*`true`\\*\\* у разі успішного виконання або\\*\\*`false`\\*\\*в случае возникновения ошибки.\n\nПри отриманні порядку визначення кодування повертає масив кодувань у встановленому порядку.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Тепер параметр `encoding` може набувати значення **`null`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** mb\\_detect\\_order()\\*\\*\\*\\*\n\n```php\n<?php\n/* Установка порядка определения списком перечисленных кодировок */\nmb_detect_order(\"eucjp-win,sjis-win,UTF-8\");\n\n/* Установка порядка определения массивом */\n$ary[] = \"ASCII\";\n$ary[] = \"JIS\";\n$ary[] = \"EUC-JP\";\nmb_detect_order($ary);\n\n/* Отображение текущего порядка обнаружения */\necho implode(\", \", mb_detect_order());\n?>\n```\n\n**Приклад #2 Приклад марних порядків визначення**\n\n```\n; Всегда определяет как ISO-8859-1\ndetect_order = ISO-8859-1, UTF-8\n\n; Всегда определяет как UTF-8, так как ASCII/UTF-7 —\n; подмножество UTF-8\ndetect_order = UTF-8, ASCII, UTF-7\n```\n\n### Дивіться також\n\n-   [mb\\_internal\\_encoding()](function.mb-internal-encoding.md) \\- Встановлює/отримує внутрішнє кодування скрипту\n-   [mb\\_http\\_input()](function.mb-http-input.md) \\- Визначає кодування символів вхідних даних HTTP-запиту\n-   [mb\\_http\\_output()](function.mb-http-output.md) \\- Встановлює/отримує кодування символів виводу HTTP\n-   [mb\\_send\\_mail()](function.mb-send-mail.md) \\- Надсилає закодований електронний лист\n","title":"mb\\_detect\\_order","contentType":2,"navigation":[{"function.mb-detect-encoding.md":"« mb\\_detect\\_encoding"},{"function.mb-encode-mimeheader.md":"mb\\_encode\\_mimeheader »"},{"index.md":"PHP Manual"},{"ref.mbstring.md":"Функції для роботи з багатобайтовими рядками"}]}},"__N_SSG":true}