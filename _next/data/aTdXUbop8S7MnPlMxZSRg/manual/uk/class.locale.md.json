{"pageProps":{"page":{"slug":"class.locale.md","content":"# Клас Locale\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\n## Вступ\n\n\"Locale\" - це ідентифікатор, який використовується для розпізнавання мови, культури або регіональних особливостей поведінки API. Локалі PHP організовані та позначені так само як і локалі CLDR, що використовуються ICU та багатьма виробниками систем Unix, Linux та Mac, Java тощо. Локалі позначаються згідно з мовними мітками стандарту RFC 4646 (який використовує тире, а не підкреслення) на додаток до традиційного позначення з використанням символу підкреслення. Функції даного класу розуміють обидва написання, якщо не вказано інше.\n\nПриклади ідентифікаторів:\n\n-   en-US (Англійська, США)\n-   zh-Hant-TW (Китайська, Традиційне зображення, Тайвань)\n-   fr-CA, fr-FR (Канадська Французька та Французька відповідно)\n\nКлас Locale (і відповідні процедурні функції) використовується для взаємодії з ідентифікаторами локалів, перевірки правильного складання ідентифікатора, його коректності і т.д. Модулі використовуються CLDR в UAX #35 (і успадковується ICU), є коректними і використовуються скрізь вони були б у ICU.\n\nЦей клас не можна інстанціювати як об'єкт. Усі методи/функції оголошено статичними.\n\n**`null`** або порожній рядок вважатимуться за \"базовий\" локаль. \"Базова\" локаль - це \"en\\_US\\_POSIX\" в CLDR. Мовні мітки (і ідентифікатори локалі) реєстронезалежні. У даному класі присутній метод, що перетворює їх до канонічного вигляду.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class Locale\n     {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      ACTUAL_LOCALE;\n\n    public\n     const\n     int\n      VALID_LOCALE;\n\n    public\n     const\n     null\n      DEFAULT_LOCALE = null;\n\n    public\n     const\n     string\n      LANG_TAG;\n\n    public\n     const\n     string\n      EXTLANG_TAG;\n\n    public\n     const\n     string\n      SCRIPT_TAG;\n\n    public\n     const\n     string\n      REGION_TAG;\n\n    public\n     const\n     string\n      VARIANT_TAG;\n\n    public\n     const\n     string\n      GRANDFATHERED_LANG_TAG;\n\n    public\n     const\n     string\n      PRIVATE_TAG;\n\n\n    /* Методы */\n    \n   public static acceptFromHttp(string $header): string|false\npublic static canonicalize(string $locale): ?string\npublic static composeLocale(array $subtags): string|false\npublic static filterMatches(string $languageTag, string $locale, bool $canonicalize = false): ?bool\npublic static getAllVariants(string $locale): ?array\npublic static getDefault(): string\npublic static getDisplayLanguage(string $locale, ?string $displayLocale = null): string|false\npublic static getDisplayName(string $locale, ?string $displayLocale = null): string|false\npublic static getDisplayRegion(string $locale, ?string $displayLocale = null): string|false\npublic static getDisplayScript(string $locale, ?string $displayLocale = null): string|false\npublic static getDisplayVariant(string $locale, ?string $displayLocale = null): string|false\npublic static getKeywords(string $locale): array|false|null\npublic static getPrimaryLanguage(string $locale): ?string\npublic static getRegion(string $locale): ?string\npublic static getScript(string $locale): ?string\npublic static lookup(    array $languageTag,    string $locale,    bool $canonicalize = false,    ?string $defaultLocale = null): ?string\npublic static parseLocale(string $locale): ?array\npublic static setDefault(string $locale): bool\n\n   }\n```\n\n## Обумовлені константи\n\n**`Locale::DEFAULT_LOCALE`**\n\nВикористовується як параметр, що задає локаль у функціях, де це необхідно, таких як NumberFormatter. Ця константа змушує використовувати локаль за промовчанням.\n\nЦі константи описують вибір локалі для методу getLocale різних класів.\n\n**`Locale::ACTUAL_LOCALE`**\n\nОписує поточний локаль.\n\n**`Locale::VALID_LOCALE`**\n\nЦе найспецифічніша локаль, що підтримується ICU.\n\nЦі константи описують, як розбираються або з чого складаються локалі. Вони використовуються як ключі масиву аргументів для [locale\\_compose()](locale.composelocale.md) і як значення, що повертаються [locale\\_parse()](locale.parselocale.md) у вигляді ключів асоціативного масиву, що повертається.\n\n**`Locale::LANG_TAG`**\n\nМітка для мови\n\n**`Locale::EXTLANG_TAG`**\n\nРозширена мітка мови\n\n**`Locale::SCRIPT_TAG`**\n\nМітка зображення\n\n**`Locale::REGION_TAG`**\n\nМітка регіону\n\n**`Locale::VARIANT_TAG`**\n\nМітка варіанта\n\n**`Locale::GRANDFATHERED_LANG_TAG`**\n\nМітка мови у старому синтаксисі (grandfathered)\n\n**`Locale::PRIVATE_TAG`**\n\nПриватна мітка\n\n## Дивіться також\n\n-   [» RFC 4646 - мітки для ідентифікаторів мов](http://www.faqs.org/rfcs/rfc4646)\n-   [» RFC 4647 - перевірка мовних міток](http://www.faqs.org/rfcs/rfc4647)\n-   [» Проект Unicode CLDR: Стандартний репозиторій даних локалей](http://www.unicode.org/cldr/)\n-   [» Регістр мовних міток IANA](http://www.iana.org/assignments/language-subtag-registry)\n-   [» Керівництво користувача ICU - Локаль](https://unicode-org.github.io/icu/userguide/locale/)\n-   [» ICU api локалі](https://unicode-org.github.io/icu-docs/apidoc/dev/icu4c/uloc_8h.md)\n\n## Зміст\n\n-   [Locale::acceptFromHttp](locale.acceptfromhttp.md) — Спробувати визначити найкращу локаль на основі заголовку HTTP \"Accept-Language\"\n-   [Locale::canonicalize](locale.canonicalize.md) \\- Канонізувати рядок локалі\n-   [Locale::composeLocale](locale.composelocale.md)— Повертає коректно відсортовані та розділені ідентифікатори локалі\n-   [Locale::filterMatches](locale.filtermatches.md)— Перевірити, чи тег фільтра мови локалі відповідає\n-   [Locale::getAllVariants](locale.getallvariants.md)— Отримання варіантів із переданої локалі\n-   [Locale::getDefault](locale.getdefault.md) — Отримання значення локалі INTL за замовчуванням із опції 'default\\_locale'\n-   [Locale::getDisplayLanguage](locale.getdisplaylanguage.md)— Повертає відповідним чином локалізоване ім'я мови для заданої локалі\n-   [Locale::getDisplayName](locale.getdisplayname.md) \\- Повертає відповідним чином локалізоване ім'я локалі\n-   [Locale::getDisplayRegion](locale.getdisplayregion.md)— Повертає відповідним чином локалізовану назву регіону для заданої локалі\n-   [Locale::getDisplayScript](locale.getdisplayscript.md)— Повертає відповідним чином локалізовану назву алфавіту для заданої локалі\n-   [Locale::getDisplayVariant](locale.getdisplayvariant.md)— Повертає відповідним чином локалізовану назву варіанта для заданої локалі\n-   [Locale::getKeywords](locale.getkeywords.md)— Отримати ключові слова для локалі\n-   [Locale::getPrimaryLanguage](locale.getprimarylanguage.md)— Отримати первинну мову для локалі\n-   [Locale::getRegion](locale.getregion.md)— Отримати регіон для локалі\n-   [Locale::getScript](locale.getscript.md) \\- Отримати алфавіт для локалі\n-   [Locale::lookup](locale.lookup.md)— Пошук мовних позначок найбільш відповідних заданої локалі\n-   [Locale::parseLocale](locale.parselocale.md)— Здобути асоціативний масив усіх підтегів локалі\n-   [Locale::setDefault](locale.setdefault.md)— Встановити локаль за умовчанням під час виконання\n","title":"Клас Locale","contentType":2,"navigation":[{"numberformatter.settextattribute.md":"« NumberFormatter::setTextAttribute"},{"locale.acceptfromhttp.md":"Locale::acceptFromHttp »"},{"index.md":"PHP Manual"},{"book.intl.md":"intl"}]}},"__N_SSG":true}