{"pageProps":{"page":{"slug":"function.cubrid-fetch-array.md","content":"# cubrid\\_fetch\\_array\n\n(PECL CUBRID >=8.3.0)\n\ncubrid\\_fetch\\_array - Вилучення рядка з результуючого набору у вигляді асоціативного масиву, індексованого масиву або обох відразу\n\n### Опис\n\n```methodsynopsis\ncubrid_fetch_array(resource $result, int $type = CUBRID_BOTH): array\n```\n\nФункция**cubrid\\_fetch\\_array()** служить для отримання одного рядка з результуючого набору. Після вилучення курсор автоматично пересунеться на наступний рядок.\n\n### Список параметрів\n\n`result`\n\n`Result` отриманий з [cubrid\\_execute()](function.cubrid-execute.md)\n\n`type`\n\nТип масиву для вилучення: CUBRID\\_NUM, CUBRID\\_ASSOC, CUBRID\\_BOTH. Якщо вам потрібно оперувати об'єктами типу LOB – використовуйте CUBRID\\_LOB.\n\n### Значення, що повертаються\n\nПовертає масив рядків, що відповідає вилученому рядку, у разі успішного виконання.\n\n\\*\\*`false`\\*\\*якщо рядків більше немає; NULL, коли процес завершується помилкою.\n\nТип масива, що повертається, залежить від заданого типу. За замовчуванням використовується CUBRID\\_BOTH, що веде до вилучення як асоціативного, і індексованого масивів, але це поведінка можна перевизначити параметром `type`. Значення, допустимі для параметра `type` :\n\n-   CUBRID\\_NUM : Індексований масив (перший елемент має індекс 0)\n-   CUBRID\\_ASSOC : Асоціативний масив\n-   CUBRID\\_BOTH : І той і інший одночасно (за замовчуванням)\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_fetch\\_array()\\*\\*\\*\\*\n\n```php\n<?php\n$conn = cubrid_connect(\"localhost\", 33000, \"demodb\");\n$req = cubrid_execute($conn, \"SELECT name,area,seats,address FROM stadium WHERE nation_code='GRE' AND seats > 10000\");\n\nprintf(\"%-40s %-10s %-6s %-20s\\n\", \"name\", \"area\", \"seats\", \"address\");\nwhile ($row = cubrid_fetch_array($req, CUBRID_NUM)) {\n    printf(\"%-40s %-10s %-6s %-20s\\n\", $row[0], $row[1], $row[2], $row[3]);\n}\n\n// Если вам нужно оперировать объектами LOB - используйте\n// cubrid_fetch_array($req, CUBRID_NUM | CUBRID_LOB)\n\ncubrid_close_request($req);\n\ncubrid_disconnect($conn);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nname                                     area       seats  address\nPanathinaiko Stadium                     86300.00   50000  Athens, Greece\nOlympic Stadium                          54700.00   13000  Athens, Greece\nOlympic Indoor Hall                      34100.00   18800  Athens, Greece\nOlympic Hall                             52400.00   21000  Athens, Greece\nOlympic Aquatic Centre                   42500.00   11500  Athens, Greece\nMarkopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece\nFaliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece\nAthens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece\nAno Liossia                              34000.00   12000  Ano Liosia, Athens, Greece\n```\n\n### Дивіться також\n\n-   [cubrid\\_execute()](function.cubrid-execute.md) \\- Виконує підготовлений SQL-оператор\n-   [cubrid\\_fetch()](function.cubrid-fetch.md) \\- Вибирає наступний рядок із набору результатів\n-   [cubrid\\_fetch\\_row()](function.cubrid-fetch-row.md) \\- Витягти рядок із результуючого набору у вигляді індексованого масиву\n-   [cubrid\\_fetch\\_assoc()](function.cubrid-fetch-assoc.md) \\- Витягти рядок із результуючого набору у вигляді асоціативного масиву\n-   [cubrid\\_fetch\\_object()](function.cubrid-fetch-object.md) \\- Витягти наступний рядок як об'єкт\n","title":"cubrid\\_fetch\\_array","contentType":2,"navigation":[{"function.cubrid-error.md":"« cubrid\\_error"},{"function.cubrid-fetch-assoc.md":"cubrid\\_fetch\\_assoc »"},{"index.md":"PHP Manual"},{"cubridmysql.cubrid.md":"Функції сумісності CUBRID MySQL"}]}},"__N_SSG":true}