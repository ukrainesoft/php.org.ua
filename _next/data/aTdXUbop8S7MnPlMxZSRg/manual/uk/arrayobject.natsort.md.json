{"pageProps":{"page":{"slug":"arrayobject.natsort.md","content":"# ArrayObject::natsort\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nArrayObject::natsort — Сортувати масив за допомогою алгоритму \"natural order\"\n\n### Опис\n\n```methodsynopsis\npublic ArrayObject::natsort(): true\n```\n\nЦей метод реалізує алгоритм сортування, при якому порядок літерно-цифрових рядків буде звичним для людини, зберігаючи при цьому ключ/значення. Такий алгоритм називається \"природний порядок\" (natural ordering). Приклад різниці між цим алгоритмом та звичайними алгоритмами сортування, (використовуються в [ArrayObject::asort](arrayobject.asort.md)) можна побачити у прикладі нижче.\n\n> **Зауваження** :\n> \n> Якщо обидва порівнювані значення еквівалентні, вони зберігають свій початковий порядок. До PHP 8.0.0 їх відносний порядок у відсортованому масиві не було визначено.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Тип значення, що повертається тепер **`true`**; раніше було bool. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** ArrayObject::natsort()\\*\\*\\*\\*\n\n```php\n<?php\n$array = array(\"img12.png\", \"img10.png\", \"img2.png\", \"img1.png\");\n\n$arr1 = new ArrayObject($array);\n$arr2 = clone $arr1;\n\n$arr1->asort();\necho \"Стандартная сортировка\\n\";\nprint_r($arr1);\n\n$arr2->natsort();\necho \"\\nСортировка в естественном порядке\\n\";\nprint_r($arr2);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nСтандартная сортировка\nArrayObject Object\n(\n    [3] => img1.png\n    [1] => img10.png\n    [0] => img12.png\n    [2] => img2.png\n)\n\nСортировка в естественном порядке\nArrayObject Object\n(\n    [3] => img1.png\n    [2] => img2.png\n    [1] => img10.png\n    [0] => img12.png\n)\n```\n\nДля більш детальної інформації дивіться сторінку Мартіна Пула (Martin Pool) [» Natural Order String Comparison](https://github.com/sourcefrog/natsort)\n\n### Дивіться також\n\n-   [ArrayObject::asort()](arrayobject.asort.md) \\- Сортувати записи за значенням\n-   [ArrayObject::ksort()](arrayobject.ksort.md) \\- Сортувати записи за ключами\n-   [ArrayObject::natcasesort()](arrayobject.natcasesort.md) - Сортувати масив, використовуючи реєстронезалежний алгоритм \"natural order\"\n-   [ArrayObject::uasort()](arrayobject.uasort.md) \\- Сортувати записи, використовуючи функцію користувача для порівняння елементів і зберігаючи при цьому зв'язок ключ/значення\n-   [ArrayObject::uksort()](arrayobject.uksort.md) \\- Сортувати масив за ключами, використовуючи функцію користувача для порівняння\n-   [natsort()](function.natsort.md) - Сортує масив, використовуючи алгоритм \"natural order\"\n","title":"ArrayObject::natsort","contentType":2,"navigation":[{"arrayobject.natcasesort.md":"« ArrayObject::natcasesort"},{"arrayobject.offsetexists.md":"ArrayObject::offsetExists »"},{"index.md":"PHP Manual"},{"class.arrayobject.md":"ArrayObject"}]}},"__N_SSG":true}