{"pageProps":{"page":{"slug":"function.stream-set-write-buffer.md","content":"# stream\\_set\\_write\\_buffer\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\nstream\\_set\\_write\\_buffer — Встановлює буферизацію файлу під час запису у вказаний потік\n\n### Опис\n\n```methodsynopsis\nstream_set_write_buffer(resource $stream, int $size): int\n```\n\nУстанавливает буферизацию для операций записи на заданном потоке`stream` до числа `size`байт.\n\n### Список параметрів\n\n`stream`\n\nФайловий покажчик.\n\n`size`\n\nЧисло байт для буферизации. Если аргумент`size` дорівнює 0, то операції запису не буферизуються. Це гарантує, що всі операції запису з використанням функції [fwrite()](function.fwrite.md) будуть завершені перед тим, як іншим процесам буде дозволено записувати потік виведення.\n\n### Значення, що повертаються\n\nПовертає 0 у разі успішного виконання, або інше значення, якщо запит не може бути виконаний.\n\n### Приклади\n\n**Приклад #1 Приклад використання** stream\\_set\\_write\\_buffer()\\*\\*\\*\\*\n\nСледующий Приклад демонстрирует использование функции**stream\\_set\\_write\\_buffer()** для створення потоку, що не буферизується.\n\n```php\n<?php\n$fp = fopen($file, \"w\");\nif ($fp) {\n   if (stream_set_write_buffer($fp, 0) !== 0) {\n      // не удалось внести изменение\n  }\n  fwrite($fp, $output);\n  fclose($fp);\n}\n?>\n```\n\n### Дивіться також\n\n-   [fopen()](function.fopen.md) \\- Відкриває файл або URL\n-   [fwrite()](function.fwrite.md) \\- Бінарно-безпечний запис у файл\n","title":"stream\\_set\\_write\\_buffer","contentType":2,"navigation":[{"function.stream-set-timeout.md":"« stream\\_set\\_timeout"},{"function.stream-socket-accept.md":"stream\\_socket\\_accept »"},{"index.md":"PHP Manual"},{"ref.stream.md":"Функції для роботи з потоками"}]}},"__N_SSG":true}