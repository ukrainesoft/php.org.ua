{"pageProps":{"page":{"slug":"ds-map.xor.md","content":"# Ds\\\\Map::xor\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Map::xor — Створює нову колекцію пар із елементів, які є в одній із колекцій, але не в обох одночасно\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Map::xor(Ds\\Map $map): Ds\\Map\n```\n\nСтворює нову колекцію пар з елементів, ключі яких є в поточній колекції, або в переданій в `map`але не в обох одночасно.\n\n`A ⊖ B = {x : x ∈ (A \\ B) ∪ (B \\ A)}`\n\n### Список параметрів\n\n`map`\n\nДруга колекція пар.\n\n### Значення, що повертаються\n\nНова колекція пар з елементів, ключі яких є в поточній колекції, або в переданій в `map`але не в обох одночасно.\n\n### Дивіться також\n\n-   [» Симетрична різниця](https://en.wikipedia.org/wiki/Symmetric_difference)в Вікіпедія\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Map::xor()\\*\\*\\*\\*\n\n```php\n<?php\n$a = new \\Ds\\Map([\"a\" => 1, \"b\" => 2, \"c\" => 3]);\n$b = new \\Ds\\Map([\"b\" => 4, \"c\" => 5, \"d\" => 6]);\n\nprint_r($a->xor($b));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nDs\\Map Object\n(\n    [0] => Ds\\Pair Object\n        (\n            [key] => a\n            [value] => 1\n        )\n\n    [1] => Ds\\Pair Object\n        (\n            [key] => d\n            [value] => 6\n        )\n\n)\n```\n","title":"Ds\\\\Map::xor","contentType":2,"navigation":[{"ds-map.values.md":"« Ds\\\\Map::values"},{"class.ds-pair.md":"Ds\\\\Pair »"},{"index.md":"PHP Manual"},{"class.ds-map.md":"Ds\\\\Map"}]}},"__N_SSG":true}