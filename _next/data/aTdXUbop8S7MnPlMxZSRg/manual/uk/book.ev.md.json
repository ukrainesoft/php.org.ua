{"pageProps":{"page":{"slug":"book.ev.md","content":"# Ev\n\n-   [Вступ](intro.ev.md)\n-   [Встановлення та налаштування](ev.setup.md)\n    -   [Вимоги](ev.requirements.md)\n    -   [Установка](ev.installation.md)\n    -   [Налаштування під час виконання](ev.configuration.md)\n    -   [Типи ресурсів](ev.resources.md)\n-   [Обумовлені константи](ev.global.constants.md)\n-   [Приклади](ev.examples.md)\n-   [Спостерігачі](ev.watchers.md)\n-   [Watcher callbacks](ev.watcher-callbacks.md)\n-   [Режими роботи періодичних спостерігачів](ev.periodic-modes.md)\n-   [Ev](class.ev.md) \\- Клас Ev\n    -   [Ev::backend](ev.backend.md)— Повертає ціле число, що описує бекенд, який використовується libev\n    -   [Ev::depth](ev.depth.md)— Здобути глибину рекурсії\n    -   [Ev::embeddableBackends](ev.embeddablebackends.md)— Повертає набір бекендів, які можна вбудувати в інші цикли подій\n    -   [Ev::feedSignal](ev.feedsignal.md) \\- Передаємо подію сигналу в Ev\n    -   [Ev::feedSignalEvent](ev.feedsignalevent.md)— Надіслати подію сигналу в цикл за замовчуванням\n    -   [Ev::iteration](ev.iteration.md)— Отримати кількість опитувань циклу за умовчанням щодо нових подій\n    -   [Ev::now](ev.now.md)— Отримати час запуску останньої ітерації циклу за умовчанням\n    -   [Ev::nowUpdate](ev.nowupdate.md)— Встановлює поточний час шляхом запиту до ядра в процесі оновлюючи час, який повертається Ev::now\n    -   [Ev::recommendedBackends](ev.recommendedbackends.md)— Отримати бітову маску рекомендованих бекендів для даної платформи\n    -   [Ev::resume](ev.resume.md)— Відновити виконання призупиненого раніше циклу подій за умовчанням\n    -   [Ev::run](ev.run.md)— Почати перевірку наявності подій та виклик callback-функцій циклу за умовчанням\n    -   [Ev::sleep](ev.sleep.md)— Блокувати процес задану кількість секунд\n    -   [Ev::stop](ev.stop.md)— Зупинити цикл події за замовчуванням\n    -   [Ev::supportedBackends](ev.supportedbackends.md)— Повертає набір бекендів, які підтримуються поточною конфігурацією libev\n    -   [Ev::suspend](ev.suspend.md)— Призупинити цикл подій за умовчанням\n    -   [Ev::time](ev.time.md)— Повертає поточний час у секундах, що минув з початку епохи Unix\n    -   [Ev::verify](ev.verify.md) \\- Здійснює внутрішню перевірку цілісності (для налагодження)\n-   [EvCheck](class.evcheck.md) \\- Клас EvCheck\n    -   [EvCheck::\\_\\_construct](evcheck.construct.md) \\- Конструктор об'єкту EvCheck\n    -   [EvCheck::createStopped](evcheck.createstopped.md)— Створює зупинений екземпляр спостерігача EvCheck\n-   [EvChild](class.evchild.md) \\- Клас EvChild\n    -   [EvChild::\\_\\_construct](evchild.construct.md) \\- Створює об'єкт спостерігач EvChild\n    -   [EvChild::createStopped](evchild.createstopped.md)— Створює зупинений екземпляр спостерігача EvCheck\n    -   [EvChild::set](evchild.set.md) \\- Конфігурування спостерігача\n-   [EvEmbed](class.evembed.md) \\- Клас EvEmbed\n    -   [EvEmbed::\\_\\_construct](evembed.construct.md) \\- Конструктор об'єкта EvEmbed\n    -   [EvEmbed::createStopped](evembed.createstopped.md)— Створює зупинений об'єкт спостерігач EvEmbed\n    -   [EvEmbed::set](evembed.set.md)— Налаштування спостерігача\n    -   [EvEmbed::sweep](evembed.sweep.md)— Робить одиночну, неблокуючу розгортку за вбудованим циклом\n-   [EvFork](class.evfork.md) \\- Клас EvFork\n    -   [EvFork::\\_\\_construct](evfork.construct.md) \\- Конструктор спостерігача EvFork\n    -   [EvFork::createStopped](evfork.createstopped.md) \\- Створити об'єкт класу EvFork, але не стартувати його\n-   [EvIdle](class.evidle.md) \\- Клас EvIdle\n    -   [EvIdle::\\_\\_construct](evidle.construct.md) \\- Конструктор спостерігача EvIdle\n    -   [EvIdle::createStopped](evidle.createstopped.md)— Створити об'єкт класу EvIdle, але не стартувати його\n-   [EvIo](class.evio.md) \\- Клас EvIo\n    -   [EvIo::\\_\\_construct](evio.construct.md) \\- Створює об'єкт спостерігач EvIo\n    -   [EvIo::createStopped](evio.createstopped.md)— Створює зупинений об'єкт спостерігача EvIo\n    -   [EvIo::set](evio.set.md) \\- Конфігурування спостерігача\n-   [EvLoop](class.evloop.md) \\- Клас EvLoop\n    -   [EvLoop::backend](evloop.backend.md)— Повертає ціле число, що описує бекенд, який використовується libev\n    -   [EvLoop::check](evloop.check.md)— Створює об'єкт EvCheck, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::child](evloop.child.md)— Створює об'єкт EvChild, пов'язаний із поточним циклом подій\n    -   [EvLoop::\\_\\_construct](evloop.construct.md) \\- Конструктор об'єкта циклу подій\n    -   [EvLoop::defaultLoop](evloop.defaultloop.md)— Повертає або створює цикл стандартних подій\n    -   [EvLoop::embed](evloop.embed.md)— Створює екземпляр спостерігача EvEmbed, пов'язаний із поточним об'єктом EvLoop\n    -   [EvLoop::fork](evloop.fork.md)— Створює об'єкт спостерігача EvFork, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::idle](evloop.idle.md)— Створює об'єкт спостерігача EvIdle, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::invokePending](evloop.invokepending.md)— Викликає всіх спостерігачів, що очікують, при скиданні їх відкладеного стану\n    -   [EvLoop::io](evloop.io.md)— Створює об'єкт спостерігача EvIo, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::loopFork](evloop.loopfork.md)— Викликається після розгалуження\n    -   [EvLoop::now](evloop.now.md) - Повертає поточне \"event loop time\"\n    -   [EvLoop::nowUpdate](evloop.nowupdate.md)— Встановлює поточний час, запитуючи ядро, оновлюючи час, який повертається EvLoop::now у процесі\n    -   [EvLoop::periodic](evloop.periodic.md)— Створює об'єкт спостерігача EvPeriodic, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::prepare](evloop.prepare.md)— Створює об'єкт спостерігача EvPrepare, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::resume](evloop.resume.md)— Відновлює раніше зупинений цикл подій\n    -   [EvLoop::run](evloop.run.md)— Перевіряє події та викликає callback-функції у циклі\n    -   [EvLoop::signal](evloop.signal.md)— Створює об'єкт спостерігача EvSignal, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::stat](evloop.stat.md)— Створює об'єкт спостерігача EvStat, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::stop](evloop.stop.md) \\- Зупиняє цикл подій\n    -   [EvLoop::suspend](evloop.suspend.md) \\- Припиняє цикл\n    -   [EvLoop::timer](evloop.timer.md)— Створює об'єкт спостерігача EvTimer, пов'язаний із поточним екземпляром циклу подій\n    -   [EvLoop::verify](evloop.verify.md) \\- Виконує внутрішні перевірки узгодженості (для налагодження)\n-   [EvPeriodic](class.evperiodic.md) \\- Клас EvPeriodic\n    -   [EvPeriodic::again](evperiodic.again.md)— Зупиняє та знову запускає періодичний спостерігач\n    -   [EvPeriodic::at](evperiodic.at.md)— Повертає абсолютний час, коли спостерігач запуститься наступного разу\n    -   [EvPeriodic::\\_\\_construct](evperiodic.construct.md) \\- Конструктор об'єкта спостерігача EvPeriodic\n    -   [EvPeriodic::createStopped](evperiodic.createstopped.md) \\- Створює зупинений спостерігач EvPeriodic\n    -   [EvPeriodic::set](evperiodic.set.md)— Налаштовує спостерігача\n-   [EvPrepare](class.evprepare.md) \\- Клас EvPrepare\n    -   [EvPrepare::\\_\\_construct](evprepare.construct.md) \\- Конструктор спостерігача EvPrepare\n    -   [EvPrepare::createStopped](evprepare.createstopped.md) \\- Створити об'єкт класу EvPrepare, але не стартувати його\n-   [EvSignal](class.evsignal.md) \\- Клас EvSignal\n    -   [EvSignal::\\_\\_construct](evsignal.construct.md) \\- Конструктор об'єкта спостерігача EvSignal\n    -   [EvSignal::createStopped](evsignal.createstopped.md)— Create stopped EvSignal watcher object\n    -   [EvSignal::set](evsignal.set.md)— Налаштування спостерігача\n-   [EvStat](class.evstat.md) \\- Клас EvStat\n    -   [EvStat::attr](evstat.attr.md)— Повертає значення, нещодавно виявлені Ev\n    -   [EvStat::\\_\\_construct](evstat.construct.md) \\- Створює об'єкт спостерігача EvStat\n    -   [EvStat::createStopped](evstat.createstopped.md) \\- Створює зупинений об'єкт спостерігача EvStat\n    -   [EvStat::prev](evstat.prev.md)— Повертає попередній набір значень, які повертаються EvStat::attr\n    -   [EvStat::set](evstat.set.md)— Налаштовує спостерігача\n    -   [EvStat::stat](evstat.stat.md) \\- Ініціює виклик статистики\n-   [EvTimer](class.evtimer.md) \\- Клас EvTimer\n    -   [EvTimer::again](evtimer.again.md) \\- Перезапускає таймер спостерігача\n    -   [EvTimer::\\_\\_construct](evtimer.construct.md) \\- Конструктор об'єкта спостерігача EvTimer\n    -   [EvTimer::createStopped](evtimer.createstopped.md) \\- Створює зупинений спостерігач EvTimer\n    -   [EvTimer::set](evtimer.set.md)— Налаштовує спостерігача\n-   [EvWatcher](class.evwatcher.md) \\- Клас EvWatcher\n    -   [EvWatcher::clear](evwatcher.clear.md)— Очистити статус очікування спостерігача\n    -   [EvWatcher::\\_\\_construct](evwatcher.construct.md) \\- Абстрактний конструктор об'єкта спостерігача\n    -   [EvWatcher::feed](evwatcher.feed.md)— Подає зазначені події у цикл подій\n    -   [EvWatcher::getLoop](evwatcher.getloop.md)— Повертає цикл, який відповідає за спостерігача\n    -   [EvWatcher::invoke](evwatcher.invoke.md) \\- Викликає callback-функцію спостерігача із заданою бітовою маскою прийнятих подій\n    -   [EvWatcher::keepalive](evwatcher.keepalive.md)— Налаштовує, чи повертатиметься цикл\n    -   [EvWatcher::setCallback](evwatcher.setcallback.md) \\- Встановлює нову callback-функцію для спостерігача\n    -   [EvWatcher::start](evwatcher.start.md) \\- Запускає спостерігача\n    -   [EvWatcher::stop](evwatcher.stop.md) \\- Зупиняє спостерігача\n","title":"Ev","contentType":2,"navigation":[{"function.eio-write.md":"« eio\\_write"},{"intro.ev.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.fileprocess.process.md":"Модулі для керування процесами програм"}]}},"__N_SSG":true}