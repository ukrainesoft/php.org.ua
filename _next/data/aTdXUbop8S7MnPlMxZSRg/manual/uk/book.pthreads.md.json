{"pageProps":{"page":{"slug":"book.pthreads.md","content":"# pthreads\n\n-   [Вступ](intro.pthreads.md)\n-   [Встановлення та налаштування](pthreads.setup.md)\n    -   [Вимоги](pthreads.requirements.md)\n    -   [Установка](pthreads.installation.md)\n    -   [Налаштування під час виконання](pthreads.configuration.md)\n-   [Обумовлені константи](pthreads.constants.md)\n-   [Threaded](class.threaded.md) \\- Клас Threaded\n    -   [Threaded::chunk](threaded.chunk.md) \\- Обробка\n    -   [Threaded::count](threaded.count.md) \\- Обробка\n    -   [Threaded::extend](threaded.extend.md) \\- Обробка під час виконання\n    -   [Threaded::isRunning](thread.isrunning.md)— Визначення стану\n    -   [Threaded::isTerminated](threaded.isterminated.md)— Визначення стану\n    -   [Threaded::merge](threaded.merge.md) \\- Обробка\n    -   [Threaded::notify](threaded.notify.md) \\- Синхронізація\n    -   [Threaded::notifyOne](threaded.notifyone.md) \\- Синхронізація\n    -   [Threaded::pop](threaded.pop.md) \\- Обробка\n    -   [Threaded::run](threaded.run.md) \\- Виконання\n    -   [Threaded::shift](threaded.shift.md) \\- Обробка\n    -   [Threaded::synchronized](threaded.synchronized.md) \\- Синхронізація\n    -   [Threaded::wait](threaded.wait.md) \\- Синхронізація\n-   [Thread](class.thread.md) \\- Клас Thread\n    -   [Thread::getCreatorId](thread.getcreatorid.md) \\- Ідентифікація\n    -   [Thread::getCurrentThread](thread.getcurrentthread.md) \\- Ідентифікація\n    -   [Thread::getCurrentThreadId](thread.getcurrentthreadid.md) \\- Ідентифікація\n    -   [Thread::getThreadId](thread.getthreadid.md) \\- Ідентифікація\n    -   [Thread::isJoined](thread.isjoined.md)— Визначення стану\n    -   [Thread::isStarted](thread.isstarted.md)— Визначення стану\n    -   [Thread::join](thread.join.md) \\- Синхронізація\n    -   [Thread::start](thread.start.md) \\- Виконання\n-   [Worker](class.worker.md) \\- Клас Worker\n    -   [Worker::collect](worker.collect.md)— Зібрати посилання на завершені завдання\n    -   [Worker::getStacked](worker.getstacked.md)— Повертає поточний розмір стека\n    -   [Worker::isShutdown](worker.isshutdown.md)— Визначення стану\n    -   [Worker::shutdown](worker.shutdown.md) \\- Зупинити Worker\n    -   [Worker::stack](worker.stack.md) \\- Покласти завдання на стек\n    -   [Worker::unstack](worker.unstack.md)— Забрати завдання зі стека\n-   [Collectable](class.collectable.md) \\- Інтерфейс Collectable\n    -   [Collectable::isGarbage](collectable.isgarbage.md)— Визначає, чи позначений об'єкт як сміття\n-   [Pool](class.pool.md) \\- Клас Pool\n    -   [Pool::collect](pool.collect.md)— Збирає посилання на виконані завдання\n    -   [Pool::\\_\\_construct](pool.construct.md) \\- Створює новий пул воркерів\n    -   [Pool::resize](pool.resize.md) \\- Змінює розмір пулу\n    -   [Pool::shutdown](pool.shutdown.md) \\- Вимикає всі воркери\n    -   [Pool::submit](pool.submit.md) \\- Відправляє об'єкт на виконання\n    -   [Pool::submitTo](pool.submitTo.md)— Надсилає завдання конкретному воркеру для виконання\n-   [Volatile](class.volatile.md) \\- Клас Volatile\n","title":"pthreads","contentType":2,"navigation":[{"parallel-sync.invoke.md":"« parallel\\\\Sync::\\_\\_invoke"},{"intro.pthreads.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.fileprocess.process.md":"Модулі для керування процесами програм"}]}},"__N_SSG":true}