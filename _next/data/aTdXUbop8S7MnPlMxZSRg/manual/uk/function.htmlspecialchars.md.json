{"pageProps":{"page":{"slug":"function.htmlspecialchars.md","content":"# htmlspecialchars\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nhtmlspecialchars - Перетворює спеціальні символи в HTML-сутності\n\n### Опис\n\n```methodsynopsis\nhtmlspecialchars(    string $string,    int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401,    ?string $encoding = null,    bool $double_encode = true): string\n```\n\nУ HTML деякі символи мають особливий зміст і мають бути представлені у вигляді HTML-сутностей, щоб зберегти їх значення. Ця функція повертає рядок, над яким проведено ці перетворення. Якщо вам потрібно перетворити всі можливі сутності, використовуйте [htmlentities()](function.mdentities.md)\n\nЯкщо вхідний рядок, переданий у цю функцію та результуючий документ, використовують однакове кодування символів, то цієї функції достатньо, щоб підготувати дані для вставки в більшість частин HTML-документа. Однак, якщо дані містять символи, не визначені в кодуванні символів результуючого документа і ви очікуєте збереження цих символів (як числові або іменовані сутності), то вам буде недостатньо цієї і [htmlentities()](function.mdentities.md) функцій (які лише перетворюють підрядки з відповідними сутностями). Необхідно використовувати функцію [mb\\_encode\\_numericentity()](function.mb-encode-numericentity.md)\n\n**Виробляються такі перетворення**\n\n| Символ | Замена |\n| --- | --- |\n| `&` (амперсанд) | `&amp;` |\n| `\"` (подвійні лапки) | `&quot;`, якщо не встановлено **`ENT_NOQUOTES`** |\n| `'` (одинарні лапки) | `&#039;`(для\\*\\*`ENT_HTML401`**) или`&apos;`(для**`ENT_XML1`\\*\\* **`ENT_XHTML`** або **`ENT_HTML5`**), але тільки якщо встановлена **`ENT_QUOTES`** |\n| `<` (менше) | `&lt;` |\n| `>` (більше) | `&gt;` |\n\n### Список параметрів\n\n`string`\n\nКонвертований рядок (string).\n\n`flags`\n\nБітова маска з вказаних нижче прапорів, що визначають режим обробки лапок, некоректних кодових послідовностей і тип документа, що використовується. За замовчуванням використовується `ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401`\n\n**Доступні значення параметра `flags`**\n\n| Название константы | Опис |\n| --- | --- |\n| **`ENT_COMPAT`** | Перетворює подвійні лапки, одинарні лапки не змінюються. |\n| **`ENT_QUOTES`** | Перетворює як подвійні, і одинарні лапки. |\n| **`ENT_NOQUOTES`** | Залишає без зміни як подвійні, так і одинарні лапки. |\n| **`ENT_IGNORE`** | Без будь-яких повідомлень відкидає некоректні кодові послідовності замість повернення порожнього рядка. Використання цього прапора не рекомендується, оскільки це може призвести до [» негативних наслідків, пов'язаних з безпекою](http://unicode.org/reports/tr36/#Deletion_of_Noncharacters) |\n| **`ENT_SUBSTITUTE`** | Замінює некоректні кодові послідовності символом заміни Юнікоду U+FFFD у разі використання UTF-8 або при використанні іншого кодування, замість повернення порожнього рядка. |\n| **`ENT_DISALLOWED`** | Замінює неправильні коди символів для заданого типу документа символом заміни юнікоду U+FFFD (UTF-8) або (при використанні іншого кодування) замість того, щоб залишати все як є. Це може бути корисним, наприклад, для того, щоб переконатися у формальній правильності XML-документів із вбудованим зовнішнім контентом. |\n| **`ENT_HTML401`** | Обробка коду відповідно до HTML 4.01. |\n| **`ENT_XML1`** | Обробка коду відповідно до XML 1. |\n| **`ENT_XHTML`** | Обробка коду відповідно до XHTML. |\n| **`ENT_HTML5`** | Обробка коду відповідно до HTML 5. |\n\n`encoding`\n\nНеобов'язковий аргумент, що визначає кодування, яке використовується при конвертації символів.\n\nЕсли не указан, то значение по умолчанию для`encoding` залежить від конфігураційної опції [default\\_charset](ini.core.md#ini.default-charset)\n\nХоча цей аргумент є технічно необов'язковим, рекомендується вказати правильне значення для вашого коду, опція конфігурації [default\\_charset](ini.core.md#ini.default-charset) може бути задана неправильно для вхідних даних.\n\nДля цілей цієї функції кодування `ISO-8859-1` `ISO-8859-15` `UTF-8` `cp866` `cp1251` `cp1252`и`KOI8-R` є практично еквівалентними, припускаючи те, що сам рядок `string` містить коректні символи у зазначеному кодуванні, то символи, що змінюються **htmlspecialchars()**, залишаться на тих же місцях у всіх цих кодуваннях.\n\nПідтримуються такі кодування:\n\n**Підтримувані кодування**\n\n| Кодировка | Псевдонимы | Опис |\n| --- | --- | --- |\n| ISO-8859-1 | ISO8859-1 | Західноєвропейська Latin-1. |\n| ISO-8859-5 | ISO8859-5 | Рідко використовуване кириличне кодування (Latin/Cyrillic). |\n| ISO-8859-15 | ISO8859-15 | Західноєвропейська Latin-9. Додає символ євро, французькі та фінські літери до кодування Latin-1 (ISO-8859-1). |\n| UTF-8 |  | 8-бітна Unicode, сумісна з ASCII. |\n| cp866 | ibm866, 866 | Кирилічна кодування, що застосовується в DOS. |\n| cp1251 | Windows-1251, win-1251, 1251 | Кирилічна кодування, що використовується у Windows. |\n| cp1252 | Windows-1252, 1252 | Західно-європейське кодування, що використовується у Windows. |\n| KOI8-R | koi8-ru, koi8r | Російське кодування. |\n| BIG5 | 950 | Традиційний китайський, застосовується переважно на Тайвані. |\n| GB2312 | 936 | Спрощена китайська, стандартне національне кодування. |\n| BIG5-HKSCS |  | Розширена Big5, що застосовується в Гонконгу. |\n| Shift\\_JIS | SJIS, SJIS-win, cp932, 932 | Японське кодування. |\n| EUC-JP | EUCJP, eucJP-win | Японське кодування. |\n| MacRoman |  | Кодування, яке використовується в Mac OS. |\n| `''` |  | Порожній рядок активує режим визначення кодування із файлу скрипта (Zend multibyte), [default\\_charset](ini.core.md#ini.default-charset) та поточної локалі (дивіться [nl\\_langinfo()](function.nl-langinfo.md) і [setlocale()](function.setlocale.md)) у зазначеному порядку. Не рекомендується використовувати. |\n\n> **Зауваження**: Інші кодування не підтримуються, замість них буде застосовано кодування за замовчуванням та згенеровано попередження.\n\n`double_encode`\n\nЯкщо параметр `double_encode` вимкнений, то PHP не перетворюватиме існуючі html-сутності. За замовчуванням все перетворюється без обмежень.\n\n### Значення, що повертаються\n\nПеретворений рядок (string).\n\nЯкщо вхідний рядок `string` містить неправильну послідовність символів у зазначеному кодуванні `encoding`, то повертатиметься порожній рядок у випадку, якщо прапори **`ENT_IGNORE`** або **`ENT_SUBSTITUTE`** не встановлені.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Значення за промовчанням `flags` змінено з **`ENT_COMPAT`**на**`ENT_QUOTES`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** htmlspecialchars()\\*\\*\\*\\*\n\n```php\n<?php\n$new = htmlspecialchars(\"<a href='test'>Test</a>\", ENT_QUOTES);\necho $new; // &lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Зверніть увагу, що функція не робить інших перетворень, крім описаних вище. Для перетворення всіх HTML-сутностей використовуйте [htmlentities()](function.mdentities.md)\n\n> **Зауваження** :\n> \n> У разі неоднозначного значення `flags`, застосовуються такі правила:\n> \n> -   Якщо одночасно відсутні константи\\*\\*`ENT_COMPAT`\\*\\* **`ENT_QUOTES`** і **`ENT_NOQUOTES`**, за умовчанням буде використовуватися\\*\\*`ENT_NOQUOTES`\\*\\*\n> -   Якщо одночасно присутні дві або більше констант\\*\\*`ENT_COMPAT`\\*\\* **`ENT_QUOTES`** і **`ENT_NOQUOTES`** **`ENT_QUOTES`**матиме більший пріоритет. Наступна за пріоритетом буде**`ENT_COMPAT`**\n> -   Якщо немає жодної з констант\\*\\*`ENT_HTML401`\\*\\* **`ENT_HTML5`** **`ENT_XHTML`** і **`ENT_XML1`**, за умовчанням буде використовуватися\\*\\*`ENT_HTML401`\\*\\*\n> -   Якщо одночасно присутні дві або більше констант\\*\\*`ENT_HTML401`\\*\\* **`ENT_HTML5`** **`ENT_XHTML`** **`ENT_XML1`**, то пріоритет буде таким:**`ENT_HTML5`**, потім\\*\\*`ENT_XHTML`\\*\\* **`ENT_XML1`**, а потім\\*\\*`ENT_HTML401`\\*\\*\n> -   Якщо одночасно присутні дві або більше констант\\*\\*`ENT_DISALLOWED`\\*\\* **`ENT_IGNORE`** **`ENT_SUBSTITUTE`**, найвищий пріоритет буде мати\\*\\*`ENT_IGNORE`**, а наступна за нею**`ENT_SUBSTITUTE`\\*\\*\n\n### Дивіться також\n\n-   [get\\_html\\_translation\\_table()](function.get-html-translation-table.md) \\- Повертає таблицю перетворень, використовувану функціями htmlspecialchars і htmlentities\n-   [htmlspecialchars\\_decode()](function.mdspecialchars-decode.md) \\- Перетворює спеціальні HTML-сутності назад на символи\n-   [strip\\_tags()](function.strip-tags.md) \\- Видаляє теги HTML та PHP з рядка\n-   [htmlentities()](function.mdentities.md) \\- Перетворює всі можливі символи у відповідні HTML-сутності\n-   [nl2br()](function.nl2br.md) \\- Вставляє HTML код розриву рядка перед кожним перекладом рядка\n","title":"htmlspecialchars","contentType":2,"navigation":[{"function.mdspecialchars-decode.md":"« htmlspecialchars\\_decode"},{"function.implode.md":"implode »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}