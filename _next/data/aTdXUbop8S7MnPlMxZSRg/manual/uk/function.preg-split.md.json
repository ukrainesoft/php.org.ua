{"pageProps":{"page":{"slug":"function.preg-split.md","content":"# preg\\_split\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\npreg\\_split — Розбиває рядок за регулярним виразом\n\n### Опис\n\n```methodsynopsis\npreg_split(    string $pattern,    string $subject,    int $limit = -1,    int $flags = 0): array|false\n```\n\nРозбиває рядок за регулярним виразом.\n\n### Список параметрів\n\n`pattern`\n\nРядок містить шаблон пошуку.\n\n`subject`\n\nВхідний рядок.\n\n`limit`\n\nЯкщо вказано, функція повертає не більше ніж `limit` підрядок. Решту рядка буде повернуто в останній підрядці. Спеціальне значення `limit`, рівне -1 або 0, має на увазі відсутність обмеження.\n\n`flags`\n\n`flags` може бути будь-якою комбінацією наступних прапорів (об'єднаних за допомогою побітового оператора ):\n\n**`PREG_SPLIT_NO_EMPTY`**\n\nЯкщо вказано цей прапор, функція **preg\\_split()** поверне лише непусті підрядки.\n\n**`PREG_SPLIT_DELIM_CAPTURE`**\n\nЯкщо вказано цей прапор, вираз, укладений у круглі дужки в шаблоні, що розділяє, також витягується з заданого рядка і повертається функцією.\n\n**`PREG_SPLIT_OFFSET_CAPTURE`**\n\nЯкщо зазначений цей прапор, для кожного знайденого підрядка буде вказано її позицію у вихідному рядку. Необхідно пам'ятати, що цей прапор змінює формат масиву, що повертається: кожен елемент міститиме масив, що містить в індексі з номером знайдений підрядок, а зміщення цього підрядка у параметрі `subject`\\- в индексе\n\n### Значення, що повертаються\n\nПовертає масив, що складається з підрядків заданого рядка `subject`, яка розбита за межами, що відповідають шаблону `pattern`или\\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nЯкщо переданий шаблон регулярного виразу не компілюється в допустимий регулярний вираз, видається помилка рівня **`E_WARNING`**\n\n### Приклади\n\n**Приклад #1**preg\\_split()**Приклад: Получение подстрок из заданного текста**\n\n```php\n<?php\n// разбиваем строку по произвольному числу запятых и пробельных символов,\n// которые включают в себя  \" \", \\r, \\t, \\n и \\f\n$keywords = preg_split(\"/[\\s,]+/\", \"hypertext language, programming\");\nprint_r($keywords);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => hypertext\n    [1] => language\n    [2] => programming\n)\n```\n\n**Приклад #2 Розбиваємо рядок на складові символи**\n\n```php\n<?php\n$str = 'string';\n$chars = preg_split('//', $str, -1, PREG_SPLIT_NO_EMPTY);\nprint_r($chars);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => s\n    [1] => t\n    [2] => r\n    [3] => i\n    [4] => n\n    [5] => g\n)\n```\n\n**Приклад #3 Розбиваємо рядок із зазначенням усунення для кожного зі знайдених підрядків**\n\n```php\n<?php\n$str = 'hypertext language programming';\n$chars = preg_split('/ /', $str, -1, PREG_SPLIT_OFFSET_CAPTURE);\nprint_r($chars);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [0] => Array\n        (\n            [0] => hypertext\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => language\n            [1] => 10\n        )\n\n    [2] => Array\n        (\n            [0] => programming\n            [1] => 19\n        )\n\n)\n```\n\n### Примітки\n\n**Підказка**\n\nЯкщо вам не потрібна потужність регулярних виразів, ви можете вибрати швидші (хоч і прості) альтернативи на кшталт [explode()](function.explode.md) або [str\\_split()](function.str-split.md)\n\n**Підказка**\n\nЯкщо відповідностей не знайшлося, то повертається масив з єдиним елементом рівним усьому рядку.\n\n### Дивіться також\n\n-   \" [Регулярні вирази PCRE](pcre.pattern.md) \"\n-   [preg\\_quote()](function.preg-quote.md) \\- Екранує символи у регулярних виразах\n-   [implode()](function.implode.md) \\- Об'єднує елементи масиву в рядок\n-   [preg\\_match()](function.preg-match.md) \\- Виконує перевірку на відповідність регулярному виразу\n-   [preg\\_match\\_all()](function.preg-match-all.md) \\- Виконує глобальний пошук шаблону у рядку\n-   [preg\\_replace()](function.preg-replace.md) \\- Виконує пошук та заміну за регулярним виразом\n-   [preg\\_last\\_error()](function.preg-last-error.md) \\- Повертає код помилки виконання останнього регулярного вираження PCRE\n","title":"preg\\_split","contentType":2,"navigation":[{"function.preg-replace.md":"« preg\\_replace"},{"book.ssdeep.md":"ssdeep »"},{"index.md":"PHP Manual"},{"ref.pcre.md":"Функції PCRE"}]}},"__N_SSG":true}