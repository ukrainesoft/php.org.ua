{"pageProps":{"page":{"slug":"class.reflectionmethod.md","content":"# Клас ReflectionMethod\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nКласс**ReflectionMethod** повідомляє інформацію про методи.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class ReflectionMethod\n    \n\n    \n     extends\n      ReflectionFunctionAbstract\n     {\n\n\n    /* Константы */\n    \n     public\n     const\n     int\n      IS_STATIC;\n\n    public\n     const\n     int\n      IS_PUBLIC;\n\n    public\n     const\n     int\n      IS_PROTECTED;\n\n    public\n     const\n     int\n      IS_PRIVATE;\n\n    public\n     const\n     int\n      IS_ABSTRACT;\n\n    public\n     const\n     int\n      IS_FINAL;\n\n\n    /* Свойства */\n    public\n     string\n      $class;\n\n\n    /* Наследуемые свойства */\n    public\n     string\n      $name;\n\n\n    /* Методы */\n    \n   public __construct(object|string $objectOrMethod, string $method)\npublic __construct(string $classMethod)\n\n    public static createFromMethodName(string $method): static\npublic static export(string $class, string $name, bool $return = false): string\npublic getClosure(?object $object = null): Closure\npublic getDeclaringClass(): ReflectionClass\npublic getModifiers(): int\npublic getPrototype(): ReflectionMethod\npublic hasPrototype(): bool\npublic invoke(?object $object, mixed ...$args): mixed\npublic invokeArgs(?object $object, array $args): mixed\npublic isAbstract(): bool\npublic isConstructor(): bool\npublic isDestructor(): bool\npublic isFinal(): bool\npublic isPrivate(): bool\npublic isProtected(): bool\npublic isPublic(): bool\npublic setAccessible(bool $accessible): void\npublic __toString(): string\n\n\n    /* Наследуемые методы */\n    private ReflectionFunctionAbstract::__clone(): void\npublic ReflectionFunctionAbstract::getAttributes(?string $name = null, int $flags = 0): array\npublic ReflectionFunctionAbstract::getClosureScopeClass(): ?ReflectionClass\npublic ReflectionFunctionAbstract::getClosureThis(): ?object\npublic ReflectionFunctionAbstract::getClosureUsedVariables(): array\npublic ReflectionFunctionAbstract::getDocComment(): string|false\npublic ReflectionFunctionAbstract::getEndLine(): int|false\npublic ReflectionFunctionAbstract::getExtension(): ?ReflectionExtension\npublic ReflectionFunctionAbstract::getExtensionName(): string|false\npublic ReflectionFunctionAbstract::getFileName(): string|false\npublic ReflectionFunctionAbstract::getName(): string\npublic ReflectionFunctionAbstract::getNamespaceName(): string\npublic ReflectionFunctionAbstract::getNumberOfParameters(): int\npublic ReflectionFunctionAbstract::getNumberOfRequiredParameters(): int\npublic ReflectionFunctionAbstract::getParameters(): array\npublic ReflectionFunctionAbstract::getReturnType(): ?ReflectionType\npublic ReflectionFunctionAbstract::getShortName(): string\npublic ReflectionFunctionAbstract::getStartLine(): int|false\npublic ReflectionFunctionAbstract::getStaticVariables(): array\npublic ReflectionFunctionAbstract::getTentativeReturnType(): ?ReflectionType\npublic ReflectionFunctionAbstract::hasReturnType(): bool\npublic ReflectionFunctionAbstract::hasTentativeReturnType(): bool\npublic ReflectionFunctionAbstract::inNamespace(): bool\npublic ReflectionFunctionAbstract::isClosure(): bool\npublic ReflectionFunctionAbstract::isDeprecated(): bool\npublic ReflectionFunctionAbstract::isGenerator(): bool\npublic ReflectionFunctionAbstract::isInternal(): bool\npublic ReflectionFunctionAbstract::isStatic(): bool\npublic ReflectionFunctionAbstract::isUserDefined(): bool\npublic ReflectionFunctionAbstract::isVariadic(): bool\npublic ReflectionFunctionAbstract::returnsReference(): bool\nabstract public ReflectionFunctionAbstract::__toString(): void\n\n   }\n```\n\n## Властивості\n\nname\n\nІм'я методу\n\nclass\n\nІм'я класу\n\n## Обумовлені константи\n\n## Модифікатори ReflectionMethod\n\n**`ReflectionMethod::IS_STATIC`**\n\nВказує, що це статичний метод. До PHP 7.4.0, значення було\n\n**`ReflectionMethod::IS_PUBLIC`**\n\nВказує, що це загальнодоступний метод. До PHP 7.4.0, значення було `256`\n\n**`ReflectionMethod::IS_PROTECTED`**\n\nВказує, що це захищений метод. До PHP 7.4.0, значення було `512`\n\n**`ReflectionMethod::IS_PRIVATE`**\n\nВказує, що це закритий метод. До PHP 7.4.0, значення було `1024`\n\n**`ReflectionMethod::IS_ABSTRACT`**\n\nВказує, що це абстрактний метод. До PHP 7.4.0, значення було\n\n**`ReflectionMethod::IS_FINAL`**\n\nВказує, що це остаточний метод. До PHP 7.4.0, значення було `4`\n\n> **Зауваження** :\n> \n> Ці константи можуть змінюватися від версії до версії PHP. Рекомендується завжди використовувати константи і не покладатися безпосередньо на значення.\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Метод[ReflectionMethod::export()](reflectionmethod.export.md)був видалений. |\n\n## Зміст\n\n-   [ReflectionMethod::\\_\\_construct](reflectionmethod.construct.md) \\- Конструктор класу ReflectionMethod\n-   [ReflectionMethod::createFromMethodName](reflectionmethod.createfrommethodname.md)— Створює об'єкт класу ReflectionMethod\n-   [ReflectionMethod::export](reflectionmethod.export.md) \\- Експорт відбитого методу\n-   [ReflectionMethod::getClosure](reflectionmethod.getclosure.md)— Повертає динамічно створене замикання для методу\n-   [ReflectionMethod::getDeclaringClass](reflectionmethod.getdeclaringclass.md)— Отримує клас, що оголошує відбитий метод\n-   [ReflectionMethod::getModifiers](reflectionmethod.getmodifiers.md)— Отримує модифікатори методу\n-   [ReflectionMethod::getPrototype](reflectionmethod.getprototype.md)— Отримує прототип методу (якщо такий є)\n-   [ReflectionMethod::hasPrototype](reflectionmethod.hasprototype.md)— Визначає, чи має метод прототип\n-   [ReflectionMethod::invoke](reflectionmethod.invoke.md) \\- Виклик\n-   [ReflectionMethod::invokeArgs](reflectionmethod.invokeargs.md) \\- Виклик методу з передачею аргументів масивом\n-   [ReflectionMethod::isAbstract](reflectionmethod.isabstract.md)— Перевіряє, чи є метод абстрактним\n-   [ReflectionMethod::isConstructor](reflectionmethod.isconstructor.md)— Перевіряє, чи є метод конструктором\n-   [ReflectionMethod::isDestructor](reflectionmethod.isdestructor.md)— Перевіряє, чи є метод деструктором\n-   [ReflectionMethod::isFinal](reflectionmethod.isfinal.md)— Перевіряє, чи є метод остаточним\n-   [ReflectionMethod::isPrivate](reflectionmethod.isprivate.md)— Перевіряє, чи є метод закритим\n-   [ReflectionMethod::isProtected](reflectionmethod.isprotected.md)— Перевіряє, чи метод захищений\n-   [ReflectionMethod::isPublic](reflectionmethod.ispublic.md)— Перевіряє, чи є метод загальнодоступним\n-   [ReflectionMethod::setAccessible](reflectionmethod.setaccessible.md)— Робить метод доступним\n-   [ReflectionMethod::\\_\\_function toString() { \\[native code\\] }](reflectionmethod.tostring.md)— Повертає рядкову виставу об'єкта ReflectionMethod\n","title":"Клас ReflectionMethod","contentType":2,"navigation":[{"reflectionfunctionabstract.tostring.md":"« ReflectionFunctionAbstract::\\_\\_function toString() { [native code] }"},{"reflectionmethod.construct.md":"ReflectionMethod::\\_\\_construct »"},{"index.md":"PHP Manual"},{"book.reflection.md":"Reflection"}]}},"__N_SSG":true}