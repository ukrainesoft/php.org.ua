{"pageProps":{"page":{"slug":"regexiterator.accept.md","content":"# RegexIterator::accept\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nRegexIterator::accept — Перевірка відповідності регулярному виразу\n\n### Опис\n\n```methodsynopsis\npublic RegexIterator::accept(): bool\n```\n\nПеревіряє відповідність рядка `(string)`, яку повернув метод **RegexIterator::current()**(или**RegexIterator::key()**, если установлен флаг[RegexIterator::USE\\_KEY](class.regexiterator.md#regexiterator.constants.use-key)), регулярному виразу.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\n\\*\\*`true`\\*\\*якщо значення елемента відповідає регулярному виразу, **`false`** в іншому випадку.\n\n### Приклади\n\n**Приклад #1 Приклад використання** RegexIterator::accept()\\*\\*\\*\\*\n\nУ цьому прикладі буде здійснюватись навігація тільки по тих елементах, значення яких відповідають регулярному виразу.\n\n```php\n<?php\n$names = new ArrayIterator(array('Ann', 'Bob', 'Charlie', 'David'));\n$filter = new RegexIterator($names, '/^[B-D]/');\nforeach ($filter as $name) {\n    echo $name . PHP_EOL;\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nBob\nCharlie\nDavid\n```\n\n### Дивіться також\n\n-   [Константи RegexIterator](class.regexiterator.md#regexiterator.constants)\n-   [RegexIterator::setFlags()](regexiterator.setflags.md) \\- Установка прапорів\n","title":"RegexIterator::accept","contentType":2,"navigation":[{"class.regexiterator.md":"« RegexIterator"},{"regexiterator.construct.md":"RegexIterator::\\_\\_construct »"},{"index.md":"PHP Manual"},{"class.regexiterator.md":"RegexIterator"}]}},"__N_SSG":true}