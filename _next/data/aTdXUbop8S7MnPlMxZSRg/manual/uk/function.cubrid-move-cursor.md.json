{"pageProps":{"page":{"slug":"function.cubrid-move-cursor.md","content":"# cubrid\\_move\\_cursor\n\n(PECL CUBRID >= 8.3.0)\n\ncubrid\\_move\\_cursor — Переміщує курсор у результаті\n\n### Опис\n\n```methodsynopsis\ncubrid_move_cursor(resource $req_identifier, int $offset, int $origin = CUBRID_CURSOR_CURRENT): bool\n```\n\nФункция**cubrid\\_move\\_cursor()** використовується для переміщення поточного положення курсору `req_identifier`на значение, заданное в аргументе`offset`, в направлении, заданном в аргументе`origin`. Щоб встановити аргумент `origin`, Ви можете використовувати \\*\\*`CUBRID_CURSOR_FIRST`**для первой части результата,**`CUBRID_CURSOR_CURRENT`**для текущего местоположения результата или**`CUBRID_CURSOR_LAST`**для последней части результата. Если аргумент`origin`не указан явно, тогда функция использует**`CUBRID_CURSOR_CURRENT`\\*\\*в качестве значения по умолчанию.\n\nЯкщо значення діапазону переміщення курсору перевищує допустиму межу, то курсор переміщається в наступне місце після допустимого діапазону курсору. Наприклад, якщо ви перемістите 20 одиниць в результаті розміром 10, то курсор переміститься на 11-е місце і поверне **`CUBRID_NO_MORE_DATA`**\n\n### Список параметрів\n\n`req_identifier`\n\nІдентифікатор запиту.\n\n`offset`\n\nКількість одиниць, куди потрібно перемістити курсор.\n\n`origin`\n\nМісце, з якого ви бажаєте перемістити курсор: **`CUBRID_CURSOR_FIRST`** **`CUBRID_CURSOR_CURRENT`** або **`CUBRID_CURSOR_LAST`**\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_move\\_cursor()\\*\\*\\*\\*\n\n```php\n<?php\n$conn = cubrid_connect(\"127.0.0.1\", 33000, \"demodb\", \"dba\");\n\n$req = cubrid_execute($conn, \"SELECT * FROM code\");\ncubrid_move_cursor($req, 1, CUBRID_CURSOR_LAST);\n\n$result = cubrid_fetch_row($req);\nvar_dump($result);\n\ncubrid_move_cursor($req, 1, CUBRID_CURSOR_FIRST);\n$result = cubrid_fetch_row($req);\nvar_dump($result);\n\ncubrid_move_cursor($req, 1, CUBRID_CURSOR_CURRENT);\n$result = cubrid_fetch_row($req);\nvar_dump($result);\n\ncubrid_close_request($req);\ncubrid_disconnect($conn);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(2) {\n  [0]=>\n  string(1) \"G\"\n  [1]=>\n  string(4) \"Gold\"\n}\narray(2) {\n  [0]=>\n  string(1) \"X\"\n  [1]=>\n  string(5) \"Mixed\"\n}\narray(2) {\n  [0]=>\n  string(1) \"M\"\n  [1]=>\n  string(3) \"Man\"\n}\n```\n\n### Дивіться також\n\n-   [cubrid\\_execute()](function.cubrid-execute.md) \\- Виконує підготовлений SQL-оператор\n","title":"cubrid\\_move\\_cursor","contentType":2,"navigation":[{"function.cubrid-lock-write.md":"« cubrid\\_lock\\_write"},{"function.cubrid-next-result.md":"cubrid\\_next\\_result »"},{"index.md":"PHP Manual"},{"ref.cubrid.md":"Функції CUBRID"}]}},"__N_SSG":true}