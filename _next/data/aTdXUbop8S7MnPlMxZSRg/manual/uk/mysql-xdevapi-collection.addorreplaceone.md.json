{"pageProps":{"page":{"slug":"mysql-xdevapi-collection.addorreplaceone.md","content":"# Collection::addOrReplaceOne\n\n(No version information available, might only be in Git)\n\nCollection::addOrReplaceOne — Додає або замінює документ колекції\n\n### Опис\n\n```methodsynopsis\npublic mysql_xdevapi\\Collection::addOrReplaceOne(string $id, string $doc): mysql_xdevapi\\Result\n```\n\nДодає новий документ або замінює існуючий.\n\nОсь кілька сценаріїв для цього методу:\n\n-   Якщо ні ідентифікатор, ні якесь унікальне значення ключа не конфліктують з будь-яким документом у колекції, цей документ додається.\n    \n-   Якщо ідентифікатор не відповідає жодному документу, але одне або кілька унікальних значень ключів конфліктують із документом у колекції, видається помилка.\n    \n-   Якщо ідентифікатор відповідає існуючому документу та унікальні ключі не визначені для колекції, документ замінюється.\n    \n-   Якщо ідентифікатор відповідає існуючому документу, або всі унікальні ключі в документі заміни відповідають цьому документу або не конфліктують з іншими документами в колекції, документ замінюється.\n    \n-   Якщо ідентифікатор відповідає існуючому документу, а один або кілька унікальних ключів відповідають документу, який відрізняється від колекції, видається помилка.\n    \n\n### Список параметрів\n\n`id`\n\nІдентифікатор фільтру. Якщо ідентифікатор або інше поле з унікальним індексом вже існує в колекції, він оновить відповідний документ.\n\nЗа замовчуванням цей ідентифікатор автоматично генерується MySQL Server при додаванні запису і згадується як поле з ім'ям '\\_id'.\n\n`doc`\n\nЦе документ для додавання або заміни, що є рядком JSON.\n\n### Значення, що повертаються\n\nОб'єкт Result.\n\n### Приклади\n\n**Приклад #1 Приклад використання** mysql\\_xdevapi\\\\Collection::addOrReplaceOne()\\*\\*\\*\\*\n\n```php\n<?php\n$session = mysql_xdevapi\\getSession(\"mysqlx://user:password@localhost\");\n$session->sql(\"DROP DATABASE IF EXISTS addressbook\")->execute();\n$session->sql(\"CREATE DATABASE addressbook\")->execute();\n\n$schema = $session->getSchema(\"addressbook\");\n$create = $schema->createCollection(\"people\");\n\n$collection = $schema->getCollection(\"people\");\n\n// Использование add()\n$result = $collection->add('{\"name\": \"Wilma\", \"age\": 23, \"job\": \"Teacher\"}')->execute();\n\n// Использование addOrReplaceOne()\n// Примечания: мы передаём известное значение _id\n$result = $collection->addOrReplaceOne('00005b6b53610000000000000056', '{\"name\": \"Fred\",  \"age\": 21, \"job\": \"Construction\"}');\n\n?>\n```\n","title":"Collection::addOrReplaceOne","contentType":2,"navigation":[{"mysql-xdevapi-collection.add.md":"« Collection::add"},{"mysql-xdevapi-collection.construct.md":"Collection::\\_\\_construct »"},{"index.md":"PHP Manual"},{"class.mysql-xdevapi-collection.md":"mysql\\_xdevapi\\\\Collection"}]}},"__N_SSG":true}