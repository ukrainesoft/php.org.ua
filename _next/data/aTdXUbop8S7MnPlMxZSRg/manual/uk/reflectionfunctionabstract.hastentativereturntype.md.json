{"pageProps":{"page":{"slug":"reflectionfunctionabstract.hastentativereturntype.md","content":"# ReflectionFunctionAbstract::hasTentativeReturnType\n\n(PHP 8 >= 8.1.0)\n\nReflectionFunctionAbstract::hasTentativeReturnType — Визначає, чи є у функції попередній тип значення, що повертається\n\n### Опис\n\n```methodsynopsis\npublic ReflectionFunctionAbstract::hasTentativeReturnType(): bool\n```\n\nВизначає, чи є у функції попередній тип значення, що повертається.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо у функції є попередній тип значення, що повертається, в іншому випадку повертає **`false`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionFunctionAbstract::hasTentativeReturnType()\\*\\*\\*\\*\n\n```php\n<?php\n\n$method = new ReflectionMethod(\\ArrayAccess::class, 'offsetGet');\nvar_dump($method->hasTentativeReturnType());\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\n```\n\n### Дивіться також\n\n-   [ReflectionFunctionAbstract::getTentativeReturnType()](reflectionfunctionabstract.gettentativereturntype.md) \\- Повертає попередній тип значення, що повертається, пов'язаний з функцією\n-   [ReflectionFunctionAbstract::hasReturnType()](reflectionfunctionabstract.hasreturntype.md) \\- Перевіряє, чи має функція оголошений тип значення, що повертається\n-   [Сумісність типів значень, що повертаються, з внутрішніми класами](language.oop5.inheritance.md#language.oop5.inheritance.internal-classes)\n","title":"ReflectionFunctionAbstract::hasTentativeReturnType","contentType":2,"navigation":[{"reflectionfunctionabstract.hasreturntype.md":"« ReflectionFunctionAbstract::hasReturnType"},{"reflectionfunctionabstract.innamespace.md":"ReflectionFunctionAbstract::inNamespace »"},{"index.md":"PHP Manual"},{"class.reflectionfunctionabstract.md":"ReflectionFunctionAbstract"}]}},"__N_SSG":true}