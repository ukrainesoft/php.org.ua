{"pageProps":{"page":{"slug":"class.closure.md","content":"# Клас Closure\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\n## Вступ\n\nКлас, який використовується для створення [анонімних функцій](functions.anonymous.md)\n\nАнонімні функції видають об'єкти цього. Клас отримав методи, що дозволяють контролювати анонімну функцію після її створення.\n\nКрім методів, описаних тут, цей клас також має метод `__invoke`. Цей метод необхідний лише сумісності з іншими класами, у яких реалізований [магічний виклик](language.oop5.magic.md#language.oop5.magic.invoke), оскільки цей метод не використовується під час виклику функції.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     final\n     class Closure\n     {\n\n    /* Методы */\n    \n   private __construct()\n\n    public static bind(Closure $closure, ?object $newThis, object|string|null $newScope = \"static\"): ?Closure\npublic bindTo(?object $newThis, object|string|null $newScope = \"static\"): ?Closure\npublic call(object $newThis, mixed ...$args): mixed\npublic static fromCallable(callable $callback): Closure\n\n   }\n```\n\n## Зміст\n\n-   [Closure::\\_\\_construct](closure.construct.md) \\- Конструктор, який забороняє створення екземпляра\n-   [Closure::bind](closure.bind.md)— Дублює замикання із зазначенням конкретного зв'язаного об'єкта та області видимості класу\n-   [Closure::bindTo](closure.bindto.md)— Дублює замикання із зазначенням пов'язаного об'єкта та області видимості класу\n-   [Closure::call](closure.call.md)— Зв'язує та запускає замикання\n-   [Closure::fromCallable](closure.fromcallable.md)— Конвертує callable у замикання\n","title":"Клас Closure","contentType":2,"navigation":[{"serializable.unserialize.md":"« Serializable::unserialize"},{"closure.construct.md":"Closure::\\_\\_construct »"},{"index.md":"PHP Manual"},{"reserved.interfaces.md":"Вбудовані інтерфейси та класи"}]}},"__N_SSG":true}