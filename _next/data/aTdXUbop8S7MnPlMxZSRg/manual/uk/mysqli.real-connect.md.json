{"pageProps":{"page":{"slug":"mysqli.real-connect.md","content":"# mysqli::real\\_connect\n\n# mysqli\\_real\\_connect\n\n(PHP 5, PHP 7, PHP 8)\n\nmysqli::real\\_connect -- mysqli\\_real\\_connect — Встановлює з'єднання з сервером mysql\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic mysqli::real_connect(    ?string $hostname = null,    ?string $username = null,    ?string $password = null,    ?string $database = null,    ?int $port = null,    ?string $socket = null,    int $flags = 0): bool\n```\n\nПроцедурний стиль\n\n```methodsynopsis\nmysqli_real_connect(    mysqli $mysql,    ?string $hostname = null,    ?string $username = null,    ?string $password = null,    ?string $database = null,    ?int $port = null,    ?string $socket = null,    int $flags = 0): bool\n```\n\nВстановлює з'єднання із СУБД MySQL.\n\nЦя функція відрізняється від [mysqli\\_connect()](function.mysqli-connect.md) :\n\n-   Для роботи\\*\\*mysqli\\_real\\_connect()\\*\\*необхідний дійсний об'єкт, створений функцією[mysqli\\_init()](mysqli.init.md)\n    \n-   За допомогою функції[mysqli\\_options()](mysqli.options.md)можна встановити різні настройки підключення.\n    \n-   Параметр`flags`\n    \n\n### Список параметрів\n\n`mysql`\n\nТільки для процедурного стилю: об'єкт [mysqli](class.mysqli.md), який повернула функція [mysqli\\_connect()](function.mysqli-connect.md)или функция[mysqli\\_init()](mysqli.init.md)\n\n`hostname`\n\nМоже бути або ім'ям хоста, або IP-адресою. При передачі **`null`**, значение извлекается из[mysqli.default\\_host](mysqli.configuration.md#ini.mysqli.default-host). По можливості замість протоколу TCP/IP використовуватимуться канали. Протокол TCP/IP використовується, якщо вказано ім'я хоста і номер порту, наприклад, `localhost:3308`\n\n`username`\n\nІм'я користувача MySQL або \\*\\*`null`\\*\\*для принятия имени пользователя на основе ini-опции[mysqli.default\\_user](mysqli.configuration.md#ini.mysqli.default-user)\n\n`password`\n\nПароль MySQL или\\*\\*`null`\\*\\*для принятия пароля на основе ini-опции[mysqli.default\\_pw](mysqli.configuration.md#ini.mysqli.default-pw)\n\n`database`\n\nБаза даних за замовчуванням, яка буде використовуватися під час виконання запитів або **`null`**\n\n`port`\n\nНомер порту для спроби підключення до сервера MySQL або \\*\\*`null`\\*\\*для принятия порта на основе ini-опции[mysqli.default\\_port](mysqli.configuration.md#ini.mysqli.default-port)\n\n`socket`\n\nВказує номер порту для підключення до сервера MySQL.\n\n> **Зауваження** :\n> \n> Передача параметра`socket` явно не буде задавати тип з'єднання при підключенні до сервера MySQL. Те, як встановлюватиметься з'єднання з MySQL-сервером, визначається параметром `hostname`\n\n`flags`\n\nС помощью параметра`flags` можна встановити деякі налаштування з'єднання:\n\n**Прапори, що підтримуються**\n\n| Имя | Опис |\n| --- | --- |\n| **`MYSQLI_CLIENT_COMPRESS`** | Використовувати протокол стиснення |\n| **`MYSQLI_CLIENT_FOUND_ROWS`** | Повертати кількість рядків, що підійшли умовам вибірки, замість кількості порушених запитом рядків |\n| **`MYSQLI_CLIENT_IGNORE_SPACE`** | Допускати пробіли після назв функцій. Робить усі імена функцій зарезервованими словами. |\n| **`MYSQLI_CLIENT_INTERACTIVE`** | Допускати `interactive_timeout`секунд (вместо`wait_timeout`) простою, перш ніж закрити з'єднання |\n| **`MYSQLI_CLIENT_SSL`** | Використовувати SSL (шифрування) |\n| **`MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT`** | Аналогічно **`MYSQLI_CLIENT_SSL`**, але забороняє перевірку сертифіката SSL. Працює тільки з MySQL Native Driver та MySQL 5.6 та вище. |\n\n> **Зауваження** :\n> \n> З причин безпеки, прапор **`MULTI_STATEMENT`** не підтримується у PHP. Якщо потрібно виконувати мультизапити, використовуйте функцію [mysqli\\_multi\\_query()](mysqli.multi-query.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nЯкщо сповіщення про помилки mysqli включено (**`MYSQLI_REPORT_ERROR`**) та запитана операція не вдалася, видається попередження. Якщо, крім того, встановлено режим **`MYSQLI_REPORT_STRICT`**, натомість буде викинуто виняток [mysqli\\_sql\\_exception](class.mysqli-sql-exception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.4.0 | Усі параметри тепер припускають значення **`null`** |\n\n### Приклади\n\n**Приклад #1 Приклад використання** mysqli::real\\_connect()\\*\\*\\*\\*\n\nОб'єктно-орієнтований стиль\n\n```php\n<?php\n\n$mysqli = mysqli_init();\nif (!$mysqli) {\n    die('mysqli_init завершилась провалом');\n}\n\nif (!$mysqli->options(MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {\n    die('Установка MYSQLI_INIT_COMMAND завершилась провалом');\n}\n\nif (!$mysqli->options(MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {\n    die('Установка MYSQLI_OPT_CONNECT_TIMEOUT завершилась провалом');\n}\n\nif (!$mysqli->real_connect('localhost', 'my_user', 'my_password', 'my_db')) {\n    die('Ошибка подключения (' . mysqli_connect_errno() . ') '\n            . mysqli_connect_error());\n}\n\necho 'Выполнено... ' . $mysqli->host_info . \"\\n\";\n\n$mysqli->close();\n?>\n```\n\nОб'єктно-орієнтований стиль при розширенні класу mysqli\n\n```php\n<?php\n\nclass foo_mysqli extends mysqli {\n    public function __construct($host, $user, $pass, $db) {\n        parent::__construct();\n\n        if (!parent::options(MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {\n            die('Установка MYSQLI_INIT_COMMAND завершилась провалом');\n        }\n\n        if (!parent::options(MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {\n            die('Установка MYSQLI_OPT_CONNECT_TIMEOUT завершилась провалом');\n        }\n\n        if (!parent::real_connect($host, $user, $pass, $db)) {\n            die('Ошибка подключения (' . mysqli_connect_errno() . ') '\n                    . mysqli_connect_error());\n        }\n    }\n}\n\n$db = new foo_mysqli('localhost', 'my_user', 'my_password', 'my_db');\n\necho 'Выполнено... ' . $db->host_info . \"\\n\";\n\n$db->close();\n?>\n```\n\nПроцедурний стиль\n\n```php\n<?php\n\n$link = mysqli_init();\nif (!$link) {\n    die('mysqli_init завершилась провалом');\n}\n\nif (!mysqli_options($link, MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {\n    die('Установка MYSQLI_INIT_COMMAND завершилась провалом');\n}\n\nif (!mysqli_options($link, MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {\n    die('Установка MYSQLI_OPT_CONNECT_TIMEOUT завершилась провалом');\n}\n\nif (!mysqli_real_connect($link, 'localhost', 'my_user', 'my_password', 'my_db')) {\n    die('Ошибка подключения (' . mysqli_connect_errno() . ') '\n            . mysqli_connect_error());\n}\n\necho 'Выполнено... ' . mysqli_get_host_info($link) . \"\\n\";\n\nmysqli_close($link);\n?>\n```\n\nРезультат виконання наведених прикладів:\n\n```\nВыполнено... MySQL host info: localhost via TCP/IP\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> MySQLnd завжди має на увазі кодування, яке використовує за умовчанням сервер. Це кодування передається під час встановлення з'єднання/авторизації, які використовує mysqlnd.\n> \n> За замовчуванням Libmysqlclient використовує кодування, встановлене у файлі my.cnf або явним викликом функції [mysqli\\_options()](mysqli.options.md) до виклику функції **mysqli\\_real\\_connect()**, але після виклику функції [mysqli\\_connect()](function.mysqli-connect.md)\n\n### Дивіться також\n\n-   [mysqli\\_connect()](function.mysqli-connect.md) \\- Псевдонім mysqli::\\_\\_construct\n-   [mysqli\\_init()](mysqli.init.md) \\- Ініціалізує MySQLi та повертає об'єкт для використання у функції mysqli\\_real\\_connect()\n-   [mysqli\\_options()](mysqli.options.md) \\- Встановлення налаштувань\n-   [mysqli\\_ssl\\_set()](mysqli.ssl-set.md) \\- Використовується для встановлення безпечних з'єднань за допомогою SSL\n-   [mysqli\\_close()](mysqli.close.md) \\- Закриває раніше відкрите з'єднання з базою даних\n","title":"mysqli::real\\_connect","contentType":2,"navigation":[{"mysqli.query.md":"« mysqli::query"},{"mysqli.real-escape-string.md":"mysqli::real\\_escape\\_string »"},{"index.md":"PHP Manual"},{"class.mysqli.md":"mysqli"}]}},"__N_SSG":true}