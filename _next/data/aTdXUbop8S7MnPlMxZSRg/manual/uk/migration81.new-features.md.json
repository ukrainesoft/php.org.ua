{"pageProps":{"page":{"slug":"migration81.new-features.md","content":"## Нова функціональність\n\n### Ядро PHP\n\n#### Літерний префікс вісімкових цілих чисел\n\nВосьмеричні цілі числа тепер можуть використати явний префікс `0o` `0O` у цілочисленних літералах, аналогічно двійковим та шістнадцятковим цілочисленним літералам.\n\n```php\n<?php\n014;  // Восьмеричный литерал без префикса\n0o14; // Восьмеричный литерал с префиксом\n?>\n```\n\n#### Розпакування масиву за допомогою рядкових ключів\n\nДобавлена поддержка[розпакування масивів з рядковими ключами](language.types.array.md#language.types.array.unpacking)\n\n```php\n<?php\n$arr1 = [1, 'a' => 'b'];\n$arr2 = [...$arr1, 'c' => 'd']; //[1, 'a' => 'b', 'c' => 'd']\n?>\n```\n\n#### Іменований аргумент після розпакування аргументу\n\nТепер можна вказати іменовані аргументи після розпакування аргументів. наприклад: foo(...$args, named: $arg).\n\n#### Ключ із повним шляхом при завантаженні файлів\n\nПри завантаженні файлів з'явився новий ключ `full_path`, який містить повний шлях (а не тільки відносний) завантаженого файлу. Призначений для використання разом з HTML-атрибутом webkitdirectory.\n\n#### Перерахування\n\nДобавлена поддержка[перерахувань](language.enumerations.md)\n\n#### Файбери\n\nДобавлена поддержка[файберів](language.fibers.md)\n\n#### Callback-функції як об'єкти першого класу\n\nЗамикання для callback-функцій тепер можна створювати синтаксисом. `myFunc(...)`, який ідентичний [синтаксису`Closure::fromCallable('myFunc')`](functions.first_class_callable_syntax.md)\n\n> **Зауваження** `...`является частью синтаксиса, а не пропуском.\n\n#### Перетин типів\n\nДобавлена поддержка[перетину типів](language.types.type-system.md#language.types.type-system.composite.intersection)\n\n**Застереження**\n\n[Перетин типів](language.types.type-system.md#language.types.type-system.composite.intersection) не можна використовувати разом з [об'єднанням типів](language.types.declarations.md#language.types.declarations.composite.union)\n\n#### Тип never\n\nДоданий новий тип значення, що повертається never. Тип свідчить про те, що функція чи викликає [exit()](function.exit.md), або викидає виняток, або завершується.\n\n#### [`new`](language.oop5.basic.md#language.oop5.basic.new)в инициализации класса\n\nТепер можна використовувати вирази `new ClassName()` як значення за умовчанням для параметра, статичної змінної, ініціалізаторів глобальних констант і як аргументи атрибутів. Тепер об'єкти також можна передавати в [define()](function.define.md)\n\n#### Readonly-властивості\n\nДобавлена поддержка[readonly](language.oop5.properties.md#language.oop5.properties.readonly-properties)\\-властивостей.\n\n#### Остаточні константи класу\n\nДобавлена поддержка[модифікатора final щодо констант класу](language.oop5.final.md#language.oop5.final.example.php81). Крім того, константи інтерфейсу за умовчанням стають перевизначуваними.\n\n### CURL\n\nДобавлена опция\\*\\*`CURLOPT_DOH_URL`\\*\\*\n\nДодані параметри для сертифіката BLOB-об'єкта, доступні з libcurl >= 7.71.0:\n\n-   **`CURLOPT_ISSUERCERT_BLOB`**\n-   **`CURLOPT_PROXY_ISSUERCERT`**\n-   **`CURLOPT_PROXY_ISSUERCERT_BLOB`**\n-   **`CURLOPT_PROXY_SSLCERT_BLOB`**\n-   **`CURLOPT_PROXY_SSLKEY_BLOB`**\n-   **`CURLOPT_SSLCERT_BLOB`**\n-   **`CURLOPT_SSLKEY_BLOB`**\n\nДобавлен класс[CURLStringFile](class.curlstringfile.md), який можна використовувати для надсилання файлу з рядка (string), а не з файлу:\n\n```php\n<?php\n$file = new CURLStringFile($data, 'filename.txt', 'text/plain');\ncurl_setopt($curl, CURLOPT_POSTFIELDS, ['file' => $file]);\n?>\n```\n\n### FPM\n\nДоданий формат статусу openmetrics. Prometheus може використовувати його для отримання метрик FPM.\n\nДодано новий пул для диспетчера динамічних процесів під назвою `pm.max_spawn_rate`. Він дозволяє запускати кілька дочірніх процесів швидшими темпами, якщо обрано динамічний pm. Значення за замовчуванням - `32`, Яке раніше було фіксованим значенням.\n\n### GD\n\nПоддержка Avif теперь доступна с помощью[imagecreatefromavif()](function.imagecreatefromavif.md) і [imageavif()](function.imageavif.md)якщо libgd був зібраний з підтримкою Avif.\n\n### Hash\n\nСледующие функции[hash()](function.hash.md) [hash\\_file()](function.hash-file.md) і [hash\\_init()](function.hash-init.md) тепер підтримують додатковий необов'язковий аргумент `options`який можна використовувати для передачі специфічних для алгоритму даних.\n\n#### MurmurHash3\n\nДобавлена поддержка`MurmurHash3` за допомогою потокової передачі. Реалізовано такі варіанти:\n\n-   murmur3a, 32-бітовий хеш\n-   murmur3c, 128-розрядний хеш для x86\n-   murmur3f, 128-розрядний хеш для x64\n\nПочатковий стан хешування можна передати за допомогою ключа `seed` у масиві `options`, наПриклад:\n\n```php\n<?php\n$h = hash(\"murmur3f\", $data, options: [\"seed\" => 42]);\necho $h, \"\\n\";\n?>\n```\n\nДопустимое начальное значение находится в диапазоне от до певного платформою значення \\*\\*`UINT_MAX`\\*\\*зазвичай - `4294967295`\n\n#### xxHash\n\nДобавлена поддержка`xxHash`. Реалізовано такі варіанти:\n\n-   xxh32, 32-bit hash\n-   xxh64, 64-bit hash\n-   xxh3, 64-bit hash\n-   xxh128, 128-bit hash\n\nПочатковий стан хешування можна передати за допомогою ключа `seed` у масиві `options`, наПриклад:\n\n```php\n<?php\n$h = hash(\"xxh3\", $data, options: [\"seed\" => 42]);\necho $h, \"\\n\";\n?>\n```\n\nВикористання секрету також підтримується шляхом передачі ключа `secret` у масиві `options` :\n\n```php\n<?php\n$h = hash(\"xxh3\", $data, options: [\"secret\" => \"как минимум 136 байт секрета\"]);\necho $h, \"\\n\";\n?>\n```\n\nЯкість секрету користувача має вирішальне значення для якості хешу результату. Для секрету рекомендується використовувати максимально можливу ентропію.\n\n### MySQLi\n\n#### Нова INI-директива `mysqli.local_infile_directory`\n\nДодано INI-директиву [mysqli.local\\_infile\\_directory](mysqli.configuration.md#ini.mysqli.local-infile-directory), за допомогою якої можна вказати каталог, з якого дозволено завантаження файлів. Це має сенс тільки якщо [mysqli.allow\\_local\\_infile](mysqli.configuration.md#ini.mysqli.allow-local-infile) не включено, оскільки в цьому випадку дозволено всі каталоги.\n\n#### Прив'язка параметрів під час виконання\n\nТепер можна прив'язувати параметри, передавши їх у вигляді масиву [mysqli\\_stmt::execute()](mysqli-stmt.execute.md). Усі значення будуть прив'язані як рядки. Дозволено лише облікові масиви. Ця нова функція недоступна, якщо MySQLi скомпільовано з libmysqlclient.\n\n```php\n<?php\n$stmt = $mysqli->prepare('INSERT INTO users(id, name) VALUES(?,?)');\n$stmt->execute([1, $username]);\n?>\n```\n\n#### Новий метод [mysqli\\_result::fetch\\_column()](mysqli-result.fetch-column.md)\n\nДобавлен[mysqli\\_result::fetch\\_column()](mysqli-result.fetch-column.md) для вибірки єдиного скалярного значення набору результатів. Новий метод приймає необов'язковий параметр `column`, що починається з 0, у вигляді цілого числа (int), що вказує з якого стовпця робити вибірку.\n\n```php\n<?php\n$result = $mysqli->query('SELECT username FROM users WHERE id = 123');\necho $result->fetch_column();\n?>\n```\n\n### PDO\n\nДобавлен атрибут\\*\\*`PDO::MYSQL_ATTR_LOCAL_INFILE_DIRECTORY`\\*\\*, який можна використовувати для вказівки каталогу, з якого можна завантажити файли. Це має сенс лише в тому випадку, якщо **`PDO::MYSQL_ATTR_LOCAL_INFILE`** не включено, оскільки в цьому випадку дозволено всі каталоги.\n\n### PDO\\_SQLite\n\nПідтримується новий елемент `\"file:\"` у DSN-префіксі SQLite, який дозволяє вказувати додаткові прапори. Він не буде працювати, якщо увімкнено опцію open\\_basedir.\n\n```php\n<?php\nnew PDO('sqlite:file:path/to/sqlite.db?mode=ro')\n?>\n```\n\n### POSIX\n\nДодані константи **`POSIX_RLIMIT_KQUEUES`** і **`POSIX_RLIMIT_NPTS`**. Ці обмеження доступні лише у FreeBSD.\n\n### Стандартні функції\n\n[fputcsv()](function.fputcsv.md) тепер приймає новий аргумент `eol`, який дозволяє визначати послідовність кінця рядка, що настроюється, значення за замовчуванням залишається колишнім - `\"\\n\"`\n\n### SPL\n\n[SplFileObject::fputcsv()](splfileobject.fputcsv.md) тепер приймає новий аргумент `eol`, який дозволяє визначати послідовність кінця рядка, що настроюється, значення за замовчуванням залишається колишнім - `\"\\n\"`\n","title":"Нова функціональність","contentType":2,"navigation":[{"migration81.md":"« Міграція з PHP 8.0.x на PHP 8.1.x"},{"migration81.new-classes.md":"Нові класи та інтерфейси »"},{"index.md":"PHP Manual"},{"migration81.md":"Міграція з PHP 8.0.x на PHP 8.1.x"}]}},"__N_SSG":true}