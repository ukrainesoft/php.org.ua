{"pageProps":{"page":{"slug":"mongodb-driver-bulkwrite.count.md","content":"# MongoDB\\\\Driver\\\\BulkWrite::count\n\n(mongodb >=1.0.0)\n\nMongoDB\\\\Driver\\\\BulkWrite::count — Підраховує кількість операцій запису в порції\n\n### Опис\n\n```methodsynopsis\npublic MongoDB\\Driver\\BulkWrite::count(): int\n```\n\nПовертає кількість операцій запису, доданих до об'єкту [MongoDB\\\\Driver\\\\BulkWrite](class.mongodb-driver-bulkwrite.md)\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає кількість операцій запису, доданих до об'єкту [MongoDB\\\\Driver\\\\BulkWrite](class.mongodb-driver-bulkwrite.md)\n\n### Помилки\n\n-   При помилці парсингу аргумент кидає виняток[MongoDB\\\\Driver\\\\Exception\\\\InvalidArgumentException](class.mongodb-driver-exception-invalidargumentexception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL mongodb 1.2.0 | Повертає кількість операцій запису, доданих до об'єкту [MongoDB\\\\Driver\\\\BulkWrite](class.mongodb-driver-bulkwrite.md). . У попередніх версіях поверталося передбачувану кількість звернень клієнта до сервера, необхідні виконання всіх операцій записи. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** MongoDB\\\\Driver\\\\BulkWrite::count()\\*\\*\\*\\*\n\n```php\n<?php\n\n$bulk = new MongoDB\\Driver\\BulkWrite;\n$bulk->insert(['_id' => 1, 'x' => 1]);\n$bulk->insert(['_id' => 2, 'x' => 2]);\n$bulk->update(['x' => 2], ['$set' => ['x' => 1]]);\n$bulk->delete(['x' => 1]);\n\nvar_dump(count($bulk));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nint(4)\n```\n","title":"MongoDB\\\\Driver\\\\BulkWrite::count","contentType":2,"navigation":[{"mongodb-driver-bulkwrite.construct.md":"« MongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct"},{"mongodb-driver-bulkwrite.delete.md":"MongoDB\\\\Driver\\\\BulkWrite::delete »"},{"index.md":"PHP Manual"},{"class.mongodb-driver-bulkwrite.md":"MongoDB\\\\Driver\\\\BulkWrite"}]}},"__N_SSG":true}