{"pageProps":{"page":{"slug":"book.event.md","content":"# Event\n\n-   [Вступ](intro.event.md)\n-   [Встановлення та налаштування](event.setup.md)\n    -   [Вимоги](event.requirements.md)\n    -   [Установка](event.installation.md)\n    -   [Налаштування під час виконання](event.configuration.md)\n    -   [Типи ресурсів](event.resources.md)\n-   [Приклади](event.examples.md)\n-   [Прапори подій](event.flags.md)\n-   [Про постійні (persistent) події](event.persistence.md)\n-   [Callback-функції](event.callbacks.md)\n-   [Створення подій для сигналів](event.constructing.signal.events.md)\n-   [Event](class.event.md) \\- Клас Event\n    -   [Event::add](event.add.md)— Перевести подію у стан очікування\n    -   [Event::addSignal](event.addsignal.md) \\- Псевдонім Event:: add\n    -   [Event::addTimer](event.addtimer.md) \\- Псевдонім Event:: add\n    -   [Event::\\_\\_construct](event.construct.md) \\- Конструктор об'єкта Event\n    -   [Event::del](event.del.md) \\- Перевести подію в пасивний стан\n    -   [Event::delSignal](event.delsignal.md) \\- Псевдонім Event::del\n    -   [Event::delTimer](event.deltimer.md) \\- Псевдонім Event::del\n    -   [Event::free](event.free.md)— Перевести подію в пасивний стан та звільнити всі виділені для неї ресурси\n    -   [Event::getSupportedMethods](event.getsupportedmethods.md)— Отримати масив з іменами методів, які підтримуються в поточній версії Libevent\n    -   [Event::pending](event.pending.md)— Перевірити, що подія перебуває у стані очікування або що вона запланована\n    -   [Event::set](event.set.md) \\- Переконфігурувати подію\n    -   [Event::setPriority](event.setpriority.md) \\- Задати пріоритет події\n    -   [Event::setTimer](event.settimer.md) \\- Переконфігурація події таймера\n    -   [Event::signal](event.signal.md) \\- Створити об'єкт події сигналу\n    -   [Event::timer](event.timer.md) \\- Створити об'єкт події таймера\n-   [EventBase](class.eventbase.md) \\- Клас EventBase\n    -   [EventBase::\\_\\_construct](eventbase.construct.md) \\- Конструктор об'єкта EventBase\n    -   [EventBase::dispatch](eventbase.dispatch.md)— Відправляє події, що очікують.\n    -   [EventBase::exit](eventbase.exit.md)— Припиняє надсилання подій\n    -   [EventBase::free](eventbase.free.md)— Визволяє ресурси, виділені для цієї бази подій\n    -   [EventBase::getFeatures](eventbase.getfeatures.md)— Повертає бітову маску підтримуваних функцій\n    -   [EventBase::getMethod](eventbase.getmethod.md)— Повертає метод події, що використовується.\n    -   [EventBase::getTimeOfDayCached](eventbase.gettimeofdaycached.md)— Повертає поточний час базові події\n    -   [EventBase::gotExit](eventbase.gotexit.md)— Перевіряє, чи було завершено цикл обробки подій.\n    -   [EventBase::gotStop](eventbase.gotstop.md)— Перевіряє, чи було завершено цикл обробки подій.\n    -   [EventBase::loop](eventbase.loop.md)— Відправлення очікуваних подій\n    -   [EventBase::priorityInit](eventbase.priorityinit.md)— Встановлює кількість пріоритетів на основі подій.\n    -   [EventBase::reInit](eventbase.reinit.md) \\- Повторна ініціалізація бази подій (після розгалуження)\n    -   [EventBase::stop](eventbase.stop.md)— повідомляє event\\_base припинити відправку подій\n-   [EventBuffer](class.eventbuffer.md) \\- Клас EventBuffer\n    -   [EventBuffer::add](eventbuffer.add.md)— Додає дані до кінця буфера подій\n    -   [EventBuffer::addBuffer](eventbuffer.addbuffer.md)— Переміщує всі дані з буфера екземпляру EventBuffer\n    -   [EventBuffer::appendFrom](eventbuffer.appendfrom.md)— Переміщує вказану кількість байтів з вихідного буфера до кінця поточного буфера\n    -   [EventBuffer::\\_\\_construct](eventbuffer.construct.md) \\- Створює об'єкт EventBuffer\n    -   [EventBuffer::copyout](eventbuffer.copyout.md)— Копіює вказану кількість байтів з початку буфера\n    -   [EventBuffer::drain](eventbuffer.drain.md)— Видаляє вказану кількість байтів із початку буфера, нікуди не копіюючи\n    -   [EventBuffer::enableLocking](eventbuffer.enablelocking.md) \\- Опис\n    -   [EventBuffer::expand](eventbuffer.expand.md) \\- Резервує простір у буфері\n    -   [EventBuffer::freeze](eventbuffer.freeze.md)— Запобігає викликам, які змінюють буфер подій у разі успішного виконання\n    -   [EventBuffer::lock](eventbuffer.lock.md)— Отримує блокування буфера\n    -   [EventBuffer::prepend](eventbuffer.prepend.md)— Записує дані на початок буфера\n    -   [EventBuffer::prependBuffer](eventbuffer.prependbuffer.md)— Переміщує всі дані з вихідного буфера на початок поточного буфера\n    -   [EventBuffer::pullup](eventbuffer.pullup.md)— Лінеаризує дані в буфері та повертає їх вміст у вигляді рядка\n    -   [EventBuffer::read](eventbuffer.read.md)— Читає дані з evbuffer та виснажує прочитані байти\n    -   [EventBuffer::readFrom](eventbuffer.readfrom.md)— Читає дані з файлу до кінця буфера\n    -   [EventBuffer::readLine](eventbuffer.readline.md)— Витягує рядок із початку буфера\n    -   [EventBuffer::search](eventbuffer.search.md) \\- Сканує буфер на наявність рядка\n    -   [EventBuffer::searchEol](eventbuffer.searcheol.md) \\- Сканує буфер на наявність кінця рядка\n    -   [EventBuffer::substr](eventbuffer.substr.md) \\- Обрізає частину даних буфера\n    -   [EventBuffer::unfreeze](eventbuffer.unfreeze.md)— Повторно включає дзвінки, які змінюють буфер подій\n    -   [EventBuffer::unlock](eventbuffer.unlock.md)— Знімає блокування, встановлене EventBuffer::lock\n    -   [EventBuffer::write](eventbuffer.write.md)— Записує вміст буфера у файл чи сокет\n-   [EventBufferEvent](class.eventbufferevent.md) \\- Клас EventBufferEvent\n    -   [EventBufferEvent::close](eventbufferevent.close.md)— Закриває дескриптор файлу, пов'язаний із поточною подією буфера\n    -   [EventBufferEvent::connect](eventbufferevent.connect.md)— Підключає файловий дескриптор події буфера до вказаної адреси або сокету UNIX\n    -   [EventBufferEvent::connectHost](eventbufferevent.connecthost.md)— Підключається на ім'я хоста з можливістю асинхронного дозволу DNS\n    -   [EventBufferEvent::\\_\\_construct](eventbufferevent.construct.md)— Створює об'єкт EventBufferEvent\n    -   [EventBufferEvent::createPair](eventbufferevent.createpair.md)— Створює дві буферні події, пов'язані одна з одною\n    -   [EventBufferEvent::disable](eventbufferevent.disable.md)— Вимикає читання, запис або те й інше у події буфера\n    -   [EventBufferEvent::enable](eventbufferevent.enable.md)— Включає читання, запис або те й інше у події буфера\n    -   [EventBufferEvent::free](eventbufferevent.free.md) \\- Звільняє подію буфера\n    -   [EventBufferEvent::getDnsErrorString](eventbufferevent.getdnserrorstring.md)— Повертає рядок, який описує останню невдалу спробу пошуку DNS\n    -   [EventBufferEvent::getEnabled](eventbufferevent.getenabled.md)— Повертає бітову маску подій, які активовані для буферної події.\n    -   [EventBufferEvent::getInput](eventbufferevent.getinput.md)— Повертає базовий вхідний буфер, пов'язаний із поточною буферною подією\n    -   [EventBufferEvent::getOutput](eventbufferevent.getoutput.md)— Повертає базовий вихідний буфер, пов'язаний із поточною буферною подією\n    -   [EventBufferEvent::read](eventbufferevent.read.md) \\- Читає дані буфера\n    -   [EventBufferEvent::readBuffer](eventbufferevent.readbuffer.md)— Зливає весь вміст буфера введення та поміщає його у буфер.\n    -   [EventBufferEvent::setCallbacks](eventbufferevent.setcallbacks.md)— Призначає callback-функції для читання, запису та події (стану)\n    -   [EventBufferEvent::setPriority](eventbufferevent.setpriority.md) \\- Надає пріоритет bufferevent\n    -   [EventBufferEvent::setTimeouts](eventbufferevent.settimeouts.md)— Встановлює час очікування читання та запису для події буфера\n    -   [EventBufferEvent::setWatermark](eventbufferevent.setwatermark.md)— Регулює водяні знаки читання та/або запису\n    -   [EventBufferEvent::sslError](eventbufferevent.sslerror.md)— Повертає останню помилку OpenSSL, повідомлену буферною подією\n    -   [EventBufferEvent::sslFilter](eventbufferevent.sslfilter.md)— Створює нову подію буфера SSL для надсилання своїх даних через іншу подію буфера\n    -   [EventBufferEvent::sslGetCipherInfo](eventbufferevent.sslgetcipherinfo.md)— Повертає текстовий опис шифру\n    -   [EventBufferEvent::sslGetCipherName](eventbufferevent.sslgetciphername.md)— Повертає поточне ім'я шифру з'єднання SSL\n    -   [EventBufferEvent::sslGetCipherVersion](eventbufferevent.sslgetcipherversion.md)— Повертає версію шифру, який використовується поточним SSL-з'єднанням.\n    -   [EventBufferEvent::sslGetProtocol](eventbufferevent.sslgetprotocol.md)— Повертає ім'я протоколу, який використовується для поточного з'єднання SSL.\n    -   [EventBufferEvent::sslRenegotiate](eventbufferevent.sslrenegotiate.md)— Повідомляє буферну подію розпочати перегляд SSL\n    -   [EventBufferEvent::sslSocket](eventbufferevent.sslsocket.md)— Створює нову буферну подію SSL для надсилання своїх даних через SSL у сокет\n    -   [EventBufferEvent::write](eventbufferevent.write.md)— Додає дані до буфера виводу буферної події\n    -   [EventBufferEvent::writeBuffer](eventbufferevent.writebuffer.md)— Додає вміст буфера в буфер виводу буферної події\n-   [Про callback-функції подієвого буфера](eventbufferevent.about.callbacks.md)\n-   [EventConfig](class.eventconfig.md) \\- Клас EventConfig\n    -   [EventConfig::avoidMethod](eventconfig.avoidmethod.md)— Попросити libevent не використати певний метод події\n    -   [EventConfig::\\_\\_construct](eventconfig.construct.md)— Створити об'єкт EventConfig\n    -   [EventConfig::requireFeatures](eventconfig.requirefeatures.md)— Ввести необхідні додатки властивості методу події\n    -   [EventConfig::setFlags](eventconfig.setflags.md)— Встановлює один або кілька прапорів для налаштування можливої ​​ініціалізації EventBase\n    -   [EventConfig::setMaxDispatchInterval](eventconfig.setmaxdispatchinterval.md)— Запобігти інверсії пріоритетів\n-   [EventDnsBase](class.eventdnsbase.md) \\- Клас EventDnsBase\n    -   [EventDnsBase::addNameserverIp](eventdnsbase.addnameserverip.md)— Додає сервер імен до бази DNS\n    -   [EventDnsBase::addSearch](eventdnsbase.addsearch.md)— Додає домен до списку пошукових доменів\n    -   [EventDnsBase::clearSearch](eventdnsbase.clearsearch.md)— Видаляє всі поточні суфікси пошуку\n    -   [EventDnsBase::\\_\\_construct](eventdnsbase.construct.md) \\- Конструктор об'єкта EventDnsBase\n    -   [EventDnsBase::countNameservers](eventdnsbase.countnameservers.md)— Отримує кількість налаштованих серверів імен\n    -   [EventDnsBase::loadHosts](eventdnsbase.loadhosts.md)— Завантажує файл hosts (у тому ж форматі, що й /etc/hosts) із файлу hosts\n    -   [EventDnsBase::parseResolvConf](eventdnsbase.parseresolvconf.md)— Сканує файл у форматі resolv.conf\n    -   [EventDnsBase::setOption](eventdnsbase.setoption.md)— Встановлює параметр конфігурації\n    -   [EventDnsBase::setSearchNdots](eventdnsbase.setsearchndots.md) — Встановлює 'ndots' для пошуку\n-   [EventHttp](class.eventhttp.md) \\- Клас EventHttp\n    -   [EventHttp::accept](eventhttp.accept.md)— Примушує HTTP-сервер приймати з'єднання із зазначеним потоком сокету чи ресурсом\n    -   [EventHttp::addServerAlias](eventhttp.addserveralias.md)— Додає псевдонім сервера до об'єкта HTTP-сервера\n    -   [EventHttp::bind](eventhttp.bind.md)— Прив'язує HTTP-сервер до вказаної адреси та порту\n    -   [EventHttp::\\_\\_construct](eventhttp.construct.md)— Створює об'єкт EventHttp (сервер HTTP)\n    -   [EventHttp::removeServerAlias](eventhttp.removeserveralias.md)— Видаляє псевдонім сервера\n    -   [EventHttp::setAllowedMethods](eventhttp.setallowedmethods.md)— Встановлює, які методи HTTP підтримуються у запитах, прийнятих цим сервером та переданих callback-функції користувача\n    -   [EventHttp::setCallback](eventhttp.setcallback.md)— Встановлює callback-функцію для вказаного URI\n    -   [EventHttp::setDefaultCallback](eventhttp.setdefaultcallback.md) \\- Встановлює callback-функцію за замовчуванням для обробки запитів, які не перехоплюються конкретними callback-функціями\n    -   [EventHttp::setMaxBodySize](eventhttp.setmaxbodysize.md) \\- Встановлює максимальний розмір тіла запиту\n    -   [EventHttp::setMaxHeadersSize](eventhttp.setmaxheaderssize.md)— Встановлює максимальний розмір заголовка HTTP\n    -   [EventHttp::setTimeout](eventhttp.settimeout.md)— Встановлює час очікування для запиту HTTP\n-   [EventHttpConnection](class.eventhttpconnection.md) \\- Клас EventHttpConnection\n    -   [EventHttpConnection::\\_\\_construct](eventhttpconnection.construct.md)— Створює об'єкт EventHttpConnection\n    -   [EventHttpConnection::getBase](eventhttpconnection.getbase.md)— Повертає базу подій, пов'язану із з'єднанням\n    -   [EventHttpConnection::getPeer](eventhttpconnection.getpeer.md)— Отримує віддалену адресу та порт, пов'язаний зі з'єднанням\n    -   [EventHttpConnection::makeRequest](eventhttpconnection.makerequest.md)— Робить HTTP-запит із зазначеного з'єднання\n    -   [EventHttpConnection::setCloseCallback](eventhttpconnection.setclosecallback.md) \\- Встановлює callback-функцію при закритті з'єднання\n    -   [EventHttpConnection::setLocalAddress](eventhttpconnection.setlocaladdress.md)— Встановлює IP-адресу, з якої відбуваються HTTP-з'єднання.\n    -   [EventHttpConnection::setLocalPort](eventhttpconnection.setlocalport.md)— Встановлює локальний порт, з якого виробляються з'єднання.\n    -   [EventHttpConnection::setMaxBodySize](eventhttpconnection.setmaxbodysize.md)— Встановлює максимальний розмір тіла для підключення\n    -   [EventHttpConnection::setMaxHeadersSize](eventhttpconnection.setmaxheaderssize.md) \\- Встановлює максимальний розмір заголовка\n    -   [EventHttpConnection::setRetries](eventhttpconnection.setretries.md)— Встановлює максимальну кількість повторів для з'єднання\n    -   [EventHttpConnection::setTimeout](eventhttpconnection.settimeout.md)— Встановлює час очікування на з'єднання\n-   [EventHttpRequest](class.eventhttprequest.md) \\- Клас EventHttpRequest\n    -   [EventHttpRequest::addHeader](eventhttprequest.addheader.md)— Додає заголовок HTTP до заголовків запиту\n    -   [EventHttpRequest::cancel](eventhttprequest.cancel.md)— Скасує очікування HTTP-запиту\n    -   [EventHttpRequest::clearHeaders](eventhttprequest.clearheaders.md)— Видаляє всі вихідні заголовки зі списку заголовків запиту\n    -   [EventHttpRequest::closeConnection](eventhttprequest.closeconnection.md)— Закриває пов'язане з'єднання HTTP\n    -   [EventHttpRequest::\\_\\_construct](eventhttprequest.construct.md)— Створює об'єкт EventHttpRequest\n    -   [EventHttpRequest::findHeader](eventhttprequest.findheader.md)— Отримує значення заголовка\n    -   [EventHttpRequest::free](eventhttprequest.free.md)— Звільняє об'єкт та видаляє пов'язані події\n    -   [EventHttpRequest::getBufferEvent](eventhttprequest.getbufferevent.md)— Повертає об'єкт EventBufferEvent\n    -   [EventHttpRequest::getCommand](eventhttprequest.getcommand.md) \\- Повертає команду запиту (метод)\n    -   [EventHttpRequest::getConnection](eventhttprequest.getconnection.md)— Повертає об'єкт EventHttpConnection\n    -   [EventHttpRequest::getHost](eventhttprequest.gethost.md) \\- Повертає хост запиту\n    -   [EventHttpRequest::getInputBuffer](eventhttprequest.getinputbuffer.md) \\- Повертає вхідний буфер\n    -   [EventHttpRequest::getInputHeaders](eventhttprequest.getinputheaders.md) \\- Повертає асоціативний масив вхідних заголовків\n    -   [EventHttpRequest::getOutputBuffer](eventhttprequest.getoutputbuffer.md)— Повертає вихідний буфер запиту\n    -   [EventHttpRequest::getOutputHeaders](eventhttprequest.getoutputheaders.md)— Повертає асоціативний масив вихідних заголовків\n    -   [EventHttpRequest::getResponseCode](eventhttprequest.getresponsecode.md) \\- Повертає код відповіді\n    -   [EventHttpRequest::getUri](eventhttprequest.geturi.md)— Повертає запит URI\n    -   [EventHttpRequest::removeHeader](eventhttprequest.removeheader.md)— Видаляє заголовок HTTP із заголовків запиту\n    -   [EventHttpRequest::sendError](eventhttprequest.senderror.md)— Надсилає HTML-повідомлення про помилку клієнту\n    -   [EventHttpRequest::sendReply](eventhttprequest.sendreply.md)— Відправляє HTML-відповідь клієнту\n    -   [EventHttpRequest::sendReplyChunk](eventhttprequest.sendreplychunk.md)— Відправляє блок даних як частину поточної фрагментованої відповіді\n    -   [EventHttpRequest::sendReplyEnd](eventhttprequest.sendreplyend.md)— Заповнює фрагментарну відповідь, звільняючи запит належним чином\n    -   [EventHttpRequest::sendReplyStart](eventhttprequest.sendreplystart.md)— Ініціює фрагментарну відповідь\n-   [EventListener](class.eventlistener.md) \\- Клас EventListener\n    -   [EventListener::\\_\\_construct](eventlistener.construct.md)— Створює нового слухача з'єднання, пов'язаного із базою події\n    -   [EventListener::disable](eventlistener.disable.md)— Вимикає подію підключення до об'єкта слухача\n    -   [EventListener::enable](eventlistener.enable.md)— Включає подію підключення до об'єкта слухача\n    -   [EventListener::getBase](eventlistener.getbase.md)— Повертає базу подій, пов'язану із слухачем подій\n    -   [EventListener::getSocketName](eventlistener.getsocketname.md)— Отримує поточну адресу, до якої прив'язаний сокет слухача\n    -   [EventListener::setCallback](eventlistener.setcallback.md) \\- Мета setCallback\n    -   [EventListener::setErrorCallback](eventlistener.seterrorcallback.md) \\- Встановлює callback-функцію помилки слухача подій\n-   [EventSslContext](class.eventsslcontext.md) \\- Клас EventSslContext\n    -   [EventSslContext::\\_\\_construct](eventsslcontext.construct.md)— Створює контекст OpenSSL для класів модуля Event\n-   [EventUtil](class.eventutil.md) \\- Клас EventUtil\n    -   [EventUtil::\\_\\_construct](eventutil.construct.md) \\- Абстрактний конструктор\n    -   [EventUtil::getLastSocketErrno](eventutil.getlastsocketerrno.md)— Отримати номер останньої помилки сокету, що виникла.\n    -   [EventUtil::getLastSocketError](eventutil.getlastsocketerror.md)— Отримати останню помилку сокету, що виникла.\n    -   [EventUtil::getSocketFd](eventutil.getsocketfd.md)— Отримати цифровий файловий дескриптор сокету чи потоку\n    -   [EventUtil::getSocketName](eventutil.getsocketname.md)— Отримати поточну адресу, до якої прив'язаний сокет\n    -   [EventUtil::setSocketOption](eventutil.setsocketoption.md) \\- Встановити опції сокету\n    -   [EventUtil::sslRandPoll](eventutil.sslrandpoll.md) \\- Згенерувати ентропію за допомогою RAND\\_poll() із OpenSSL\n-   [EventException](class.eventexception.md) \\- Клас EventException\n","title":"Event","contentType":2,"navigation":[{"curlstringfile.construct.md":"« CURLStringFile::\\_\\_construct"},{"intro.event.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.remote.other.md":"Інші служби"}]}},"__N_SSG":true}