{"pageProps":{"page":{"slug":"function.db2-exec.md","content":"# db2\\_exec\n\n(PECL ibm\\_db2 >= 1.0.0)\n\ndb2\\_exec — Виконує SQL-запит безпосередньо\n\n### Опис\n\n```methodsynopsis\ndb2_exec(resource $connection, string $statement, array $options = []): resource|false\n```\n\nВиконує SQL-запит безпосередньо.\n\nЯкщо ви плануєте інтерполювати змінні PHP у SQL-запит, майте на увазі, що це одна з найпоширеніших уразливостей безпеки. Розгляньте можливість виклику [db2\\_prepare()](function.db2-prepare.md) для підготовки SQL запиту з маркерами параметрів для вхідних значень. Потім ви можете викликати [db2\\_execute()](function.db2-execute.md), щоб передати вхідні значення та уникнути атак SQL-ін'єкцій.\n\nЯкщо ви плануєте багаторазово виконувати один і той же SQL-запит з різними параметрами, розгляньте можливість виклику [db2\\_prepare()](function.db2-prepare.md) і [db2\\_execute()](function.db2-execute.md), щоб сервер бази даних міг повторно використати свій план доступу та підвищити ефективність вашої бази даних.\n\n### Список параметрів\n\n`connection`\n\nДопустима змінна ресурсу з'єднання з базою даних, що повертається функцією [db2\\_connect()](function.db2-connect.md) або [db2\\_pconnect()](function.db2-pconnect.md)\n\n`statement`\n\nSQL запит. Запит не може містити маркер параметрів.\n\n`options`\n\nАсоціативний масив, що містить параметри оператора. Параметр можна використовувати для запиту курсору, що прокручується, на серверах баз даних, що підтримують цю функцію.\n\nОпис допустимих опцій оператора дивіться у розділі [db2\\_set\\_option()](function.db2-set-option.md)\n\n### Значення, що повертаються\n\nПовертає ресурс оператора, у разі успішного виконання SQL-запиту або **`false`**, якщо базі даних не вдалося виконати SQL-запит.\n\n### Приклади\n\n**Приклад #1 Створення таблиці за допомогою **db2\\_exec()****\n\nУ наступному прикладі **db2\\_exec()** використовується для виконання набору DDL-запитів у процесі створення таблиці.\n\n```php\n<?php\n$conn = db2_connect($database, $user, $password);\n\n// Создание таблицы test\n$create = 'CREATE TABLE animals (id INTEGER, breed VARCHAR(32),\n    name CHAR(16), weight DECIMAL(7,2))';\n$result = db2_exec($conn, $create);\nif ($result) {\n    print \"Таблица создана.\\n\";\n}\n\n// Наполнение таблицы test\n$animals = array(\n    array(0, 'cat', 'Pook', 3.2),\n    array(1, 'dog', 'Peaches', 12.3),\n    array(2, 'horse', 'Smarty', 350.0),\n    array(3, 'gold fish', 'Bubbles', 0.1),\n    array(4, 'budgerigar', 'Gizmo', 0.2),\n    array(5, 'goat', 'Rickety Ride', 9.7),\n    array(6, 'llama', 'Sweater', 150)\n);\n\nforeach ($animals as $animal) {\n    $rc = db2_exec($conn, \"INSERT INTO animals (id, breed, name, weight)\n      VALUES ({$animal[0]}, '{$animal[1]}', '{$animal[2]}', {$animal[3]})\");\n    if ($rc) {\n        print \"Добавлена запись... \";\n    }\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nТаблица создана.\nДобавлена запись... Добавлена запись... Добавлена запись... Добавлена запись... Добавлена запись... Добавлена запись... Добавлена запись...\n```\n\n**Приклад #2 Виконання запиту SELECT з курсором, що прокручується.**\n\nУ наступному прикладі показано, як запросити курсор, що прокручується, для SQL-запиту, виданого функцією **db2\\_exec()**\n\n```php\n<?php\n$conn = db2_connect($database, $user, $password);\n$sql = \"SELECT name FROM animals\n    WHERE weight < 10.0\n    ORDER BY name\";\nif ($conn) {\n    require_once 'prepare.inc';\n    $stmt = db2_exec($conn, $sql, array('cursor' => DB2_SCROLLABLE));\n    while ($row = db2_fetch_array($stmt)) {\n        print \"$row[0]\\n\";\n    }\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nBubbles\nGizmo\nPook\nRickety Ride\n```\n\n**Приклад #3 Отримання даних XML як SQL ResultSet**\n\nУ цьому прикладі показано, як працювати з документами, що зберігаються в стовпці XML за допомогою бази даних SAMPLE. Використовуючи досить простий SQL/XML, цей приклад повертає деякі вузли в XML-документі у форматі SQL ResultSet, з яким знайома більшість користувачів.\n\n```php\n<?php\n\n$conn = db2_connect(\"SAMPLE\", \"db2inst1\", \"ibmdb2\");\n\n$query = 'SELECT * FROM XMLTABLE(\n    XMLNAMESPACES (DEFAULT \\'http://posample.org\\'),\n    \\'db2-fn:xmlcolumn(\"CUSTOMER.INFO\")/customerinfo\\'\n    COLUMNS\n    \"CID\" VARCHAR (50) PATH \\'@Cid\\',\n    \"NAME\" VARCHAR (50) PATH \\'name\\',\n    \"PHONE\" VARCHAR (50) PATH \\'phone [ @type = \"work\"]\\'\n    ) AS T\n    WHERE NAME = \\'Kathy Smith\\'\n    ';\n$stmt = db2_exec($conn, $query);\n\nwhile($row = db2_fetch_object($stmt)){\n    printf(\"$row->CID     $row->NAME     $row->PHONE\\n\");\n}\ndb2_close($conn);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n1000     Kathy Smith     416-555-1358\n1001     Kathy Smith     905-555-7258\n```\n\n**Приклад #4 Виконання \"JOIN\" з даними XML**\n\nНаступний приклад працює з документами, що зберігаються у 2 різних стовпцях XML у базі даних SAMPLE. Він створює 2 тимчасові таблиці з XML-документів із 2 різних стовпців і повертає SQL ResultSet з інформацією про статус доставки для клієнта.\n\n```php\n<?php\n\n$conn = db2_connect(\"SAMPLE\", \"db2inst1\", \"ibmdb2\");\n\n$query = '\n    SELECT A.CID, A.NAME, A.PHONE, C.PONUM, C.STATUS\n    FROM\n    XMLTABLE(\n    XMLNAMESPACES (DEFAULT \\'http://posample.org\\'),\n    \\'db2-fn:xmlcolumn(\"CUSTOMER.INFO\")/customerinfo\\'\n    COLUMNS\n    \"CID\" BIGINT PATH \\'@Cid\\',\n    \"NAME\" VARCHAR (50) PATH \\'name\\',\n    \"PHONE\" VARCHAR (50) PATH \\'phone [ @type = \"work\"]\\'\n    ) as A,\n    PURCHASEORDER AS B,\n    XMLTABLE (\n    XMLNAMESPACES (DEFAULT \\'http://posample.org\\'),\n    \\'db2-fn:xmlcolumn(\"PURCHASEORDER.PORDER\")/PurchaseOrder\\'\n    COLUMNS\n    \"PONUM\"  BIGINT PATH \\'@PoNum\\',\n    \"STATUS\" VARCHAR (50) PATH \\'@Status\\'\n    ) as C\n    WHERE A.CID = B.CUSTID AND\n    B.POID = C.PONUM AND\n    A.NAME = \\'Kathy Smith\\'\n';\n\n$stmt = db2_exec($conn, $query);\n\nwhile($row = db2_fetch_object($stmt)){\n    printf(\"$row->CID     $row->NAME     $row->PHONE     $row->PONUM     $row->STATUS\\n\");\n}\n\ndb2_close($conn);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n1001     Kathy Smith     905-555-7258     5002     Shipped\n```\n\n**Приклад #5 Повернення SQL-даних як частини великого XML-документа**\n\nНаступний приклад працює з частиною документів PRODUCT.DESCRIPTION у базі даних SAMPLE. Він створює XML-документ, що містить опис продукту (дані XML) та інформацію про ціни (дані SQL).\n\n```php\n<?php\n\n$conn = db2_connect(\"SAMPLE\", \"db2inst1\", \"ibmdb2\");\n\n$query = '\nSELECT\nXMLSERIALIZE(\nXMLQUERY(\\'\n    declare boundary-space strip;\n    declare default element namespace \"http://posample.org\";\n    <promoList> {\n    for $prod in $doc/product\n    where $prod/description/price < 10.00\n    order by $prod/description/price ascending\n    return(\n        <promoitem> {\n        $prod,\n        <startdate> {$start} </startdate>,\n        <enddate> {$end} </enddate>,\n        <promoprice> {$promo} </promoprice>\n        } </promoitem>\n    )\n    } </promoList>\n\\' passing by ref DESCRIPTION AS \"doc\",\nPROMOSTART as \"start\",\nPROMOEND as \"end\",\nPROMOPRICE as \"promo\"\nRETURNING SEQUENCE)\nAS CLOB (32000))\nAS NEW_PRODUCT_INFO\nFROM PRODUCT\nWHERE PID = \\'100-100-01\\'\n';\n\n$stmt = db2_exec($conn, $query);\n\nwhile($row = db2_fetch_array($stmt)){\n    printf(\"$row[0]\\n\");\n}\ndb2_close($conn);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<promoList xmlns=\"http://posample.org\">\n    <promoitem>\n    <product pid=\"100-100-01\">\n        <description>\n            <name>Snow Shovel, Basic 22 inch</name>\n            <details>Basic Snow Shovel, 22 inches wide, straight handle with D-Grip</details>\n            <price>9.99</price>\n            <weight>1 kg</weight>\n        </description>\n    </product>\n    <startdate>2004-11-19</startdate>\n    <enddate>2004-12-19</enddate>\n    <promoprice>7.25</promoprice>\n    </promoitem>\n</promoList>\n```\n\n### Дивіться також\n\n-   [db2\\_execute()](function.db2-execute.md) \\- Виконує підготовлений SQL-запит\n-   [db2\\_prepare()](function.db2-prepare.md) \\- готує SQL-запит до виконання\n","title":"db2\\_exec","contentType":2,"navigation":[{"function.db2-escape-string.md":"« db2\\_escape\\_string"},{"function.db2-execute.md":"db2\\_execute »"},{"index.md":"PHP Manual"},{"ref.ibm-db2.md":"Функції IBM DB2"}]}},"__N_SSG":true}