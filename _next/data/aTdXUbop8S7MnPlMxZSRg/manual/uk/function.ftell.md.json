{"pageProps":{"page":{"slug":"function.ftell.md","content":"# ftell\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nftell — Повертає поточну позицію покажчика читання/запису файлу\n\n### Опис\n\n```methodsynopsis\nftell(resource $stream): int|false\n```\n\nПовертає позицію файлового покажчика `stream`\n\n### Список параметрів\n\n`stream`\n\nФайловий покажчик має бути чинним покажчиком на потік, відкритий функціями [fopen()](function.fopen.md) або [popen()](function.popen.md). . **ftell()** повертає невизначені результати для потоків, що дозволяють лише запис наприкінці (відкритих з прапором \"a\").\n\n### Значення, що повертаються\n\nПовертає позицію файлового покажчика `stream` як цілого числа, тобто його зміщення у файловому потоці.\n\nУ разі виникнення помилки повертає **`false`**\n\n> **Зауваження**: Так як тип integer в PHP є цілим числом зі знаком, і багато платформ використовують 32-бітові цілі числа, то деякі функції файлових систем можуть повертати несподівані результати для файлів розміром більше 2 Гб.\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** ftell()\\*\\*\\*\\*\n\n```php\n<?php\n\n// открываем файл и читаем немного данных\n$fp = fopen(\"/etc/passwd\", \"r\");\n$data = fgets($fp, 12);\n\n// где же мы ?\necho ftell($fp); // 11\n\nfclose($fp);\n\n?>\n```\n\n### Дивіться також\n\n-   [fopen()](function.fopen.md) \\- Відкриває файл або URL\n-   [popen()](function.popen.md) \\- Відкриває файловий покажчик процесу\n-   [fseek()](function.fseek.md) \\- Встановлює зміщення у файловому покажчику\n-   [rewind()](function.rewind.md) \\- Скидає курсор файлового покажчика\n","title":"ftell","contentType":2,"navigation":[{"function.fsync.md":"« fsync"},{"function.ftruncate.md":"ftruncate »"},{"index.md":"PHP Manual"},{"ref.filesystem.md":"Функції файлової системи"}]}},"__N_SSG":true}