{"pageProps":{"page":{"slug":"intlchar.charage.md","content":"# IntlChar::charAge\n\n(PHP 7, PHP 8)\n\nIntlChar::charAge — Отримати \"вік\" символьного коду\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::charAge(int|string $codepoint): ?array\n```\n\nПовертає \"вік\" символьного коду.\n\n\"Вік\" - це версія Unicode в якій цей символьний код вперше був позначений (як не символ або для приватного використання) або прийнятий як символ. Це може бути корисним у випадках, коли необхідно передати рядок системі, що не підтримує нові символи.\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nНомер версії Unicode у вигляді масиву. Наприклад, версія *1.3.31.2* повернеться як `[1, 3, 31, 2]`. У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::charage(\"\\u{2603}\"));\nvar_dump(IntlChar::charage(\"\\u{1F576}\"));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n  [2]=>\n  int(0)\n  [3]=>\n  int(0)\n}\narray(4) {\n  [0]=>\n  int(7)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n  [3]=>\n  int(0)\n}\n```\n\n### Дивіться також\n\n-   [IntlChar::getUnicodeVersion()](intlchar.getunicodeversion.md) \\- Отримати версію Unicode\n-   [IntlChar::getIntPropertyMinValue()](intlchar.getintpropertyminvalue.md) \\- Отримати мінімальне значення для властивості Unicode\n-   [IntlChar::getIntPropertyValue()](intlchar.getintpropertyvalue.md) \\- Отримати значення властивості Unicode для символу\n","title":"IntlChar::charAge","contentType":2,"navigation":[{"class.intlchar.md":"« IntlChar"},{"intlchar.chardigitvalue.md":"IntlChar::charDigitValue »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}