{"pageProps":{"page":{"slug":"arrayobject.natcasesort.md","content":"# ArrayObject::natcasesort\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\nArrayObject::natcasesort — Сортувати масив, використовуючи реєстронезалежний алгоритм \"natural order\"\n\n### Опис\n\n```methodsynopsis\npublic ArrayObject::natcasesort(): true\n```\n\nЦей метод є реєстронезалежною версією [ArrayObject::natsort](arrayobject.natsort.md)\n\nЦей метод реалізує алгоритм сортування, при якому порядок літерно-цифрових рядків буде звичним для людини, зберігаючи при цьому ключ/значення. Такий алгоритм називається \"природний порядок\" (natural ordering).\n\n> **Зауваження** :\n> \n> Якщо обидва порівнювані значення еквівалентні, вони зберігають свій початковий порядок. До PHP 8.0.0 їх відносний порядок у відсортованому масиві не було визначено.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Тип значення, що повертається тепер **`true`**; раніше було bool. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** ArrayObject::natcasesort()\\*\\*\\*\\*\n\n```php\n<?php\n$array = array('IMG0.png', 'img12.png', 'img10.png', 'img2.png', 'img1.png', 'IMG3.png');\n\n$arr1 = new ArrayObject($array);\n$arr2 = clone $arr1;\n\n$arr1->asort();\necho \"Стандартная сортировка\\n\";\nprint_r($arr1);\n\n$arr2->natcasesort();\necho \"\\nСортировка в естественном порядке (без учёта регистра)\\n\";\nprint_r($arr2);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nСтандартная сортировка\nArrayObject Object\n(\n    [0] => IMG0.png\n    [5] => IMG3.png\n    [4] => img1.png\n    [2] => img10.png\n    [1] => img12.png\n    [3] => img2.png\n)\n\nСортировка в естественном порядке (без учёта регистра)\nArrayObject Object\n(\n    [0] => IMG0.png\n    [4] => img1.png\n    [3] => img2.png\n    [5] => IMG3.png\n    [2] => img10.png\n    [1] => img12.png\n)\n```\n\nДля більш детальної інформації дивіться сторінку Мартіна Пула (Martin Pool) [» Natural Order String Comparison](https://github.com/sourcefrog/natsort)\n\n### Дивіться також\n\n-   [ArrayObject::asort()](arrayobject.asort.md) \\- Сортувати записи за значенням\n-   [ArrayObject::ksort()](arrayobject.ksort.md) \\- Сортувати записи за ключами\n-   [ArrayObject::natsort()](arrayobject.natsort.md) - Сортувати масив, використовуючи алгоритм \"natural order\"\n-   [ArrayObject::uasort()](arrayobject.uasort.md) \\- Сортувати записи, використовуючи функцію користувача для порівняння елементів і зберігаючи при цьому зв'язок ключ/значення\n-   [ArrayObject::uksort()](arrayobject.uksort.md) \\- Сортувати масив за ключами, використовуючи функцію користувача для порівняння\n-   [natcasesort()](function.natcasesort.md) \\- Сортує масив алгоритмом природного сортування (natural order) без урахування регістру символів\n","title":"ArrayObject::natcasesort","contentType":2,"navigation":[{"arrayobject.ksort.md":"« ArrayObject::ksort"},{"arrayobject.natsort.md":"ArrayObject::natsort »"},{"index.md":"PHP Manual"},{"class.arrayobject.md":"ArrayObject"}]}},"__N_SSG":true}