{"pageProps":{"page":{"slug":"reflectionenum.getcases.md","content":"# ReflectionEnum::getCases\n\n(PHP 8 >= 8.1.0)\n\nReflectionEnum::getCases — Повертає список усіх варіантів перерахування\n\n### Опис\n\n```methodsynopsis\npublic ReflectionEnum::getCases(): array\n```\n\nПерелік може містити нуль або більше варіантів. Цей метод отримує всі певні випадки в лексичному порядку (тобто в порядку, в якому вони з'являються у вихідному коді).\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nМасив Reflection-об'єктів перерахування, по одному для кожного варіанта перерахування. Для простих перерахувань усі вони будуть екземплярами [ReflectionEnumUnitCase](class.reflectionenumunitcase.md). Для типізованих перерахувань усі вони будуть екземплярами [ReflectionEnumBackedCase](class.reflectionenumbackedcase.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionEnum::getCases()\\*\\*\\*\\*\n\n```php\n<?php\nenum Suit\n{\n    case Hearts;\n    case Diamonds;\n    case Clubs;\n    case Spades;\n}\n\n$rEnum = new ReflectionEnum(Suit::class);\n\n$cases = $rEnum->getCases();\n\nforeach ($cases as $rCase) {\n    var_dump($rCase->getValue());\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nenum(Suit::Hearts)\nenum(Suit::Diamonds)\nenum(Suit::Clubs)\nenum(Suit::Spades)\n```\n\n### Дивіться також\n\n-   [Перерахування](language.enumerations.md)\n-   [ReflectionEnum::getCase()](reflectionenum.getcase.md) \\- Повертає певний варіант перерахування\n-   [ReflectionEnum::isBacked()](reflectionenum.isbacked.md) \\- Визначає, чи є перерахування типовим\n","title":"ReflectionEnum::getCases","contentType":2,"navigation":[{"reflectionenum.getcase.md":"« ReflectionEnum::getCase"},{"reflectionenum.hascase.md":"ReflectionEnum::hasCase »"},{"index.md":"PHP Manual"},{"class.reflectionenum.md":"ReflectionEnum"}]}},"__N_SSG":true}