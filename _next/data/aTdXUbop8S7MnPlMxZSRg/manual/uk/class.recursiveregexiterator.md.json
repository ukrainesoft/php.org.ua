{"pageProps":{"page":{"slug":"class.recursiveregexiterator.md","content":"# Клас RecursiveRegexIterator\n\n(PHP 5 >= 5.2.0, PHP 7, PHP 8)\n\n## Вступ\n\nЦей рекурсивний ітератор може фільтрувати інший рекурсивний ітератор за допомогою регулярних виразів.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class RecursiveRegexIterator\n    \n\n    \n     extends\n      RegexIterator\n    \n\n    \n     implements\n      RecursiveIterator {\n\n    /* Наследуемые константы */\n    \n     public\n     const\n     int\n      RegexIterator::USE_KEY;\npublic\n     const\n     int\n      RegexIterator::INVERT_MATCH;\npublic\n     const\n     int\n      RegexIterator::MATCH;\npublic\n     const\n     int\n      RegexIterator::GET_MATCH;\npublic\n     const\n     int\n      RegexIterator::ALL_MATCHES;\npublic\n     const\n     int\n      RegexIterator::SPLIT;\npublic\n     const\n     int\n      RegexIterator::REPLACE;\n\n\n    /* Наследуемые свойства */\n    public\n     ?string\n      $replacement = null;\n\n\n    /* Методы */\n    \n   public __construct(    RecursiveIterator $iterator,    string $pattern,    int $mode = RecursiveRegexIterator::MATCH,    int $flags = 0,    int $pregFlags = 0)\n\n    public getChildren(): RecursiveRegexIterator\npublic hasChildren(): bool\n\n\n    /* Наследуемые методы */\n    public RegexIterator::accept(): bool\npublic RegexIterator::getFlags(): int\npublic RegexIterator::getMode(): int\npublic RegexIterator::getPregFlags(): int\npublic RegexIterator::getRegex(): string\npublic RegexIterator::setFlags(int $flags): void\npublic RegexIterator::setMode(int $mode): void\npublic RegexIterator::setPregFlags(int $pregFlags): void\n\n    public FilterIterator::accept(): bool\npublic FilterIterator::current(): mixed\npublic FilterIterator::key(): mixed\npublic FilterIterator::next(): void\npublic FilterIterator::rewind(): void\npublic FilterIterator::valid(): bool\n\n    public IteratorIterator::current(): mixed\npublic IteratorIterator::getInnerIterator(): ?Iterator\npublic IteratorIterator::key(): mixed\npublic IteratorIterator::next(): void\npublic IteratorIterator::rewind(): void\npublic IteratorIterator::valid(): bool\n\n   }\n```\n\n## Зміст\n\n-   [RecursiveRegexIterator::\\_\\_construct](recursiveregexiterator.construct.md) \\- Конструктор класу RecursiveRegexIterator\n-   [RecursiveRegexIterator::getChildren](recursiveregexiterator.getchildren.md)— Повертає ітератор до поточного елемента\n-   [RecursiveRegexIterator::hasChildren](recursiveregexiterator.haschildren.md)— Визначає, чи можлива навігація за вмістом поточного елемента\n","title":"Клас RecursiveRegexIterator","contentType":2,"navigation":[{"recursiveiteratoriterator.valid.md":"« RecursiveIteratorIterator::valid"},{"recursiveregexiterator.construct.md":"RecursiveRegexIterator::\\_\\_construct »"},{"index.md":"PHP Manual"},{"spl.iterators.md":"Ітератори"}]}},"__N_SSG":true}