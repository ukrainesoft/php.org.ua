{"pageProps":{"page":{"slug":"domnode.insertbefore.md","content":"# DOMNode::insertBefore\n\n(PHP 5, PHP 7, PHP 8)\n\nDOMNode::insertBefore — Додає новий дочірній вузол перед вказаним вузлом\n\n### Опис\n\n```methodsynopsis\npublic DOMNode::insertBefore(DOMNode $node, ?DOMNode $child = null): DOMNode|false\n```\n\nЦя функція вставляє новий вузол перед вказаним вузлом. Щоб вносити зміни в доданий дочірній вузол, необхідно використовувати вузол, що повертається.\n\nПри використанні існуючого вузла його буде переміщено.\n\n### Список параметрів\n\n`node`\n\nНовий вузол.\n\n`child`\n\nКонтрольний вузол. Якщо відсутня, то `node` додається до кінця списку нащадків.\n\n### Значення, що повертаються\n\nПовертає доданий вузол або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\n**`DOM_NO_MODIFICATION_ALLOWED_ERR`**\n\nВиникає, якщо вузол доступний тільки для читання або попередній батько вузла, що вставляється, доступний тільки для читання.\n\n**`DOM_HIERARCHY_REQUEST_ERR`**\n\nВиникає, якщо тип вузла не підтримує нащадків типу, що має вузол `node`або якщо доданий вузол є предком цільового вузла або ним самим.\n\n**`DOM_WRONG_DOCUMENT_ERR`**\n\nВиникає, якщо `node` створено іншому документі, відмінному від цього, у якому було створено цей вузол.\n\n**`DOM_NOT_FOUND`**\n\nВиникає, якщо `child`не является дочерним узлом данного узла.\n\n### Дивіться також\n\n-   [DOMNode::appendChild()](domnode.appendchild.md) \\- Додає новий дочірній вузол до кінця списку нащадків\n","title":"DOMNode::insertBefore","contentType":2,"navigation":[{"domnode.haschildnodes.md":"« DOMNode::hasChildNodes"},{"domnode.isdefaultnamespace.md":"DOMNode::isDefaultNamespace »"},{"index.md":"PHP Manual"},{"class.domnode.md":"DOMNode"}]}},"__N_SSG":true}