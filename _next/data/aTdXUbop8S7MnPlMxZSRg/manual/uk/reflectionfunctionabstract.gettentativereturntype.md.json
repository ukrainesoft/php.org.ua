{"pageProps":{"page":{"slug":"reflectionfunctionabstract.gettentativereturntype.md","content":"# ReflectionFunctionAbstract::getTentativeReturnType\n\n(PHP 8 >= 8.1.0)\n\nReflectionFunctionAbstract::getTentativeReturnType — Повертає попередній тип значення, що повертається, пов'язаний з функцією\n\n### Опис\n\n```methodsynopsis\npublic ReflectionFunctionAbstract::getTentativeReturnType(): ?ReflectionType\n```\n\nПовертає попередній тип значення, що повертається, пов'язаний з функцією.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає об'єкт [ReflectionType](class.reflectiontype.md), якщо вказано попередній тип значення, що повертається, в іншому випадку повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Приклад використання** ReflectionFunctionAbstract::getTentativeReturnType()\\*\\*\\*\\*\n\n```php\n<?php\n\n$method = new ReflectionMethod(\\ArrayAccess::class, 'offsetGet');\nvar_dump($method->getTentativeReturnType());\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nobject(ReflectionNamedType)#2 (0) {\n}\n```\n\n### Дивіться також\n\n-   [ReflectionFunctionAbstract::getReturnType()](reflectionfunctionabstract.getreturntype.md) \\- Отримує оголошений тип значення, що повертається функцією значення\n-   [ReflectionFunctionAbstract::hasTentativeReturnType()](reflectionfunctionabstract.hastentativereturntype.md) \\- Визначає, чи є у функції попередній тип значення, що повертається\n-   [Сумісність типів значень, що повертаються, з внутрішніми класами](language.oop5.inheritance.md#language.oop5.inheritance.internal-classes)\n","title":"ReflectionFunctionAbstract::getTentativeReturnType","contentType":2,"navigation":[{"reflectionfunctionabstract.getstaticvariables.md":"« ReflectionFunctionAbstract::getStaticVariables"},{"reflectionfunctionabstract.hasreturntype.md":"ReflectionFunctionAbstract::hasReturnType »"},{"index.md":"PHP Manual"},{"class.reflectionfunctionabstract.md":"ReflectionFunctionAbstract"}]}},"__N_SSG":true}