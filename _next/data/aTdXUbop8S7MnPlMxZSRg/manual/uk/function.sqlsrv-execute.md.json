{"pageProps":{"page":{"slug":"function.sqlsrv-execute.md","content":"# sqlsrv\\_execute\n\n(No version information available, might only be in Git)\n\nsqlsrv\\_execute — Виконує запит, підготовлений за допомогою [sqlsrv\\_prepare()](function.sqlsrv-prepare.md)\n\n### Опис\n\n```methodsynopsis\nsqlsrv_execute(resource $stmt): bool\n```\n\nВиконує запит, підготовлений за допомогою [sqlsrv\\_prepare()](function.sqlsrv-prepare.md). Функція ідеально підходить для багаторазового виконання підготовленого запиту з різними параметрами.\n\n### Список параметрів\n\n`stmt`\n\nРесурс оператора, що повертається [sqlsrv\\_prepare()](function.sqlsrv-prepare.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** sqlsrv\\_execute()\\*\\*\\*\\*\n\nУ цьому прикладі показано, як підготувати оператор за допомогою [sqlsrv\\_prepare()](function.sqlsrv-prepare.md) та повторно виконати його кілька разів (з різними значеннями параметрів) за допомогою **sqlsrv\\_execute()**\n\n```php\n<?php\n$serverName = \"serverName\\sqlexpress\";\n$connectionInfo = array( \"Database\"=>\"dbName\", \"UID\"=>\"username\", \"PWD\"=>\"password\");\n$conn = sqlsrv_connect( $serverName, $connectionInfo);\nif( $conn === false) {\n    die( print_r( sqlsrv_errors(), true));\n}\n\n$sql = \"UPDATE Table_1\n        SET OrderQty = ?\n        WHERE SalesOrderID = ?\";\n\n// Инициализация параметров и подготовка запроса.\n// Переменные $qty и $id связаны с оператором $stmt.\n$qty = 0; $id = 0;\n$stmt = sqlsrv_prepare( $conn, $sql, array( &$qty, &$id));\nif( !$stmt ) {\n    die( print_r( sqlsrv_errors(), true));\n}\n\n// Настройка информации SalesOrderDetailID и OrderQty.\n// Этот массив сопоставляет идентификатор заказа с количеством заказа в парах ключ => значение.\n$orders = array( 1=>10, 2=>20, 3=>30);\n\n// Выполнение запроса для каждого заказа.\nforeach( $orders as $id => $qty) {\n    // Поскольку $id и $qty привязаны к $stmt1,\n    // их обновлённые значения используются при каждом выполнении запроса.\n    if( sqlsrv_execute( $stmt ) === false ) {\n          die( print_r( sqlsrv_errors(), true));\n    }\n}\n?>\n```\n\n### Примітки\n\nКоли ви підготуєте запит, який використовує змінні як параметри, змінні прив'язуються до оператора. Це означає, що якщо ви оновите значення змінних, наступного разу, коли ви виконаєте запит, він буде працювати з оновленими значеннями параметрів. Для операторів, які ви плануєте виконати лише один раз, використовуйте [sqlsrv\\_query()](function.sqlsrv-query.md)\n\n### Дивіться також\n\n-   [sqlsrv\\_prepare()](function.sqlsrv-prepare.md) \\- готує запит до виконання\n-   [sqlsrv\\_query()](function.sqlsrv-query.md) \\- готує та виконує запит\n","title":"sqlsrv\\_execute","contentType":2,"navigation":[{"function.sqlsrv-errors.md":"« sqlsrv\\_errors"},{"function.sqlsrv-fetch-array.md":"sqlsrv\\_fetch\\_array »"},{"index.md":"PHP Manual"},{"ref.sqlsrv.md":"Функції SQLSRV"}]}},"__N_SSG":true}