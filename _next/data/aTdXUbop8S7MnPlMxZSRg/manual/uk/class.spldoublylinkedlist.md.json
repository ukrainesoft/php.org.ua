{"pageProps":{"page":{"slug":"class.spldoublylinkedlist.md","content":"# Клас SplDoublyLinkedList\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\n## Вступ\n\nКлас SplDoublyLinkedList забезпечує основні функціональні можливості двозв'язкового списку.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class SplDoublyLinkedList\n    \n\n    \n     implements\n      Iterator,\n\n     Countable,\n\n     ArrayAccess,\n\n     Serializable {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      IT_MODE_LIFO;\n\n    public\n     const\n     int\n      IT_MODE_FIFO;\n\n    public\n     const\n     int\n      IT_MODE_DELETE;\n\n    public\n     const\n     int\n      IT_MODE_KEEP;\n\n\n    /* Методы */\n    \n   public add(int $index, mixed $value): void\npublic bottom(): mixed\npublic count(): int\npublic current(): mixed\npublic getIteratorMode(): int\npublic isEmpty(): bool\npublic key(): int\npublic next(): void\npublic offsetExists(int $index): bool\npublic offsetGet(int $index): mixed\npublic offsetSet(?int $index, mixed $value): void\npublic offsetUnset(int $index): void\npublic pop(): mixed\npublic prev(): void\npublic push(mixed $value): void\npublic rewind(): void\npublic serialize(): string\npublic setIteratorMode(int $mode): int\npublic shift(): mixed\npublic top(): mixed\npublic unserialize(string $data): void\npublic unshift(mixed $value): void\npublic valid(): bool\n\n   }\n```\n\n## Обумовлені константи\n\n## Напрямок ітерації\n\n**`SplDoublyLinkedList::IT_MODE_LIFO`**\n\nСписок повторюватиметься по порядку \"останнім прийшов - першим вийшов\", як стек.\n\n**`SplDoublyLinkedList::IT_MODE_FIFO`**\n\nСписок повторюватиметься по порядку \"першим прийшов - першим вийшов\", як черга.\n\n## Поведінка ітерації\n\n**`SplDoublyLinkedList::IT_MODE_DELETE`**\n\nІтерація видалить повторювані елементи.\n\n**`SplDoublyLinkedList::IT_MODE_KEEP`**\n\nІтерація не видаляє повторювані елементи.\n\n## Зміст\n\n-   [SplDoublyLinkedList::add](spldoublylinkedlist.add.md)— Додає/вставляє нове значення за вказаним індексом\n-   [SplDoublyLinkedList::bottom](spldoublylinkedlist.bottom.md) \\- Отримує вузол, що знаходиться на початку двозв'язкового списку\n-   [SplDoublyLinkedList::count](spldoublylinkedlist.count.md) \\- Підраховує кількість елементів у двозв'язному списку\n-   [SplDoublyLinkedList::current](spldoublylinkedlist.current.md)— Повертає поточний елемент масиву\n-   [SplDoublyLinkedList::getIteratorMode](spldoublylinkedlist.getiteratormode.md)— Повертає режим ітерації\n-   [SplDoublyLinkedList::isEmpty](spldoublylinkedlist.isempty.md)— Перевіряє, чи двозв'язковий список є порожнім.\n-   [SplDoublyLinkedList::key](spldoublylinkedlist.key.md)— Повертає індекс поточного сайту\n-   [SplDoublyLinkedList::next](spldoublylinkedlist.next.md)— Переміщує ітератор до наступного елемента\n-   [SplDoublyLinkedList::offsetExists](spldoublylinkedlist.offsetexists.md)— Перевіряє, чи існує запитуваний індекс\n-   [SplDoublyLinkedList::offsetGet](spldoublylinkedlist.offsetget.md)— Повертає значення за вказаним індексом\n-   [SplDoublyLinkedList::offsetSet](spldoublylinkedlist.offsetset.md)— Встановлює значення за заданим індексом $index у $value\n-   [SplDoublyLinkedList::offsetUnset](spldoublylinkedlist.offsetunset.md)— Видаляє значення за вказаним індексом $index\n-   [SplDoublyLinkedList::pop](spldoublylinkedlist.pop.md) \\- Видаляє (виштовхує) вузол, що знаходиться в кінці двозв'язкового списку\n-   [SplDoublyLinkedList::prev](spldoublylinkedlist.prev.md)— Переміщує ітератор до попереднього елемента\n-   [SplDoublyLinkedList::push](spldoublylinkedlist.push.md)— Поміщає елемент у кінець двозв'язкового списку\n-   [SplDoublyLinkedList::rewind](spldoublylinkedlist.rewind.md)— Повертає ітератор на початок\n-   [SplDoublyLinkedList::serialize](spldoublylinkedlist.serialize.md)— Серіалізує сховище\n-   [SplDoublyLinkedList::setIteratorMode](spldoublylinkedlist.setiteratormode.md) \\- Встановлює режим ітерації\n-   [SplDoublyLinkedList::shift](spldoublylinkedlist.shift.md) \\- Видаляє вузол, що знаходиться на початку двозв'язкового списку\n-   [SplDoublyLinkedList::top](spldoublylinkedlist.top.md)— Отримує вузол, що знаходиться наприкінці двозв'язкового списку.\n-   [SplDoublyLinkedList::unserialize](spldoublylinkedlist.unserialize.md) \\- Десеріалізує сховище\n-   [SplDoublyLinkedList::unshift](spldoublylinkedlist.unshift.md)— Вставляє елемент на початок двозв'язкового списку\n-   [SplDoublyLinkedList::valid](spldoublylinkedlist.valid.md)— Перевіряє, чи містить вузли двозв'язковий список\n","title":"Клас SplDoublyLinkedList","contentType":2,"navigation":[{"spl.datastructures.md":"« Структури даних"},{"spldoublylinkedlist.add.md":"SplDoublyLinkedList::add »"},{"index.md":"PHP Manual"},{"spl.datastructures.md":"Структури даних"}]}},"__N_SSG":true}