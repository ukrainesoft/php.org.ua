{"pageProps":{"page":{"slug":"function.uniqid.md","content":"# uniqid\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nuniqid — Створити унікальний ID\n\n### Опис\n\n```methodsynopsis\nuniqid(string $prefix = \"\", bool $more_entropy = false): string\n```\n\nОтримує унікальний ідентифікатор з префіксом, що базується на поточному часі в мікросекундах.\n\n**Застереження**\n\nФункція не створює криптографічно захищені значення та *не повинна* використовуватися для криптографічних цілей або цілей, що вимагають, щоб значення, що повертаються, були недоступні для розгадування.\n\nЯкщо потрібна криптографічно безпечна випадкова послідовність, можна використати клас [Random\\\\Randomizer](class.random-randomizer.md) з двигуном [Random\\\\Engine\\\\Secure](class.random-engine-secure.md). Для простих сценаріїв є функції [random\\_int()](function.random-int.md) і [random\\_bytes()](function.random-bytes.md) із зручним API криптографічно безпечного генератора псевдовипадкових чисел (CSPRNG), що підтримується операційною системою.\n\n**Увага**\n\nЦя функція не гарантує отримання унікального значення. Більшість операційних систем синхронізує час з NTP, або його аналогами, тому системний час постійно змінюється. Отже, можлива ситуація, коли ця функція поверне неунікальний ідентифікатор для процесу/потоку. Щоб збільшити ймовірність отримання унікального значення, використовуйте параметр `more_entropy`\n\n### Список параметрів\n\n`prefix`\n\nМоже бути корисно, наприклад, якщо ідентифікатори генеруються одночасно на декількох хостах і генерація ідентифікаторів виробляється в одну й ту саму мікросекунду.\n\nЗ порожнім параметром `prefix`, що повертається рядок буде довжиною 13 символів. Якщо параметр `more_entropy`равен\\*\\*`true`\\*\\*, то рядок буде довжиною 23 символи.\n\n`more_entropy`\n\nЯкщо дорівнює **`true`**, то функция**uniqid()** додасть додаткову ентропію (використовуючи комбінований лінійний конгруентний генератор) в кінці значення, що повертається, що збільшує ймовірність унікальності результату.\n\n### Значення, що повертаються\n\nПовертає унікальний ідентифікатор у вигляді рядка.\n\n**Увага**\n\nЦя функція намагається створити унікальний ідентифікатор, але це не дає 100% гарантії унікальності.\n\n### Приклади\n\n**Приклад #1 Приклад використання** uniqid()\\*\\*\\*\\*\n\n```php\n<?php\n/* Уникальный id, наПриклад: 4b3403665fea6 */\nprintf(\"uniqid(): %s\\r\\n\", uniqid());\n\n/* Префикс к уникальному id можно добавить одним\n * из следующих способов:\n *\n * $uniqid = $prefix . uniqid();\n * $uniqid = uniqid($prefix);\n */\nprintf(\"uniqid('php_'): %s\\r\\n\", uniqid('php_'));\n\n/* Также можно активировать параметр большей энтропии, который\n * требуется на некоторых системах, таких как Cygwin. Таким образом\n * функция uniqid() сгенерирует значение: 4b340550242239.64159797\n */\nprintf(\"uniqid('', true): %s\\r\\n\", uniqid('', true));\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> В Cygwin параметр`more_entropy` повинен бути заданий як **`true`** до роботи цієї функції.\n\n### Дивіться також\n\n-   [random\\_bytes()](function.random-bytes.md) \\- Отримує криптографічно безпечні випадкові байти\n","title":"uniqid","contentType":2,"navigation":[{"function.time-sleep-until.md":"« time\\_sleep\\_until"},{"function.unpack.md":"unpack »"},{"index.md":"PHP Manual"},{"ref.misc.md":"Різні функції"}]}},"__N_SSG":true}