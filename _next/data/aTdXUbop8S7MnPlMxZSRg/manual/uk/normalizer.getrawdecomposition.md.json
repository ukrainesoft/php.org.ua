{"pageProps":{"page":{"slug":"normalizer.getrawdecomposition.md","content":"# Normalizer::getRawDecomposition\n\n# normalizer\\_get\\_raw\\_decomposition\n\n(PHP 7 >= 7.3, PHP 8)\n\nNormalizer::getRawDecomposition -- normalizer\\_get\\_raw\\_decomposition — Витягує властивість Decomposition\\_Mapping для заданого символу UTF-8\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic static Normalizer::getRawDecomposition(string $string, int $form = Normalizer::FORM_C): ?string\n```\n\nПроцедурний стиль\n\n```methodsynopsis\nnormalizer_get_raw_decomposition(string $string, int $form = Normalizer::FORM_C): ?string\n```\n\nВитягує властивість Decomposition\\_Mapping, як визначено Unicode Character Database (UCD), для заданого символу UTF-8.\n\n### Список параметрів\n\n`string`\n\nРядок, який повинен являти собою одиничний символ у кодуванні UTF-8.\n\n### Значення, що повертаються\n\nПовертає рядок (string), що містить властивість Decomposition\\_Mapping, якщо воно є у UCD.\n\nПовертає **`null`** якщо для символу відсутня властивість Decomposition\\_Mapping.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Normalizer::getRawDecomposition()\\*\\*\\*\\*\n\n```php\n<?php\n\n$result = \"\";\n$strings = [\n    \"a\",\n    \"\\u{FFDA}\",\n    \"\\u{FDFA}\",\n    \"\",\n    \"aa\",\n    \"\\xF5\",\n];\n\nforeach ($strings as $string) {\n    $decomposition = Normalizer::getRawDecomposition($string);\n    // $decomposition = normalizer_get_raw_decomposition($string); Процедурный стиль\n\n    $error_code = intl_get_error_code();\n    $error_message = intl_get_error_message();\n\n    $string_hex = bin2hex($string);\n    $result .= \"---------------------\\n\";\n\n    if ($decomposition === null) {\n        $result .= \"'$string_hex' не имеет соответствия декомпозиции\\n\" ;\n    } else {\n        $result .= \"'$string_hex' имеет соответствие декомпозиции '\" . bin2hex($decomposition) . \"'\\n\" ;\n    }\n\n    $result .= \"error info: '$error_message' ($error_code)\\n\";\n}\n\necho $result;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n---------------------\n'61' не имеет соответствия декомпозиции\nerror info: 'U_ZERO_ERROR' (0)\n---------------------\n'efbf9a' имеет соответствие декомпозиции 'e385a1'\nerror info: 'U_ZERO_ERROR' (0)\n---------------------\n'efb7ba' имеет соответствие декомпозиции 'd8b5d984d98920d8a7d984d984d98720d8b9d984d98ad98720d988d8b3d984d985'\nerror info: 'U_ZERO_ERROR' (0)\n---------------------\n'' не имеет соответствия декомпозиции\nerror info: 'Input string must be exactly one UTF-8 encoded code point long.: U_ILLEGAL_ARGUMENT_ERROR' (1)\n---------------------\n'6161' не имеет соответствия декомпозиции\nerror info: 'Input string must be exactly one UTF-8 encoded code point long.: U_ILLEGAL_ARGUMENT_ERROR' (1)\n---------------------\n'f5' не имеет соответствия декомпозиции\nerror info: 'Code point out of range: U_ILLEGAL_ARGUMENT_ERROR' (1)\n```\n\n### Дивіться також\n\n-   [Normalizer::normalize()](normalizer.normalize.md) \\- Нормалізація рядка\n-   [Normalizer::isNormalized()](normalizer.isnormalized.md) \\- Перевірити, чи переданий рядок відповідає заданій формі нормалізації\n","title":"Normalizer::getRawDecomposition","contentType":2,"navigation":[{"class.normalizer.md":"« Normalizer"},{"normalizer.isnormalized.md":"Normalizer::isNormalized »"},{"index.md":"PHP Manual"},{"class.normalizer.md":"Normalizer"}]}},"__N_SSG":true}