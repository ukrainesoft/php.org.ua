{"pageProps":{"page":{"slug":"function.pg-prepare.md","content":"# pg\\_prepare\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\npg\\_prepare — Надсилає запит на створення параметризованого SQL виразу і чекає на його завершення\n\n### Опис\n\n```methodsynopsis\npg_prepare(PgSql\\Connection $connection = ?, string $stmtname, string $query): PgSql\\Result|false\n```\n\n**pg\\_prepare()** створює заготівлю SQL вирази на сервері для подальшого запуску функціями [pg\\_execute()](function.pg-execute.md) або [pg\\_send\\_execute()](function.pg-send-execute.md). Це дозволяє багаторазово виконувати один раз створені запити з різними параметрами . **pg\\_prepare()** підтримується PostgreSQL версії 7.4 та вище. Функція не працюватиме з серверами ранніх версій.\n\nФункція створює заготівлю SQL запиту під назвою `stmtname` і тілом `query`, який повинен містити один SQL вираз . `stmtname` може бути порожнім рядком, тоді буде створено безіменну заготівлю. Якщо якась безіменна заготовка вже визначена, вона буде замінена на нову автоматично. В інших випадках збіг імен нової та існуючої в даній сесії заготовок призведе до помилки. Якщо в `query` будуть передаватися параметри, вони замінять псевдозмінні $1, $2 і т.д. під час передачі запиту.\n\nПодібні заготівлі запитів можна також робити за допомогою SQL-команди `PREPARE` (але **pg\\_prepare()** більш гнучка, оскільки вимагає суворої типізації своїх параметрів). Важливо, що у PHP немає функцій видалення підготовлених SQL-выражений, цього використовуйте команду SQL `DEALLOCATE`\n\n### Список параметрів\n\n`connection`\n\nЕкземпляр [PgSql\\\\Connection](class.pgsql-connection.md). Якщо параметр `connection` не вказано, буде вибрано стандартне з'єднання. Стандартне з'єднання — це останнє з'єднання, яке встановила функція [pg\\_connect()](function.pg-connect.md) або [pg\\_pconnect()](function.pg-pconnect.md)\n\n**Увага**\n\nПочинаючи з версії PHP 8.1.0, використання стандартного з'єднання застаріло.\n\n`stmtname`\n\nІм'я заготовки, що створюється. Має бути унікальним у межах сесії. Якщо встановлено порожній рядок, буде створено безіменний SQL вираз. При цьому він перезапише вже існуючий безіменний вираз, визначений раніше.\n\n`query`\n\nПараметризований SQL-запит. Повинен містити лише один вираз (кілька виразів розділених крапкою з комою не підтримуються). Якщо в запит будуть передаватися параметри, вони замінять псевдозмінні $1, $2 і т.д.\n\n### Значення, що повертаються\n\nЕкземпляр [PgSql\\\\Result](class.pgsql-result.md) у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Повертає екземпляр [PgSql\\\\Result](class.pgsql-result.md); раніше повертався ресурс ([resource](language.types.resource.md) |\n| 8.1.0 | Параметр`connection` тепер чекає екземпляр [PgSql\\\\Connection](class.pgsql-connection.md); раніше очікувався ресурс ([resource](language.types.resource.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** pg\\_prepare()\\*\\*\\*\\*\n\n```php\n<?php\n// Подключение к базе данных \"mary\"\n$dbconn = pg_connect(\"dbname=mary\");\n\n// Подготовка запроса\n$result = pg_prepare($dbconn, \"my_query\", 'SELECT * FROM shops WHERE name = $1');\n\n// Запуск запроса на выполнение. Стоит отметить, что нет необходимости экранировать\n// спецсимволы в строке \"Joe's Widgets\"\n$result = pg_execute($dbconn, \"my_query\", array(\"Joe's Widgets\"));\n\n// Запуск на выполнение того же запроса, но с другим параметром\n$result = pg_execute($dbconn, \"my_query\", array(\"Clothes Clothes Clothes\"));\n\n?>\n```\n\n### Дивіться також\n\n-   [pg\\_execute()](function.pg-execute.md) \\- Запускає виконання раніше підготовленого параметризованого запиту та чекає результату\n-   [pg\\_send\\_execute()](function.pg-send-execute.md) \\- Запускає попередньо підготовлений SQL-запит та передає йому параметри; не чекає результату, що повертається\n","title":"pg\\_prepare","contentType":2,"navigation":[{"function.pg-port.md":"« pg\\_port"},{"function.pg-put-line.md":"pg\\_put\\_line »"},{"index.md":"PHP Manual"},{"ref.pgsql.md":"Функції PostgreSQL"}]}},"__N_SSG":true}