{"pageProps":{"page":{"slug":"ds-vector.rotate.md","content":"# Ds\\\\Vector::rotate\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Vector::rotate — Перемотує вектор на задану кількість значень\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Vector::rotate(int $rotations): void\n```\n\nПеремотує вектор на задану кількість значень. Ця операція аналогічна до виконання задану кількість разів коду `$vector->push($vector->shift())`якщо кількість оборотів позитивно і `$vector->unshift($vector->pop())`якщо негативно.\n\n### Список параметрів\n\n`rotations`\n\nКількість значень, які треба \"перемотати\".\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання. Буде змінено поточний вектор.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Vector::rotate()\\*\\*\\*\\*\n\n```php\n<?php\n$vector = new \\Ds\\Vector([\"a\", \"b\", \"c\", \"d\"]);\n\n$vector->rotate(1); // Аналогично $a = $vector->shift(); $vector->push($a);\nprint_r($vector);\n\n$vector->rotate(2);\nprint_r($vector);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n(\n    [0] => b\n    [1] => c\n    [2] => d\n    [3] => a\n)\nDs\\Vector Object\n(\n    [0] => d\n    [1] => a\n    [2] => b\n    [3] => c\n)\n```\n","title":"Ds\\\\Vector::rotate","contentType":2,"navigation":[{"ds-vector.reversed.md":"« Ds\\\\Vector::reversed"},{"ds-vector.set.md":"Ds\\\\Vector::set »"},{"index.md":"PHP Manual"},{"class.ds-vector.md":"Ds\\\\Vector"}]}},"__N_SSG":true}