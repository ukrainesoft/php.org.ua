{"pageProps":{"page":{"slug":"language.oop5.static.md","content":"## Ключове слово static\n\n**Підказка**\n\nЦя сторінка описує використання ключового слова `static` для визначення статичних методів та властивостей . `static` також може використовуватися для [визначення статичних змінних](language.variables.scope.md#language.variables.scope.static) [визначення статичних анонімних функцій](functions.anonymous.md#functions.anonymous-functions.static) і [пізнього статичного зв'язування](language.oop5.late-static-bindings.md). Для отримання інформації про таке застосування ключового слова `static` зверніться до вищевказаних сторінок.\n\nОголошення властивостей та методів класу статичними дозволяє звертатися до них без створення екземпляра класу. До них також можна отримати статичний доступ у створеному екземплярі об'єкта класу.\n\n### Статичні методи\n\nТак як статичні методи викликаються без створення екземпляра класу, то псевдозмінна $this недоступна всередині статичних методів.\n\n**Увага**\n\nВиклик нестатичних методів статично викликає помилку [Error](class.error.md)\n\nДо PHP 8.0.0 виклик нестатичних методів статично був оголошений застарілим та викликав помилку рівня **`E_DEPRECATED`**\n\n**Приклад #1 Приклад статичного методу**\n\n```php\n<?php\nclass Foo {\n    public static function aStaticMethod() {\n        // ...\n    }\n}\n\nFoo::aStaticMethod();\n$classname = 'Foo';\n$classname::aStaticMethod();\n?>\n```\n\n### Статичні властивості\n\nДоступ до статичних властивостей здійснюється за допомогою [оператора дозволу області видимості](language.oop5.paamayim-nekudotayim.md) `::`), і до них не можна отримати доступ через оператор об'єкта (`->`\n\nНа клас можна посилатися за допомогою змінної. Значення змінної у такому разі не може бути ключовим словом (наприклад, `self` `parent`и`static`\n\n**Приклад #2 Приклад статичної властивості**\n\n```php\n<?php\nclass Foo\n{\n    public static $my_static = 'foo';\n\n    public function staticValue() {\n        return self::$my_static;\n    }\n}\n\nclass Bar extends Foo\n{\n    public function fooStatic() {\n        return parent::$my_static;\n    }\n}\n\n\nprint Foo::$my_static . \"\\n\";\n\n$foo = new Foo();\nprint $foo->staticValue() . \"\\n\";\nprint $foo->my_static . \"\\n\";      // Не определено свойство my_static\n\nprint $foo::$my_static . \"\\n\";\n$classname = 'Foo';\nprint $classname::$my_static . \"\\n\";\n\nprint Bar::$my_static . \"\\n\";\n$bar = new Bar();\nprint $bar->fooStatic() . \"\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу PHP 8 аналогічний:\n\n```\nfoo\nfoo\n\nNotice: Accessing static property Foo::$my_static as non static in /in/V0Rvv on line 23\n\nWarning: Undefined property: Foo::$my_static in /in/V0Rvv on line 23\n\nfoo\nfoo\nfoo\nfoo\n```\n","title":"Ключове слово static","contentType":2,"navigation":[{"language.oop5.paamayim-nekudotayim.md":"« Оператор роздільної здатності видимості (::)"},{"language.oop5.abstract.md":"Абстрактні класи »"},{"index.md":"PHP Manual"},{"language.oop5.md":"Класи та об'єкти"}]}},"__N_SSG":true}