{"pageProps":{"page":{"slug":"eventconfig.setmaxdispatchinterval.md","content":"# EventConfig::setMaxDispatchInterval\n\n(PECL event >= 2.1.0-alpha)\n\nEventConfig::setMaxDispatchInterval — Запобігти інверсії пріоритетів\n\n### Опис\n\n```methodsynopsis\npublic\n   EventConfig::setMaxDispatchInterval(\n    int\n     $max_interval\n   , \n    int\n     $max_callbacks\n   , \n    int\n     $min_priority\n   ): void\n```\n\nЗапобігти інверсії пріоритетів шляхом обмеження кількості оброблюваних низькопріоритетних подій перед черговою перевіркою на наявність більш пріоритетних.\n\n> **Зауваження** :\n> \n> Доступно с`libevent 2.1.0-alpha`\n\n### Список параметрів\n\n`max_interval`\n\nІнтервал, після якого Libevent зобов'язаний припинити запускати callback-функції та перевірити наявність нових подій, або щоб не використовувати такий функціонал.\n\n`max_callbacks`\n\nКількість запущених callback-функцій, після якого Libevent призупинить їх запуск та перевірить, чи є нові події . \\*\\*`-1`\\*\\*щоб не використовувати такий функціонал.\n\n`min_priority`\n\nПріоритет, нижче якого `max_interval`и`max_callbacks` не повинні застосовуватись. Якщо встановлено як , ці обмеження будуть застосовуватися до подій з будь-яким пріоритетом; Якщо встановлено , обмеження будуть застосовуватись до подій пріоритету і вище. І так далі.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n","title":"EventConfig::setMaxDispatchInterval","contentType":2,"navigation":[{"eventconfig.setflags.md":"« EventConfig::setFlags"},{"class.eventdnsbase.md":"EventDnsBase »"},{"index.md":"PHP Manual"},{"class.eventconfig.md":"EventConfig"}]}},"__N_SSG":true}