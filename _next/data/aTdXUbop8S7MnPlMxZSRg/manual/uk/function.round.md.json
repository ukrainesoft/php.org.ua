{"pageProps":{"page":{"slug":"function.round.md","content":"# round\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nround - Округлює число з плаваючою точкою (float)\n\n### Опис\n\n```methodsynopsis\nround(int|float $num, int $precision = 0, int $mode = PHP_ROUND_HALF_UP): float\n```\n\nПовертає заокруглене значення числа `num` з точністю, вказаною у параметрі `precision` (кількість цифр після коми). Значення точності `precision` можна задавати негативним значенням або нулем (за замовчуванням).\n\n### Список параметрів\n\n`num`\n\nЗначення для заокруглення.\n\n`precision`\n\nНеобов'язкова кількість десяткових знаків, до яких буде заокруглено число.\n\nЯкщо точність `precision` позитивна, число `num` округляється до точності `precision` значних цифр після десяткової точки.\n\nЯкщо точність `precision` негативна, число `num` округляється до точності `precision` значущих цифр перед десятковою точкою, тобто до наступного кратного результату виразу `pow(10, -$precision)`, наприклад, для точності `precision`, що дорівнює -1, число `num` округляється до десятків, для точності `precision`, Рівною -2, - До сотень і т. д.\n\n`mode`\n\nЩоб задати режим заокруглення, вказують одну з наступних констант:\n\n| Константы | Опис |\n| --- | --- |\n| **`PHP_ROUND_HALF_UP`** | Округлює позитивне число `num` в більшу сторону, а негативне в меншу, перетворюючи 1.5 на 2 і -1.5 на -2 (прагне від нуля). |\n| **`PHP_ROUND_HALF_DOWN`** | Округлює позитивне число `num` у меншу сторону, а негативне на більшу, перетворюючи 1.5 на 1 і -1.5 на -1 (прагне до нуля). |\n| **`PHP_ROUND_HALF_EVEN`** | Округлює число `num` до найближчого парного значення, перетворюючи 1.5 та 2.5 на 2. |\n| **`PHP_ROUND_HALF_ODD`** | Округлює число `num` до найближчого непарного значення, перетворюючи 1.5 на 1 і 2.5 на 3. |\n\n### Значення, що повертаються\n\nПовертає у вигляді числа з плаваючою точкою (float) значення, заокруглене до заданої параметром `precision` точності.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Параметр`num` більше не приймає внутрішні об'єкти, що підтримують числове перетворення. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** round()\\*\\*\\*\\*\n\n```php\n<?php\n\nvar_dump(round(3.4));\nvar_dump(round(3.5));\nvar_dump(round(3.6));\nvar_dump(round(3.6, 0));\nvar_dump(round(5.045, 2));\nvar_dump(round(5.055, 2));\nvar_dump(round(345, -2));\nvar_dump(round(345, -3));\nvar_dump(round(678, -2));\nvar_dump(round(678, -3));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nfloat(3)\nfloat(4)\nfloat(4)\nfloat(4)\nfloat(5.05)\nfloat(5.06)\nfloat(300)\nfloat(0)\nfloat(700)\nfloat(1000)\n```\n\n**Приклад #2 Как параметр`precision` впливає на числа з плаваючою точкою**\n\n```php\n<?php\n\n$number = 135.79;\n\nvar_dump(round($number, 3));\nvar_dump(round($number, 2));\nvar_dump(round($number, 1));\nvar_dump(round($number, 0));\nvar_dump(round($number, -1));\nvar_dump(round($number, -2));\nvar_dump(round($number, -3));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nfloat(135.79)\nfloat(135.79)\nfloat(135.8)\nfloat(136)\nfloat(140)\nfloat(100)\nfloat(0)\n```\n\n**Приклад #3 Приклад використання параметра `mode`**\n\n```php\n<?php\n\necho 'Режимы округления с 9.5' . PHP_EOL;\nvar_dump(round(9.5, 0, PHP_ROUND_HALF_UP));\nvar_dump(round(9.5, 0, PHP_ROUND_HALF_DOWN));\nvar_dump(round(9.5, 0, PHP_ROUND_HALF_EVEN));\nvar_dump(round(9.5, 0, PHP_ROUND_HALF_ODD));\n\necho PHP_EOL;\necho 'Режимы округления с 8.5' . PHP_EOL;\nvar_dump(round(8.5, 0, PHP_ROUND_HALF_UP));\nvar_dump(round(8.5, 0, PHP_ROUND_HALF_DOWN));\nvar_dump(round(8.5, 0, PHP_ROUND_HALF_EVEN));\nvar_dump(round(8.5, 0, PHP_ROUND_HALF_ODD));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nРежимы округления с 9.5\nfloat(10)\nfloat(9)\nfloat(10)\nfloat(9)\n\nРежимы округления с 8.5\nfloat(9)\nfloat(8)\nfloat(8)\nfloat(9)\n```\n\n**Приклад #4 Приклад використання параметра `mode` із зазначенням точності `precision`**\n\n```php\n<?php\n\necho 'Округление с точностью до 1 знака с константой PHP_ROUND_HALF_UP в качестве значения режима округления' . PHP_EOL;\nvar_dump(round( 1.55, 1, PHP_ROUND_HALF_UP));\nvar_dump(round(-1.55, 1, PHP_ROUND_HALF_UP));\n\necho PHP_EOL;\necho 'Округление с точностью до 1 знака с константой PHP_ROUND_HALF_DOWN в качестве значения режима округления' . PHP_EOL;\nvar_dump(round( 1.55, 1, PHP_ROUND_HALF_DOWN));\nvar_dump(round(-1.55, 1, PHP_ROUND_HALF_DOWN));\n\necho PHP_EOL;\necho 'Округление с точностью до 1 знака с константой PHP_ROUND_HALF_EVEN в качестве значения режима округления' . PHP_EOL;\nvar_dump(round( 1.55, 1, PHP_ROUND_HALF_EVEN));\nvar_dump(round(-1.55, 1, PHP_ROUND_HALF_EVEN));\n\necho PHP_EOL;\necho 'Округление с точностью до 1 знака с константой PHP_ROUND_HALF_ODD в качестве значения режима округления' . PHP_EOL;\nvar_dump(round( 1.55, 1, PHP_ROUND_HALF_ODD));\nvar_dump(round(-1.55, 1, PHP_ROUND_HALF_ODD));\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nОкругление с точностью до 1 знака с константой PHP_ROUND_HALF_UP в качестве значения режима округления\nfloat(1.6)\nfloat(-1.6)\n\nОкругление с точностью до 1 знака с константой PHP_ROUND_HALF_DOWN в качестве значения режима округления\nfloat(1.5)\nfloat(-1.5)\n\nОкругление с точностью до 1 знака с константой PHP_ROUND_HALF_EVEN в качестве значения режима округления\nfloat(1.6)\nfloat(-1.6)\n\nОкругление с точностью до 1 знака с константой PHP_ROUND_HALF_ODD в качестве значения режима округления\nfloat(1.5)\nfloat(-1.5)\n```\n\n### Дивіться також\n\n-   [ceil()](function.ceil.md) \\- Округлює дробове число в більшу сторону\n-   [floor()](function.floor.md) \\- Округлює дробове число у менший бік\n-   [number\\_format()](function.number-format.md) \\- Форматує число з поділом груп\n","title":"round","contentType":2,"navigation":[{"function.rad2deg.md":"« rad2deg"},{"function.sin.md":"sin »"},{"index.md":"PHP Manual"},{"ref.math.md":"Математичні функції"}]}},"__N_SSG":true}