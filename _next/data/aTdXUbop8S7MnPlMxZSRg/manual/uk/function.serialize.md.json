{"pageProps":{"page":{"slug":"function.serialize.md","content":"# serialize\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nserialize - Генерує придатне для зберігання уявлення змінної\n\n### Опис\n\n```methodsynopsis\nserialize(mixed $value): string\n```\n\nГенерує придатне для зберігання уявлення змінної.\n\nЦе корисно для зберігання або передачі значень PHP між скриптами без втрати їх типу та структури.\n\nДля превращения сериализованной строки обратно в PHP-значение, используйте функцию[unserialize()](function.unserialize.md)\n\n### Список параметрів\n\n`value`\n\nЗначення, яке необхідно серіалізувати . **serialize()** обробляє всі типи, крім resource та деяких типів об'єкта (див. примітку нижче). Можна також серіалізувати масиви, які містять посилання на себе. Циклічні посилання всередині масиву/об'єкта, що серіалізується, також зберігаються. Будь-які інші посилання будуть втрачені.\n\nПри серіалізації об'єкта PHP намагається викликати магічні методи [\\_\\_serialize()](language.oop5.magic.md#object.serialize) або [\\_\\_sleep()](language.oop5.magic.md#object.sleep) перед серіалізацією. Це робиться для того, щоб дозволити об'єкту в останній момент провести очищення тощо перед серіалізацією. Аналогічно, коли об'єкт відновлюється функцією [unserialize()](function.unserialize.md), викликається магічний метод [\\_\\_unserialize()](language.oop5.magic.md#object.unserialize) або [\\_\\_wakeup()](language.oop5.magic.md#object.wakeup)\n\n> **Зауваження** :\n> \n> Початок імен закритих членів об'єкта доповнюються ім'ям класу, а початок імен захищених членів символом '\\*'. Ці доповнені значення оточуються нульовим байтом (0x00) з обох боків.\n\n### Значення, що повертаються\n\nПовертає рядок, що містить потокове подання змінної `value`, яка може бути збережена будь-де.\n\nЗверніть увагу, що це бінарний рядок, який може включати нульові байти, і його потрібно зберігати та обробляти відповідним чином. Наприклад, виведення функції **serialize()** краще зберігати у BLOB-поле бази даних, а чи не в полях типу CHAR чи TEXT.\n\n### Приклади\n\n**Приклад #1 Приклад використання** serialize()\\*\\*\\*\\*\n\n```php\n<?php\n// $session_data содержит многомерный массив с сессионной\n// информацией о текущем пользователе. Мы используем serialize() для сохранения\n// этой информации в базе данных в конце запроса.\n\n$conn = odbc_connect(\"webdb\", \"php\", \"chicken\");\n$stmt = odbc_prepare($conn,\n      \"UPDATE sessions SET data = ? WHERE id = ?\");\n$sqldata = array (serialize($session_data), $_SERVER['PHP_AUTH_USER']);\nif (!odbc_execute($stmt, $sqldata)) {\n    $stmt = odbc_prepare($conn,\n     \"INSERT INTO sessions (id, data) VALUES(?, ?)\");\n    if (!odbc_execute($stmt, array_reverse($sqldata))) {\n        /* Код, выполняемый в случае возникновения ошибки.. */\n    }\n}\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Зверніть увагу, що багато вбудованих PHP об'єктів не може бути серіалізовано. Однак, ті з них, які підтримують цю можливість, реалізують або інтерфейс [Serializable](class.serializable.md), або магічні методи [\\_\\_serialize()](language.oop5.magic.md#object.serialize) [\\_\\_unserialize()](language.oop5.magic.md#object.unserialize) або [\\_\\_sleep()](language.oop5.magic.md#object.sleep) [\\_\\_wakeup()](language.oop5.magic.md#object.wakeup). Якщо вбудований клас не відповідає цим вимогам, він не може бути надійно серіалізований.\n> \n> Історично є деякі винятки з вищезгаданого правила, коли деякі внутрішні об'єкти можуть бути серіалізовані без реалізації інтерфейсу або магічних методів.\n\n**Увага**\n\nПри серіалізації об'єктів функцією **serialize()**, провідний зворотний сліш не буде включений в ім'я класу із зазначеним простором імен для кращої зворотної сумісності.\n\n### Дивіться також\n\n-   [unserialize()](function.unserialize.md) \\- Створює PHP-значення зі збереженого уявлення\n-   [var\\_export()](function.var-export.md) \\- Виводить або повертає інтерпретоване рядкове подання змінної\n-   [json\\_encode()](function.json-encode.md) \\- Повертає JSON-подання даних\n-   [Серіалізація об'єктів](language.oop5.serialization.md)\n-   [\\_\\_sleep()](language.oop5.magic.md#object.sleep)\n-   [\\_\\_wakeup()](language.oop5.magic.md#object.wakeup)\n-   [\\_\\_serialize()](language.oop5.magic.md#object.serialize)\n-   [\\_\\_unserialize()](language.oop5.magic.md#object.unserialize)\n","title":"serialize","contentType":2,"navigation":[{"function.print-r.md":"« print\\_r"},{"function.settype.md":"settype »"},{"index.md":"PHP Manual"},{"ref.var.md":"Функції для роботи зі змінними"}]}},"__N_SSG":true}