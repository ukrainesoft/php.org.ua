{"pageProps":{"page":{"slug":"function.substr.md","content":"# substr\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nsubstr — Повертає підрядок\n\n### Опис\n\n```methodsynopsis\nsubstr(string $string, int $offset, ?int $length = null): string\n```\n\nПовертає рядок рядка `string`, що починається з `offset` символу за рахунком та довжиною `length` символів.\n\n### Список параметрів\n\n`string`\n\nВхідний рядок.\n\n`offset`\n\nЯкщо `offset` невід'ємний, підрядок, що повертається, починається з позиції `offset` від початку рядка, рахуючи від нуля. Наприклад, у рядку '`abcdef`', у позиції знаходиться символ '`a`', у позиції - символ '`c`', і т.д.\n\nЯкщо `offset` негативний, повертається підрядок починається з позиції, що віддаляється на `offset`символов от конца строки`string`\n\nЯкщо `string`меньше`offset` символів буде повернено порожній рядок.\n\n**Приклад #1 Використання негативного параметра `offset`**\n\n```php\n<?php\n$rest = substr(\"abcdef\", -1);    // возвращает \"f\"\n$rest = substr(\"abcdef\", -2);    // возвращает \"ef\"\n$rest = substr(\"abcdef\", -3, 1); // возвращает \"d\"\n?>\n```\n\n`length`\n\nЯкщо `length` позитивний рядок, що повертається, буде не довшим `length` символів, починаючи з параметра `offset` (залежно від довжини `string`\n\nЯкщо `length` негативний, то буде відкинуто зазначене цим аргументом кількість символів з кінця рядка `string` (після того як буде обчислено стартову позицію, якщо `offset` негативний). Якщо при цьому позиція почала підрядки, яка визначається аргументом `offset`, знаходиться у відкинутій частині рядка або за нею, повертається порожній рядок.\n\nЯкщо параметр `length` заданий і рівний , буде повернуто порожній рядок.\n\nЯкщо параметр `length`опущен или\\*\\*`null`\\*\\*, то буде повернуто підрядок, що починається з позиції, вказаної параметром `offset`и длящейся до конца строки.\n\n**Приклад #2 Використання негативного параметра `length`**\n\n```php\n<?php\n$rest = substr(\"abcdef\", 0, -1);  // возвращает \"abcde\"\n$rest = substr(\"abcdef\", 2, -1);  // возвращает \"cde\"\n$rest = substr(\"abcdef\", 4, -4);  // возвращает \"\"; до PHP 8.0.0 возвращалось false\n$rest = substr(\"abcdef\", -3, -1); // возвращает \"de\"\n?>\n```\n\n### Значення, що повертаються\n\nПовертає вилучену частину параметра `string` або порожній рядок.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Параметр`length` тепер допускає значення null. Якщо значення параметра `length` явно поставлено як **`null`**, функція повертає підрядок, що закінчується в кінці рядка; раніше повертався порожній рядок. |\n| 8.0.0 | Функція повертає порожній рядок там, де раніше повертала **`false`** |\n\n### Приклади\n\n**Приклад #3 Базовое использование**substr()\\*\\*\\*\\*\n\n```php\n<?php\necho substr('abcdef', 1);     // bcdef\necho substr(\"abcdef\", 1, null); // bcdef; до PHP 8.0.0 возвращалась пустая строка\necho substr('abcdef', 1, 3);  // bcd\necho substr('abcdef', 0, 4);  // abcd\necho substr('abcdef', 0, 8);  // abcdef\necho substr('abcdef', -1, 1); // f\n\n// Получить доступ к отдельному символу в строке\n// можно также с помощью квадратных скобок\n$string = 'abcdef';\necho $string[0];                 // a\necho $string[3];                 // d\necho $string[strlen($string)-1]; // f\n\n?>\n```\n\n**Приклад #4**substr()**и приведение типов**\n\n```php\n<?php\nclass apple {\n    public function __toString() {\n        return \"green\";\n    }\n}\n\necho \"1) \".var_export(substr(\"pear\", 0, 2), true).PHP_EOL;\necho \"2) \".var_export(substr(54321, 0, 2), true).PHP_EOL;\necho \"3) \".var_export(substr(new apple(), 0, 2), true).PHP_EOL;\necho \"4) \".var_export(substr(true, 0, 1), true).PHP_EOL;\necho \"5) \".var_export(substr(false, 0, 1), true).PHP_EOL;\necho \"6) \".var_export(substr(\"\", 0, 1), true).PHP_EOL;\necho \"7) \".var_export(substr(1.2e3, 0, 4), true).PHP_EOL;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n1) 'pe'\n2) '54'\n3) 'gr'\n4) '1'\n5) ''\n6) ''\n7) '1200'\n```\n\n**Приклад #5 Неприпустимий діапазон символів**\n\nЯкщо запитується неприпустимий діапазон символів, **substr()** повертає порожній рядок, починаючи з PHP 8.0.0; раніше поверталося **`false`**\n\n```php\n<?php\nvar_dump(substr('a', 2));\n?>\n```\n\nРезультат виконання наведеного прикладу в PHP 8:\n\n```\nstring(0) \"\"\n```\n\nРезультат виконання наведеного прикладу в PHP 7:\n\n```\nbool(false)\n```\n\n### Дивіться також\n\n-   [strrchr()](function.strrchr.md) \\- Знаходить останнє входження символу у рядку\n-   [substr\\_replace()](function.substr-replace.md) \\- Замінює частину рядка\n-   [preg\\_match()](function.preg-match.md) \\- Виконує перевірку на відповідність регулярному виразу\n-   [trim()](function.trim.md) \\- Видаляє прогалини (або інші символи) з початку та кінця рядка\n-   [mb\\_substr()](function.mb-substr.md) \\- Повертає частину рядка\n-   [wordwrap()](function.wordwrap.md) \\- Переносить рядок за вказаною кількістю символів\n-   [Посимвольний доступ та зміна рядка](language.types.string.md#language.types.string.substr)\n","title":"substr","contentType":2,"navigation":[{"function.substr-replace.md":"« substr\\_replace"},{"function.trim.md":"trim »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}