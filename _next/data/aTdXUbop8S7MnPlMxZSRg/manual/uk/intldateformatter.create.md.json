{"pageProps":{"page":{"slug":"intldateformatter.create.md","content":"# IntlDateFormatter::create\n\n# datefmt\\_create\n\n# IntlDateFormatter::\\_\\_construct\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\nIntlDateFormatter::create -- datefmt\\_create -- IntlDateFormatter::\\_\\_construct — Створює засіб форматування дати\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic static IntlDateFormatter::create(    ?string $locale,    int $dateType = IntlDateFormatter::FULL,    int $timeType = IntlDateFormatter::FULL,    IntlTimeZone|DateTimeZone|string|null $timezone = null,    IntlCalendar|int|null $calendar = null,    ?string $pattern = null): ?IntlDateFormatter\n```\n\nОб'єктно-орієнтований стиль (конструктор)\n\npublic **IntlDateFormatter::\\_\\_construct**  \n?string`$locale`,  \nint`$dateType`\\= IntlDateFormatter::FULL,  \nint`$timeType`\\= IntlDateFormatter::FULL,  \n[IntlTimeZone](class.intltimezone.md) [DateTimeZone](class.datetimezone.md)|string|null`$timezone` **`null`**,  \n[IntlCalendar](class.intlcalendar.md)|int|null`$calendar` **`null`**,  \n?string`$pattern` **`null`**  \n) .\n\nПроцедурний стиль\n\n```methodsynopsis\ndatefmt_create(    ?string $locale,    int $dateType,    int $timeType,    IntlTimeZone|DateTimeZone|string|null $timezone = null,    IntlCalendar|int|null $calendar = null,    string $pattern = \"\"): ?IntlDateFormatter\n```\n\nСтворює засіб форматування дати.\n\n### Список параметрів\n\n`locale`\n\nМовний стандарт, який буде використаний для форматування або синтаксичного аналізу, або **`null`** для вибору значення, заданого в ini-налаштуванні [intl.default\\_locale](intl.configuration.md#ini.intl.default-locale)\n\n`dateType`\n\nФормат дати, визначений однією [з констант IntlDateFormatter](class.intldateformatter.md#intl.intldateformatter-constants)Значение по умолчанию\\*\\*`IntlDateFormatter::FULL`\\*\\*\n\n`timeType`\n\nФормат часу, який був визначений однією [з констант IntlDateFormatter](class.intldateformatter.md#intl.intldateformatter-constants)Значение по умолчанию\\*\\*`IntlDateFormatter::FULL`\\*\\*\n\n`timezone`\n\nІдентифікатор часового поясу. За замовчуванням (і той, який використовується, якщо вказано **`null`**) - це той, який повертається [date\\_default\\_timezone\\_get()](function.date-default-timezone-get.md) або, якщо застосовно, об'єкт [IntlCalendar](class.intlcalendar.md), вказаний у параметрі `calendar`. Цей ідентифікатор має бути коректним ідентифікатором у базі даних ICU або ідентифікатором, який представляє явне зміщення, наприклад, `GMT-05:30`\n\nТакож може бути об'єкт [IntlTimeZone](class.intltimezone.md) або [DateTimeZone](class.datetimezone.md)\n\n`calendar`\n\nКалендар для форматування чи аналізу. Значення за замовчуванням - **`null`**, що відповідає **`IntlDateFormatter::GREGORIAN`**. Можливо одна з [констант IntlDateFormatter](class.intldateformatter.md#intl.intldateformatter-constants.calendartypes) або об'єкт [IntlCalendar](class.intlcalendar.md). Будь-який переданий об'єкт [IntlCalendar](class.intlcalendar.md) буде клоновано; він не буде змінено [IntlDateFormatter](class.intldateformatter.md). Це визначить тип календаря, що використовується (григоріанський, ісламський, перський і т.д.) і, якщо в параметрі `timezone`указано значение\\*\\*`null`\\*\\*, також визначить часовий пояс, що використовується.\n\n`pattern`\n\nНеобов'язковий шаблон для використання під час форматування або аналізу. Можливі шаблони документовані за адресою [» https://unicode-org.github.io/icu/userguide/format\\_parse/datetime/](https://unicode-org.github.io/icu/userguide/format_parse/datetime/)\n\n### Значення, що повертаються\n\nСтворений об'єкт [IntlDateFormatter](class.intldateformatter.md)или\\*\\*`null`\\*\\*в случае возникновения ошибки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 |  |\n| Тепер параметри `dateType`и`timeType` необов'язкові. |  |\n\n### Приклади\n\n**Приклад #1 Приклад використання** datefmt\\_create()\\*\\*\\*\\*\n\n```php\n<?php\n$fmt = datefmt_create( \"en_US\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n    'America/Los_Angeles', IntlDateFormatter::GREGORIAN  );\necho \"First Formatted output is \".datefmt_format( $fmt , 0);\n$fmt = datefmt_create( \"de-DE\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n    'America/Los_Angeles',IntlDateFormatter::GREGORIAN  );\necho \"Second Formatted output is \".datefmt_format( $fmt , 0);\n\n$fmt = datefmt_create( \"en_US\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n     'America/Los_Angeles',IntlDateFormatter::GREGORIAN  ,\"MM/dd/yyyy\");\necho \"First Formatted output with pattern is \".datefmt_format( $fmt , 0);\n$fmt = datefmt_create( \"de-DE\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n     'America/Los_Angeles',IntlDateFormatter::GREGORIAN  ,\"MM/dd/yyyy\");\necho \"Second Formatted output with pattern is \".datefmt_format( $fmt , 0);\n?>\n```\n\n**Приклад #2 OO example**\n\n```php\n<?php\n$fmt = new IntlDateFormatter( \"en_US\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n    'America/Los_Angeles',IntlDateFormatter::GREGORIAN  );\necho \"Первый форматированный вывод: \".$fmt->format(0);\n$fmt = new IntlDateFormatter( \"de-DE\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n    'America/Los_Angeles',IntlDateFormatter::GREGORIAN  );\necho \"Второй форматированный вывод: \".$fmt->format(0);\n\n$fmt = new IntlDateFormatter( \"en_US\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n     'America/Los_Angeles',IntlDateFormatter::GREGORIAN  ,\"MM/dd/yyyy\");\necho \"Первый форматированный вывод с шаблоном: \".$fmt->format(0);\n$fmt = new IntlDateFormatter( \"de-DE\" ,IntlDateFormatter::FULL, IntlDateFormatter::FULL,\n      'America/Los_Angeles',IntlDateFormatter::GREGORIAN , \"MM/dd/yyyy\");\necho \"Второй форматированный вывод с шаблоном: \".$fmt->format(0);\n?>\n```\n\n**Приклад #3 Приклад обробки неправильного значення мовного стандарту**\n\n```php\n<?php\ntry {\n    $fmt = new IntlDateFormatter(\n        'invalid_locale',\n        IntlDateFormatter::FULL,\n        IntlDateFormatter::FULL,\n        'dunno',\n        IntlDateFormatter::GREGORIAN,\n    );\n} catch (\\Error $e) {\n    // ...\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nПервый форматированный вывод: Wednesday, December 31, 1969 4:00:00 PM PT\nВторой форматированный вывод: Mittwoch, 31. Dezember 1969 16:00 Uhr GMT-08:00\nПервый форматированный вывод с шаблоном: 12/31/1969\nВторой форматированный вывод с шаблоном: 12/31/1969\n```\n\n### Дивіться також\n\n-   [datefmt\\_format()](intldateformatter.format.md) \\- Форматує значення дати/часу у вигляді рядка\n-   [datefmt\\_parse()](intldateformatter.parse.md) \\- Перетворює рядок на значення позначки часу\n-   [datefmt\\_get\\_error\\_code()](intldateformatter.geterrorcode.md) \\- Отримує код помилки останньої операції\n-   [datefmt\\_get\\_error\\_message()](intldateformatter.geterrormessage.md) \\- Отримує текст помилки останньої операції\n","title":"IntlDateFormatter::create","contentType":2,"navigation":[{"class.intldateformatter.md":"« IntlDateFormatter"},{"intldateformatter.format.md":"IntlDateFormatter::format »"},{"index.md":"PHP Manual"},{"class.intldateformatter.md":"IntlDateFormatter"}]}},"__N_SSG":true}