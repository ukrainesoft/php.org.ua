{"pageProps":{"page":{"slug":"function.xml-set-element-handler.md","content":"# xml\\_set\\_element\\_handler\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nxml\\_set\\_element\\_handler — Встановлення обробника початкового та кінцевого елементів\n\n### Опис\n\n```methodsynopsis\nxml_set_element_handler(XMLParser $parser, callable $start_handler, callable $end_handler): true\n```\n\nВстановлює функцію обробник елементів для XML-аналізатора `parser`\n\nПараметр`start_handler` викликається при відкритті нового XML-елемента. Параметр `end_handler` викликається під час закриття XML-елемента.\n\n### Список параметрів\n\n`parser`\n\nПарсер XML.\n\n`start_handler`\n\nЯкщо передається значення **`null`** або порожній рядок, обробник повертається в стан за замовчуванням.\n\nЯкщо параметр `handler` є типом [callable](language.types.callable.md), то як оброблювач встановлюється callable.\n\nЯкщо параметр `handler` є рядком (string), це може бути ім'я методу об'єкта, заданого за допомогою функції [xml\\_set\\_object()](function.xml-set-object.md)\n\nСигнатура оброблювача має бути:\n\n```methodsynopsis\nstart_element_handler(XMLParser $parser, string $name, array $attributes): void\n```\n\n`parser`\n\nXML-парсер, що викликає оброблювач.\n\n`name`\n\nМістить ім'я елемента, якого викликається даний обробник. Якщо для цього синтаксичного аналізатора діє [приведення до одного регістру](xml.case-folding.md), то ім'я елемента буде у верхньому регістрі.\n\n`attributes`\n\nАсоціативний масив із атрибутами елемента. Масив порожній, якщо елемент не має атрибутів. Ключами цього масиву є імена атрибутів, значення - значення атрибутів. Імена атрибутів [наводяться до одного регістру](xml.case-folding.md) за тими ж критеріями, як і імена елементів. Значення атрибутів *не* наводяться до одного регістру. Порядок отримання атрибутів `attributes` ідентичний порядку оголошення атрибутів.\n\n`end_element`\n\nЯкщо передається значення **`null`** або порожній рядок, обробник повертається в стан за замовчуванням.\n\nЯкщо параметр `handler` є типом [callable](language.types.callable.md), то як оброблювач встановлюється callable.\n\nЯкщо параметр `handler` є рядком (string), це може бути ім'я методу об'єкта, заданого за допомогою функції [xml\\_set\\_object()](function.xml-set-object.md)\n\nСигнатура оброблювача має бути:\n\n```methodsynopsis\nend_element_handler(resource $parser, string $name): void\n```\n\n`parser`\n\nXML-парсер, що викликає оброблювач.\n\n`name`\n\nМістить ім'я елемента, якого викликається даний обробник. Якщо для цього синтаксичного аналізатора діє [приведення до одного регістру](xml.case-folding.md), то ім'я елемента буде у верхньому регістрі.\n\n### Значення, що повертаються\n\nФункція завжди повертає **`true`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Параметр`parser` чекає на екземпляр [XMLParser](class.xmlparser.md); раніше очікувався коректний `xml` ресурс (Resource). |\n","title":"xml\\_set\\_element\\_handler","contentType":2,"navigation":[{"function.xml-set-default-handler.md":"« xml\\_set\\_default\\_handler"},{"function.xml-set-end-namespace-decl-handler.md":"xml\\_set\\_end\\_namespace\\_decl\\_handler »"},{"index.md":"PHP Manual"},{"ref.xml.md":"Функції парсера XML"}]}},"__N_SSG":true}