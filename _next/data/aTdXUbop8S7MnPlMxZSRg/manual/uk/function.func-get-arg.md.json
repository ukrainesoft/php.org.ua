{"pageProps":{"page":{"slug":"function.func-get-arg.md","content":"# func\\_get\\_arg\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nfunc\\_get\\_arg — Повернути елемент зі списку аргументів\n\n### Опис\n\n```methodsynopsis\nfunc_get_arg(int $position): mixed\n```\n\nПовертає зазначений аргумент зі списку аргументів функції користувача.\n\nЦя функція може бути використана спільно з [func\\_get\\_args()](function.func-get-args.md) і [func\\_num\\_args()](function.func-num-args.md) для створення функцій із змінною кількістю аргументів.\n\n### Список параметрів\n\n`position`\n\nНомер аргументу. Аргументи функції рахуються з нуля.\n\n### Значення, що повертаються\n\nПовертає зазначений аргумент або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nГенерує попередження при виклику поза визначенням функції, або якщо `position` більше реально переданої кількості аргументів.\n\n### Приклади\n\n**Приклад #1 Приклад використання** func\\_get\\_arg()\\*\\*\\*\\*\n\n```php\n<?php\nfunction foo()\n{\n     $numargs = func_num_args();\n     echo \"Количество аргументов: $numargs\\n\";\n     if ($numargs >= 2) {\n         echo \"Второй аргумент: \" . func_get_arg(1) . \"\\n\";\n     }\n}\n\nfoo(1, 2, 3);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nКоличество аргументов: 3\nВторой аргумент: 2\n```\n\n**Приклад #2 Приклад передачі аргументів за посиланням та за значенням з **func\\_get\\_arg()****\n\n```php\n<?php\nfunction byVal($arg) {\n    echo 'Передан          : ', var_export(func_get_arg(0)), PHP_EOL;\n    $arg = 'baz';\n    echo 'После изменения  : ', var_export(func_get_arg(0)), PHP_EOL;\n}\n\nfunction byRef(&$arg) {\n    echo 'Передан          : ', var_export(func_get_arg(0)), PHP_EOL;\n    $arg = 'baz';\n    echo 'После изменения  : ', var_export(func_get_arg(0)), PHP_EOL;\n}\n\n$arg = 'bar';\nbyVal($arg);\nbyRef($arg);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\nПередано : 'bar'  \nПісля зміни : 'baz'  \nПередано : 'bar'  \nПісля зміни : 'baz'\n\n### Примітки\n\n> **Зауваження** :\n> \n> Починаючи з PHP 8.0.0 сімейство функцій func\\_\\*() призначено для більшої прозорості щодо іменованих аргументів, обробляючи аргументи так, ніби всі вони були передані позиційно, а відсутні аргументи замінюються їх значеннями за умовчанням. Функція ігнорує набір невідомих варіативних аргументів. До зібраних невідомих іменованих аргументів можна отримати доступ лише через варіативний параметр.\n\n> **Зауваження** :\n> \n> Якщо аргументи були передані за посиланням, то всі зміни аргументів будуть відображені на значеннях, що повертаються функцією. У PHP 7 також буде повернуто поточні значення, якщо аргументи передані за значенням\n\n> **Зауваження**: Ця функція повертає копії переданих аргументів і не повертає значення за промовчанням (непереданих) аргументів.\n\n### Дивіться також\n\n-   [Синтаксис`...`](functions.arguments.md#functions.variable-arg-list)\n-   [func\\_get\\_args()](function.func-get-args.md)\n-   [func\\_num\\_args()](function.func-num-args.md)\n","title":"func\\_get\\_arg","contentType":2,"navigation":[{"function.forward-static-call.md":"« forward\\_static\\_call"},{"function.func-get-args.md":"func\\_get\\_args »"},{"index.md":"PHP Manual"},{"ref.funchand.md":"Функції керування функціями"}]}},"__N_SSG":true}