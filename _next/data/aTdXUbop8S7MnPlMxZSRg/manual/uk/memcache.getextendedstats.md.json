{"pageProps":{"page":{"slug":"memcache.getextendedstats.md","content":"# Memcache::getExtendedStats\n\n(PECL memcache >= 2.0.0)\n\nMemcache::getExtendedStats — Отримати статистику з усіх серверів у пулі\n\n### Опис\n\n```methodsynopsis\nMemcache::getExtendedStats(string $type = ?, int $slabid = ?, int $limit = 100): array\n```\n\n**Memcache::getExtendedStats()** повертає двовимірний асоціативний масив, що містить статистику сервера. Ключі масиву відповідають серверу host:port, а значення містять статистику по даному серверу. Якщо не вдалося отримати дані для будь-якого сервера, то відповідне значення буде виставлено в **`false`**. Ви також можете використати функцію **memcache\\_get\\_extended\\_stats()**\n\n> **Зауваження** :\n> \n> Ця функція була додана до Memcache версії 2.0.0.\n\n### Список параметрів\n\n`type`\n\nТип статистики для отримання. Коректні значення: reset, malloc, maps, cachedump, slabs, items, sizes. Відповідно до специфікації протоколу memcached, ці додаткові аргументи \"можуть бути змінені для зручності розробників memcache\".\n\n`slabid`\n\nВикористовується спільно з `type` для вказівки, з якого slab-файлу робити вивантаження. Використовується тільки для налагодження. Команда cachedump намагається запустити сервер і повинна використовуватися лише для налагодження.\n\n`limit`\n\nИспользуется вместе с`type` для обмеження кількості записів, що витягуються.\n\n**Увага**\n\nТип статистики cachedump був вилучений з демона memcached для безпеки.\n\n### Значення, що повертаються\n\nПовертає двовимірний асоціативний масив, що містить статистику серверів або \\*\\*`false`\\*\\*в случае неудачи.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Memcache::getExtendedStats()\\*\\*\\*\\*\n\n```php\n<?php\n    $memcache_obj = new Memcache;\n    $memcache_obj->addServer('memcache_host', 11211);\n    $memcache_obj->addServer('failed_host', 11211);\n\n    $stats = $memcache_obj->getExtendedStats();\n    print_r($stats);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [memcache_host:11211] => Array\n        (\n            [pid] => 3756\n            [uptime] => 603011\n            [time] => 1133810435\n            [version] => 1.1.12\n            [rusage_user] => 0.451931\n            [rusage_system] => 0.634903\n            [curr_items] => 2483\n            [total_items] => 3079\n            [bytes] => 2718136\n            [curr_connections] => 2\n            [total_connections] => 807\n            [connection_structures] => 13\n            [cmd_get] => 9748\n            [cmd_set] => 3096\n            [get_hits] => 5976\n            [get_misses] => 3772\n            [bytes_read] => 3448968\n            [bytes_written] => 2318883\n            [limit_maxbytes] => 33554432\n        )\n\n    [failed_host:11211] => false\n)\n```\n\n### Дивіться також\n\n-   [Memcache::getVersion()](memcache.getversion.md) \\- Повернути версію сервера\n-   [Memcache::getStats()](memcache.getstats.md) \\- Отримати статистику сервера\n","title":"Memcache::getExtendedStats","contentType":2,"navigation":[{"memcache.get.md":"« Memcache::get"},{"memcache.getserverstatus.md":"Memcache::getServerStatus »"},{"index.md":"PHP Manual"},{"class.memcache.md":"Memcache"}]}},"__N_SSG":true}