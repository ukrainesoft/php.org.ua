{"pageProps":{"page":{"slug":"evchild.construct.md","content":"# EvChild::\\_\\_construct\n\n(PECL ev >= 0.2.0)\n\nEvChild::\\_\\_construct — Створює спостерігач об'єкт evChild\n\n### Опис\n\npublic **EvChild::\\_\\_construct**  \nint`$pid`  \nbool`$trace`  \n[callable](language.types.callable.md) `$callback`  \n[mixed](language.types.declarations.md#language.types.declarations.mixed) `$data` = **`null`**  \nint`$priority` =  \n) .\n\nСтворює об'єкт спостерігач [EvChild](class.evchild.md)\n\nВикликає callback-функцію, коли настала подія зміни статусу процесу з ідентифікатором `pid` (або будь-яким *PID*, якщо `pid`задан как ). Статус процесу змінюється, коли процес завершується, або коли його вбивають, або якщо `trace` одно **`true`**, коли його зупинено або відновлено. Іншими словами, коли процес отримує сигнал **`SIGCHLD`** *Ev* отримує статус exit/wait для всіх змінених/зомбі дочірніх процесів і викликає callback-функцію.\n\nПравильно встановлювати дочірнього спостерігача після того, як [EvChild](class.evchild.md) завершився, але до початку наступної ітерації подієвого циклу. Наприклад, спочатку викликається `fork`, після чого новий дочірній процес може вийти, і тільки після цього в батьків встановлюється спостерігач [EvChild](class.evchild.md)для нового*PID*\n\nВи можете отримати доступ до статусів exit/tracing та `pid` використовуючи властивості об'єкта спостерігача rstatus та rpid.\n\nКількість *PID*\\-спостерігачів для кожного *PID* НЕ обмежено. Усіх їх буде викликано.\n\nМетод[EvChild::createStopped()](evchild.createstopped.md) не стартує(не активує) створеного спостерігача.\n\n### Список параметрів\n\n`pid`\n\nОчікує зміни статусу процесу з ідентифікатором PID (або будь-якого процесу, якщо PID заданий як\n\n`trace`\n\nЯкщо \\*\\*`false`\\*\\*активація спостерігача відбувається тільки при завершенні процесу. Якщо \\*\\*`true`\\*\\*активація відбувається також при зупинці/відновленні процесу.\n\n`callback`\n\nСмотрите[Callback-функції спостерігачів](ev.watcher-callbacks.md)\n\n`data`\n\nДовільні дані, пов'язані зі спостерігачем.\n\n`priority`\n\n[Пріоритет спостерігача](class.ev.md#ev.constants.watcher-pri)\n\n### Дивіться також\n\n-   [EvLoop::child()](evloop.child.md) \\- Створює об'єкт EvChild, пов'язаний із поточним циклом подій\n","title":"EvChild::\\_\\_construct","contentType":2,"navigation":[{"class.evchild.md":"« EvChild"},{"evchild.createstopped.md":"EvChild::createStopped »"},{"index.md":"PHP Manual"},{"class.evchild.md":"EvChild"}]}},"__N_SSG":true}