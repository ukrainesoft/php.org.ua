{"pageProps":{"page":{"slug":"domdocument.getelementsbytagname.md","content":"# DOMDocument::getElementsByTagName\n\n(PHP 5, PHP 7, PHP 8)\n\nDOMDocument::getElementsByTagName — Шукає всі елементи із заданим локальним ім'ям\n\n### Опис\n\n```methodsynopsis\npublic DOMDocument::getElementsByTagName(string $qualifiedName): DOMNodeList\n```\n\nЦя функція повертає новий об'єкт класу [DOMNodeList](class.domnodelist.md)містить елементи із заданим локальним ім'ям.\n\n### Список параметрів\n\n`qualifiedName`\n\nЛокальне ім'я (без простору імен) тега, яким буде проводитися пошук. Спеціальне значення `*` відповідає всім тегам.\n\n### Значення, що повертаються\n\nНовий об'єкт класу [DOMNodeList](class.domnodelist.md)містить всі знайдені елементи.\n\n### Приклади\n\n**Приклад #1 Простий приклад використання**\n\n```php\n<?php\n$xml = <<< XML\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<books>\n <book>Шаблоны корпоративных приложений</book>\n <book>Приёмы объектно-ориентированного проектирования. Паттерны проектирования</book>\n <book>Чистый код</book>\n</books>\nXML;\n\n$dom = new DOMDocument;\n$dom->loadXML($xml);\n$books = $dom->getElementsByTagName('book');\nforeach ($books as $book) {\n    echo $book->nodeValue, PHP_EOL;\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nШаблоны корпоративных приложений\nПриёмы объектно-ориентированного проектирования. Паттерны проектирования\nЧистый код\n```\n\n### Дивіться також\n\n-   [DOMDocument::getElementsByTagNameNS()](domdocument.getelementsbytagnamens.md) \\- Шукає всі елементи із заданим ім'ям у вказаному просторі імен\n","title":"DOMDocument::getElementsByTagName","contentType":2,"navigation":[{"domdocument.getelementbyid.md":"« DOMDocument::getElementById"},{"domdocument.getelementsbytagnamens.md":"DOMDocument::getElementsByTagNameNS »"},{"index.md":"PHP Manual"},{"class.domdocument.md":"DOMDocument"}]}},"__N_SSG":true}