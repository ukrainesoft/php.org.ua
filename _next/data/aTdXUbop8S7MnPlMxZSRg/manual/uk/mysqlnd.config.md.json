{"pageProps":{"page":{"slug":"mysqlnd.config.md","content":"# Налаштування під час виконання\n\nПоведінка цих функцій залежить від установок у php.ini.\n\n**Параметри конфігурації вбудованого драйвера MySQL**\n\n| Имя | По умолчанию | Место изменения | Список изменений |\n| --- | --- | --- | --- |\n| [mysqlnd.collect\\_statistics](mysqlnd.config.md#ini.mysqlnd.collect-statistics) | \"1\" | **`INI_SYSTEM`** |  |\n| [mysqlnd.collect\\_memory\\_statistics](mysqlnd.config.md#ini.mysqlnd.collect-memory-statistics) | \"0\" | **`INI_SYSTEM`** |  |\n| [mysqlnd.debug](mysqlnd.config.md#ini.mysqlnd.debug) | \"\" | **`INI_SYSTEM`** |  |\n| [mysqlnd.log\\_mask](mysqlnd.config.md#ini.mysqlnd.log-mask) |  | **`INI_ALL`** |  |\n| [mysqlnd.mempool\\_default\\_size](mysqlnd.config.md#ini.mysqlnd.mempool-default-size) | 16000 | **`INI_ALL`** |  |\n| [mysqlnd.net\\_read\\_timeout](mysqlnd.config.md#ini.mysqlnd.net-read-timeout) | \"\"86400\"\" | **`INI_ALL`** | До PHP 7.2.0 значенням за промовчанням \"31536000\", а місцем зміни було **`INI_SYSTEM`** |\n| [mysqlnd.net\\_cmd\\_buffer\\_size](mysqlnd.config.md#ini.mysqlnd.net-cmd-buffer-size) | 5.3.0 — \"2048\", 5.3.1 — \"4096\" | **`INI_SYSTEM`** |  |\n| [mysqlnd.net\\_read\\_buffer\\_size](mysqlnd.config.md#ini.mysqlnd.net-read-buffer-size) | \"32768\" | **`INI_SYSTEM`** |  |\n| [mysqlnd.sha256\\_server\\_public\\_key](mysqlnd.config.md#ini.mysqlnd.sha256-server-public-key) | \"\" | **`INI_PERDIR`** |  |\n| [mysqlnd.trace\\_alloc](mysqlnd.config.md#ini.mysqlnd.trace-alloc) | \"\" | **`INI_SYSTEM`** |  |\n| [mysqlnd.fetch\\_data\\_copy](mysqlnd.config.md#ini.mysqlnd.fetch_data_copy) |  | **`INI_ALL`** | Видалено з PHP 8.1.0 |\n\nДодаткова інформація та опис режимів INI\\_\\* дано у розділі «[Місця встановлення параметрів конфігурації](configuration.changes.modes.md)».\n\nКоротке пояснення конфігураційних директив.\n\n`mysqlnd.collect_statistics`bool\n\nВключає в себе збір різної статистики клієнта, доступ до якої можна отримати за допомогою [mysqli\\_get\\_client\\_stats()](function.mysqli-get-client-stats.md) [mysqli\\_get\\_connection\\_stats()](mysqli.get-connection-stats.md), і яка відображається у розділі `mysqlnd` виведення функції [phpinfo()](function.phpinfo.md)\n\nЦей параметр конфігурації включає всю [статистику вбудованого драйвера MySQL](mysqlnd.stats.md), Окрім роботи з оперативною пам'яттю.\n\n`mysqlnd.collect_memory_statistics`bool\n\nВключає збирання різної статистики оперативної пам'яті, доступ до якої можна отримати за допомогою [mysqli\\_get\\_client\\_stats()](function.mysqli-get-client-stats.md) [mysqli\\_get\\_connection\\_stats()](mysqli.get-connection-stats.md), і яка відображається у розділі `mysqlnd` виведення функції [phpinfo()](function.phpinfo.md)\n\nЦей параметр конфігурації включає всю статистику, що стосується роботи з оперативною пам'яттю, в загальний набір даних [статистики вбудованого драйвера MySQL](mysqlnd.stats.md)\n\n`mysqlnd.debug`string\n\nЗаписує команди з усіх модулів, які використовують `mysqlnd`у вказаний файл з логами.\n\nФормат параметра следующий:`mysqlnd.debug = \"option1[,parameter_option1][:option2[,parameter_option2]]\"`\n\nМожливі нижченаведені значення для рядка форматування:\n\n-   A\\[,file\\]- Додає виведення трасування у вказаний файл. Також щоразу перевіряє успішність запису даних. Це реалізовано шляхом закриття та повторного відкриття файлу (що досить повільно). Надає гарантію цілісності файлу з логами у разі помилки програми.\n    \n-   a\\[,file\\]- Додає виведення трасування у вказаний файл.\n    \n-   d - Включає виведення з макросу DBUG\\_поточного стану. Може бути доповнено списком ключових слів, щоб вибрати висновок макросу DBUG, що тільки містить ці ключові слова. Порожній список ключових слів передбачає виведення всіх макросів.\n    \n-   f\\[,functions\\]- обмежує дії налагоджувача вказаним списком функцій. Порожній список функцій передбачає вибір усіх функцій.\n    \n-   F - позначає виведення кожного рядка відладчика назвою вихідного файлу, що містить код, що спричинив висновок.\n    \n-   i - позначає виведення кожного рядка відладчика PID поточного процесу.\n    \n-   L - позначає виведення кожного рядка відладчика назвою вихідного файлу, що викликав висновок, та номером рядка у ній.\n    \n-   n - позначає виведення кожного рядка відладчика рівнем вкладеності поточної функції.\n    \n-   o\\[,file\\]- подібно до a\\[,file\\]але перезаписує старий файл, а не дописує його.\n    \n-   O\\[,file\\]- подібно до A\\[,file\\]але перезаписує старий файл, а чи не дописує його.\n    \n-   t\\[,N\\]- Включає контроль функцій під час трасування. Максимальний рівень вкладеності визначено N і за умовчанням дорівнює 200.\n    \n-   x – цей параметр активує профільування.\n    \n-   m - відстежувати дзвінки, пов'язані з виділеннями та вивільненням пам'яті.\n    \n\nПриклад:\n\n```\nd:t:x:O,/tmp/mysqlnd.trace\n```\n\n> **Зауваження** :\n> \n> Ця можливість доступна тільки для налагодження PHP. Працює на Microsoft Windows при використанні налагоджувального складання PHP, якщо PHP було зібрано за допомогою Microsoft Visual C версії 9 і вище.\n\n`mysqlnd.log_mask`int\n\nВизначає, які запити журналюватимуться. Значення за промовчанням - 0, що вимикає журнал. Значення параметра – лише ціле число, константи PHP використовувати не можна. Наприклад, при значенні 48 (16 + 32) в журнал записуватимуться повільні запити, які використовують невідповідні індекси (SERVER\\_QUERY\\_NO\\_GOOD\\_INDEX\\_USED ​​= 16), або не використовують їх взагалі SERVER\\_QUERY\\_NO\\_INDEX\\_USED ​​= 32). При значенні 2043 (1 + 2 + 8 + ... + 1024) до журналу записуватимуться всі типи повільних запитів.\n\nВикористовуються такі типи запитів: SERVER\\_STATUS\\_IN\\_TRANS=1, SERVER\\_STATUS\\_AUTOCOMMIT=2, SERVER\\_MORE\\_RESULTS\\_EXISTS=8, SERVER\\_QUERY\\_NO\\_GOOD\\_INDEX\\_USED=16, SERVER\\_QUERY\\_NO\\_INDEX\\_USED=32, SERVER\\_STATUS\\_CURSOR\\_EXISTS=64, SERVER\\_STATUS\\_LAST\\_ROW\\_SENT=128, SERVER\\_STATUS\\_DB\\_DROPPED=256, SERVER\\_STATUS\\_NO\\_BACKSLASH\\_ESCAPES=512, and SERVER\\_QUERY\\_WAS\\_SLOW=1024.\n\n`mysqlnd.mempool_default_size`int\n\nDefault size of the mysqlnd memory pool, which is used by result sets.\n\n`mysqlnd.net_read_timeout`int\n\n`mysqlnd`и клиентская библиотека MySQL,`libmysqlclient`, використовують різні мережеві API . `mysqlnd`использует потоки PHP, тогда как`libmysqlclient` - Власну обгортку над мережевими викликами операційної системи. У PHP за замовчуванням виставлений 60-секундний час очікування потоків. Цей параметр виставляється у php.ini директивою `default_socket_timeout`. За умовчанням це стосується всіх потоків, яким не встановлено інше значення часу очікування . `mysqlnd` не встановлював інших значень, тому підключення тривалих запитів можуть бути відключені після `default_socket_timeout`секунд с ошибкой 2006 - MySQL Server has gone away. Клиентская библиотека MySQL устанавливает время ожидания по умолчанию равное 24\\* 3600 секунд (1 день) і чекає на виникнення іншого часу очікування, такого як час очікування TCP/IP. Тепер `mysqlnd` використовує такий самий дуже довгий час очікування. Це значення можна змінити через нову директиву php.ini - `mysqlnd.net_read_timeout`. . `mysqlnd.net_read_timeout` буде використовуватися будь-яким модулем (`ext/mysql` `ext/mysqli` `PDO_MySQL`), использующим`mysqlnd`. . `mysqlnd` вказує потокам PHP використовувати `mysqlnd.net_read_timeout`. Будь ласка, зверніть увагу, що можуть бути невеликі відмінності між `MYSQL_OPT_READ_TIMEOUT` у клієнтській бібліотеці MySQL та потоках PHP, наприклад, судячи з документації, `MYSQL_OPT_READ_TIMEOUT` працює тільки для TCP/IP-підключень та, аж до MySQL 5.1.2, тільки під Windows. Потоки PHP можуть не мати таких обмежень. У разі сумнівів, прохання звірятися з документацією потоків.\n\n`mysqlnd.net_cmd_buffer_size`int\n\n`mysqlnd` резервує внутрішній командно-мережевий буфер розміром `mysqlnd.net_cmd_buffer_size` (У php.ini) байт для кожного з'єднання. Якщо команда клієнт-серверного протоколу MySQL, наприклад, `COM_QUERY` (звичайний запит), не вміщується в буфер, `mysqlnd` збільшить буфер до розміру, необхідного для надсилання команди. Щоразу, коли буфер був збільшений, змінна статистика `command_buffer_too_small` буде збільшено на один.\n\nЯкщо `mysqlnd` доводиться збільшувати буфер понад його заданого розміру `mysqlnd.net_cmd_buffer_size` байт для більшості з'єднань, вам слід обміркувати необхідність збільшення розміру за умовчанням, щоб уникнути повторних резервацій буфера.\n\nРозмір за замовчуванням буфера становить 4096 байт, що є найменшим можливим значенням.\n\nЦе значення також може бути встановлене функцією `mysqli_options(link, MYSQLI_OPT_NET_CMD_BUFFER_SIZE, size)`\n\n`mysqlnd.net_read_buffer_size`int\n\nМаксимальний розмір частини даних при зчитуванні в байтах при обробці тіла командного пакета MySQL. Клієнт-серверний протокол MySQL повертає всі свої команди до пакетів. Пакет складається з невеликого заголовка та тіла, що містить безпосередньо дані команди. Розмір тіла закодований у заголовку . `mysqlnd` зчитує тіло частинами по `MIN(header.size, mysqlnd.net_read_buffer_size)`байт. Если размер тела пакета больше, чем`mysqlnd.net_read_buffer_size`байт,`mysqlnd` буде викликати `read()` декілька разів.\n\nЦе значення також може бути встановлене функцією `mysqli_options(link, MYSQLI_OPT_NET_READ_BUFFER_SIZE, size)`\n\n`mysqlnd.sha256_server_public_key`string\n\nЦя опція відноситься до плагіну автентифікації SHA-256 і містить шлях до файлу з публічним ключем RSA MySQL-сервера.\n\nКлієнт може як не вказувати публічний ключ RSA, вказати його за допомогою цієї опції, або встановити ключ під час виконання за допомогою функції [mysqli\\_options()](mysqli.options.md). Якщо публічний ключ RSA не був переданий клієнтом, то ключ буде отримано в результаті стандартної процедури автентифікації плагіну автентифікації SHA-256.\n\n`mysqlnd.trace_alloc`string\n\n`mysqlnd.fetch_data_copy`int\n\nПримушує копіювати набори з внутрішнього буфера наборів PHP змінні замість використання логіки з посиланнями і \"копіюванням при записі\" за замовчуванням. Дивіться [реалізація управління пам'яттю](mysqlnd.memory.md) для більшої інформації.\n\nКопіювання результуючих наборів замість PHP змінних посилаються на них дозволяють виділяти пам'ять для PHP змінних заздалегідь. Залежно від коду користувача, реальних запитів до бази даних і розмірів їх результатів, можна знизити споживання пам'яті mysqlnd.\n\nНе застосовуйте, якщо використовується PDO\\_MySQL. У PDO\\_MySQL ще не додано підтримку цього нового режиму.\n\n> **Зауваження**: Видалено з PHP 8.1.0\n","title":"Налаштування під час виконання","contentType":2,"navigation":[{"mysqlnd.install.md":"« Встановлення"},{"mysqlnd.incompatibilities.md":"Несумісності »"},{"index.md":"PHP Manual"},{"book.mysqlnd.md":"Mysqlnd"}]}},"__N_SSG":true}