{"pageProps":{"page":{"slug":"function.ldap-exop.md","content":"# ldap\\_exop\n\n(PHP 7 >= 7.2.0, PHP 8)\n\nldap\\_exop — Виконує розширену операцію\n\n### Опис\n\n```methodsynopsis\nldap_exop(    LDAP\\Connection $ldap,    string $request_oid,    string $request_data = null,    array $controls = null,    string &$response_data = ?,    string &$response_oid = ?): mixed\n```\n\nВиконує розширену операцію для заданого з'єднання `ldap` з OID операції `request_oid` та даними `request_data`\n\n### Список параметрів\n\n`ldap`\n\nЕкземпляр [LDAP\\\\Connection](class.ldap-connection.md), що повертається функцією [ldap\\_connect()](function.ldap-connect.md)\n\n`request_oid`\n\nІдентифікатор розширеної операції OID. Можна використовувати одну з констант **`LDAP_EXOP_START_TLS`** **`LDAP_EXOP_MODIFY_PASSWD`** **`LDAP_EXOP_REFRESH`** **`LDAP_EXOP_WHO_AM_I`** **`LDAP_EXOP_TURN`** або рядок з OID необхідної операції.\n\n`request_data`\n\nДані для запиту на розширену операцію. Може бути **`null`**для операций типа**`LDAP_EXOP_WHO_AM_I`**. Може знадобитися закодувати BER.\n\n`controls`\n\nМассив[керуючих констант LDAP](ldap.controls.md) для посилки у запиті.\n\n`response_data`\n\nЯкщо встановлено, то буде заповнено даними, отриманими в результаті виконання операції. Якщо не встановлено, то для отримання даних можна використовувати ldap\\_parse\\_exop для одержаного об'єкта.\n\n`retoid`\n\nЯкщо встановлено, то буде заповнено OID відповіді. Зазвичай збігається з запитом OID.\n\n### Значення, що повертаються\n\nЯкщо використовується з `response_data`, то повертає **`true`** або **`false`**. Якщо використовується без `response_data`, то повертає ідентифікатор ресурсу або **`false`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.1.0 | Параметр`ldap` тепер чекає екземпляр [LDAP\\\\Connection](class.ldap-connection.md); раніше очікувався ресурс ([resource](language.types.resource.md) `ldap link` |\n| 7.3.0 | Добавлена поддержка`controls` |\n\n### Приклади\n\n**Приклад #1 Розширена операція Whoami**\n\n```php\n<?php\n$ds = ldap_connect(\"localhost\");   // предположим, что сервер LDAP запущен локально\n\nif ($ds) {\n    // Привязываемся к нужному DN\n    $bind = ldap_bind($ds, \"cn=root, o=My Company, c=US\", \"secret\");\n    if (!$bind) {\n     echo \"Невозможно осуществить привязку LDAP\";\n      exit;\n    }\n\n    // Вызываем WHOAMI EXOP\n    $r = ldap_exop($ds, LDAP_EXOP_WHO_AM_I);\n\n    // Разбираем полученный ответ\n    ldap_parse_exop($ds, $r, $response_data);\n    // Вывод: string(31) \"dn:cn=root, o=My Company, c=US\"\n    var_dump($response_data);\n\n    // То же самое, но с параметром $response_data\n    $success = ldap_exop($ds, LDAP_EXOP_WHO_AM_I, NULL, NULL, $response_data, $retoid);\n    if ($success) {\n      var_dump($response_data);\n    }\n\n    ldap_close($ds);\n} else {\n    echo \"Невозможно соединиться с сервером LDAP\";\n}\n?>\n```\n\n### Дивіться також\n\n-   [ldap\\_parse\\_result()](function.ldap-parse-result.md) \\- Витягти інформацію з результату\n-   [ldap\\_parse\\_exop()](function.ldap-parse-exop.md) \\- Розбір результуючого об'єкта виконання розширеної операції LDAP\n-   [ldap\\_exop\\_whoami()](function.ldap-exop-whoami.md) \\- Обгортка для розширеної операції WHOAMI\n-   [ldap\\_exop\\_refresh()](function.ldap-exop-refresh.md) \\- Обгортка для розширеної операції Refresh\n-   [ldap\\_exop\\_passwd()](function.ldap-exop-passwd.md) \\- Обгортка для розширеної операції PASSWD\n","title":"ldap\\_exop","contentType":2,"navigation":[{"function.ldap-exop-whoami.md":"« ldap\\_exop\\_whoami"},{"function.ldap-explode-dn.md":"ldap\\_explode\\_dn »"},{"index.md":"PHP Manual"},{"ref.ldap.md":"Функції LDAP"}]}},"__N_SSG":true}