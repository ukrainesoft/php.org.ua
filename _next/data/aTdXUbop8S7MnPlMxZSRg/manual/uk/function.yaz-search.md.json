{"pageProps":{"page":{"slug":"function.yaz-search.md","content":"# yaz\\_search\n\n(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)\n\nyaz\\_search — Підготовка пошуку\n\n### Опис\n\n```methodsynopsis\nyaz_search(resource $id, string $type, string $query): bool\n```\n\n**yaz\\_search()** готує пошук на заданому з'єднанні.\n\nТак само як і [yaz\\_connect()](function.yaz-connect.md) ця функція не блокує і лише готує умови пошуку, який буде виконаний функцією [yaz\\_wait()](function.yaz-wait.md)\n\n### Список параметрів\n\n`id`\n\nДескриптор з'єднання, що повертається функцією [yaz\\_connect()](function.yaz-connect.md)\n\n`type`\n\nЦей параметр є типом запиту. Підтримується лише тип `\"rpn\"`. У цьому випадку третій аргумент визначає запит Type-1 у префіксній нотації запитів.\n\n`query`\n\nЗапит RPN є текстовим поданням запиту Type-1, як зазначено у стандарті Z39.50. Проте у текстовому уявленні, використовуваному YAZ, застосовується префиксная нотація, тобто. оператор передує операнду. Рядок запиту є послідовністю лексем(токенів), в якій ігноруються пробільні символи, крім тих, що знаходяться між подвійними лапками. Лексеми, які починаються із символу `@` є операторами, інакше вони сприймаються як пошуковий термін.\n\n**Оператори RPN**\n\n| Конструкция | Опис |\n| --- | --- |\n| `@and` query1 query2 | перетин query1 і query2 |\n| `@or` query1 query2 | об'єднання query1 та query2 |\n| `@not` query1 query2 | query1 і не query2 |\n| `@set` name | посилання на набір значень, що повертаються |\n| `@attrset` set query | визначає набір атрибутів `set` для запиту `query`. . Ця конструкція доступна лише один раз – на самому початку запиту. |\n| `@attr` \\[set\\] type=value query | встановлює атрибути запиту. Значення `type`и`value` - Цілочисленні та визначають тип атрибуту та тип значення відповідно. Значення `set`, якщо його встановлено, визначає налаштування атрибутів. |\n\nВсю інформацію про доступні атрибути ви можете знайти на сайті [» Z39.50 Maintenance Agency](http://www.loc.gov/z3950/agency/defns/bib1.md)\n\n> **Зауваження** :\n> \n> Якщо ви хочете використовувати більш дружню нотацію, використовуйте CCL парсер - функції [yaz\\_ccl\\_conf()](function.yaz-ccl-conf.md) і [yaz\\_ccl\\_parse()](function.yaz-ccl-parse.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклади запитів**\n\nВи можете використовувати прості терми, наприклад:\n\ncomputer\n\nякі знаходять збіги слова \"computer\" у документах. Атрибутів не визначено.\n\nзапит\n\n\"knuth donald\"\n\nзнаходить документи, де є фраза \"knuth donald\" (передбачається, що сервер підтримує пошук за фразами).\n\nЗапит містить два атрибути для однієї фрази.\n\n@attr 1=1003 @attr 4=1 \"knuth donald\"\n\nПерший атрибут має тип 1 (використовується Bib-1), значення якого дорівнює 1003 (Автор). Другий атрибут має тип 4 (структура) зі значенням 1 (фраза). Таким чином, цей запит буде шукати документи автор яких Donald Knuth.\n\nзапит\n\n@and @or a b @not @or c d e\n\nв інфіксній нотації представляється як `(a або b) та ((c або d) і не e)`\n\nще один складніший запит:\n\n```\n@attrset gils @and @attr 1=4 art @attr 1=2000 company\n```\n\nВесь запит використовуватиме набір атрибутів GILS. Запит шукає документи, де `art` зустрічається в назві (GILS, BIB-1) та `company` у постачальниках.\n","title":"yaz\\_search","contentType":2,"navigation":[{"function.yaz-schema.md":"« yaz\\_schema"},{"function.yaz-set-option.md":"yaz\\_set\\_option »"},{"index.md":"PHP Manual"},{"ref.yaz.md":"Функції YAZ"}]}},"__N_SSG":true}