{"pageProps":{"page":{"slug":"function.str-getcsv.md","content":"# str\\_getcsv\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nstr\\_getcsv — Розбирає CSV-рядки в масив\n\n### Опис\n\n```methodsynopsis\nstr_getcsv(    string $string,    string $separator = \",\",    string $enclosure = \"\\\"\",    string $escape = \"\\\\\"): array\n```\n\nЦя функція виконує розбір рядка у форматі CSV і повертає масив із отриманими з рядка полями.\n\n> **Зауваження** :\n> \n> Ця функція враховує налаштування локалі. Наприклад, якщо `LC_CTYPE`установлена в`en_US.UTF-8`, то рядки в однобайтовому кодуванні будуть неправильно прочитані цією функцією.\n\n### Список параметрів\n\n`string`\n\nРядок, що обробляється.\n\n`separator`\n\nВстановлює роздільник поля (лише один однобайтовий символ).\n\n`enclosure`\n\nВстановлює символ обмежувача поля (лише один однобайтовий символ).\n\n`escape`\n\nВстановлює символ, що екранує (не більше одного однобайтового символу). За замовчуванням дорівнює зворотному слюшу (`\\`). Порожня стрічка (`\"\"`) відключає пропрієтарний механізм екранування.\n\n> **Зауваження**: Зазвичай символ `enclosure` екранується всередині поля шляхом його подвоювання; однак, символ `escape` як альтернатива. Тому значення за промовчанням цих параметрів `\"\"`и`\\\"` мають однакове значення. Крім дозволу екранувати символ `enclosure`символ`escape` немає особливого сенсу; він навіть не призначений для самого екранування.\n\n### Значення, що повертаються\n\nПовертає індексований масив, що містить отримані рядки поля.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 7.4.0 | Тепер порожній параметр `escape` інтерпретуватиметься як вимога відключення проприетарного механізму екранування. Раніше порожній рядок позначав використання символу екранування за промовчанням. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** str\\_getcsv()\\*\\*\\*\\*\n\n```php\n<?php\n\n$string = 'PHP,Java,Python,Kotlin,Swift';\n$data = str_getcsv($string);\n\nvar_dump($data);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(5) {\n  [0]=>\n  string(3) \"PHP\"\n  [1]=>\n  string(4) \"Java\"\n  [2]=>\n  string(6) \"Python\"\n  [3]=>\n  string(6) \"Kotlin\"\n  [4]=>\n  string(5) \"Swift\"\n}\n```\n\n**Приклад #2 Приклад використання** str\\_getcsv()\\*\\* з порожнім рядком\\*\\*\n\n**Застереження**\n\nПри використанні порожнього рядка функція повертає значення `[null]` замість порожнього масиву.\n\n```php\n<?php\n\n$string = '';\n$data = str_getcsv($string);\n\nvar_dump($data);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(1) {\n  [0]=>\n  NULL\n}\n```\n\n### Дивіться також\n\n-   [fgetcsv()](function.fgetcsv.md) \\- Читає рядок з файлу та проводить розбір даних CSV\n","title":"str\\_getcsv","contentType":2,"navigation":[{"function.str-ends-with.md":"« str\\_ends\\_with"},{"function.str-increment.md":"str\\_increment »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}