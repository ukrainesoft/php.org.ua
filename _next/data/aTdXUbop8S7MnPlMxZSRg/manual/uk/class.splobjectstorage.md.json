{"pageProps":{"page":{"slug":"class.splobjectstorage.md","content":"# Клас SplObjectStorage\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\n## Вступ\n\nКлас SplObjectStorage надає відображення об'єктів даних або набір об'єктів, ігноруючи дані. Ця подвійна мета може бути корисною у багатьох випадках, включаючи необхідність унікальної ідентифікації об'єктів.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class SplObjectStorage\n    \n\n    \n     implements\n      Countable,\n\n     Iterator,\n\n     Serializable,\n\n     ArrayAccess {\n\n    /* Методы */\n    \n   public addAll(SplObjectStorage $storage): int\npublic attach(object $object, mixed $info = null): void\npublic contains(object $object): bool\npublic count(int $mode = COUNT_NORMAL): int\npublic current(): object\npublic detach(object $object): void\npublic getHash(object $object): string\npublic getInfo(): mixed\npublic key(): int\npublic next(): void\npublic offsetExists(object $object): bool\npublic offsetGet(object $object): mixed\npublic offsetSet(object $object, mixed $info = null): void\npublic offsetUnset(object $object): void\npublic removeAll(SplObjectStorage $storage): int\npublic removeAllExcept(SplObjectStorage $storage): int\npublic rewind(): void\npublic serialize(): string\npublic setInfo(mixed $info): void\npublic unserialize(string $data): void\npublic valid(): bool\n\n   }\n```\n\n## Приклади\n\n**Приклад #1 Класс**SplObjectStorage\\*\\* як набір об'єктів\\*\\*\n\n```php\n<?php\n// Набор объектов\n$s = new SplObjectStorage();\n\n$o1 = new stdClass;\n$o2 = new stdClass;\n$o3 = new stdClass;\n\n$s->attach($o1);\n$s->attach($o2);\n\nvar_dump($s->contains($o1));\nvar_dump($s->contains($o2));\nvar_dump($s->contains($o3));\n\n$s->detach($o2);\n\nvar_dump($s->contains($o1));\nvar_dump($s->contains($o2));\nvar_dump($s->contains($o3));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nbool(true)\nbool(false)\nbool(true)\nbool(false)\nbool(false)\n```\n\n**Приклад #2 Класс**SplObjectStorage\\*\\* як відображення об'єктів у дані\\*\\*\n\n```php\n<?php\n// Как отображение объектов к данным\n$s = new SplObjectStorage();\n\n$o1 = new stdClass;\n$o2 = new stdClass;\n$o3 = new stdClass;\n\n$s[$o1] = \"данные для объекта 1\";\n$s[$o2] = array(1,2,3);\n\nif (isset($s[$o2])) {\n    var_dump($s[$o2]);\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n}\n```\n\n## Зміст\n\n-   [SplObjectStorage::addAll](splobjectstorage.addall.md)— Додає всі об'єкти з іншого контейнера\n-   [SplObjectStorage::attach](splobjectstorage.attach.md)— Додає об'єкт у контейнер\n-   [SplObjectStorage::contains](splobjectstorage.contains.md)— Перевіряє, чи контейнер містить заданий об'єкт\n-   [SplObjectStorage::count](splobjectstorage.count.md)— Повертає кількість об'єктів у контейнері\n-   [SplObjectStorage::current](splobjectstorage.current.md)— Повертає поточний об'єкт\n-   [SplObjectStorage::detach](splobjectstorage.detach.md)— Видаляє об'єкт з контейнера\n-   [SplObjectStorage::getHash](splobjectstorage.gethash.md) \\- Обчислює унікальний ідентифікатор для об'єктів контейнера\n-   [SplObjectStorage::getInfo](splobjectstorage.getinfo.md)— Повертає дані, що асоціюються з поточним об'єктом\n-   [SplObjectStorage::key](splobjectstorage.key.md) \\- Повертає індекс поточного положення ітератора\n-   [SplObjectStorage::next](splobjectstorage.next.md)— Перехід до наступного об'єкту\n-   [SplObjectStorage::offsetExists](splobjectstorage.offsetexists.md)— Перевіряє, чи існує об'єкт у контейнері\n-   [SplObjectStorage::offsetGet](splobjectstorage.offsetget.md)— Повертає дані, що асоціюються з об'єктом object\n-   [SplObjectStorage::offsetSet](splobjectstorage.offsetset.md)— Асоціює дані з об'єктом у контейнері\n-   [SplObjectStorage::offsetUnset](splobjectstorage.offsetunset.md)— Видаляє об'єкт із контейнера\n-   [SplObjectStorage::removeAll](splobjectstorage.removeall.md)— Видаляє з поточного контейнера об'єкти, які є в іншому контейнері\n-   [SplObjectStorage::removeAllExcept](splobjectstorage.removeallexcept.md)— Видаляє з поточного контейнера всі об'єкти, яких немає в іншому контейнері\n-   [SplObjectStorage::rewind](splobjectstorage.rewind.md) \\- Переводить ітератор на перший елемент контейнера\n-   [SplObjectStorage::serialize](splobjectstorage.serialize.md) \\- Серіалізує контейнер\n-   [SplObjectStorage::setInfo](splobjectstorage.setinfo.md)— Асоціює дані з поточним об'єктом контейнера\n-   [SplObjectStorage::unserialize](splobjectstorage.unserialize.md)— Відновлює серіалізований контейнер із рядка\n-   [SplObjectStorage::valid](splobjectstorage.valid.md)— Визначає, чи допустиме поточне значення ітератора\n","title":"Клас SplObjectStorage","contentType":2,"navigation":[{"splfixedarray.wakeup.md":"« SplFixedArray::\\_\\_wakeup"},{"splobjectstorage.addall.md":"SplObjectStorage::addAll »"},{"index.md":"PHP Manual"},{"spl.datastructures.md":"Структури даних"}]}},"__N_SSG":true}