{"pageProps":{"page":{"slug":"mysql-xdevapi-schema.createcollection.md","content":"# Schema::createCollection\n\n(No version information available, might only be in Git)\n\nSchema::createCollection — Додає колекцію до схеми\n\n### Опис\n\n```methodsynopsis\npublic mysql_xdevapi\\Schema::createCollection(string $name, string $validate = ?): mysql_xdevapi\\Collection\n```\n\nСтворює колекцію усередині схеми.\n\n### Список параметрів\n\n`name`\n\nІм'я колекції.\n\n`validate`\n\nВизначення перевірки як об'єкт JSON.\n\n### Значення, що повертаються\n\nПовертає об'єкт класу Collection.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.20 | Доданий необов'язковий параметр validate. |\n\n### Приклади\n\n**Приклад #1 Приклад использования метода**mysql\\_xdevapi\\\\Schema::createCollection()\\*\\*\\*\\*\n\n```php\n<?php\n$session = mysql_xdevapi\\getSession(\"mysqlx://user:password@localhost\");\n\n$session->sql(\"DROP DATABASE IF EXISTS food\")->execute();\n$session->sql(\"CREATE DATABASE food\")->execute();\n$session->sql(\"CREATE TABLE food.fruit(name text, rating text)\")->execute();\n\n$schema = $session->getSchema(\"food\");\n$schema->createCollection(\"trees\");\n\nprint_r($schema->gettables());\nprint_r($schema->getcollections());\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nArray\n(\n    [fruit] => mysql_xdevapi\\Table Object\n        (\n            [name] => fruit\n        )\n)\nArray\n(\n    [trees] => mysql_xdevapi\\Collection Object\n        (\n            [name] => trees\n        )\n)\n```\n\n**Приклад #2 Приклад использования метода**mysql\\_xdevapi\\\\Schema::createCollection()\\*\\*\\*\\*\n\n```php\n<?php\n $collection = $schema->createCollection(\"mycollection\", '{\n    \"validation\": {\n        \"level\": \"strict\",\n        \"schema\": {\n            \"id\": \"http://json-schema.org/geo\",\n            \"description\": \"A geographical coordinate\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"latitude\": {\n                    \"type\": \"number\"\n                },\n                \"longitude\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"latitude\", \"longitude\"]\n        }\n    }\n}');\n// Успешное выполнение\n$collection->add('{\"latitude\": 10, \"longitude\": 20}')->execute();\n// Ошибка, недопустимые типы (не числа)\n$collection->add('{\"latitude\": \"lat\", \"longitude\": \"long\"}')->execute();\n```\n","title":"Schema::createCollection","contentType":2,"navigation":[{"mysql-xdevapi-schema.construct.md":"« Schema::\\_\\_construct"},{"mysql-xdevapi-schema.dropcollection.md":"Schema::dropCollection »"},{"index.md":"PHP Manual"},{"class.mysql-xdevapi-schema.md":"mysql\\_xdevapi\\\\Schema"}]}},"__N_SSG":true}