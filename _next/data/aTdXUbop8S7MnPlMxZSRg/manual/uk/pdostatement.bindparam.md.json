{"pageProps":{"page":{"slug":"pdostatement.bindparam.md","content":"# PDOStatement::bindParam\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8, PECL pdo >= 0.1.0)\n\nPDOStatement::bindParam — Прив'язує параметр запиту до змінної\n\n### Опис\n\n```methodsynopsis\npublic PDOStatement::bindParam(    string|int $param,    mixed &$var,    int $type = PDO::PARAM_STR,    int $maxLength = 0,    mixed $driverOptions = null): bool\n```\n\nЗв'язує змінну PHP з іменованим або неіменованим параметром SQL-запиту, що готується. На відміну від [PDOStatement::bindValue()](pdostatement.bindvalue.md), змінна прив'язується за посиланням та її значення обчислюватиметься під час виклику [PDOStatement::execute()](pdostatement.execute.md)\n\nУ більшості випадків у запитах, що готуються, використовуються тільки вхідні параметри, тобто при побудові запиту доступ до них здійснюється тільки в режимі читання (можливе приведення відповідно до `type`). Тим не менш, деякі драйвери дозволяють запускати збережені процедури, які, у свою чергу, можуть повертати дані за допомогою вихідних параметрів. Часто такі параметри використовуються одночасно як вхідні і як вихідні.\n\n### Список параметрів\n\n`param`\n\nІдентифікатор параметра. Для запитів, що готуються, з іменованими параметрами це буде ім'я у вигляді :name. Якщо використовуються неіменовані параметри (знаки питання?), це буде позиція псевдозмінної в запиті (починаючи з 1).\n\n`var`\n\nІм'я змінної PHP, яку потрібно прив'язати до SQL-запиту.\n\n`type`\n\nЯвно заданий тип даних параметра. Тип задається однією з [констант`PDO::PARAM_*`](pdo.constants.md). Якщо параметр використовується, у тому числі для виведення інформації з процедури, що зберігається, до значення аргументу `type`необходимо добавить\\*\\*`PDO::PARAM_INPUT_OUTPUT`\\*\\*, використовуючи оператор побітове АБО.\n\n`maxLength`\n\nРозмір типу даних. Щоб вказати, що параметр використовується для виведення даних із процедури, необхідно явно задати його розмір. Має значення, тільки якщо параметр `type`установлено значение\\*\\*`PDO::PARAM_INPUT_OUTPUT`\\*\\*\n\n`driverOptions`\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nВидає помилку рівня **`E_WARNING`**, якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_WARNING`**\n\nВикидає виняток [PDOException](class.pdoexception.md), якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_EXCEPTION`**\n\n### Приклади\n\n**Приклад #1 Виконання підготовленого запиту з іменованими псевдозмінними**\n\n```php\n<?php\n/* Выполнение запроса с привязкой PHP-переменных */\n$calories = 150;\n$colour = 'red';\n$sth = $dbh->prepare('SELECT name, colour, calories\n    FROM fruit\n    WHERE calories < :calories AND colour = :colour');\n$sth->bindParam('calories', $calories, PDO::PARAM_INT);\n/* Имена также могут начинаться с двоеточия \":\" (необязательно) */\n$sth->bindParam(':colour', $colour, PDO::PARAM_STR);\n$sth->execute();\n?>\n```\n\n**Приклад #2 Виконання підготовленого запиту з неназваними псевдозмінними (?)**\n\n```php\n<?php\n/* Выполнение запроса с привязкой PHP-переменных */\n$calories = 150;\n$colour = 'red';\n$sth = $dbh->prepare('SELECT name, colour, calories\n    FROM fruit\n    WHERE calories < ? AND colour = ?');\n$sth->bindParam(1, $calories, PDO::PARAM_INT);\n$sth->bindParam(2, $colour, PDO::PARAM_STR);\n$sth->execute();\n?>\n```\n\n**Приклад #3 Виклик процедури, що зберігається з INOUT-параметром**\n\n```php\n<?php\n/* Вызов хранимой процедуры с INOUT-параметром */\n$colour = 'red';\n$sth = $dbh->prepare('CALL puree_fruit(?)');\n$sth->bindParam(1, $colour, PDO::PARAM_STR|PDO::PARAM_INPUT_OUTPUT, 12);\n$sth->execute();\nprint \"После приготовления фруктового пюра, цвет - $colour\";\n?>\n```\n\n### Дивіться також\n\n-   [PDO::prepare()](pdo.prepare.md) \\- готує запит до виконання та повертає пов'язаний із цим запитом об'єкт\n-   [PDOStatement::execute()](pdostatement.execute.md) \\- Запускає підготовлений запит на виконання\n-   [PDOStatement::bindValue()](pdostatement.bindvalue.md) \\- Зв'язує параметр із заданим значенням\n","title":"PDOStatement::bindParam","contentType":2,"navigation":[{"pdostatement.bindcolumn.md":"« PDOStatement::bindColumn"},{"pdostatement.bindvalue.md":"PDOStatement::bindValue »"},{"index.md":"PHP Manual"},{"class.pdostatement.md":"PDOStatement"}]}},"__N_SSG":true}