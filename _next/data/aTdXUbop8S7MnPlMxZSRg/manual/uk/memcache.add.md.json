{"pageProps":{"page":{"slug":"memcache.add.md","content":"# Memcache::add\n\n(PECL memcache >= 0.2.0)\n\nMemcache::add — Додати елемент із зазначеним ключем\n\n### Опис\n\n```methodsynopsis\nMemcache::add(    string $key,    mixed $var,    int $flag = ?,    int $expire = ?): bool\n```\n\n**Memcache::add()** записує елемент `var` із зазначеним ключем `key` тільки якщо цей ключ ще не існує на сервері. Також можна використовувати функцію **memcache\\_add()**\n\n### Список параметрів\n\n`key`\n\nКлюч, з яким пов'язаний елемент.\n\n`var`\n\nЗмінна для збереження. Рядкові та числові значення зберігаються як є, інші типи серіалізуються.\n\n`flag`\n\nИспользуйте\\*\\*`MEMCACHE_COMPRESSED`\\*\\* для запису елемента зі стисненням (використовується zlib).\n\n`expire`\n\nЧас життя елемент. Якщо дорівнює нулю, елемент ніколи не старіє. Також ви можете використовувати мітку часу Unix або число секунд, починаючи з поточного моменту, однак, у цьому випадку число секунд не може бути більше 2592000 (30 днів).\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або **`false`** у разі виникнення помилки. Повертає \\*\\*`false`\\*\\*якщо такий ключ вже існує. В інших випадках поведінка **Memcache::add()** аналогічно [Memcache::set()](memcache.set.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** Memcache::add()\\*\\*\\*\\*\n\n```php\n<?php\n\n$memcache_obj = memcache_connect(\"localhost\", 11211);\n\n/* процедурное API */\nmemcache_add($memcache_obj, 'var_key', 'test variable', false, 30);\n\n/* объектно-ориентированное API */\n$memcache_obj->add('var_key', 'test variable', false, 30);\n\n?>\n```\n\n### Дивіться також\n\n-   [Memcache::set()](memcache.set.md) \\- Зберегти дані на сервері\n-   [Memcache::replace()](memcache.replace.md) \\- Замінити значення наявного елемента\n","title":"Memcache::add","contentType":2,"navigation":[{"class.memcache.md":"« Memcache"},{"memcache.addserver.md":"Memcache::addServer »"},{"index.md":"PHP Manual"},{"class.memcache.md":"Memcache"}]}},"__N_SSG":true}