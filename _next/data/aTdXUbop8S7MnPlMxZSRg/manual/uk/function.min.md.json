{"pageProps":{"page":{"slug":"function.min.md","content":"# min\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nmin — Знаходить найменше значення\n\n### Опис\n\n```methodsynopsis\nmin(mixed $value, mixed ...$values): mixed\n```\n\nАльтернативна сигнатура (не підтримується з іменованими аргументами):\n\n```methodsynopsis\nmin(array $value_array): mixed\n```\n\nЯкщо перший і єдиний параметр масив, то функція **min()** поверне найменше значення із цього масиву. Якщо передано хоча б два параметри, функція **min()** поверне найменший із них.\n\n> **Зауваження** :\n> \n> Значення різних типів будуть порівнюватися за [стандартними правилами порівняння](language.operators.comparison.md). Наприклад, нечисловий рядок (string) буде порівнюватися з цілим числом (int) так, якби її значення було одно , але нечислові рядки (string) між собою порівнюватимуть в алфавітно-цифровому порядку. Значення, що повертається, збереже вихідний тип без перетворення.\n\n**Застереження**\n\nДотримуються обережності при передачі аргументів різних типів, оскільки результат функції **min()** буде непередбачуваним.\n\n### Список параметрів\n\n`value`\n\nЛюбое[порівнянне](language.operators.comparison.md)значение.\n\n`values`\n\nБудь-які [порівнянне](language.operators.comparison.md)значение.\n\n`value_array`\n\nМасив значень.\n\n### Значення, що повертаються\n\nФункция**min()** поверне значення параметра, визнаного найменшим за стандартними правилами порівняння. Якщо різнотипні значення оцінюються як рівні (наприклад и`«abc»`), функція поверне перше.\n\n### Помилки\n\nЯкщо передано порожній масив, функція **min()** викидає виняток [ValueError](class.valueerror.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Функция**min()** тепер у разі виникнення помилки викидає виняток [ValueError](class.valueerror.md); раніше повертала значення **`false`** і видавала помилку рівня **`E_WARNING`** |\n| 8.0.0 | Оскільки [порівняння рядків з числами](migration80.incompatible.md#migration80.incompatible.core.string-number-comparision) були змінені, функція **min()** більше не повертає інше значення, залежно від порядку аргументів для таких випадків. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** min()\\*\\*\\*\\*\n\n```php\n<?php\n\necho min(2, 3, 1, 6, 7);  // 1\necho min(array(2, 4, 5)); // 2\n\n// Здесь сравниваются -1 < 0, так что -1 меньше\necho min('hello', -1);    // -1\n\n// При сравнении массивов, разной длины — функция min вернёт самый короткий\n$val = max(array(2, 2, 2), array(1, 1, 1, 1)); // array(2, 2, 2)\n\n// При передаче нескольких массивов, они сравниваются полностью\n// в Прикладе: 2 == 2, но 4 < 5\n$val = min(array(2, 4, 8), array(2, 5, 1)); // array(2, 4, 8)\n\n// При передаче массива и не массива,\n// первый не возвращается, т. к. считается самым большим\n$val = min('string', array(2, 5, 7), 42);   // string\n\n// Если один из аргументов равен NULL или логическому значению, то сравнение с другими\n// значениями будет происходить по правилу FALSE < TRUE и NULL == FALSE,\n// независимо от того, какого типа параметры переданы.\n// В Прикладе ниже, -10 трактуется как TRUE\n$val = min(-10, FALSE, 10); // FALSE\n$val = min(-10, NULL, 10);  // NULL\n\n// Значение 0 трактуется как FALSE, значит оно «меньше» TRUE\n$val = min(0, TRUE); // 0\n\n?>\n```\n\n### Дивіться також\n\n-   [max()](function.max.md) \\- Повертає найбільше значення\n-   [count()](function.count.md) \\- Підраховує кількість елементів масиву або Countable об'єкті\n","title":"min","contentType":2,"navigation":[{"function.max.md":"« max"},{"function.octdec.md":"octdec »"},{"index.md":"PHP Manual"},{"ref.math.md":"Математичні функції"}]}},"__N_SSG":true}