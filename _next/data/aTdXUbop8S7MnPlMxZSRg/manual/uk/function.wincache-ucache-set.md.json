{"pageProps":{"page":{"slug":"function.wincache-ucache-set.md","content":"# wincache\\_ucache\\_set\n\n(PECL wincache >= 1.1.0)\n\nwincache\\_ucache\\_set — Додає змінну в кеш користувача і перезаписує змінну, якщо вона вже існує в кеші\n\n### Опис\n\n```methodsynopsis\nwincache_ucache_set(mixed $key, mixed $value, int $ttl = 0): bool\n```\n\n```methodsynopsis\nwincache_ucache_set(array $values, mixed $unused = NULL, int $ttl = 0): bool\n```\n\nДодає змінну в кеш користувача. Замінює змінну, якщо вона вже існує у кеші. Додана або оновлена ​​змінна залишається в кеші користувача, поки не закінчиться термін її дії або вона не буде видалена за допомогою функцій [wincache\\_ucache\\_delete()](function.wincache-ucache-delete.md) або [wincache\\_ucache\\_clear()](function.wincache-ucache-clear.md)\n\n### Список параметрів\n\n`key`\n\nЗберігає змінну з використанням цього імені `key`Если переменная с таким же`key` вже існує, функція перезапише попереднє значення новим . `key`чувствителен к регистру`key` також може приймати масив пар ім'я => значення, де імена будуть використовуватися як ключі. Це можна використовувати для додавання кількох значень до кешу за одну операцію, що дозволяє уникнути стану гонки.\n\n`value`\n\nЗначення змінної, яку потрібно зберегти . `Value` підтримує всі типи даних, крім таких ресурсів, як дескриптори файлів. Параметр ігнорується, якщо першим аргументом масив. Загальне керівництво – передати **`null`** в якості `value`при использовании массива`key`. Якщо `value` є об'єктом або масивом, що містить об'єкти, об'єкти будуть серіалізовані. Докладніше про серіалізацію об'єктів дивіться в описі [\\_\\_sleep()](language.oop5.magic.md#object.sleep)\n\n`values`\n\nАсоціативний масив ключів та значень.\n\n`ttl`\n\nЧас, протягом якого змінна знаходиться у кеші, за секунди. Після того, як значення, вказане в `ttl` буде передано, збережена змінна буде видалена з кеша. Параметр набуває значення за замовчуванням , что означает, что переменная останется в кеше, пока она не будет явно удалена с помощью функций[wincache\\_ucache\\_delete()](function.wincache-ucache-delete.md) або [wincache\\_ucache\\_clear()](function.wincache-ucache-clear.md)\n\n### Значення, що повертаються\n\nЯкщо `key` є рядком, функція повертає **`true`** у разі успішного виконання та \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\nЯкщо `key` є масивом, функція повертає:\n\n-   Якщо всі пари ім'я => значення масиву можуть бути встановлені, функція повертає порожній масив;\n-   Якщо всі пари ім'я => значення в масиві не можуть бути встановлені, функція повертає **`false`**\n-   Якщо деякі з них можуть бути встановлені, а інші - ні, функція повертає масив з парами name => value, які не вдалося додати в кеш користувача.\n\n### Приклади\n\n**Приклад #1 Приклад використання** wincache\\_ucache\\_set()**с`key` у вигляді рядка**\n\n```php\n<?php\n$bar = 'BAR';\nvar_dump(wincache_ucache_set('foo', $bar));\nvar_dump(wincache_ucache_get('foo'));\n$bar1 = 'BAR1';\nvar_dump(wincache_ucache_set('foo', $bar1));\nvar_dump(wincache_ucache_get('foo'));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\nstring(3) \"BAR\"\nbool(true)\nstring(3) \"BAR1\"\n```\n\n**Приклад #2 Приклад використання** wincache\\_ucache\\_set()**с`key` у вигляді масиву**\n\n```php\n<?php\n$colors_array = array('green' => '5', 'Blue' => '6', 'yellow' => '7', 'cyan' => '8');\nvar_dump(wincache_ucache_set($colors_array));\nvar_dump(wincache_ucache_set($colors_array));\nvar_dump(wincache_ucache_get('Blue'));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(0) {}\narray(0) {}\nstring(1) \"6\"\n```\n\n### Дивіться також\n\n-   [wincache\\_ucache\\_add()](function.wincache-ucache-add.md) \\- Додає змінну в кеш користувача, тільки якщо змінна ще не існує в кеші\n-   [wincache\\_ucache\\_get()](function.wincache-ucache-get.md) \\- Отримує змінну, що зберігається в користувальницькому кеші\n-   [wincache\\_ucache\\_delete()](function.wincache-ucache-delete.md) \\- Видаляє змінні з користувальницького кешу\n-   [wincache\\_ucache\\_clear()](function.wincache-ucache-clear.md) \\- Видаляє весь вміст користувальницького кешу\n-   [wincache\\_ucache\\_exists()](function.wincache-ucache-exists.md) \\- Перевіряє, чи існує змінна в кеші користувача\n-   [wincache\\_ucache\\_meminfo()](function.wincache-ucache-meminfo.md) \\- Отримує інформацію про використання пам'яті кешу користувача.\n-   [wincache\\_ucache\\_info()](function.wincache-ucache-info.md) \\- Отримує інформацію про дані, що зберігаються в кеші користувача\n-   [\\_\\_sleep()](language.oop5.magic.md#object.sleep)\n","title":"wincache\\_ucache\\_set","contentType":2,"navigation":[{"function.wincache-ucache-meminfo.md":"« wincache\\_ucache\\_meminfo"},{"function.wincache-unlock.md":"wincache\\_unlock »"},{"index.md":"PHP Manual"},{"ref.wincache.md":"Функції WinCache"}]}},"__N_SSG":true}