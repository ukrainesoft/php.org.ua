{"pageProps":{"page":{"slug":"imagick.subimagematch.md","content":"# Imagick::subImageMatch\n\n(PECL imagick 3 >= 3.3.0)\n\nImagick::subImageMatch — Шукає фрагмент зображення у поточному зображенні та повертає другорядне зображення.\n\n### Опис\n\n```methodsynopsis\npublic Imagick::subImageMatch(Imagick $Imagick, array &$offset = ?, float &$similarity = ?): Imagick\n```\n\nВиконує пошук фрагмента зображення в поточному зображенні і повертає другорядне зображення, в якому точний збіг є повністю білим, а якщо жоден з пікселів не збігається чорним, інакше деяким проміжним рівнем сірого. Ви також можете передати необов'язкові параметри bestMatch та similarity. Після виклику функції similarity буде встановлено на \"score\" подібності між другорядним зображенням і відповідною позицією на великому зображенні, bestMatch міститиме асоціативний масив з елементами x, y, width, height, які описують збігаючу область.\n\n### Список параметрів\n\n`Imagick`\n\n`offset`\n\n`similarity`\n\nНове зображення, що відображає ступінь подібності кожного пікселя.\n\n### Значення, що повертаються\n\n### Приклади\n\n**Приклад #1 Приклад використання** Imagick::subImageMatch()\\*\\*\\*\\*\n\n```php\n<?php\nfunction subImageMatch($imagePath) {\n    $imagick = new \\Imagick(realpath($imagePath));\n    $imagick2 = clone $imagick;\n    $imagick2->cropimage(40, 40, 250, 110);\n    $imagick2->vignetteimage(0, 1, 3, 3);\n\n    $similarity = null;\n    $bestMatch = null;\n    $comparison = $imagick->subImageMatch($imagick2, $bestMatch, $similarity);\n\n    $comparison->setImageFormat('png');\n    header(\"Content-Type: image/png\");\n    echo $imagick->getImageBlob();\n}\n\n?>\n```\n","title":"Imagick::subImageMatch","contentType":2,"navigation":[{"imagick.stripimage.md":"« Imagick::stripImage"},{"imagick.swirlimage.md":"Imagick::swirlImage »"},{"index.md":"PHP Manual"},{"class.imagick.md":"Imagick"}]}},"__N_SSG":true}