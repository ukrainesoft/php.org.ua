{"pageProps":{"page":{"slug":"phar.mount.md","content":"# Phar::mount\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL phar >= 2.0.0)\n\nPhar::mount — Монтування зовнішнього шляху або файлу до віртуального шляху в phar-архіві\n\n### Опис\n\n```methodsynopsis\nfinal public static Phar::mount(string $pharPath, string $externalPath): void\n```\n\nДуже схоже на концепцію файлової системи unix щодо монтування зовнішнього пристрою в існуюче дерево директорій . **Phar::mount()** дозволяє посилатися на зовнішні файли та директорії, ніби вони знаходяться всередині архіву. Це дозволяє підвищити рівень абстракції, звертаючись до зовнішніх конфігураційних файлів так, ніби вони є частиною архіву.\n\n### Список параметрів\n\n`pharPath`\n\nВнутрішній шлях в архіві, яким необхідно примонтувати зовнішній шлях. Це має бути неіснуючий відносний шлях усередині архіву.\n\n`externalPath`\n\nШлях або URL зовнішнього файлу чи директорії\n\n### Значення, що повертаються\n\nНічого не вертає. У разі виникнення помилки викидає виняток [PharException](class.pharexception.md)\n\n### Помилки\n\nВикидає виняток [PharException](class.pharexception.md)при возникновении ошибок.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Phar::mount()\\*\\*\\*\\*\n\nУ наступному прикладі демонструється доступ до зовнішнього конфігураційного файлу, наче він знаходиться всередині архіву.\n\nДля початку код, що міститься в архіві:\n\n```php\n<?php\n$configuration = simplexml_load_string(file_get_contents(\n    Phar::running(false) . '/config.xml'));\n?>\n```\n\nДалі зовнішній код, який монтує файл в архів:\n\n```php\n<?php\n// для начала настроим ассоциацию между абстрактным config.xml\n// и конкретным файлом на диске\nPhar::mount('phar://config.xml', '/home/example/config.xml');\n// а теперь запускаем приложение\ninclude '/path/to/archive.phar';\n?>\n```\n\nІнший метод - помістити код, що монтує, в заглушку (stub) Phar-архіву. Приклад використання конфігураційного файлу за замовчуванням, якщо файл конфігурації не заданий:\n\n```php\n<?php\n// для начала настроим связь между абстрактным config.xml\n// и конкретным файлом на диске\nif (defined('EXTERNAL_CONFIG')) {\n    Phar::mount('config.xml', EXTERNAL_CONFIG);\n    if (file_exists(__DIR__ . '/extra_config.xml')) {\n        Phar::mount('extra.xml', __DIR__ . '/extra_config.xml');\n    }\n} else {\n    Phar::mount('config.xml', 'phar://' . __FILE__ . '/default_config.xml');\n    Phar::mount('extra.xml', 'phar://' . __FILE__ . '/default_extra.xml');\n}\n// а теперь запускаем приложение\ninclude 'phar://' . __FILE__ . '/index.php';\n__HALT_COMPILER();\n?>\n```\n\n... та код для завантаження цього phar-архіву:\n\n```php\n<?php\ndefine('EXTERNAL_CONFIG', '/home/example/config.xml');\n// а теперь запускаем приложение\ninclude '/path/to/archive.phar';\n?>\n```\n","title":"Phar::mount","contentType":2,"navigation":[{"phar.mapphar.md":"« Phar::mapPhar"},{"phar.mungserver.md":"Phar::mungServer »"},{"index.md":"PHP Manual"},{"class.phar.md":"Phar"}]}},"__N_SSG":true}