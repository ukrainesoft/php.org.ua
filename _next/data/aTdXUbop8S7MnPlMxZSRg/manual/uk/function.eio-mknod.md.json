{"pageProps":{"page":{"slug":"function.eio-mknod.md","content":"# eio\\_mknod\n\n(PECL eio >= 0.0.1dev)\n\neio\\_mknod — Створює спеціальний або звичайний файл\n\n### Опис\n\n```methodsynopsis\neio_mknod(    string $path,    int $mode,    int $dev,    int $pri = EIO_PRI_DEFAULT,    callable $callback = NULL,    mixed $data = NULL): resource\n```\n\n**eio\\_mknod()** створює звичайний чи спеціальний (що частіше) файл.\n\n**Увага**\n\nФункція поки що не документована; для знайомства доступний лише перелік аргументів.\n\n### Список параметрів\n\n`path`\n\nШлях до нового файлу.\n\n`mode`\n\nЗадає роздільну здатність файлу та його тип. Значенням аргументу є комбінація (використовуючи побітове АБО) однієї або декількох констант, що відповідають за тип файлу, та числа, що відповідає за дозволи для файлу (наприклад, 0640). Константи типів файлів: **`EIO_S_IFREG`**(звичайний файл), **`EIO_S_IFCHR`**(символьний файл), **`EIO_S_IFBLK`**(спеціальний блоковий файл), **`EIO_S_IFIFO`**(FIFO - іменований пайп) та **`EIO_S_IFSOCK`**(UNIX сокет домену). Для встановлення дозволів необхідно використовувати константи *EIO\\_S\\_I\\**\n\n`dev`\n\nПри создании файла типа\\*\\*`EIO_S_IFCHR`** або **`EIO_S_IFBLK`\\*\\*, параметр dev задає верхню та нижню межі нумерації спеціальних файлів пристроїв. При створенні інших типів файлів `dev` ігнорується. За додатковими поясненнями звертайтесь до *сторінці документації mknod(2)*\n\n`pri`\n\nПріоритет запитів: **`EIO_PRI_DEFAULT`** **`EIO_PRI_MIN`** **`EIO_PRI_MAX`**, или\\*\\*`null`**. Якщо передано **`null`**, то`pri`устанавливается в**`EIO_PRI_DEFAULT`\\*\\*\n\n`callback`\n\nФункция`callback` викликається після завершення запиту. Вона повинна задовольняти наступний прототип:\n\n```php\nvoid callback(mixed $data, int $result[, resource $req]);\n```\n\n`data`\n\nє даними користувача, переданими в запиті.\n\n`result`\n\nмістить результуюче значення, що залежить від запиту; зазвичай це значення, яке повертається відповідним системним викликом.\n\n`req`\n\nє опціональним запитуваним ресурсом, який може використовуватися з такими функціями як [eio\\_get\\_last\\_error()](function.eio-get-last-error.md)\n\n`data`\n\nДані, які потрібно передати в `callback`\\-функцію.\n\n### Значення, що повертаються\n\n**eio\\_mknod()** повертає ресурс запиту у разі успішного виконання операції або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** eio\\_mknod()\\*\\*\\*\\*\n\n```php\n<?php\n// имя FIFO\n$temp_filename = \"/tmp/eio-temp-fifo\";\n\n/* будет вызываться по завершении работы функции eio_mknod() */\nfunction my_mknod_callback($data, $result) {\n    $s = stat($data);\n    var_dump($s);\n\n    if ($result == 0) {\n        echo \"eio_mknod_ok\";\n    }\n\n    @unlink($data);\n}\n\neio_mknod($temp_filename, EIO_S_IFIFO, 0,\n    EIO_PRI_DEFAULT, \"my_mknod_callback\", $temp_filename);\neio_event_loop();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(26) {\n  [0]=>\n  int(17)\n  [1]=>\n  int(2337608)\n  [2]=>\n  int(4096)\n  [3]=>\n  int(1)\n  [4]=>\n  int(1000)\n  [5]=>\n  int(100)\n  [6]=>\n  int(0)\n  [7]=>\n  int(0)\n  [8]=>\n  int(1318241261)\n  [9]=>\n  int(1318241261)\n  [10]=>\n  int(1318241261)\n  [11]=>\n  int(4096)\n  [12]=>\n  int(0)\n  [\"dev\"]=>\n  int(17)\n  [\"ino\"]=>\n  int(2337608)\n  [\"mode\"]=>\n  int(4096)\n  [\"nlink\"]=>\n  int(1)\n  [\"uid\"]=>\n  int(1000)\n  [\"gid\"]=>\n  int(100)\n  [\"rdev\"]=>\n  int(0)\n  [\"size\"]=>\n  int(0)\n  [\"atime\"]=>\n  int(1318241261)\n  [\"mtime\"]=>\n  int(1318241261)\n  [\"ctime\"]=>\n  int(1318241261)\n  [\"blksize\"]=>\n  int(4096)\n  [\"blocks\"]=>\n  int(0)\n}\neio_mknod_ok\n```\n\n### Дивіться також\n\n-   [eio\\_open()](function.eio-open.md) \\- Відкриває файл\n","title":"eio\\_mknod","contentType":2,"navigation":[{"function.eio-mkdir.md":"« eio\\_mkdir"},{"function.eio-nop.md":"eio\\_nop »"},{"index.md":"PHP Manual"},{"ref.eio.md":"Eio Функції"}]}},"__N_SSG":true}