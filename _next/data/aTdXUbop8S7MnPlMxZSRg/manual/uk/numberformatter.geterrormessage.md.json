{"pageProps":{"page":{"slug":"numberformatter.geterrormessage.md","content":"# NumberFormatter::getErrorMessage\n\n# numfmt\\_get\\_error\\_message\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\nNumberFormatter::getErrorMessage -- numfmt\\_get\\_error\\_message — Отримує останнє повідомлення про помилку засобу форматування\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic NumberFormatter::getErrorMessage(): string\n```\n\nПроцедурний стиль\n\n```methodsynopsis\nnumfmt_get_error_message(NumberFormatter $formatter): string\n```\n\nОтримує повідомлення про помилку від останньої функції, виконаної засобом форматування.\n\n### Список параметрів\n\n`formatter`\n\nОб'єкт [NumberFormatter](class.numberformatter.md)\n\n### Значення, що повертаються\n\nПовертає повідомлення про помилку з останнього виклику засобу форматування.\n\n### Приклади\n\n**Приклад #1 Приклад використання** numfmt\\_get\\_error\\_message()\\*\\*\\*\\*\n\n```php\n<?php\n$fmt = numfmt_create( 'de_DE', NumberFormatter::DECIMAL );\n$data = numfmt_format($fmt, 1234567.891234567890000);\nvar_dump(numfmt_get_error_message($fmt));\n?>\n```\n\n**Приклад #2 Приклад використання в об'єктно-орієнтованому стилі**\n\n```php\n<?php\n$fmt = new NumberFormatter( 'de_DE', NumberFormatter::DECIMAL );\n$fmt->format(1234567.891234567890000);\nvar_dump(numfmt_get_error_message($fmt));\n?>\n```\n\n### Дивіться також\n\n-   [numfmt\\_get\\_error\\_code()](numberformatter.geterrorcode.md) \\- Отримує останній код помилки засобу форматування\n-   [intl\\_get\\_error\\_code()](function.intl-get-error-code.md) \\- Отримати код останньої помилки\n-   [intl\\_is\\_failure()](function.intl-is-failure.md) \\- Перевірити, чи є код помилки ознакою збою\n","title":"NumberFormatter::getErrorMessage","contentType":2,"navigation":[{"numberformatter.geterrorcode.md":"« NumberFormatter::getErrorCode"},{"numberformatter.getlocale.md":"NumberFormatter::getLocale »"},{"index.md":"PHP Manual"},{"class.numberformatter.md":"NumberFormatter"}]}},"__N_SSG":true}