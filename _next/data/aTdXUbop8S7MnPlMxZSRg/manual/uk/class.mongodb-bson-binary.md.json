{"pageProps":{"page":{"slug":"class.mongodb-bson-binary.md","content":"# Клас MongoDB\\\\BSON\\\\Binary\n\n(mongodb >=1.0.0)\n\n## Вступ\n\nТип BSON для бінарних даних (тобто масиву байт). Бінарні значення також мають підтип, що означає, який тип даних міститься в масиві байт. Підтипи з нуля до 127 визначені або зарезервовані. Підтипи з 128-255 задаються користувачем.\n\n## Огляд класів\n\n```classsynopsis\n\n\n    \n    \n     final\n     \n      class MongoDB\\BSON\\Binary\n     \n\n     implements \n       MongoDB\\BSON\\BinaryInterface,  MongoDB\\BSON\\Type,  Serializable,  JsonSerializable,  Stringable {\n    \n    /* Константы */\n    \n     const\n     int\n      TYPE_GENERIC = 0;\n\n    const\n     int\n      TYPE_FUNCTION = 1;\n\n    const\n     int\n      TYPE_OLD_BINARY = 2;\n\n    const\n     int\n      TYPE_OLD_UUID = 3;\n\n    const\n     int\n      TYPE_UUID = 4;\n\n    const\n     int\n      TYPE_MD5 = 5;\n\n    const\n     int\n      TYPE_ENCRYPTED = 6;\n\n    const\n     int\n      TYPE_COLUMN = 7;\n\n    const\n     int\n      TYPE_SENSITIVE = 8;\n\n    const\n     int\n      TYPE_USER_DEFINED = 128;\n\n\n    /* Методы */\n    \n   final public __construct(string $data, int $type = MongoDB\\BSON\\Binary::TYPE_GENERIC)\nfinal public getData(): string\nfinal public getType(): int\nfinal public jsonSerialize(): mixed\nfinal public serialize(): string\nfinal public __toString(): string\nfinal public unserialize(string $data): void\n\n   }\n```\n\n## Обумовлені константи\n\n**`MongoDB\\BSON\\Binary::TYPE_GENERIC`**\n\nБінарні дані\n\n**`MongoDB\\BSON\\Binary::TYPE_FUNCTION`**\n\nФункція\n\n**`MongoDB\\BSON\\Binary::TYPE_OLD_BINARY`**\n\nБінарні дані (оголошено застарілою, використовуйте **`MongoDB\\BSON\\Binary::TYPE_GENERIC`**) .\n\n**`MongoDB\\BSON\\Binary::TYPE_OLD_UUID`**\n\nУніверсальний унікальний ідентифікатор (оголошено застарілою. Використовуйте **`MongoDB\\BSON\\Binary::TYPE_UUID`**). При використанні цього типу, бінарні дані мають бути довжиною 16 байт.\n\nІсторично інші значення кодовані цими типами, але іншими драйверами, базуються на інших конвенціях (наприклад, різний тип порядку байт), що робить його непереносним. Драйвер PHP не застосовує жодних обробок для даних цього типу.\n\n**`MongoDB\\BSON\\Binary::TYPE_UUID`**\n\nУніверсальний унікальний ідентифікатор. При використанні цього типу, бінарні дані повинні бути довжиною 16 байт [» RFC 4122](http://www.faqs.org/rfcs/rfc4122)\n\n**`MongoDB\\BSON\\Binary::TYPE_MD5`**\n\nХеш MD5. При використанні цього типу, бінарні дані мають бути довжиною 16 байт.\n\n**`MongoDB\\BSON\\Binary::TYPE_ENCRYPTED`**\n\nЗашифроване значення. Цей тип використовується для шифрування на стороні клієнта.\n\n**`MongoDB\\BSON\\Binary::TYPE_COLUMN`**\n\nДані стовпця. Підтип використовується для колекцій часових рядів.\n\n**`MongoDB\\BSON\\Binary::TYPE_SENSITIVE`**\n\nКонфіденційні дані. Підтип використовується для конфіденційних даних, які, по можливості, повинні бути виключені з логування на стороні сервера.\n\n**`MongoDB\\BSON\\Binary::TYPE_USER_DEFINED`**\n\nКористувальницький тип. У той час як типи з 0 по 127 визначені, або зарезервовані, типи з 128 по 255 можуть використовуватися для чого завгодно.\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL mongodb 1.17.0 | Добавлен тип\\*\\*`MongoDB\\BSON\\Binary::TYPE_SENSITIVE`\\*\\* |\n| PECL mongodb 1.12.0 |  |\n| Реалізує інтерфейс [Stringable](class.stringable.md) для PHP 8.0+. |  |\n\nДобавлен тип\\*\\*`MongoDB\\BSON\\Binary::TYPE_COLUMN`\\*\\*\n\n| | PECL mongodb 1.7.0 | Добавлен тип\\*\\*`MongoDB\\BSON\\Binary::TYPE_ENCRYPTED`\\*\\*. | | PECL mongodb 1.3.0 Реалізує інтерфейс [MongoDB\\\\BSON\\\\BinaryInterface](class.mongodb-bson-binaryinterface.md). | | PECL mongodb 1.2.0 Реалізує інтерфейси [Serializable](class.serializable.md) і [JsonSerializable](class.jsonserializable.md).\n\n## Зміст\n\n-   [MongoDB\\\\BSON\\\\Binary::\\_\\_construct](mongodb-bson-binary.construct.md) \\- Створює новий Binary\n-   [MongoDB\\\\BSON\\\\Binary::getData](mongodb-bson-binary.getdata.md) \\- Повертає дані Binary\n-   [MongoDB\\\\BSON\\\\Binary::getType](mongodb-bson-binary.gettype.md) \\- Повертає тип Binary\n-   [MongoDB\\\\BSON\\\\Binary::jsonSerialize](mongodb-bson-binary.jsonserialize.md)— Повертає уявлення, яке можна перетворити на JSON\n-   [MongoDB\\\\BSON\\\\Binary::serialize](mongodb-bson-binary.serialize.md) \\- Серіалізує Binary\n-   [MongoDB\\\\BSON\\\\Binary::\\_\\_function toString() { \\[native code\\] }](mongodb-bson-binary.tostring.md) \\- Повертає дані Binary\n-   [MongoDB\\\\BSON\\\\Binary::unserialize](mongodb-bson-binary.unserialize.md) \\- Десеріалізує Binary\n","title":"Клас MongoDB\\\\BSON\\\\Binary","contentType":2,"navigation":[{"mongodb-bson-iterator.valid.md":"« MongoDB\\\\BSON\\\\Iterator::valid"},{"mongodb-bson-binary.construct.md":"MongoDB\\\\BSON\\\\Binary::\\_\\_construct »"},{"index.md":"PHP Manual"},{"book.bson.md":"MongoDB\\\\BSON"}]}},"__N_SSG":true}