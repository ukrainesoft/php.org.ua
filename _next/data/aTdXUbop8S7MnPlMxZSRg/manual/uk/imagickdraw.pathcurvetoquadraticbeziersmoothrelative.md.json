{"pageProps":{"page":{"slug":"imagickdraw.pathcurvetoquadraticbeziersmoothrelative.md","content":"# ImagickDraw::pathCurveToQuadraticBezierSmoothRelative\n\n(PECL imagick 2, PECL imagick 3)\n\nImagickDraw::pathCurveToQuadraticBezierSmoothRelative — Малює квадратичну криву Безьє\n\n### Опис\n\n```methodsynopsis\npublic ImagickDraw::pathCurveToQuadraticBezierSmoothRelative(float $x, float $y): bool\n```\n\n**Увага**\n\nФункція поки що не документована; для знайомства доступний лише перелік аргументів.\n\nМалює квадратичну криву Безьє (з використанням відносних координат) від поточної точки до (x, y). Передбачається, що контрольна точка є відображенням контрольної точки попередньої команди щодо поточної точки. (Якщо попередня команда відсутня або не є DrawPathCurveToQuadraticBezierAbsolute, DrawPathCurveToQuadraticBezierRelative, DrawPathCurveToQuadraticBezierSmoothAbsolute або DrawPathCurveToQuadra поточною). Наприкінці команди нова поточна точка стає останньою парою координат (x,y), що використовується в кривій Безьє.\n\nФункцію не можна використовувати для плавного продовження кубічної кривої Безьє. Вона може плавно продовжувати лише квадратичну криву.\n\n### Список параметрів\n\n`x`\n\nКінцева координата x.\n\n`y`\n\nКінцева координата y.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Приклад використання** ImagickDraw::pathCurveToQuadraticBezierSmoothRelative()\\*\\*\\*\\*\n\n```php\n<?php\n$draw = new \\ImagickDraw();\n\n$draw->setStrokeOpacity(1);\n$draw->setStrokeColor(\"black\");\n$draw->setFillColor(\"blue\");\n\n$draw->setStrokeWidth(2);\n$draw->setFontSize(72);\n\n$draw->pathStart();\n$draw->pathMoveToAbsolute(50,250);\n\n// Определение квадратичной кривой Безье с текущей позицией в качестве начальной точки,\n// контрольной точкой являются первые два параметра, а конечной - последние два.\n$draw->pathCurveToQuadraticBezierAbsolute(\n    150,50,\n    250,250\n);\n\n// Определение квадратичной кривой Безье с текущей позицией в качестве начальной точки,\n// контрольная точка зеркально отражается от контрольной точки предыдущей кривой,\n// а конечная точка определяется значениями x, y.\n$draw->pathCurveToQuadraticBezierSmoothAbsolute(\n    450,250\n);\n\n// Определение квадратичной кривой Безье с текущей позицией в качестве начальной точки,\n// контрольная точка зеркально отражается от контрольной точки предыдущей кривой,\n// а конечная точка определяется значениями x, y относительно текущей позиции.\n$draw->pathCurveToQuadraticBezierSmoothRelative(\n    200,-100\n);\n\n$draw->pathFinish();\n\n$imagick = new \\Imagick();\n$imagick->newImage(700, 500, $backgroundColor);\n$imagick->setImageFormat(\"png\");\n\n$imagick->drawImage($draw);\n\nheader(\"Content-Type: image/png\");\necho $imagick->getImageBlob();\n?>\n```\n","title":"ImagickDraw::pathCurveToQuadraticBezierSmoothRelative","contentType":2,"navigation":[{"imagickdraw.pathcurvetoquadraticbeziersmoothabsolute.md":"« ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute"},{"imagickdraw.pathcurvetorelative.md":"ImagickDraw::pathCurveToRelative »"},{"index.md":"PHP Manual"},{"class.imagickdraw.md":"ImagickDraw"}]}},"__N_SSG":true}