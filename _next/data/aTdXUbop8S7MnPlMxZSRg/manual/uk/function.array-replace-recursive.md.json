{"pageProps":{"page":{"slug":"function.array-replace-recursive.md","content":"# array\\_replace\\_recursive\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\narray\\_replace\\_recursive — Рекурсивно замінює елементи першого масиву на елементи переданих масивів.\n\n### Опис\n\n```methodsynopsis\narray_replace_recursive(array $array, array ...$replacements): array\n```\n\n**array\\_replace\\_recursive()** замінює значення масиву `array` на відповідні за ключами значення всіх наступних масивів. Якщо ключ із першого масиву є у другому, його значення буде замінено на значення другого масиву. Якщо ключ є у другому масиві, але відсутній у першому, він буде створений у першому масиві. Якщо ключ є лише у першому масиві, він залишається як є. Якщо передано кілька масивів, вони будуть оброблені за порядком, наступні перезаписують попередні значення.\n\n**array\\_replace\\_recursive()** - рекурсивна функція: вона рекурсивно заглиблюватиметься в масиви і застосовуватиме до всіх внутрішніх значень той самий процес.\n\nЯкщо значення, передане перший масив є скалярним, воно буде замінено значенням у другому масиві, яке може бути скалярним значенням або масивом. Якщо обидва значення передані в перший масив і в другий масив - масиви, **array\\_replace\\_recursive()** замінюватиме їх значення рекурсивно.\n\n### Список параметрів\n\n`array`\n\nМасив, елементи якого буде замінено.\n\n`replacements`\n\nМасиви, з яких братимуться елементи для заміни.\n\n### Значення, що повертаються\n\nПовертає масив (array).\n\n### Приклади\n\n**Приклад #1 Приклад використання** array\\_replace\\_recursive()\\*\\*\\*\\*\n\n```php\n<?php\n$base = array('citrus' => array( \"orange\") , 'berries' => array(\"blackberry\", \"raspberry\"), );\n$replacements = array('citrus' => array('pineapple'), 'berries' => array('blueberry'));\n\n$basket = array_replace_recursive($base, $replacements);\nprint_r($basket);\n\n$basket = array_replace($base, $replacements);\nprint_r($basket);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [citrus] => Array\n        (\n            [0] => pineapple\n        )\n\n    [berries] => Array\n        (\n            [0] => blueberry\n            [1] => raspberry\n        )\n\n)\nArray\n(\n    [citrus] => Array\n        (\n            [0] => pineapple\n        )\n\n    [berries] => Array\n        (\n            [0] => blueberry\n        )\n\n)\n```\n\n**Приклад #2**array\\_replace\\_recursive()**и рекурсивное поведение**\n\n```php\n<?php\n$base = array('citrus' => array(\"orange\") , 'berries' => array(\"blackberry\", \"raspberry\"), 'others' => 'banana' );\n$replacements = array('citrus' => 'pineapple', 'berries' => array('blueberry'), 'others' => array('litchis'));\n$replacements2 = array('citrus' => array('pineapple'), 'berries' => array('blueberry'), 'others' => 'litchis');\n\n$basket = array_replace_recursive($base, $replacements, $replacements2);\nprint_r($basket);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nArray\n(\n    [citrus] => Array\n        (\n            [0] => pineapple\n        )\n\n    [berries] => Array\n        (\n            [0] => blueberry\n            [1] => raspberry\n        )\n\n    [others] => litchis\n)\n```\n\n### Дивіться також\n\n-   [array\\_replace()](function.array-replace.md) \\- Замінює елементи масиву елементами інших переданих масивів\n-   [array\\_merge\\_recursive()](function.array-merge-recursive.md) \\- Рекурсивне злиття одного або більше масивів\n","title":"array\\_replace\\_recursive","contentType":2,"navigation":[{"function.array-reduce.md":"« array\\_reduce"},{"function.array-replace.md":"array\\_replace »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}