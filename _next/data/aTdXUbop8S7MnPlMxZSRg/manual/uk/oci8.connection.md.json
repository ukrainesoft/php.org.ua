{"pageProps":{"page":{"slug":"oci8.connection.md","content":"# Робота зі з'єднаннями OCI8 та Connection Pooling\n\n## Функції підключення\n\nМодуль OCI8 надає три різні функції для підключення до сервера Oracle. Стандартна функція з'єднання - це [oci\\_connect()](function.oci-connect.md). Вона створює з'єднання до бази даних Oracle та повертає ресурс, який використовується при наступних зверненнях до БД.\n\nПідключення до сервера Oracle є досить дорогою операцією з точки зору часу, який потрібний для виконання. Функція [oci\\_pconnect()](function.oci-pconnect.md) використовує постійний кеш з'єднань, які можуть бути використані різними запитами скриптів. Це означає, що витрати на встановлення з'єднання, як правило, відбуваються лише один раз на один процес PHP (або нащадка Apache).\n\nЯкщо програма з'єднується з сервером Oracle, використовуючи особливий набір даних для кожного веб-користувача, то постійний кеш з'єднань, що використовується функцією [oci\\_pconnect()](function.oci-pconnect.md) буде менш корисним, т.к. кількість одночасних користувачів зростає до того рівня, де він може почати негативно впливати на загальну продуктивність сервера Oracle через підтримку занадто великої кількості з'єднань, що простоюють. Якщо програма налаштована таким чином, рекомендується або налаштувати її за допомогою параметрів конфігурації [oci8.max\\_persistent](oci8.configuration.md#ini.oci8.max-persistent) і [oci8.persistent\\_timeout](oci8.configuration.md#ini.oci8.persistent-timeout) (це дасть можливість керування розміром кешу постійних з'єднань та їх час життя), або використовувати Oracle Database Resident Connection Pooling (в Oracle Database 11g і новіше), або використовувати функцію [oci\\_connect()](function.oci-connect.md) замість неї.\n\nВместе[oci\\_connect()](function.oci-connect.md) і [oci\\_pconnect()](function.oci-pconnect.md) використовують кеш підключень; якщо безліч викликів [oci\\_connect()](function.oci-connect.md) використовує однакові параметри в даному скрипті, другий та наступні виклики повернуть існуючий дескриптор з'єднання. Кеш, який використовується функцією [oci\\_connect()](function.oci-connect.md), очищається після завершення виконання скрипта, або коли з'єднання неявно закривається. У функції [oci\\_pconnect()](function.oci-pconnect.md) подібна поведінка, хоча її кеш обробляється окремо і залишається чинною між запитами HTTP.\n\nЦя можливість кешування означає, що два дескриптори не ізольовані транзакційно (вони насправді є одним і тим самим дескриптором, тому тут немає ізоляції). Якщо додатку потрібні дві окремі транзакційно ізольовані сполуки, то необхідно використовувати функцію [oci\\_new\\_connect()](function.oci-new-connect.md)\n\nКеш функции[oci\\_pconnect()](function.oci-pconnect.md) очищується та закриваються всі з'єднання до БД, коли завершується процес PHP. Тому ефективне використання постійних з'єднань вимагає, щоб PHP був модулем Apache або використовувався з FPM або подібним. Постійні з'єднання не матимуть жодних переваг перед [oci\\_connect()](function.oci-connect.md)коли PHP використовується з CGI або через командний рядок.\n\nФункция[oci\\_new\\_connect()](function.oci-new-connect.md) завжди створює нове з'єднання з сервером Oracle, незважаючи на те, що інші з'єднання можуть існувати. Високонавантаженим веб-додаткам слід уникати використання [oci\\_new\\_connect()](function.oci-new-connect.md), особливо в найбільш завантажених частинах програми.\n\nПостійні з'єднання можуть бути закриті користувачем, що дає повніший контроль над використанням ресурсів. Також постійні з'єднання можуть бути закриті автоматично, якщо не залишилося змінних PHP, що вказують на них, наприклад при завершенні виконання функції користувача. Закриття з'єднання відкотить усі підтверджені транзакції. Ці зміни в постійних підключеннях роблять їхню поведінку аналогічною не постійним з'єднанням. Щоб увімкнути стару поведінку, задайте опцію [oci8.old\\_oci\\_close\\_semantics](oci8.configuration.md#ini.oci8.old-oci-close-semantics)значением*On*\n\nАвтоматичне перестворення постійних з'єднань після перезапуску процесів Apache або FPM означає, що Oracle Database `LOGON` рекомендується лише для налаштування атрибутів сеансу, а не для запитів на підключення користувачів для окремих програм.\n\n## Створення пулу з'єднань DRCP\n\nPHP підтримує постійний пул з'єднань Oracle 11g (DRCP). DRCP дозволяє більш ефективно використовувати пам'ять СУБД та надає високу масштабованість. Змінювати код програми для використання DRCP або немає потреби, або потрібні мінімальні зміни.\n\nDRCP підходить для додатків, які підключаються використовуючи кілька схем БД та зберігають з'єднання до БД відкритими короткий проміжок часу. Іншим програмам слід використовувати доступні за замовчуванням `Dedicated` серверні процеси або використовувати `Shared`сервера.\n\nDRCP приносить користь усім трьом функціям підключення, проте надає найвищу масштабованість, коли з'єднання створюються за допомогою функції [oci\\_pconnect()](function.oci-pconnect.md)\n\nЩоб функціональність DRCP була доступна в OCI8, клієнтські бібліотеки Oracle, які використовуються в PHP, і версія сервера баз даних повинні бути 11g і новішими.\n\nДокументація з DRCP знаходиться в кількох посібниках Oracle. Наприклад, дивіться [»Конфігурування пулу постійних з'єднань бази даних](https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-82FF6896-F57E-41CF-89F7-755F3BC9C924)в документации Oracle для информации по использованию. Документ[» технічний опис DRCP](https://www.oracle.com/technetwork/topics/php/whatsnew/php-scalability-ha-twp-128842.pdf)содержит дополнительную информацию по DRCP.\n\nДля використання DRCP встановіть модуль OCI8 та бібліотеки Oracle 11g (або новіший) і виконайте такі дії:\n\n-   Як привілейований адміністратор БД скористайтеся програмою на кшталт SQL\\*Plus, щоб запустити пул з'єднань у СУБД:\n    \n    ```\n    SQL> execute dbms_connection_pool.start_pool;\n    ```\n    \n-   Додатково можна використовувати`dbms_connection_pool.alter_param()`, щоб налаштувати параметри DRPC. Поточні налаштування пулу можуть бути отримані з подання`DBA_CPOOL_INFO`\n    \n-   Оновіть рядок з'єднання. Наприклад, для програм PHP, які зараз з'єднуються, використовуючи Network Connect Name`MYDB` :\n    \n    ```\n    $c = oci_pconnect(\"myuser\", \"mypassword\", \"MYDB\");\n    ```\n    \n    змініть файл tnsnames.ora та додайте оператор`(SERVER=POOLED)`, наПриклад:\n    \n    ```\n    MYDB = (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp) (HOST=myhost.dom.com)\n               (PORT=1521))(CONNECT_DATA=(SERVICE_NAME=sales)\n               (SERVER=POOLED)))\n    ```\n    \n    Як альтернативу можна змінити синтаксис спрощеного з'єднання в PHP і додати туди`:POOLED`після імені сервісу:\n    \n    ```\n    $c = oci_pconnect(\"myuser\", \"mypassword\", \"myhost.dom.com:1521/sales:POOLED\");\n    ```\n    \n-   Відредагуйте php.ini та виберіть ім'я класу з'єднання. Це ім'я встановлює логічний поділ пулу з'єднань і може використовуватися, щоб ізолювати пул для окремих додатків. Будь-яка PHP-додаток з однаковим ім'ям користувача та класом для з'єднання буде мати можливість спільно використовувати з'єднання в пулі, отримуючи більшу масштабованість.\n    \n    ```\n    oci8.connection_class = \"MY_APPLICATION_NAME\"\n    ```\n    \n-   Запустіть програму, що з'єднується з базою 11g та новішою.\n    \n\n> **Зауваження** :\n> \n> Програми, що використовують Oracle 10g, які потребують продуктивності від постійних з'єднань, можуть зменшити кількість пам'яті сервера БД, яка використовується `Shared`\\-серверами Oracle (раніше відомі як багатопотокові сервери). Для отримання докладнішої інформації зверніться до документації Oracle.\n\n> **Зауваження** :\n> \n> При зміні пароля через з'єднання DRCP буде видаватися помилка *ORA-56609: Usage not supported with DRCP*. Це документоване обмеження Oracle Database 11g.\n","title":"Робота зі з'єднаннями OCI8 та Connection Pooling","contentType":2,"navigation":[{"oci8.examples.md":"« Приклади"},{"oci8.fan.md":"Підтримка OCI8 Fast Application Notification (FAN) »"},{"index.md":"PHP Manual"},{"book.oci8.md":"OCI8"}]}},"__N_SSG":true}