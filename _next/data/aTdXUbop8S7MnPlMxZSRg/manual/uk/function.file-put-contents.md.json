{"pageProps":{"page":{"slug":"function.file-put-contents.md","content":"# file\\_put\\_contents\n\n(PHP 5, PHP 7, PHP 8)\n\nfile\\_put\\_contents — Пише дані у файл\n\n### Опис\n\n```methodsynopsis\nfile_put_contents(    string $filename,    mixed $data,    int $flags = 0,    ?resource $context = null): int|false\n```\n\nФункція ідентична послідовним успішним викликам функцій [fopen()](function.fopen.md) [fwrite()](function.fwrite.md) і [fclose()](function.fclose.md)\n\nЯкщо `filename` немає, файл буде створено. Інакше існуючий файл буде перезаписано, за винятком випадку, якщо вказано прапор **`FILE_APPEND`**\n\n### Список параметрів\n\n`filename`\n\nШлях до файлу, що записується.\n\n`data`\n\nДані, що записуються. Може бути типу string, array або ресурсом потоку.\n\nЯкщо `data` є потоковим ресурсом (stream), буфер цього потоку, що залишився, буде скопійований у зазначений файл. Це схоже на використання функції [stream\\_copy\\_to\\_stream()](function.stream-copy-to-stream.md)\n\nТакож ви можете передати одновимірний масив як параметр `data`. Це буде еквівалентно виклику `file_put_contents($filename, implode('', $array))`\n\n`flags`\n\nЗначением параметра`flags` може бути будь-яка комбінація наступних прапорів, з'єднаних бінарним оператором АБО (\n\n**Доступні прапори**\n\n| Флаг | Опис |\n| --- | --- |\n| **`FILE_USE_INCLUDE_PATH`** | Шукає `filename` в директоріях, що підключаються. Детальніше дивіться директиву [include\\_path](ini.core.md#ini.include-path) |\n| **`FILE_APPEND`** | Якщо файл `filename` вже існує, дані будуть дописані в кінець файлу замість його перезаписати. |\n| **`LOCK_EX`** | Отримати ексклюзивне блокування файлу під час запису. Іншими словами, між викликами [fopen()](function.fopen.md) і [fwrite()](function.fwrite.md) відбудеться виклик функції [flock()](function.flock.md). . Це не одне й те саме, що виклик [fopen()](function.fopen.md) з прапором \"х\". |\n\n`context`\n\nКоректний ресурс контексту, створений за допомогою функції [stream\\_context\\_create()](function.stream-context-create.md)\n\n### Значення, що повертаються\n\nФункція повертає кількість записаних байт у файл, або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n**Увага**\n\nЦя функція може повертати як логічне значення \\*\\*`false`\\*\\*так і значення не типу boolean, яке наводиться до **`false`**. За більш детальною інформацією зверніться до розділу [Логічний тип](language.types.boolean.md)Используйте[оператор ===](language.operators.comparison.md) для перевірки значення, яке повертається цією функцією.\n\n### Приклади\n\n**Приклад #1 Приклад простого використання**\n\n```php\n<?php\n$file = 'people.txt';\n// Открываем файл для получения существующего содержимого\n$current = file_get_contents($file);\n// Добавляем нового человека в файл\n$current .= \"John Smith\\n\";\n// Пишем содержимое обратно в файл\nfile_put_contents($file, $current);\n?>\n```\n\n**Приклад #2 Використання прапорів**\n\n```php\n<?php\n$file = 'people.txt';\n// Новый человек, которого нужно добавить в файл\n$person = \"John Smith\\n\";\n// Пишем содержимое в файл,\n// используя флаг FILE_APPEND для дописывания содержимого в конец файла\n// и флаг LOCK_EX для предотвращения записи данного файла кем-нибудь другим в данное время\nfile_put_contents($file, $person, FILE_APPEND | LOCK_EX);\n?>\n```\n\n### Примітки\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n**Підказка**\n\nУ цю функцію як ім'я файлу можна передавати URL-адреси, якщо була включена директива [fopen wrappers](filesystem.configuration.md#ini.allow-url-fopen). Докладніше про те, як вказати ім'я файлу, описано в описі функції [fopen()](function.fopen.md). В розділі \"[Підтримувані протоколи та обгортки](wrappers.md)» також дано посилання на інформацію про можливості підтримуваних обгорток, зауваження щодо роботи з ними та список визначених змінних, які вони дають.\n\n### Дивіться також\n\n-   [fopen()](function.fopen.md) \\- Відкриває файл або URL\n-   [fwrite()](function.fwrite.md) \\- Бінарно-безпечний запис у файл\n-   [file\\_get\\_contents()](function.file-get-contents.md) \\- Читає вміст файлу в рядок\n-   [stream\\_context\\_create()](function.stream-context-create.md) \\- Створює контекст потоку\n","title":"file\\_put\\_contents","contentType":2,"navigation":[{"function.file-get-contents.md":"« file\\_get\\_contents"},{"function.file.md":"file »"},{"index.md":"PHP Manual"},{"ref.filesystem.md":"Функції файлової системи"}]}},"__N_SSG":true}