{"pageProps":{"page":{"slug":"class.seekableiterator.md","content":"# Інтерфейс SeekableIterator\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8)\n\n## Вступ\n\nІтератор Seekable.\n\n## Огляд інтерфейсів\n\n```classsynopsis\n\n    \n     interface SeekableIterator\n\n    extends\n      Iterator {\n\n    /* Методы */\n    \n   public seek(int $offset): void\n\n\n    /* Наследуемые методы */\n    public Iterator::current(): mixed\npublic Iterator::key(): mixed\npublic Iterator::next(): void\npublic Iterator::rewind(): void\npublic Iterator::valid(): bool\n\n   }\n```\n\n**Приклад #1 Просте використання**\n\nЦей приклад демонструє створення користувальницького ітератора **SeekableIterator**, який шукає позицію та обробляє недійсну позицію.\n\n```php\n<?php\nclass MySeekableIterator implements SeekableIterator {\n\n    private $position;\n\n    private $array = array(\n        \"первый элемент\",\n        \"второй элемент\",\n        \"третий элемент\",\n        \"четвёртый элемент\"\n    );\n\n    /* Метод, требуемый для интерфейса SeekableIterator */\n\n    public function seek($position) {\n      if (!isset($this->array[$position])) {\n          throw new OutOfBoundsException(\"недействительная позиция ($position)\");\n      }\n\n      $this->position = $position;\n    }\n\n    /*  Методы, требуемые для интерфейса Iterator */\n\n    public function rewind() {\n        $this->position = 0;\n    }\n\n    public function current() {\n        return $this->array[$this->position];\n    }\n\n    public function key() {\n        return $this->position;\n    }\n\n    public function next() {\n        ++$this->position;\n    }\n\n    public function valid() {\n        return isset($this->array[$this->position]);\n    }\n}\n\ntry {\n\n    $it = new MySeekableIterator;\n    echo $it->current(), \"\\n\";\n\n    $it->seek(2);\n    echo $it->current(), \"\\n\";\n\n    $it->seek(1);\n    echo $it->current(), \"\\n\";\n\n    $it->seek(10);\n\n} catch (OutOfBoundsException $e) {\n    echo $e->getMessage();\n}\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nпервый элемент\nтретий элемент\nвторой элемент\nнедействительная позиция (10)\n```\n\n## Зміст\n\n-   [SeekableIterator::seek](seekableiterator.seek.md)— Переміщається до позиції\n","title":"Інтерфейс SeekableIterator","contentType":2,"navigation":[{"recursiveiterator.haschildren.md":"« RecursiveIterator::hasChildren"},{"seekableiterator.seek.md":"SeekableIterator::seek »"},{"index.md":"PHP Manual"},{"spl.interfaces.md":"Інтерфейси"}]}},"__N_SSG":true}