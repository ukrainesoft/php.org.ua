{"pageProps":{"page":{"slug":"class.splfixedarray.md","content":"# Клас SplFixedArray\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\n## Вступ\n\nКлас SplFixedArray забезпечує базову функціональність, що надається масивами. Головна різниця між SplFixedArray та звичайним масивом PHP у тому, що розмір SplFixedArray необхідно змінювати вручну, а як індекси можуть виступати лише цілочисельні значення. Перевага цих обмежень полягає у меншому використанні пам'яті, ніж стандартний масив (array).\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class SplFixedArray\n    \n\n    \n     implements\n      IteratorAggregate,\n\n     ArrayAccess,\n\n     Countable,\n\n     JsonSerializable {\n\n    /* Методы */\n    \n   public __construct(int $size = 0)\n\n    public count(): int\npublic current(): mixed\npublic static fromArray(array $array, bool $preserveKeys = true): SplFixedArray\npublic getIterator(): Iterator\npublic getSize(): int\npublic jsonSerialize(): mixed\npublic key(): int\npublic next(): void\npublic offsetExists(int $index): bool\npublic offsetGet(int $index): mixed\npublic offsetSet(int $index, mixed $value): void\npublic offsetUnset(int $index): void\npublic rewind(): void\npublic __serialize(): array\npublic setSize(int $size): bool\npublic toArray(): array\npublic __unserialize(array $data): void\npublic valid(): bool\npublic __wakeup(): void\n\n   }\n```\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.2.0 | Магічні методи[SplFixedArray::\\_\\_serialize()](splfixedarray.serialize.md) і [SplFixedArray::\\_\\_unserialize()](splfixedarray.unserialize.md) додані в **SplFixedArray** |\n| 8.1.0 | Класс**SplFixedArray** тепер реалізує інтерфейс [JsonSerializable](class.jsonserializable.md) |\n| 8.0.0 | Класс**SplFixedArray** тепер реалізує інтерфейс [IteratorAggregate](class.iteratoraggregate.md). . Раніше було реалізовано інтерфейс [Iterator](class.iterator.md) |\n\n## Приклади\n\n**Приклад #1 Приклад використання** SplFixedArray\\*\\*\\*\\*\n\n```php\n<?php\n// Инициализация массива фиксированной длиной\n$array = new SplFixedArray(5);\n\n$array[1] = 2;\n$array[4] = \"foo\";\n\nvar_dump($array[0]); // NULL\nvar_dump($array[1]); // int(2)\n\nvar_dump($array[\"4\"]); // string(3) \"foo\"\n\n// Увеличение размера массива до 10\n$array->setSize(10);\n\n$array[9] = \"asdf\";\n\n// Сокращаем размер массива до 2-х\n$array->setSize(2);\n\n// Следующий код вызывает исключение RuntimeException: Index invalid or out of range\ntry {\n    var_dump($array[\"non-numeric\"]);\n} catch(RuntimeException $re) {\n    echo \"RuntimeException: \".$re->getMessage().\"\\n\";\n}\n\ntry {\n    var_dump($array[-1]);\n} catch(RuntimeException $re) {\n    echo \"RuntimeException: \".$re->getMessage().\"\\n\";\n}\n\ntry {\n    var_dump($array[5]);\n} catch(RuntimeException $re) {\n    echo \"RuntimeException: \".$re->getMessage().\"\\n\";\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nNULL\nint(2)\nstring(3) \"foo\"\nRuntimeException: Index invalid or out of range\nRuntimeException: Index invalid or out of range\nRuntimeException: Index invalid or out of range\n```\n\n## Зміст\n\n-   [SplFixedArray::\\_\\_construct](splfixedarray.construct.md) \\- Створює новий масив фіксованої довжини\n-   [SplFixedArray::count](splfixedarray.count.md)— Повертає розмір масиву\n-   [SplFixedArray::current](splfixedarray.current.md)— Повертає поточний елемент масиву\n-   [SplFixedArray::fromArray](splfixedarray.fromarray.md) \\- Імпортує PHP-масив в об'єкт класу SplFixedArray\n-   [SplFixedArray::getIterator](splfixedarray.getiterator.md)— Отримує ітератор для переходу масивом\n-   [SplFixedArray::getSize](splfixedarray.getsize.md)— Отримує розмір масиву\n-   [SplFixedArray::jsonSerialize](splfixedarray.jsonserialize.md)— Повертає виставу, яка може бути перетворена на JSON\n-   [SplFixedArray::key](splfixedarray.key.md)— Повертає індекс поточного елемента масиву\n-   [SplFixedArray::next](splfixedarray.next.md)— Переходить до наступного елементу масиву\n-   [SplFixedArray::offsetExists](splfixedarray.offsetexists.md)— Повертає факт наявності зазначеного індексу масиву\n-   [SplFixedArray::offsetGet](splfixedarray.offsetget.md)— Повертає значення за вказаним індексом\n-   [SplFixedArray::offsetSet](splfixedarray.offsetset.md)— Встановлює нове значення за заданим індексом\n-   [SplFixedArray::offsetUnset](splfixedarray.offsetunset.md)— Видаляє значення за індексом $index\n-   [SplFixedArray::rewind](splfixedarray.rewind.md) \\- Встановлює ітератор масиву на початок\n-   [SplFixedArray::\\_\\_serialize](splfixedarray.serialize.md)— Серіалізує об'єкт SplFixedArray\n-   [SplFixedArray::setSize](splfixedarray.setsize.md) \\- Змінює розмір масиву\n-   [SplFixedArray::toArray](splfixedarray.toarray.md) \\- Повертає звичайний PHP-масив зі значеннями фіксованого масиву\n-   [SplFixedArray::\\_\\_unserialize](splfixedarray.unserialize.md)— Десеріалізує параметр data в об'єкті SplFixedArray\n-   [SplFixedArray::valid](splfixedarray.valid.md) \\- Перевіряє масив на наявність елементів\n-   [SplFixedArray::\\_\\_wakeup](splfixedarray.wakeup.md) \\- Переініціалізація масиву після десеріалізації\n","title":"Клас SplFixedArray","contentType":2,"navigation":[{"splpriorityqueue.valid.md":"« SplPriorityQueue::valid"},{"splfixedarray.construct.md":"SplFixedArray::\\_\\_construct »"},{"index.md":"PHP Manual"},{"spl.datastructures.md":"Структури даних"}]}},"__N_SSG":true}