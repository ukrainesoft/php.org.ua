{"pageProps":{"page":{"slug":"function.mysql-real-escape-string.md","content":"# mysql\\_real\\_escape\\_string\n\n(PHP 4 >= 4.3.0, PHP 5)\n\nmysql\\_real\\_escape\\_string — Екран спеціальних символів у рядках для використання у виразах SQL\n\n**Увага**\n\nЦей модуль застарів, починаючи з версії PHP 5.5.0, і видалений у PHP 7.0.0. Використовуйте замість нього [MySQLi](book.mysqli.md) або [PDO\\_MySQL](ref.pdo-mysql.md)Смотрите также инструкцию[MySQL: вибір API](mysqlinfo.api.choosing.md). Альтернативи для цієї функції:\n\n-   [mysqli\\_real\\_escape\\_string()](mysqli.real-escape-string.md)\n-   [PDO::quote()](pdo.quote.md)\n\n### Опис\n\n```methodsynopsis\nmysql_real_escape_string(string $unescaped_string, resource $link_identifier = NULL): string\n```\n\nЕкранує спеціальні символи в `unescaped_string`, беручи до уваги кодування з'єднання, таким чином, що результат можна безпечно використовувати в SQL-запиті у функції [mysql\\_query()](function.mysql-query.md). Якщо вставляються бінарні дані, то до них необхідно застосовувати цю функцію.\n\n**mysql\\_real\\_escape\\_string()** викликає бібліотечну функцію MySQL mysql\\_real\\_escape\\_string, яка додає зворотну косу рису до наступних символів: `\\x00` `\\n` `\\r` `\\` `'` `\"`и`\\x1a`\n\nЦя функція повинна завжди (за декількома винятками) використовуватися для того, щоб убезпечити дані, що вставляють у запит перед відправкою його до MySQL.\n\n**Застереження**\n\n# Безпека: кодування символів за промовчанням\n\nКодування символів має встановлюватися як на сервері, так і за допомогою функції [mysql\\_set\\_charset()](function.mysql-set-charset.md), щоб впливати на поведінку **mysql\\_real\\_escape\\_string()**. Докладніше описано в розділі [кодування символів](mysqlinfo.concepts.charset.md)\n\n### Список параметрів\n\n`unescaped_string`\n\nРядок, що екранується.\n\n`link_identifier`\n\nЗ'єднання MySQL. Якщо ідентифікатор з'єднання не вказано, буде використано останнє з'єднання, відкрите [mysql\\_connect()](function.mysql-connect.md). Якщо таке з'єднання не було знайдено, функція спробує створити таке, якби [mysql\\_connect()](function.mysql-connect.md) було викликано без параметрів. Якщо з'єднання не було знайдено та не змогло бути створено, генерується помилка рівня **`E_WARNING`**\n\n### Значення, що повертаються\n\nПовертає рядок, де екрановані всі необхідні символи, або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nЗапуск цієї функції без існуючого з'єднання з MySQL викликає помилку рівня **`E_WARNING`**. Цю функцію можна запускати лише якщо є з'єднання з MySQL.\n\n### Приклади\n\n**Приклад #1 Простий приклад використання **mysql\\_real\\_escape\\_string()****\n\n```php\n<?php\n// Соединение\n$link = mysql_connect('mysql_host', 'mysql_user', 'mysql_password')\n    OR die(mysql_error());\n\n// Запрос\n$query = sprintf(\"SELECT * FROM users WHERE user='%s' AND password='%s'\",\n            mysql_real_escape_string($user),\n            mysql_real_escape_string($password));\n?>\n```\n\n**Приклад #2 Приклад використання** mysql\\_real\\_escape\\_string()\\*\\* без наявності з'єднання\\*\\*\n\nЦей приклад показує, що станеться, якщо викликати цю функцію без з'єднання з MySQL.\n\n```php\n<?php\n// Коннекта к MySQL нет\n\n$lastname  = \"O'Reilly\";\n$_lastname = mysql_real_escape_string($lastname);\n\n$query = \"SELECT * FROM actors WHERE last_name = '$_lastname'\";\n\nvar_dump($_lastname);\nvar_dump($query);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nWarning: mysql_real_escape_string(): No such file or directory in /this/test/script.php on line 5\nWarning: mysql_real_escape_string(): A link to the server could not be established in /this/test/script.php on line 5\n\nbool(false)\nstring(41) \"SELECT * FROM actors WHERE last_name = ''\"\n```\n\n**Приклад #3 Приклад злому з використанням ін'єкції SQL.**\n\n```php\n<?php\n// Мы никак не проверили переменную $_POST['password'],\n// а она может содержать совсем не то, что мы ожидали. НаПриклад:\n$_POST['username'] = 'aidan';\n$_POST['password'] = \"' OR ''='\";\n\n// посылаем запрос, чтобы проверить имя и пароль пользователя\n$query = \"SELECT * FROM users WHERE user='{$_POST['username']}' AND password='{$_POST['password']}'\";\nmysql_query($query);\n\n// посмотрим, какой запрос будет отправлен в MySQL:\necho $query;\n?>\n```\n\nЗапит, який буде надіслано MySQL:\n\n```\nSELECT * FROM users WHERE user='aidan' AND password='' OR ''=''\n```\n\nЦе дозволить будь-кому увійти в систему без пароля.\n\n### Примітки\n\n> **Зауваження** :\n> \n> Функцию**mysql\\_real\\_escape\\_string()** можна використовувати тільки після встановлення з'єднання з MySQL. В іншому випадку виникне помилка рівня **`E_WARNING`**, а функція поверне **`false`**. Якщо `link_identifier` не вказано, використовується останнє відкрите з'єднання.\n\n> **Зауваження** :\n> \n> Якщо не користуватися цією функцією, то запит стає вразливим для [злому за допомогою SQL-ін'єкцій](security.database.sql-injection.md)\n\n> **Зауваження** **mysql\\_real\\_escape\\_string()** не екранує символи `%`и`_`. Ці символи є масками груп символів в операторах MySQL `LIKE` `GRANT`и`REVOKE`\n\n### Дивіться також\n\n-   [mysql\\_set\\_charset()](function.mysql-set-charset.md) \\- Встановлює кодування клієнта\n-   [mysql\\_client\\_encoding()](function.mysql-client-encoding.md) \\- Повертає кодування з'єднання\n","title":"mysql\\_real\\_escape\\_string","contentType":2,"navigation":[{"function.mysql-query.md":"« mysql\\_query"},{"function.mysql-result.md":"mysql\\_result »"},{"index.md":"PHP Manual"},{"ref.mysql.md":"MySQL"}]}},"__N_SSG":true}