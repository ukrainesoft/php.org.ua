{"pageProps":{"page":{"slug":"function.unset.md","content":"# unset\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nunset — Видалення змінної\n\n### Опис\n\n```methodsynopsis\nunset(mixed $var, mixed ...$vars): void\n```\n\nМовна конструкція **unset()** видаляє перелічені змінні.\n\nПоведінка мовної конструкції **unset()** всередині функції може змінюватися і залежить від типу змінної, що видаляється.\n\nЯкщо глобальна змінна видаляється всередині функції, буде видалено лише локальна змінна. Змінна в області видимості дзвінка функції збереже те саме значення, що й до дзвінка **unset()**\n\n```php\n<?php\nfunction destroy_foo()\n{\n    global $foo;\n    unset($foo);\n}\n\n$foo = 'bar';\ndestroy_foo();\necho $foo;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbar\n```\n\nЩоб видалити глобальну змінну всередині функції, використовують масив [$GLOBALS](reserved.variables.globals.md) :\n\n```php\n<?php\nfunction foo()\n{\n    unset($GLOBALS['bar']);\n}\n\n$bar = \"something\";\nfoo();\n?>\n```\n\nЯкщо змінна, яка передається за посиланням, видаляється всередині функції, то буде видалена тільки локальна змінна. Змінна в області видимості дзвінка функції збереже те саме значення, що й до дзвінка **unset()**\n\n```php\n<?php\nfunction foo(&$bar)\n{\n    unset($bar);\n    $bar = \"blah\";\n}\n\n$bar = 'something';\necho \"$bar\\n\";\n\nfoo($bar);\necho \"$bar\\n\";\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nsomething\nsomething\n```\n\nЯкщо статична змінна видаляється всередині функції, конструкція **unset()** видалить змінну тільки в контексті частини функції, що залишилася. Під час наступного виклику попереднє значення змінної буде відновлено.\n\n```php\n<?php\nfunction foo()\n{\n    static $bar;\n    $bar++;\n    echo \"До удаления: $bar, \";\n    unset($bar);\n    $bar = 23;\n    echo \"После удаления: $bar\\n\";\n}\n\nfoo();\nfoo();\nfoo();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nДо удаления: 1, После удаления: 23\nДо удаления: 2, После удаления: 23\nДо удаления: 3, После удаления: 23\n```\n\n### Список параметрів\n\n`var`\n\nВидалена змінна.\n\n`vars`\n\nНаступні змінні.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Приклад використання** unset()\\*\\*\\*\\*\n\n```php\n<?php\n// удаляем одну переменную\nunset($foo);\n\n// удаляем один элемент массива\nunset($bar['quux']);\n\n// удаляем несколько переменных\nunset($foo1, $foo2, $foo3);\n?>\n```\n\n**Приклад #2 Использование приведения типа`(unset)`**\n\nПриведение типа[`(unset)`](language.types.null.md#language.types.null.casting) часто плутають із конструкцією \\*\\*unset()\\*\\*Приведение типа`(unset)` приводить лише до значення `NULL` та було додано лише для повноти реалізації. Воно не змінює значення змінної, що наводиться. З PHP 7.2.0 перетворення типу (unset) оголошено застарілим та видалено у PHP 8.0.0.\n\n```php\n<?php\n$name = 'Felipe';\n\nvar_dump((unset) $name);\nvar_dump($name);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nNULL\nstring(6) \"Felipe\"\n```\n\n### Примітки\n\n> **Зауваження**: Оскільки це мовна конструкція, а не функція, її не можна викликати як [змінну функцію](functions.variable-functions.md) або передавати як [іменований аргумент](functions.arguments.md#functions.named-arguments)\n\n> **Зауваження** :\n> \n> Ви можете видалити властивості об'єкта, видимі в контексті.\n> \n> Якщо визначено (у класі), метод [\\_\\_get()](language.oop5.overloading.md#object.get) буде викликаний при спробі отримати невстановлену властивість, а метод [\\_\\_set()](language.oop5.overloading.md#object.set) буде викликаний при спробі встановити невизначену властивість.\n\n> **Зауваження** :\n> \n> Невозможно удалить псевдопеременную текущего контекста`$this` усередині методу об'єкта.\n\n> **Зауваження** :\n> \n> При виклику конструкції **unset()** на недоступних або неоголошених властивостях об'єкта буде викликано метод навантаження [\\_\\_unset()](language.oop5.overloading.md#object.unset)якщо він визначений.\n\n### Дивіться також\n\n-   [isset()](function.isset.md) \\- Визначає, чи була встановлена ​​змінна значенням, відмінним від null\n-   [empty()](function.empty.md) \\- Перевіряє, чи порожня змінна\n-   [\\_\\_unset()](language.oop5.overloading.md#object.unset)\n-   [array\\_splice()](function.array-splice.md) \\- Видаляє частину масиву і замінює її чимось ще\n-   [Приведення типу (unset)](language.types.null.md#language.types.null.casting)\n","title":"unset","contentType":2,"navigation":[{"function.unserialize.md":"« unserialize"},{"function.var-dump.md":"var\\_dump »"},{"index.md":"PHP Manual"},{"ref.var.md":"Функції для роботи зі змінними"}]}},"__N_SSG":true}