{"pageProps":{"page":{"slug":"ds-sequence.sort.md","content":"# Ds\\\\Sequence::sort\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Sequence::sort — Сортує колекцію\n\n### Опис\n\n```methodsynopsis\nabstract public Ds\\Sequence::sort(callable $comparator = ?): void\n```\n\nСортує колекцію, опціонально використовуючи callback-функцію `comparator`\n\n### Список параметрів\n\n`comparator`\n\nФункція порівняння повинна повертати ціле, яке менше, дорівнює чи більше нуля, якщо перший аргумент є відповідно меншим, рівним чи більшим, ніж другий.\n\n```methodsynopsis\ncallback(mixed $a, mixed $b): int\n```\n\n**Застереження**\n\nВозвращение*нецілих* значень з функції порівняння, таких як число з плаваючою точкою (float), призведе до внутрішнього приведення значення callback-функції, що повертається, до цілого числа (int). Таким чином, значення `0.99`и`0.1` будуть приведені до цілого значення що дозволить порівняти ці значення як рівні.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Sequence::sort()\\*\\*\\*\\*\n\n```php\n<?php\n$sequence = new \\Ds\\Vector([4, 5, 1, 3, 2]);\n$sequence->sort();\n\nprint_r($sequence);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nDs\\Vector Object\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n```\n\n**Приклад #2 Приклад використання** Ds\\\\Sequence::sort()\\*\\* з callback-функцією порівняння\\*\\*\n\n```php\n<?php\n$sequence = new \\Ds\\Vector([4, 5, 1, 3, 2]);\n\n$sequence->sort(function($a, $b) {\n    return $b <=> $a;\n});\n\nprint_r($sequence);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nDs\\Vector Object\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n```\n","title":"Ds\\\\Sequence::sort","contentType":2,"navigation":[{"ds-sequence.slice.md":"« Ds\\\\Sequence::slice"},{"ds-sequence.sorted.md":"Ds\\\\Sequence::sorted »"},{"index.md":"PHP Manual"},{"class.ds-sequence.md":"Ds\\\\Sequence"}]}},"__N_SSG":true}