{"pageProps":{"page":{"slug":"ds-sequence.rotate.md","content":"# Ds\\\\Sequence::rotate\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Sequence::rotate — Перемотує послідовність на задану кількість значень\n\n### Опис\n\n```methodsynopsis\nabstract public Ds\\Sequence::rotate(int $rotations): void\n```\n\nПеремотує послідовність на задану кількість значень. Ця операція аналогічна до виконання заданої кількості разів коду `$sequence->push($sequence->shift())`якщо кількість оборотів позитивно і `$sequence->unshift($sequence->pop())`якщо негативно.\n\n### Список параметрів\n\n`rotations`\n\nКількість значень, які треба \"перемотати\".\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання. Буде змінено поточну послідовність.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Sequence::rotate()\\*\\*\\*\\*\n\n```php\n<?php\n$sequence = new \\Ds\\Vector([\"a\", \"b\", \"c\", \"d\"]);\n\n$sequence->rotate(1);  // Аналогично $a = $sequence->shift(); $sequence->push($a);\nprint_r($sequence);\n\n$sequence->rotate(2);\nprint_r($sequence);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n(\n    [0] => b\n    [1] => c\n    [2] => d\n    [3] => a\n)\nDs\\Vector Object\n(\n    [0] => d\n    [1] => a\n    [2] => b\n    [3] => c\n)\n```\n","title":"Ds\\\\Sequence::rotate","contentType":2,"navigation":[{"ds-sequence.reversed.md":"« Ds\\\\Sequence::reversed"},{"ds-sequence.set.md":"Ds\\\\Sequence::set »"},{"index.md":"PHP Manual"},{"class.ds-sequence.md":"Ds\\\\Sequence"}]}},"__N_SSG":true}