{"pageProps":{"page":{"slug":"class.evperiodic.md","content":"# Клас EvPeriodic\n\n(PECL ev >= 0.2.0)\n\n## Вступ\n\nПеріодичні спостерігачі також, свого роду, таймери, але набагато непостійніші.\n\nВ отличие от[EvTimer](class.evtimer.md) , спостерігачі **EvPeriodic** базуються не на реальному часі (або відносному часі, що фізично пройшов), а на \"системному\" (тому, що показується на вашому годиннику). Різниця в тому, що такий час може йти швидше або повільніше \"реального\", або взагалі стрибати, у момент переходу на зимовий/літній час або просто ручної зміни часу.\n\nСпостерігач **EvPeriodic** можна налаштувати на спрацювання після певного часу. Наприклад, якщо спостерігач **EvPeriodic** налаштований спрацювати *\"в 10 секунд\"*(т.е[EvLoop::now()](evloop.now.md) **`10.0`** секунд за \"системним\" часом, а не через 10 секунд!) і відразу після цього системний час скинули на *перше січня минулого року*, то спостерігач спрацює через рік або більше, рівно в той момент, коли системний час дорівнюватиме заданому. В той час як [EvTimer](class.evtimer.md) просто спрацює через \\*\\*`10`\\*\\*секунд после запуска.\n\nЯк і з таймерами, callback-функція гарантовано спрацює після настання необхідного часу. Якщо кілька таймерів будуть готові спрацювати в одній і тій самій ітерації подієвого циклу, то першими спрацюють ті, які повинні працювати раніше за часом. (Це більше не поширюється на ситуації, коли callback-функції рекурсивно викликають [EvLoop::run()](evloop.run.md)\n\n## Огляд класів\n\n```classsynopsis\n\n     \n    \n    \n    \n     \n      class EvPeriodic\n     \n     \n      extends\n       EvWatcher\n     \n     {\n    \n    /* Свойства */\n    \n     public\n      $offset;\n\n    public\n      $interval;\n\n    /* Наследуемые свойства */\n    public\n      $is_active;\npublic\n      $data;\npublic\n      $is_pending;\npublic\n      $priority;\n\n    /* Методы */\n    \n   public\n   __construct(    \n    float\n     $offset\n   ,    \n    string\n     $interval\n   ,    \n    callable\n     $reschedule_cb\n   ,    \n    callable\n     $callback\n   ,    \n    mixed\n     $data\n     = null\n   ,    \n    int\n     $priority\n     = 0\n   )\n\n    public\n   again(): void\npublic\n   at(): float\nfinal\n   public\n   static\n   createStopped(    \n    float\n     $offset\n   ,    \n    float\n     $interval\n   ,    \n    callable\n     $reschedule_cb\n   ,    \n    callable\n     $callback\n   ,    \n    mixed\n     $data\n     = null\n   ,    \n    int\n     $priority\n     = 0\n   ): EvPeriodic\npublic\n   set(\n    float\n     $offset\n   , \n    float\n     $interval\n   ): void\n\n    /* Наследуемые методы */\n    public\n   EvWatcher::clear(): int\npublic\n   EvWatcher::feed(\n    int\n     $revents\n   ): void\npublic\n   EvWatcher::getLoop(): EvLoop\npublic\n   EvWatcher::invoke(\n    int\n     $revents\n   ): void\npublic\n   EvWatcher::keepalive(\n    bool\n     $value\n    = ?): bool\npublic\n   EvWatcher::setCallback(\n    callable\n     $callback\n   ): void\npublic\n   EvWatcher::start(): void\npublic\n   EvWatcher::stop(): void\n\n   }\n```\n\n## Властивості\n\noffset\n\nПри повторенні цей параметр містить значення зсуву, інакше - абсолютний час (значення зсуву передається в [EvPeriodic::set()](evperiodic.set.md), хотя*libev* може його змінити для кращої чисельної стабільності).\n\ninterval\n\nПоточне значення інтервалу. Може бути змінено в будь-який час, але зміни набудуть чинності тільки після спрацювання спостерігача або під час виклику [EvPeriodic::again()](evperiodic.again.md)\n\n## Зміст\n\n-   [EvPeriodic::again](evperiodic.again.md)— Зупиняє та знову запускає періодичний спостерігач\n-   [EvPeriodic::at](evperiodic.at.md)— Повертає абсолютний час, коли спостерігач запуститься наступного разу\n-   [EvPeriodic::\\_\\_construct](evperiodic.construct.md) \\- Конструктор об'єкта спостерігача EvPeriodic\n-   [EvPeriodic::createStopped](evperiodic.createstopped.md) \\- Створює зупинений спостерігач EvPeriodic\n-   [EvPeriodic::set](evperiodic.set.md)— Налаштовує спостерігача\n","title":"Клас EvPeriodic","contentType":2,"navigation":[{"evloop.verify.md":"« EvLoop::verify"},{"evperiodic.again.md":"EvPeriodic::again »"},{"index.md":"PHP Manual"},{"book.ev.md":"Ev"}]}},"__N_SSG":true}