{"pageProps":{"page":{"slug":"stomp.ack.md","content":"# Stomp::ack\n\n# stomp\\_ack\n\n(PECL stomp >= 0.1.0)\n\nStomp::ack -- stomp\\_ack — Підтверджує отримання повідомлення\n\n### Опис\n\nОб'єктно-орієнтований стиль (метод):\n\n```methodsynopsis\npublic Stomp::ack(mixed $msg, array $headers = ?): bool\n```\n\nПроцедурний стиль:\n\n```methodsynopsis\nstomp_ack(resource $link, mixed $msg, array $headers = ?): bool\n```\n\nПідтверджує факт отримання повідомлення із черги, використовуючи підтвердження клієнта.\n\n### Список параметрів\n\n`link`\n\nТільки для процедурного стилю: ідентифікатор з'єднання stomp, отриманий з [stomp\\_connect()](stomp.construct.md)\n\n`msg`\n\nПовідомлення/ідентифікатор повідомлення, отримання якого має бути підтверджено.\n\n`headers`\n\nАсоціативний масив, який містить додаткові заголовки (приклад: receipt).\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Об'єктно-орієнтований стиль**\n\n```php\n<?php\n\n$queue  = '/queue/foo';\n$msg    = 'bar';\n\n/* подключение */\ntry {\n    $stomp = new Stomp('tcp://localhost:61613');\n} catch(StompException $e) {\n    die('Ошибка соединения: ' . $e->getMessage());\n}\n\n/* отправка сообщения в очередь 'foo' */\n$stomp->send($queue, $msg);\n\n/* подписка на сообщения из очереди 'foo' */\n$stomp->subscribe($queue);\n\n/* чтение фрейма */\n$frame = $stomp->readFrame();\n\nif ($frame->body === $msg) {\n    /* подтверждение получения фрейма */\n    $stomp->ack($frame);\n}\n\n/* отмена подписки к очереди */\n$stomp->unsubscribe($queue);\n\n/* закрытие подключения */\nunset($stomp);\n\n?>\n```\n\n**Приклад #2 Процедурний стиль**\n\n```php\n<?php\n\n$queue  = '/queue/foo';\n$msg    = 'bar';\n\n/* подключение */\n$link = stomp_connect('ssl://localhost:61612');\n\n/* проверка соединения */\nif (!$link) {\n    die('Ошибка соединения: ' . stomp_connect_error());\n}\n\n/* начало транзакции */\nstomp_begin($link, 't1');\n\n/* отправка сообщения в очередь  'foo' */\nstomp_send($link, $queue, $msg, array('transaction' => 't1'));\n\n/* подтверждение транзакции */\nstomp_commit($link, 't1');\n\n/* подписка на сообщения из очереди 'foo' */\nstomp_subscribe($link, $queue);\n\n/* чтение фрейма */\n$frame = stomp_read_frame($link);\n\nif ($frame['body'] === $msg) {\n    /* подтверждение получения фрейма */\n    stomp_ack($link, $frame['headers']['message-id']);\n}\n\n/* отмена подписки к очереди */\nstomp_unsubscribe($link, $queue);\n\n/* закрытие подключения */\nstomp_close($link);\n\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Також може бути зазначений заголовок транзакції, що означає, що прийом повідомлення повинен бути частиною іменованої транзакції.\n\n**Підказка**\n\nStomp асинхронний за своєю суттю. Синхронний зв'язок може бути реалізований додаванням receipt-заголовка. Це змусить методи нічого не повертати, доки сервер не підтвердить отримання повідомлення або буде перевищено час очікування повідомлення.\n","title":"Stomp::ack","contentType":2,"navigation":[{"stomp.abort.md":"« Stomp::abort"},{"stomp.begin.md":"Stomp::begin »"},{"index.md":"PHP Manual"},{"class.stomp.md":"Stomp"}]}},"__N_SSG":true}