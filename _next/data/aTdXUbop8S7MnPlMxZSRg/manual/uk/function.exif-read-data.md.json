{"pageProps":{"page":{"slug":"function.exif-read-data.md","content":"# exif\\_read\\_data\n\n(PHP 4 >= 4.2.0, PHP 5, PHP 7, PHP 8)\n\nexif\\_read\\_data — Читає заголовки EXIF ​​із файлів зображень\n\n### Опис\n\n```methodsynopsis\nexif_read_data(    resource|string $file,    ?string $required_sections = null,    bool $as_arrays = false,    bool $read_thumbnail = false): array|false\n```\n\n**exif\\_read\\_data()** читає заголовки EXIF ​​із файлів зображень. Таким чином, можна читати метадані, що генеруються цифровими фотоапаратами.\n\nЗа ідеєю, EXIF-заголовки повинні йти першими в файлах JPEG/TIFF, що генеруються фотоапаратами. Але, на жаль, кожен виробник має своє уявлення про те, як компонувати метадані зображення. Тому будьте готові до ситуації, коли перед Exif-заголовком ще є щось.\n\n`Height`и`Width` обчислюються аналогічно до обчислень [getimagesize()](function.getimagesize.md)так що ці параметри не повинні бути присутніми в заголовку . `html` - текстовий рядок, що задає висоту/ширину, яку можна використовувати у звичайному HTML.\n\nЯкщо Exif-заголовок містить повідомлення про авторські права (Copyright), саме повідомлення може містити два значення. Ця ситуація не описана у стандарті Exif 2.10, тому розділ `COMPUTED` міститиме обидва ці значення в полях `Copyright.Photographer`и`Copyright.Editor`. Водночас розділи `IFD0` будуть містити масив байт з NULL-символом як роздільник цих двох значень або тільки перше значення, якщо тип файлу визначено неправильно (нормальна ситуація для Exif). Розділ `COMPUTED` буде також містити `Copyright`, це може бути або вихідний рядок, або список із власника фотографії та редактора через кому.\n\nТег`UserComment` має ті ж проблеми, що й Copyright. Він може зберігати 2 значення. Перше - використане кодування, друге - саме значення. У цьому випадку розділ `IFD` містить або кодування, або масив байт. Розділ `COMPUTED` буде зберігати обидва ці значення в полях `UserCommentEncoding`и`UserComment`Содержимое`UserComment` буде доступно в будь-якому випадку, тому краще використовувати його замість розділу `IFD0`\n\nТакже**exif\\_read\\_data()** перевіряє EXIF ​​теги на відповідність специфікації EXIF ​​([» http://exif.org/Exif2-2.PDF](http://exif.org/Exif2-2.PDF), Стор. 20).\n\n### Список параметрів\n\n`file`\n\nРозташування файлу із зображенням. Можливо як шляхом до файлу, і потоковим ресурсом (можна використовувати обгортки).\n\n`required_sections`\n\nСписок розділених комів розділів, які мають бути представлені в результуючому масиві (array). Якщо жоден із розділів знайти не вдасться, функція поверне **`false`**\n\n< td>COMPUTED\n\n<table class=\"doctable informaltable\"><tbody class=\"tbody\"><tr><td>FILE</td><td>FileName, FileSize, FileDateTime, SectionsFound</td></tr><tr><td>html, Width, Height, IsColor та інші. Height та Width обчислюються аналогічно <span class=\"function\"><a href=\"function.getimagesize.md\" class=\"function\">getimagesize()</a></span>, тому їх не обов'язково включати в заголовок. <code class=\"literal\">html</code> - текстовий рядок, що задає висоту/ширину, яку можна використовувати у звичайному <abbr title=\"Hyper Text Markup Language\">HTML</abbr>.</td></tr><tr><td>ANY_TAG</td><td>Будь-яка інформація укладена в тег, наприклад, <code class=\"literal\">IFD0</code>, <code class=\"literal\">EXIF</code>, ...</td></tr><tr><td>IFD0</td><td>Всі дані тега IFD0. У звичайних зображеннях у ньому зберігається розмір зображення.</td></tr><tr><td>THUMBNAIL</td><td>Якщо файл містить другий розділ <code class=\"literal\">IFD</code>, то вважається, що зображення є ескіз. Вся інформація про ескіз зберігається в цьому розділі.</td></tr><tr><td>COMMENT</td><td>Заголовки коментарів JPEG зображень.</td></tr><tr><td>EXIF</td><td>Розділ EXIF ​​є підрозділом <code class=\"literal\">IFD0</code>. Він містить більш детальну інформацію про зображення. Більшість його записів залежить від фотоапарата.</td></tr></tbody></table>\n\n`as_arrays`\n\nВизначає, чи формувати розділи як масивів. Розділи `required_sections` `COMPUTED` `THUMBNAIL`и`COMMENT` завжди робляться масивами, оскільки можуть містити значення, імена яких конфліктуватимуть з іменами інших розділах.\n\n`read_thumbnail`\n\nЯкщо **`true`**, буде прочитано сам ескіз. Інакше буде прочитана лише інформація у тегах.\n\n### Значення, що повертаються\n\nПовертає асоціативний масив (array), у якому ключами будуть імена заголовків, а значеннями – значення, що відповідають цим заголовкам. Якщо жодних даних повернути не можна, **exif\\_read\\_data()** поверне **`false`**\n\n### Помилки\n\nПомилки рівня **`E_WARNING`**и/или**`E_NOTICE`** можуть виникати для тегів, що не підтримуються, або інших потенційних умов помилки, але функція все одно намагається прочитати всю зрозумілу інформацію.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `required_sections` тепер допускає значення null. |\n| 7.2.0 | Параметр`file`перейменований на`stream` і може приймати як локальний шлях до файлу, і потоковий ресурс. |\n| 7.2.0 | Додано підтримку наступних форматів EXIF: |\n\n-   Samsung\n-   DJI\n-   Panasonic\n-   Sony\n-   Pentax\n-   Minolta\n-   Sigma/Foveon\n-   AGFA\n-   Kyocera\n-   Ricoh\n-   Epson\n\n### Приклади\n\n**Приклад #1 Приклад використання** exif\\_read\\_data()\\*\\*\\*\\*\n\n```php\n<?php\necho \"test1.jpg:<br />\\n\";\n$exif = exif_read_data('tests/test1.jpg', 'IFD0');\necho $exif===false ? \"Не найдено данных заголовка.<br />\\n\" : \"Изображение содержит заголовки<br />\\n\";\n\n$exif = exif_read_data('tests/test2.jpg', 0, true);\necho \"test2.jpg:<br />\\n\";\nforeach ($exif as $key => $section) {\n    foreach ($section as $name => $val) {\n        echo \"$key.$name: $val<br />\\n\";\n    }\n}\n?>\n```\n\nПерший дзвінок завершується невдачею, оскільки в заголовках зображення немає інформації.\n\nВисновок наведеного прикладу буде схожим на:\n\n```\ntest1.jpg:\nNo header data found.\ntest2.jpg:\nFILE.FileName: test2.jpg\nFILE.FileDateTime: 1017666176\nFILE.FileSize: 1240\nFILE.FileType: 2\nFILE.SectionsFound: ANY_TAG, IFD0, THUMBNAIL, COMMENT\nCOMPUTED.md: width=\"1\" height=\"1\"\nCOMPUTED.Height: 1\nCOMPUTED.Width: 1\nCOMPUTED.IsColor: 1\nCOMPUTED.ByteOrderMotorola: 1\nCOMPUTED.UserComment: Exif test image.\nCOMPUTED.UserCommentEncoding: ASCII\nCOMPUTED.Copyright: Photo (c) M.Boerger, Edited by M.Boerger.\nCOMPUTED.Copyright.Photographer: Photo (c) M.Boerger\nCOMPUTED.Copyright.Editor: Edited by M.Boerger.\nIFD0.Copyright: Photo (c) M.Boerger\nIFD0.UserComment: ASCII\nTHUMBNAIL.JPEGInterchangeFormat: 134\nTHUMBNAIL.JPEGInterchangeFormatLength: 523\nCOMMENT.0: Comment #1.\nCOMMENT.1: Comment #2.\nCOMMENT.2: Comment #3end\nTHUMBNAIL.JPEGInterchangeFormat: 134\nTHUMBNAIL.Thumbnail.Height: 1\nTHUMBNAIL.Thumbnail.Height: 1\n```\n\n**Приклад #2 Использование**exif\\_read\\_data()\\*\\* з потоковим ресурсом (доступно з PHP 7.2.0)\\*\\*\n\n```php\n<?php\n// Открываем файл в бинарном режиме\n$fp = fopen('/path/to/image.jpg', 'rb');\n\nif (!$fp) {\n    echo 'Ошибка: Невозможно открыть файл для чтения';\n    exit;\n}\n\n// Попытка прочитать заголовки exif\n$headers = exif_read_data($fp);\n\nif (!$headers) {\n    echo 'Ошибка: невозможно прочитать заголовки exif';\n    exit;\n}\n\n// Напечатать заголовки 'COMPUTED'\necho 'Заголовки EXIF:' . PHP_EOL;\n\nforeach ($headers['COMPUTED'] as $header => $value) {\n    printf(' %s => %s%s', $header, $value, PHP_EOL);\n}\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nEXIF Headers:\n Height => 576\n Width => 1024\n IsColor => 1\n ByteOrderMotorola => 0\n ApertureFNumber => f/5.6\n UserComment =>\n UserCommentEncoding => UNDEFINED\n Copyright => Denis\n Thumbnail.FileType => 2\n Thumbnail.MimeType => image/jpeg\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Якщо дозволено [mbstring](ref.mbstring.md), то exif буде намагатися обробляти юнікод і брати кодування як зазначено в [exif.decode\\_unicode\\_motorola](exif.configuration.md#ini.exif.decode-unicode-motorola) і [exif.decode\\_unicode\\_intel](exif.configuration.md#ini.exif.decode-unicode-intel). Модуль exif не намагатиметься самостійно визначити кодування та вказівка ​​правильного кодування залишається на совісті користувача шляхом встановлення однієї з двох INI-директив перед викликом **exif\\_read\\_data()**\n\n> **Зауваження** :\n> \n> Якщо параметр `file` використаний для передачі в функцію потоку, цей потік повинен бути перемотується. Зверніть увагу, що файловий позиційний покажчик не буде змінено після завершення роботи цієї функції.\n\n### Дивіться також\n\n-   [exif\\_thumbnail()](function.exif-thumbnail.md) \\- Отримує вбудоване прев'ю зображення\n-   [getimagesize()](function.getimagesize.md) \\- Отримання розміру зображення\n-   [Підтримувані протоколи та обгортки](wrappers.md)\n","title":"exif\\_read\\_data","contentType":2,"navigation":[{"function.exif-imagetype.md":"« exif\\_imagetype"},{"function.exif-tagname.md":"exif\\_tagname »"},{"index.md":"PHP Manual"},{"ref.exif.md":"Exif Функції"}]}},"__N_SSG":true}