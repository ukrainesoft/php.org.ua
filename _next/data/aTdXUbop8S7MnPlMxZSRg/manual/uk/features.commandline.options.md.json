{"pageProps":{"page":{"slug":"features.commandline.options.md","content":"## Список опцій командного рядка\n\nСписок опцій командного рядка, що надаються PHP, можуть бути отримані будь-якої миті, запустивши PHP з ключем **\\-h** :\n\n```\nUsage: php [options] [-f] <file> [--] [args...]\n   php [options] -r <code> [--] [args...]\n   php [options] [-B <begin_code>] -R <code> [-E <end_code>] [--] [args...]\n   php [options] [-B <begin_code>] -F <file> [-E <end_code>] [--] [args...]\n   php [options] -- [args...]\n   php [options] -a\n\n  -a               Run interactively\n  -c <path>|<file> Look for php.ini file in this directory\n  -n               No php.ini file will be used\n  -d foo[=bar]     Define INI entry foo with value 'bar'\n  -e               Generate extended information for debugger/profiler\n  -f <file>        Parse and execute <file>.\n  -h               This help\n  -i               PHP information\n  -l               Syntax check only (lint)\n  -m               Show compiled in modules\n  -r <code>        Run PHP <code> without using script tags <?..?>\n  -B <begin_code>  Run PHP <begin_code> before processing input lines\n  -R <code>        Run PHP <code> for every input line\n  -F <file>        Parse and execute <file> for every input line\n  -E <end_code>    Run PHP <end_code> after processing all input lines\n  -H               Hide any passed arguments from external tools.\n  -S <addr>:<port> Run with built-in web server.\n  -t <docroot>     Specify document root <docroot> for built-in web server.\n  -s               Output HTML syntax highlighted source.\n  -v               Version number\n  -w               Output source with stripped comments and whitespace.\n  -z <file>        Load Zend extension <file>.\n\n  args...          Arguments passed to script. Use -- args when first argument\n                   starts with - or script is read from stdin\n\n  --ini            Show configuration file names\n\n  --rf <name>      Show information about function <name>.\n  --rc <name>      Show information about class <name>.\n  --re <name>      Show information about extension <name>.\n  --rz <name>      Show information about Zend extension <name>.\n  --ri <name>      Show configuration for extension <name>.\n```\n\n**Опції, доступні з командного рядка**\n\n| Опция | Полное название | Опис |\n| --- | --- | --- |\n| \\-a | \\--interactive |  |\n| Запустити PHP в режимі онлайн. Для отримання додаткової інформації дивіться розділ [Інтерактивна консоль](features.commandline.interactive.md) |  |  |\n\n\\-b |--bindpath |\n\nШлях зв'язування бібліотек (Bind Path) для зовнішнього режиму FASTCGI Server (лише CGI).\n\n\\-C |--no-chdir |\n\nНе змінювати поточну директорію на директорію скрипта (лише для CGI).\n\n\\-q |--no-header |\n\nТихий режим. Пригнічує виведення заголовків HTTP (лише CGI).\n\n\\-T |--timing |\n\nВиміряти час виконання скрипту, повтореного count разів (тільки для CGI).\n\n\\-c |--php-ini |\n\nВказує або директорію, в якій потрібно шукати конфігураційний файл php.ini, або користувальницький `INI`\\-файл (назва якого може відрізнятись від стандартного php.ini), наприклад:\n\n```\n$ php -c /custom/directory/ my_script.php\n\n$ php -c /custom/directory/custom-file.ini my_script.php\n```\n\nЯкщо ця опція не вказана, пошук php.ini буде здійснено в [місцях за умовчанням](configuration.file.md)\n\n\\-n |--no-php-ini |\n\nПовністю ігнорувати php.ini.\n\n\\-d |--define |\n\nВстановлює значення користувача для кожної з конфігураційних опцій, доступних у php.ini. Синтаксис виглядає так:\n\n```\n-d configuration_directive[=value]\n```\n\n```\n# Если значение опущено, то соответствующей опции будет присвоено значение \"1\"\n$ php -d max_execution_time\n        -r '$foo = ini_get(\"max_execution_time\"); var_dump($foo);'\nstring(1) \"1\"\n\n# Указание пустого значения установит соответствующую опцию значением \"\"\nphp -d max_execution_time=\n        -r '$foo = ini_get(\"max_execution_time\"); var_dump($foo);'\nstring(0) \"\"\n\n# Конфигурационная переменная будет установлена любым значением, указанным после символа '='\n$  php -d max_execution_time=20\n        -r '$foo = ini_get(\"max_execution_time\"); var_dump($foo);'\nstring(2) \"20\"\n$  php\n        -d max_execution_time=doesntmakesense\n        -r '$foo = ini_get(\"max_execution_time\"); var_dump($foo);'\nstring(15) \"doesntmakesense\"\n```\n\n\\-e |--profile-info |\n\nУвімкнути режим розширеної інформації, що використовується налагоджувачем/профайлером.\n\n\\-f |--file |\n\nПарсит та виконує файл, вказаний у опції **\\-f**. Цей параметр необов'язковий і може бути опущений - досить просто вказати ім'я файлу, що запускається.\n\n\\-h і -? | --help та --usage | Виводить список опцій командного рядка з однорядковим описом того, що вони роблять. | | -i |--info | Викликає [phpinfo()](function.phpinfo.md) та виводити її результат. Якщо PHP працює некоректно, рекомендується виконати **php -i** та подивитися, чи виводяться повідомлення про помилки до або замість інформаційних таблиць. Враховуйте, що у разі використання CGI-Модуль весь висновок буде у форматі HTML і, як наслідок, дуже великий. | | -l |--syntax-check |\n\nНадає зручний спосіб перевірки заданого PHP-коду на наявність синтаксичних помилок. У разі успішної перевірки буде надруковано таку фразу: \"`No syntax errors detected in <filename>`\", а код повернення дорівнюватиме . . При невдалій перевірці буде виведено`Errors parsing <filename>`разом із внутрішніми повідомленнями парсера, а код повернення дорівнюватиме `-1`\n\nЦя опція не виявлятиме фатальних помилок (наприклад, виклик невизначених функцій). Використовуйте опцію **\\-f**якщо ви хочете перевірити код на наявність фатальних помилок.\n\n> **Зауваження** :\n> \n> Ця опція не працює з опцією **\\-r**\n\n\\-m |--modules |\n\n**Приклад #1 Виведення вбудованих (і завантажених) модулів PHP та Zend**\n\n```\n$ php -m\n[PHP Modules]\nxml\ntokenizer\nstandard\nsession\nposix\npcre\noverload\nmysql\nmbstring\nctype\n\n[Zend Modules]\n```\n\n\\-r |--run |\n\nДозволяє виконувати PHP-код, вказаний безпосередньо у командному рядку. Відкриваючі та закриваючі PHP-теги (`<?php`и`?>` **не потрібні** і будуть призводити до синтаксичної помилки, якщо вони присутні.\n\n> **Зауваження** :\n> \n> При використанні цього ключа слід бути дуже обережним і уникати непорозумінь, пов'язаних з автоматичним встановленням змінних оточення.\n> \n> **Приклад #2 Помилка синтаксису під час використання подвійних лапок**\n> \n> ```\n> $ php -r \"$foo = get_defined_constants();\"\n> PHP Parse error:  syntax error, unexpected '=' in Command line code on line 1\n> \n> Parse error: syntax error, unexpected '=' in Command line code on line 1\n> ```\n> \n> Проблема тут полягає в тому, що sh/bash виконує автоматичну підстановку змінних у разі, якщо використовуються подвійні лапки (`\"`). Оскільки змінна $foo навряд чи визначена, вона замінюється порожнім рядком, що призводить до того, що переданий PHP-код для виконання виглядає так:\n> \n> ```\n> $ php -r \" = get_defined_constants();\"\n> ```\n> \n> Правильним рішенням у цьому випадку буде використання одинарних лапок `'`, оскільки автоматична підстановка змінних, укладених в одинарні лапки, sh/bash не відбувається.\n> \n> **Приклад #3 Використання одинарних лапок для запобігання підстановці змінних у консолі**\n> \n> ```\n> $ php -r '$foo = get_defined_constants(); var_dump($foo);'\n> array(370) {\n>   [\"E_ERROR\"]=>\n>   int(1)\n>   [\"E_WARNING\"]=>\n>   int(2)\n>   [\"E_PARSE\"]=>\n>   int(4)\n>   [\"E_NOTICE\"]=>\n>   int(8)\n>   [\"E_CORE_ERROR\"]=>\n>   [...]\n> ```\n> \n> При використанні оболонки, яка відрізняється від sh/bash, можуть виникнути інші проблеми. У такому випадку необхідно створити звіт про помилку, що виникла на сайті [» https://github.com/php/php-src/issues](https://github.com/php/php-src/issues). Ви можете зіткнутися з проблемами при спробі отримати доступ до змінних оболонки або при роботі з зворотними слішами, що екранують. Тепер ви попереджені!\n\n> **Зауваження** :\n> \n> Ключ**\\-r**доступен в CLI SAPI, но недоступен в*CGI*SAPI.\n\n> **Зауваження** :\n> \n> Ця опція призначена лише для найпростішого коду. Тому деякі конфігураційні директиви (наприклад, [auto\\_prepend\\_file](ini.core.md#ini.auto-prepend-file) і [auto\\_append\\_file](ini.core.md#ini.auto-append-file)) у цьому режимі будуть проігноровані.\n\n\\-B |--process-begin |\n\nВиконуваний PHP код перед обробкою потоку введення (stdin).\n\n\\-R |--process-code |\n\nPHP-код, який виконується для кожного рядка введення.\n\nУ цьому режимі є дві спеціальні змінні: $ argn і $ argi. $argn містить рядок, який PHP обробляє в даний момент, а $argi містить номер цього рядка.\n\n\\-F |--process-file |\n\nPHP-файл для кожного рядка введення.\n\n\\-E |--process-end |\n\nPHP-код, який виконується після обробки введення.\n\n**Приклад #4 Использование опций**\\-B\\*\\* **\\-R** і **\\-E** для підрахунку кількості рядків у проекті.\\*\\*\n\n```\n$ find my_proj | php -B '$l=0;' -R '$l += count(@file($argn));' -E 'echo \"Всего строк: $l\\n\";'\nВсего строк: 37328\n```\n\n\\-S |--server |\n\nЗапускає [вбудований веб-сервер](features.commandline.webserver.md)\n\n\\-t |--docroot | Вказує корінь документа для [вбудованого веб-сервера](features.commandline.webserver.md). -s |--syntax-highlight і --syntax-highlighting |\n\nПоказати вихідний код із підсвічуванням синтаксису.\n\nЦя опція використовує внутрішній механізм для аналізу файлу і запису в стандартний потік виведення підсвіченої версії цього файлу. Врахуйте, що все, що вона робить, це генерує блок `<code> [...] </code>` HTML-тегів, без HTML-заголовків.\n\n> **Зауваження** :\n> \n> Ця опція несумісна з опцією **\\-r**\n\n\\-v |--version |\n\n**Приклад #5 Использование**\\-v\\*\\* для отримання типу SAPI та версії PHP та Zend\\*\\*\n\n```\n$ php -v\nPHP 5.3.1 (cli) (built: Dec 11 2009 19:55:07)\nCopyright (c) 1997-2009 The PHP Group\nZend Engine v2.3.0, Copyright (c) 1998-2009 Zend Technologies\n```\n\n\\-w |--strip |\n\nПоказати вихідний код без коментарів та пробілів.\n\n> **Зауваження** :\n> \n> Ця опція несумісна з опцією **\\-r**\n\n\\-z |--zend-extension |\n\nЗавантажує модуль Zend. Якщо передано лише ім'я файлу, PHP спробує завантажити цей модуль із шляху бібліотек за промовчанням (зазвичай вказується в /etc/ld.so.conf у системах Linux). Передача файлу з абсолютним шляхом не використовуватиме шлях пошуку бібліотеки. Відносне ім'я файлу, що містить директорію, вкаже PHP підвантажити модуль щодо поточної директорії.\n\n\\--ini |\n\nПоказує імена конфігураційних файлів та відскановані каталоги.\n\n**Приклад #6 Приклад`--ini`**\n\n$ php --ini Configuration File (php.ini) Path: /usr/dev/php/5.2/lib Loaded Configuration File: /usr/dev/php/5.2/lib/php.ini Scan for additional .ini files in: (none) Additional .ini files parsed: (none)\n\n\\--rf |--rfunction |\n\nПоказує інформацію про зазначену функцію або метод класу (наприклад, кількість та назви параметрів).\n\nЦя опція доступна лише в тому випадку, якщо PHP був скомпільований з підтримкою [Reflection](book.reflection.md)\n\n**Приклад #7 Базовое использование`--rf`**\n\n$ php --rf var\\_dump Function\\[ public function var\\_dump\\]\n\n-   Parameters\\[ \\]{ Parameter #0\\[ $var\\]Parameter #1\\[ $.. . \\]} }\n\n\\--rc |--rclass |\n\nПоказує інформацію про зазначений клас (список констант, властивостей та методів).\n\nЦя опція доступна лише в тому випадку, якщо PHP був скомпільований з підтримкою [Reflection](book.reflection.md)\n\n**Приклад #8 Приклад`--rc`**\n\n$ php --rc Directory Class\\[ [internal:standard](internal:standard)class Directory\\]\n\n-   Constants\\[ \\] { }\n    \n-   Static properties\\[ \\] { }\n    \n-   Static methods\\[ \\] { }\n    \n-   Properties\\[ \\] { }\n    \n-   Methods\\[3\\]{ Method\\[ public method close\\] { }\n    \n    Method\\[ public method rewind\\] { }\n    \n    Method\\[ public method read\\] { }\n    \n\n\\--re |--rextension |\n\nПоказує інформацію про вказаний модуль (список опцій php.ini, певних функцій, констант і класів).\n\nЦя опція доступна лише в тому випадку, якщо PHP був скомпільований з підтримкою [Reflection](book.reflection.md)\n\n**Приклад #9 Приклад`--re`**\n\n$ php --re json Extension\\[ extension #19 json version 1.2.1\\]\n\n-   Functions { Function\\[ function json\\_encode\\]{ } Function\\[ function json\\_decode\\] { } } }\n\n\\--rz |--rzendextension |\n\nПоказує інформацію про конфігурацію зазначеного Zend-модуля (та сама інформація, яка повертається [phpinfo()](function.phpinfo.md)\n\n\\--ri |--rextinfo |\n\nПоказує інформацію про конфігурацію зазначеного модуля (та сама інформація, яка повертається [phpinfo()](function.phpinfo.md)). Конфігурацію ядра можна дізнатися, вказавши як ім'я модуля значення \"main\".\n\n**Приклад #10 Приклад`--ri`**\n\n$ php --ri date\n\ndate\n\ndate/time support => enabled \"Olson\" Timezone Database Version => 2009.20 Timezone Database => internal Default timezone => Europe/Oslo\n\nDirective => Local Value => Master Value date.timezone => Europe/Oslo => Europe/Oslo date.default\\_latitude => 59.930972 => 59.930972 date.default\\_longitude => 10.776699 => 10.776699 date.sunset\\_zenith => 90.583333 => 90.583333 date.sunrise\\_zenith => 90.583333 => 90.583333\n\n> **Зауваження** :\n> \n> Опції `-rBRFEH` `--ini`и`--r[fcezi]` доступні лише у CLI.\n","title":"Список опцій командного рядка","contentType":2,"navigation":[{"features.commandline.differences.md":"Основні відмінності від інших реалізацій SAPI"},{"features.commandline.usage.md":"Використання »"},{"index.md":"PHP Manual"},{"features.commandline.md":"Робота з PHP з командного рядка"}]}},"__N_SSG":true}