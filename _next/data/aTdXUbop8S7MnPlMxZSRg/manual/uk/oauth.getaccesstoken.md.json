{"pageProps":{"page":{"slug":"oauth.getaccesstoken.md","content":"# OAuth::getAccessToken\n\n(PECL OAuth >= 0.99.1)\n\nOAuth::getAccessToken — Отримати токен доступу\n\n### Опис\n\n```methodsynopsis\npublic OAuth::getAccessToken(    string $access_token_url,    string $auth_session_handle = ?,    string $verifier_token = ?,    string $http_method = ?): array\n```\n\nОтримує токен доступу, його пароль та всі додаткові параметри відповіді від провайдера сервісу.\n\n### Список параметрів\n\n`access_token_url`\n\nURL до API видачі токена доступу.\n\n`auth_session_handle`\n\nОбробник сесії авторизації. Цей параметр не описується в специфікації OAuth 1.0, але безліччю провайдерів реалізується. Детальніше читайте за посиланням [» ScalableOAuth](http://oauth.pbwiki.com/ScalableOAuth/)\n\n`verifier_token`\n\nДля провайдерів із підтримкою 1.0a, параметр `verifier_token` повинен бути заданий під час обміну токена запиту на токен доступу. Якщо `verifier_token` присутній у `$_GET`или`$_POST`, то він буде заданий автоматично і стороні, що викликає, не потрібно явно його задавати в параметрі `verifier_token` (звичайно якщо токен доступу обмінюється за допомогою oauth\\_callback URL). Детальніше читайте за посиланням [» ScalableOAuth](http://oauth.pbwiki.com/ScalableOAuth/)\n\n`http_method`\n\nМетод HTTP. НаПриклад`GET`или`POST`\n\n### Значення, що повертаються\n\nПовертає масив із розібраною відповіддю OAuth, або **`false`**\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL oauth 1.0.0 | Раніше у разі виникнення помилки повертався **`null`** замість **`false`** |\n| PECL oauth 0.99.9 | Добавлен параметр`verifier_token` |\n\n### Приклади\n\n**Приклад #1 Приклад використання** OAuth::getAccessToken()\\*\\*\\*\\*\n\n```php\n<?php\ntry {\n    $oauth = new OAuth(OAUTH_CONSUMER_KEY,OAUTH_CONSUMER_SECRET);\n    $oauth->setToken($request_token,$request_token_secret);\n    $access_token_info = $oauth->getAccessToken(\"https://example.com/oauth/access_token\");\n    if(!empty($access_token_info)) {\n        print_r($access_token_info);\n    } else {\n        print \"Не удалось получить токен доступа, ответ был: \" . $oauth->getLastResponse();\n    }\n} catch(OAuthException $E) {\n    echo \"Ответ: \". $E->lastResponse . \"\\n\";\n}\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nArray\n(\n    [oauth_token] => some_token\n    [oauth_token_secret] => some_token_secret\n)\n```\n\n### Дивіться також\n\n-   [OAuth::getLastResponse()](oauth.getlastresponse.md) \\- Отримати останню відповідь\n-   [OAuth::getLastResponseInfo()](oauth.getlastresponseinfo.md) \\- Отримати HTTP-інформацію про останню відповідь\n-   [OAuth::setToken()](oauth.settoken.md) \\- Задати токен та його пароль\n","title":"OAuth::getAccessToken","contentType":2,"navigation":[{"oauth.generatesignature.md":"« OAuth::generateSignature"},{"oauth.getcapath.md":"OAuth::getCAPath »"},{"index.md":"PHP Manual"},{"class.oauth.md":"OAuth"}]}},"__N_SSG":true}