{"pageProps":{"page":{"slug":"function.cubrid-put.md","content":"# cubrid\\_put\n\n(PECL CUBRID >= 8.3.0)\n\ncubrid\\_put — Оновлює стовпець за допомогою OID\n\n### Опис\n\n```methodsynopsis\ncubrid_put(    resource $conn_identifier,    string $oid,    string $attr = ?,    mixed $value): bool\n```\n\nФункция**cubrid\\_put()** використовується для оновлення атрибуту екземпляра даного `oid`\n\nВи можете оновити один атрибут, використовуючи рядковий тип даних для встановлення `attr`. У такому разі ви можете використовувати дані цілого числа, числа з плаваючою комою або числа рядкового типу як аргумент `value`. Щоб оновити кілька атрибутів, можна пропустити аргумент `attr`и установить аргумент`value` у вигляді асоціативного масиву.\n\n### Список параметрів\n\n`conn_identifier`\n\nІдентифікатор з'єднання\n\n`oid`\n\nOID екземпляра, який необхідно оновити\n\n`attr`\n\nІм'я атрибута, який потрібно оновити\n\n`value`\n\nНове значення, яке необхідно присвоїти атрибуту\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_put()\\*\\*\\*\\*\n\n```php\n<?php\n$conn = cubrid_connect(\"localhost\", 33000, \"demodb\", \"dba\");\n\n@cubrid_execute($conn, \"DROP TABLE foo\");\ncubrid_execute($conn, \"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))\");\ncubrid_execute($conn, \"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')\");\ncubrid_execute($conn, \"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')\");\n\n$req = cubrid_execute($conn, \"SELECT * FROM foo\", CUBRID_INCLUDE_OID);\n\ncubrid_move_cursor($req, 1, CUBRID_CURSOR_FIRST);\n$oid = cubrid_current_oid($req);\n\n$attr = cubrid_col_get($conn, $oid, \"b\");\nvar_dump($attr);\n\ncubrid_put($conn, $oid, \"b\", array(2, 4, 8));\n\n$attr = cubrid_col_get($conn, $oid, \"b\");\nvar_dump($attr);\n\ncubrid_close_request($req);\ncubrid_disconnect($conn);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(3) {\n  [0]=>\n  string(1) \"1\"\n  [1]=>\n  string(1) \"2\"\n  [2]=>\n  string(1) \"3\"\n}\narray(3) {\n  [0]=>\n  string(1) \"2\"\n  [1]=>\n  string(1) \"4\"\n  [2]=>\n  string(1) \"8\"\n}\n```\n\n### Дивіться також\n\n-   [cubrid\\_get()](function.cubrid-get.md) \\- Отримує стовпець, використовуючи OID\n-   [cubrid\\_set\\_add()](function.cubrid-set-add.md) \\- Вставляє один елемент для встановлення стовпця типу за допомогою OID\n-   [cubrid\\_set\\_drop()](function.cubrid-set-drop.md) \\- Видаляє елемент із стовпця заданого типу, використовуючи OID\n-   [cubrid\\_seq\\_insert()](function.cubrid-seq-insert.md) \\- Вставляє елемент у стовпець типу послідовності, використовуючи OID\n-   [cubrid\\_seq\\_drop()](function.cubrid-seq-drop.md) \\- Видаляє елемент зі стовпця типу послідовності, використовуючи OID\n-   [cubrid\\_seq\\_put()](function.cubrid-seq-put.md) \\- Оновлює значення елемента стовпця типу послідовності за допомогою OID\n","title":"cubrid\\_put","contentType":2,"navigation":[{"function.cubrid-prepare.md":"« cubrid\\_prepare"},{"function.cubrid-rollback.md":"cubrid\\_rollback »"},{"index.md":"PHP Manual"},{"ref.cubrid.md":"Функції CUBRID"}]}},"__N_SSG":true}