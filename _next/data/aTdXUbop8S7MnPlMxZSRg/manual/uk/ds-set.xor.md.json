{"pageProps":{"page":{"slug":"ds-set.xor.md","content":"# Ds\\\\Set::xor\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Set::xor — Створює новий набір із значень, які є в одному з наборів, але не в обох одночасно\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Set::xor(Ds\\Set $set): Ds\\Set\n```\n\nСтворює новий набір з значень, які є в поточному наборі, або в заданому наборі в `set`але не в обох одночасно.\n\n`A ⊖ B = {x : x ∈ (A \\ B) ∪ (B \\ A)}`\n\n### Список параметрів\n\n`set`\n\nДругий набір.\n\n### Значення, що повертаються\n\nНовий набір із значень, які є в поточному наборі, або в наборі, заданому в `set`але не в обох одночасно.\n\n### Дивіться також\n\n-   [» Симетрична різниця](https://en.wikipedia.org/wiki/Symmetric_difference)в Вікіпедія\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Set::xor()\\*\\*\\*\\*\n\n```php\n<?php\n$a = new \\Ds\\Set([1, 2, 3]);\n$b = new \\Ds\\Set([3, 4, 5]);\n\nvar_dump($a->xor($b));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nobject(Ds\\Set)#3 (4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n  [3]=>\n  int(5)\n}\n```\n","title":"Ds\\\\Set::xor","contentType":2,"navigation":[{"ds-set.union.md":"« Ds\\\\Set::union"},{"class.ds-stack.md":"Ds\\\\Stack »"},{"index.md":"PHP Manual"},{"class.ds-set.md":"Ds\\\\Set"}]}},"__N_SSG":true}