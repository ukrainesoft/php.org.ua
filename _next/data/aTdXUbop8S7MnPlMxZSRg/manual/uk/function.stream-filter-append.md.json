{"pageProps":{"page":{"slug":"function.stream-filter-append.md","content":"# stream\\_filter\\_append\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\nstream\\_filter\\_append — Прикріпити фільтр до потоку\n\n### Опис\n\n```methodsynopsis\nstream_filter_append(    resource $stream,    string $filtername,    int $read_write = ?,    mixed $params = ?): resource\n```\n\nДобавляет`filtername` до списку фільтрів, прикріплених до `stream`\n\n### Список параметрів\n\n`stream`\n\nЦільовий потік.\n\n`filtername`\n\nНазва фільтра.\n\n`read_write`\n\nПо умолчанию\\*\\*stream\\_filter\\_append()\\*\\*будет прикреплять фильтр к`ланцюжку фільтрів читання`, якщо файл був відкритий для читання (тобто режим файлу: `r`, и/или`+` ). Фільтр також буде прикріплений до `ланцюжку фільтрів запису`, якщо файл був відкритий для запису (тобто режим файлу: `w` `a`, и/или`+` ). Константи **`STREAM_FILTER_READ`** **`STREAM_FILTER_WRITE`**и/или**`STREAM_FILTER_ALL`** також можуть бути передані у параметрі `read_write`, щоб перевизначити цю поведінку.\n\n`params`\n\nЦей фільтр буде додано із зазначеними `params`к*кінцю* списку і, таким чином, буде викликано останнім у списку потокових операцій. Щоб додати фільтр до початку списку, використовуйте [stream\\_filter\\_prepend()](function.stream-filter-prepend.md)\n\n### Значення, що повертаються\n\nПовертає ресурс у разі успішного виконання або **`false`** при невдачі. Ресурс повинен бути використаний для посилання на цей екземпляр фільтра під час виклику [stream\\_filter\\_remove()](function.stream-filter-remove.md)\n\nПоверне **`false`**, якщо `stream` не є ресурсом або якщо `filtername`не найден.\n\n### Приклади\n\n**Приклад #1 Контроль застосування фільтрів**\n\n```php\n<?php\n/* Открываем тестовый файл для чтения и записи */\n$fp = fopen('test.txt', 'w+');\n\n/* Прикрепляем фильтр ROT13 к\n * цепочке фильтров записи, но не к\n * цепочке фильтров чтения */\nstream_filter_append($fp, \"string.rot13\", STREAM_FILTER_WRITE);\n\n/* Запишем простую строку в файл\n * она будет преобразована при помощи ROT13\n * на выходе */\nfwrite($fp, \"This is a test\\n\");\n\n/* Назад к началу файла */\nrewind($fp);\n\n/* Прочитаем содержимое файла.\n * Если фильтр также был бы прикреплён к\n * цепочке фильтров чтения, мы бы увидели\n * преобразованный при помощи ROT13 текст в исходном состоянии */\nfpassthru($fp);\n\nfclose($fp);\n\n/* Ожидаемый вывод\n   ---------------\n\nGuvf vf n grfg\n\n */\n?>\n```\n\n### Примітки\n\n> **Зауваження** **При використанні фільтрів користувача**  \n> Спочатку має бути викликана функція [stream\\_filter\\_register()](function.stream-filter-register.md) для того, щоб зареєструвати бажаний фільтр користувача на ім'я `filtername`\n\n> **Зауваження**: Поточні дані читаються з ресурсів (як локальних, так і віддалених) по шматках, і будь-які незатребувані дані зберігаються у внутрішніх буферах. Коли новий фільтр додається в кінець потоку, дані у внутрішніх буферах обробляються через новий фільтр. Це відрізняється від поведінки функції [stream\\_filter\\_prepend()](function.stream-filter-prepend.md)\n\n> **Зауваження**: Коли фільтр додається для читання та запису, створюються два екземпляри фільтра. Функція **stream\\_filter\\_append()** повинна бути викликана двічі з **`STREAM_FILTER_READ`** і **`STREAM_FILTER_WRITE`** щоб отримати обидва ресурси фільтра.\n\n### Дивіться також\n\n-   [stream\\_filter\\_register()](function.stream-filter-register.md) \\- Реєструє потоковий фільтр, визначений користувачем\n-   [stream\\_filter\\_prepend()](function.stream-filter-prepend.md) \\- Прикріплює фільтр до потоку\n-   [stream\\_get\\_filters()](function.stream-get-filters.md) \\- Отримати список зареєстрованих фільтрів\n","title":"stream\\_filter\\_append","contentType":2,"navigation":[{"function.stream-copy-to-stream.md":"« stream\\_copy\\_to\\_stream"},{"function.stream-filter-prepend.md":"stream\\_filter\\_prepend »"},{"index.md":"PHP Manual"},{"ref.stream.md":"Функції для роботи з потоками"}]}},"__N_SSG":true}