{"pageProps":{"page":{"slug":"ds-map.diff.md","content":"# Ds\\\\Map::diff\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Map::diff — Створює нову колекцію пар з елементами, ключів яких немає в іншій колекції пар\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Map::diff(Ds\\Map $map): Ds\\Map\n```\n\nПовертає нову колекцію пар, що не містить елементів із ключами, які присутні в колекції пар, переданої в `map`\n\n`A \\ B = {x ∈ A | x ∉ B}`\n\n### Список параметрів\n\n`map`\n\nКолекція пар містить елементи з ключами, яких не повинно бути в новій колекції пар.\n\n### Значення, що повертаються\n\nРезультат видалення всіх елементів, ключі яких є в колекції пар, переданої в `map`\n\n### Дивіться також\n\n-   [» Різниця масивів](https://en.wikipedia.org/wiki/Complement_(set_theory))на Wikipedia\n\n### Приклади\n\n**Приклад #1 Приклад використання** Ds\\\\Map::diff()\\*\\*\\*\\*\n\n```php\n<?php\n$a = new \\Ds\\Map([\"a\" => 1, \"b\" => 2, \"c\" => 3]);\n$b = new \\Ds\\Map([\"b\" => 4, \"c\" => 5, \"d\" => 6]);\n\nvar_dump($a->diff($b));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nobject(Ds\\Map)#3 (1) {\n  [0]=>\n  object(Ds\\Pair)#4 (2) {\n    [\"key\"]=>\n    string(1) \"a\"\n    [\"value\"]=>\n    int(1)\n  }\n}\n```\n","title":"Ds\\\\Map::diff","contentType":2,"navigation":[{"ds-map.count.md":"« Ds\\\\Map::count"},{"ds-map.filter.md":"Ds\\\\Map::filter »"},{"index.md":"PHP Manual"},{"class.ds-map.md":"Ds\\\\Map"}]}},"__N_SSG":true}