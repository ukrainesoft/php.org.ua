{"pageProps":{"page":{"slug":"class.luasandbox.md","content":"# Клас LuaSandbox\n\n(PECL luasandbox >= 1.0.0)\n\n## Вступ\n\nКлас LuaSandbox створює середовище Lua та дозволяє виконувати код Lua.\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     \n      class LuaSandbox\n     \n     {\n\n    /* Константы */\n    \n     const\n     int\n      SAMPLES = 0;\n\n    const\n     int\n      SECONDS = 1;\n\n    const\n     int\n      PERCENT = 2;\n\n\n    /* Методы */\n    \n   public callFunction(string $name, mixed ...$args): array|bool\npublic disableProfiler(): void\npublic enableProfiler(float $period = 0.02): bool\npublic getCPUUsage(): float\npublic getMemoryUsage(): int\npublic getPeakMemoryUsage(): int\npublic getProfilerFunctionReport(int $units = LuaSandbox::SECONDS): array\npublic static getVersionInfo(): array\npublic loadBinary(string $code, string $chunkName = ''): LuaSandboxFunction\npublic loadString(string $code, string $chunkName = ''): LuaSandboxFunction\npublic pauseUsageTimer(): bool\npublic registerLibrary(string $libname, array $functions): void\npublic setCPULimit(float|bool $limit): void\npublic setMemoryLimit(int $limit): void\npublic unpauseUsageTimer(): void\npublic wrapPhpFunction(callable $function): LuaSandboxFunction\n\n   }\n```\n\n## Обумовлені константи\n\n**`LuaSandbox::SAMPLES`**\n\nВикористовується з [LuaSandbox::getProfilerFunctionReport()](luasandbox.getprofilerfunctionreport.md)для возврата времени в образцах.\n\n**`LuaSandbox::SECONDS`**\n\nВикористовується з [LuaSandbox::getProfilerFunctionReport()](luasandbox.getprofilerfunctionreport.md)для возврата времени в секундах.\n\n**`LuaSandbox::PERCENT`**\n\nВикористовується з [LuaSandbox::getProfilerFunctionReport()](luasandbox.getprofilerfunctionreport.md)для возврата времени в процентах от общего значения.\n\n## Зміст\n\n-   [LuaSandbox::callFunction](luasandbox.callfunction.md)— Викликає функцію у глобальній змінній Lua\n-   [LuaSandbox::disableProfiler](luasandbox.disableprofiler.md) \\- Відключає профільник\n-   [LuaSandbox::enableProfiler](luasandbox.enableprofiler.md) \\- Включає профільник\n-   [LuaSandbox::getCPUUsage](luasandbox.getcpuusage.md)— Повертає поточний час використання процесора у середовищі Lua\n-   [LuaSandbox::getMemoryUsage](luasandbox.getmemoryusage.md)— Повертає поточне використання пам'яті у середовищі Lua\n-   [LuaSandbox::getPeakMemoryUsage](luasandbox.getpeakmemoryusage.md)— Повертає пікове використання пам'яті у середовищі Lua\n-   [LuaSandbox::getProfilerFunctionReport](luasandbox.getprofilerfunctionreport.md)— Отримує дані профілювача\n-   [LuaSandbox::getVersionInfo](luasandbox.getversioninfo.md)— Повертає версії LuaSandbox та Lua\n-   [LuaSandbox::loadBinary](luasandbox.loadbinary.md)— Завантажує попередньо скомпільований двійковий фрагмент у середу Lua\n-   [LuaSandbox::loadString](luasandbox.loadstring.md)— Завантажує код Lua у середу Lua\n-   [LuaSandbox::pauseUsageTimer](luasandbox.pauseusagetimer.md)— Припиняє таймер використання процесора\n-   [LuaSandbox::registerLibrary](luasandbox.registerlibrary.md)— Реєструє набір PHP-функцій як бібліотеку Lua\n-   [LuaSandbox::setCPULimit](luasandbox.setcpulimit.md)— Встановлює обмеження часу процесора для середовища Lua\n-   [LuaSandbox::setMemoryLimit](luasandbox.setmemorylimit.md)— Встановлює межу пам'яті для середовища Lua\n-   [LuaSandbox::unpauseUsageTimer](luasandbox.unpauseusagetimer.md)— Відновлює таймер, зупинений LuaSandbox::pauseUsageTimer\n-   [LuaSandbox::wrapPhpFunction](luasandbox.wrapphpfunction.md)— Обертає PHP-об'єкт, що викликається в LuaSandboxFunction\n","title":"Клас LuaSandbox","contentType":2,"navigation":[{"luasandbox.examples-basic.md":"« Базове використання LuaSandbox"},{"luasandbox.callfunction.md":"LuaSandbox::callFunction »"},{"index.md":"PHP Manual"},{"book.luasandbox.md":"LuaSandbox"}]}},"__N_SSG":true}