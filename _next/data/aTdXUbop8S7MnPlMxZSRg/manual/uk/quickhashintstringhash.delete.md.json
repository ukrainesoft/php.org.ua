{"pageProps":{"page":{"slug":"quickhashintstringhash.delete.md","content":"# QuickHashIntStringHash::delete\n\n(PECL quickhash >= Unknown)\n\nQuickHashIntStringHash::delete — Метод видаляє запис із хешу\n\n### Опис\n\n```methodsynopsis\npublic QuickHashIntStringHash::delete(int $key): bool\n```\n\nМетод видаляє запис з хешу і повертає, чи цей запис видалено чи ні. Відповідні структури пам'яті буде звільнено не відразу, а при звільненні самого хеша.\n\nЕлементи не можна видалити, якщо хеш використовується в ітераторі. Метод не викине виняток, а просто поверне **`false`**, як це сталося б за будь-якої іншої помилки видалення.\n\n### Список параметрів\n\n`key`\n\nКлюч запису, що видаляється.\n\n### Значення, що повертаються\n\nМетод возвращает\\*\\*`true`\\*\\*, якщо запис було видалено та **`false`**, якщо запис не видалено.\n\n### Приклади\n\n**Приклад #1 Приклад використання** QuickHashIntStringHash::delete()\\*\\*\\*\\*\n\n```php\n<?php\n$hash = new QuickHashIntStringHash( 1024 );\nvar_dump( $hash->exists( 4 ) );\nvar_dump( $hash->add( 4, \"five\" ) );\nvar_dump( $hash->delete( 4 ) );\nvar_dump( $hash->exists( 4 ) );\nvar_dump( $hash->delete( 4 ) );\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nbool(false)\nbool(true)\nbool(true)\nbool(false)\nbool(false)\n```\n","title":"QuickHashIntStringHash::delete","contentType":2,"navigation":[{"quickhashintstringhash.construct.md":"« QuickHashIntStringHash::\\_\\_construct"},{"quickhashintstringhash.exists.md":"QuickHashIntStringHash::exists »"},{"index.md":"PHP Manual"},{"class.quickhashintstringhash.md":"QuickHashIntStringHash"}]}},"__N_SSG":true}