{"pageProps":{"page":{"slug":"gearmanclient.donormal.md","content":"# GearmanClient::doNormal\n\n(No version information available, might only be in Git)\n\nGearmanClient::doNormal — Виконує одиночне завдання та повертає результат\n\n### Опис\n\n```methodsynopsis\npublic GearmanClient::doNormal(string $function, string $workload, ?string $unique = null): string\n```\n\nВиконує одиночне завдання та повертає рядкове подання результату. Формат результату, що повертається, визначають об'єкти. [GearmanClient](class.gearmanclient.md) і [GearmanWorker](class.gearmanworker.md)\n\n### Список параметрів\n\n`function`\n\nЗареєстрована функція, що викликається робочим процесом\n\n`workload`\n\nСеріалізовані дані, що підлягають обробці\n\n`unique`\n\nУнікальний ID, який призначається певному завданню\n\n### Значення, що повертаються\n\nРядок, що представляє результат виконання завдання.\n\n### Приклади\n\n**Приклад #1 Виконання простого завдання з негайним поверненням**\n\n```php\n<?php\n\n?>\n```\n\n```php\n<?php\n\n# Код клиента\n\necho \"Запуск\\n\";\n\n# Создание клиента.\n$gmclient= new GearmanClient();\n\n# Добавление сервера по умолчанию (localhost).\n$gmclient->addServer();\n\necho \"Отправка задания\\n\";\n\n$result = $gmclient->doNormal(\"reverse\", \"Hello!\");\n\necho \"Задание выполнено: $result\\n\";\n\n?>\n```\n\n```php\n<?php\n\necho \"Запуск\\n\";\n\n# Создание объекта обработчика заданий.\n$gmworker= new GearmanWorker();\n\n# Добавление сервера по умолчанию (localhost).\n$gmworker->addServer();\n\n# Регистрация функции \"reverse\" на сервере. Замена обрабатывающей функции\n# на \"reverse_fn_fast\" для быстрой обработки без вывода\n$gmworker->addFunction(\"reverse\", \"reverse_fn\");\n\nprint \"Ожидание задания...\\n\";\nwhile($gmworker->work())\n{\n  if ($gmworker->returnCode() != GEARMAN_SUCCESS)\n  {\n    echo \"Код возврата: \" . $gmworker->returnCode() . \"\\n\";\n    break;\n  }\n}\n\nfunction reverse_fn($job)\n{\n  return strrev($job->workload());\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nЗапуск\nОтправка задания\nЗадание выполнено: !olleH\n```\n\n**Приклад #2 Надсилання завдання на обробку та моніторинг стану**\n\nПісля надсилання завдання скрипт у циклі запитує поточний прогрес обробки. В обробник введена штучна затримка, щоб змоделювати завдання, що довго виконується. Оброблювач посилає клієнту свій поточний стан, як тільки завершено обробку чергової порції даних. Послідовні виклики **GearmanClient::doNormal()** запитують поточний стан завдання, що виконується.\n\n```php\n<?php\n\n# Код клиента\n\n# Создание клиента.\n$gmclient= new GearmanClient();\n\n# Добавление сервера по умолчанию (localhost).\n$gmclient->addServer();\n\necho \"Отправка задания\\n\";\n\n# Отправка задания перевернуть строку\ndo\n{\n  $result = $gmclient->doNormal(\"reverse\", \"Hello!\");\n  # Проверка состояния на ошибки или возвращаемые данные.\n\n  switch($gmclient->returnCode())\n  {\n    case GEARMAN_WORK_DATA:\n      echo \"Данные: $result\\n\";\n      break;\n    case GEARMAN_WORK_STATUS:\n      list($numerator, $denominator)= $gmclient->doStatus();\n      echo \"Статус: $numerator/$denominator complete\\n\";\n      break;\n    case GEARMAN_WORK_FAIL:\n      echo \"Ошибка\\n\";\n      exit;\n    case GEARMAN_SUCCESS:\n      break;\n    default:\n      echo \"Код возврата: \" . $gmclient->returnCode() . \"\\n\";\n      echo \"Ошибка: \" . $gmclient->error() . \"\\n\";\n      echo \"Номер ошибки: \" . $gmclient->getErrno() . \"\\n\";\n      exit;\n  }\n}\nwhile($gmclient->returnCode() != GEARMAN_SUCCESS);\n\necho \"Обработка завершена: $result\\n\";\n\n?>\n```\n\n```php\n<?php\n\n# Код обработчика\n\necho \"Запуск\\n\";\n\n# Создаём свой объект обработчика.\n$gmworker= new GearmanWorker();\n\n# Добавление сервера по умолчанию (localhost).\n$gmworker->addServer();\n\n# Регистрируем функцию \"reverse\" на сервере.\n$gmworker->addFunction(\"reverse\", \"reverse_fn\");\n\nprint \"Ожидание задания...\\n\";\nwhile($gmworker->work())\n{\n  if ($gmworker->returnCode() != GEARMAN_SUCCESS)\n  {\n    echo \"Код возврата: \" . $gmworker->returnCode() . \"\\n\";\n    break;\n  }\n}\n\nfunction reverse_fn($job)\n{\n  echo \"Получено задание: \" . $job->handle() . \"\\n\";\n\n  $workload = $job->workload();\n  $workload_size = $job->workloadSize();\n\n  echo \"Загружены данные: $workload ($workload_size)\\n\";\n\n  # Этот цикл не является необходимым, просто показывает, как все работает\n  for ($x= 0; $x < $workload_size; $x++)\n  {\n    echo \"Отправка статуса: \" + $x + 1 . \"/$workload_size завершено\\n\";\n    $job->sendStatus($x+1, $workload_size);\n    $job->sendData(substr($workload, $x, 1));\n    sleep(1);\n  }\n\n  $result= strrev($workload);\n  echo \"Результат: $result\\n\";\n\n  # Возвращаем то, что хотим отправить клиенту\n  return $result;\n}\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\nВисновок оброблювача:\n\n```\nЗапуск\nОжидание задания...\nПолучено задание: H:foo.local:106\nЗагружены данные: Hello! (6)\n1/6 завершено\n2/6 завершено\n3/6 завершено\n4/6 завершено\n5/6 завершено\n6/6 завершено\nРезультат: !olleH\n```\n\nВисновок клієнта:\n\n```\nЗапуск\nОтправка задания\nСостояние: 1/6 завершено\nДанные: H\nСостояние: 2/6 завершено\nДанные: e\nСостояние: 3/6 завершено\nДанные: l\nСостояние: 4/6 завершено\nДанные: l\nСостояние: 5/6 завершено\nДанные: o\nСостояние: 6/6 завершено\nДанные: !\nОбработка завершена: !olleH\n```\n\n### Дивіться також\n\n-   [GearmanClient::doHigh()](gearmanclient.dohigh.md) \\- Запускає на виконання завдання із високим пріоритетом\n-   [GearmanClient::doLow()](gearmanclient.dolow.md) \\- Запускає виконання завдання з низьким пріоритетом\n-   [GearmanClient::doBackground()](gearmanclient.dobackground.md) \\- Запускає виконання завдання у фоновому режимі\n-   [GearmanClient::doHighBackground()](gearmanclient.dohighbackground.md) \\- Запускає на виконання із високим пріоритетом завдання у фоновому режимі\n-   [GearmanClient::doLowBackground()](gearmanclient.dolowbackground.md) \\- Запускає на виконання з низьким пріоритетом завдання у фоновому режимі\n","title":"GearmanClient::doNormal","contentType":2,"navigation":[{"gearmanclient.dolowbackground.md":"« GearmanClient::doLowBackground"},{"gearmanclient.dostatus.md":"GearmanClient::doStatus »"},{"index.md":"PHP Manual"},{"class.gearmanclient.md":"GearmanClient"}]}},"__N_SSG":true}