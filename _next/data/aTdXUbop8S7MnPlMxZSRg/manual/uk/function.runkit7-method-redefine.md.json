{"pageProps":{"page":{"slug":"function.runkit7-method-redefine.md","content":"# runkit7\\_method\\_redefine\n\n(PECL runkit7 >= Unknown)\n\nrunkit7\\_method\\_redefine - Динамічно змінює код заданого методу\n\n### Опис\n\n```methodsynopsis\nrunkit7_method_redefine(    string $class_name,    string $method_name,    string $argument_list,    string $code,    int $flags = RUNKIT7_ACC_PUBLIC,    string $doc_comment = null,    string $return_type = ?,    bool $is_strict = ?): bool\n```\n\n```methodsynopsis\nrunkit7_method_redefine(    string $class_name,    string $method_name,    Closure $closure,    int $flags = RUNKIT7_ACC_PUBLIC,    string $doc_comment = null,    string $return_type = ?,    bool $is_strict = ?): bool\n```\n\n### Список параметрів\n\n`class_name`\n\nКлас, у якому необхідно перевизначити спосіб.\n\n`method_name`\n\nІм'я методу, який необхідно перевизначити.\n\n`argument_list`\n\nРозділений комами список аргументів для перевизначеного методу.\n\n`code`\n\nНовий код, який буде виконуватись під час виклику `method_name`\n\n`closure`\n\nЗамикання ([closure](class.closure.md)), Що визначає метод.\n\n`flags`\n\nПеревизначений метод може бути **`RUNKIT7_ACC_PUBLIC`** **`RUNKIT7_ACC_PROTECTED`** або **`RUNKIT7_ACC_PRIVATE`**, і, при необхідності, об'єднаний за допомогою побітового АБО з **`RUNKIT7_ACC_STATIC`**\n\n`doc_comment`\n\nДокументальний коментар методу.\n\n`return_type`\n\nТип значення методу, що повертається.\n\n`is_strict`\n\nВизначає, чи буде метод поводитися так, якби він був оголошений у файлі з `strict_types=1`\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** runkit7\\_method\\_redefine()\\*\\*\\*\\*\n\n```php\n<?php\nclass Example {\n    function foo() {\n        return \"foo!\\n\";\n    }\n}\n\n// создание объекта Example\n$e = new Example();\n\n// вывод Example::foo() (до переопределения)\necho \"До: \" . $e->foo();\n\n// Переопределение метода 'foo'\nrunkit7_method_redefine(\n    'Example',\n    'foo',\n    '',\n    'return \"bar!\\n\";',\n    RUNKIT7_ACC_PUBLIC\n);\n\n// вывод Example::foo() (после переопределения)\necho \"После: \" . $e->foo();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nДо: foo!\nПосле: bar!\n```\n\n### Дивіться також\n\n-   [runkit7\\_method\\_add()](function.runkit7-method-add.md) \\- Динамічно додає новий метод у заданий клас\n-   [runkit7\\_method\\_copy()](function.runkit7-method-copy.md) \\- Копіює метод з одного класу до іншого\n-   [runkit7\\_method\\_remove()](function.runkit7-method-remove.md) \\- динамічно видаляє заданий метод\n-   [runkit7\\_method\\_rename()](function.runkit7-method-rename.md) \\- динамічно змінює ім'я заданого методу\n-   [runkit7\\_function\\_redefine()](function.runkit7-function-redefine.md) \\- замінює визначення функції новою реалізацією\n","title":"runkit7\\_method\\_redefine","contentType":2,"navigation":[{"function.runkit7-method-copy.md":"« runkit7\\_method\\_copy"},{"function.runkit7-method-remove.md":"runkit7\\_method\\_remove »"},{"index.md":"PHP Manual"},{"ref.runkit7.md":"Функції runkit7"}]}},"__N_SSG":true}