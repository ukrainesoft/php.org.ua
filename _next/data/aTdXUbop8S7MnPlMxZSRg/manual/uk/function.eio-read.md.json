{"pageProps":{"page":{"slug":"function.eio-read.md","content":"# eio\\_read\n\n(PECL eio >= 0.0.1dev)\n\neio\\_read — Читає дані з файлу, починаючи із заданого усунення\n\n### Опис\n\n```methodsynopsis\neio_read(    mixed $fd,    int $length,    int $offset,    int $pri,    callable $callback,    mixed $data = NULL): resource\n```\n\n**eio\\_read()** зчитує `length`байт из файла с описателем`fd`, начиная с байта`offset`. Прочитані дані передаються через параметр `result` у функцію `callback`\n\n### Список параметрів\n\n`fd`\n\nПотік, ресурс сокету чи числовий файловий описувач.\n\n`length`\n\nМаксимальне число байт, що зчитується.\n\n`offset`\n\nЗміщення у файлі.\n\n`pri`\n\nПріоритет запитів: **`EIO_PRI_DEFAULT`** **`EIO_PRI_MIN`** **`EIO_PRI_MAX`**, или\\*\\*`null`**. Якщо передано **`null`**, то`pri`устанавливается в**`EIO_PRI_DEFAULT`\\*\\*\n\n`callback`\n\nФункция`callback` викликається після завершення запиту. Вона повинна задовольняти наступний прототип:\n\n```php\nvoid callback(mixed $data, int $result[, resource $req]);\n```\n\n`data`\n\nє даними користувача, переданими в запиті.\n\n`result`\n\nмістить результуюче значення, що залежить від запиту; зазвичай це значення, яке повертається відповідним системним викликом.\n\n`req`\n\nє опціональним запитуваним ресурсом, який може використовуватися з такими функціями як [eio\\_get\\_last\\_error()](function.eio-get-last-error.md)\n\n`data`\n\nДані, які потрібно передати у функцію `callback`\n\n### Значення, що повертаються\n\n**eio\\_read()** передає лічені дані через параметр `result` у функцію `callback`\n\n### Приклади\n\n**Приклад #1 Приклад використання** eio\\_read()\\*\\*\\*\\*\n\n```php\n<?php\n// Открываем временный файл и пишем в него какие-либо данные\n$temp_filename = \"eio-temp-file.tmp\";\n$fp = fopen($temp_filename, \"w\");\nfwrite($fp, \"1234567890\");\nfclose($fp);\n\n/* Вызывается, когда eio_read() завершает работу */\nfunction my_read_cb($data, $result) {\n    global $temp_filename;\n\n // Выводим прочитанные данные\n    var_dump($result);\n\n // закрываем файл\n    eio_close($data);\n    eio_event_loop();\n\n // Удаляем временный файл\n    @unlink($temp_filename);\n}\n\n/* Вызывается, когда eio_open() завершает работу */\nfunction my_file_opened_callback($data, $result) {\n // $result должен содержать файловый описатель\n    if ($result > 0) {\n  // Прочитаем 5 байт, начиная с третьего\n        eio_read($result, 5, 2, EIO_PRI_DEFAULT, \"my_read_cb\", $result);\n        eio_event_loop();\n    } else {\n  // eio_open() завершила работу отказом\n        unlink($data);\n    }\n}\n\n// открываем файл для чтения и записи\neio_open($temp_filename, EIO_O_RDWR, NULL,\n    EIO_PRI_DEFAULT, \"my_file_opened_callback\", $temp_filename);\neio_event_loop();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nstring(5) \"34567\"\n```\n\n### Дивіться також\n\n-   [eio\\_open()](function.eio-open.md) \\- Відкриває файл\n-   [eio\\_write()](function.eio-write.md) \\- Запис у файл\n-   [eio\\_close()](function.eio-close.md) \\- Закрити файл\n-   [eio\\_event\\_loop()](function.eio-event-loop.md) \\- Взаємодіє з libeio, поки всі запити не будуть виконані\n","title":"eio\\_read","contentType":2,"navigation":[{"function.eio-poll.md":"« eio\\_poll"},{"function.eio-readahead.md":"eio\\_readahead »"},{"index.md":"PHP Manual"},{"ref.eio.md":"Eio Функції"}]}},"__N_SSG":true}