{"pageProps":{"page":{"slug":"mongodb-driver-bulkwrite.construct.md","content":"# MongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct\n\n(mongodb >=1.0.0)\n\nMongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct — Створює новий об'єкт BulkWrite\n\n### Опис\n\n```methodsynopsis\npublic MongoDB\\Driver\\BulkWrite::__construct(?array $options = null)\n```\n\nСтворює новий [MongoDB\\\\Driver\\\\BulkWrite](class.mongodb-driver-bulkwrite.md), який є об'єктом, що змінюється, до якого можуть бути додані одна і кілька операцій запису. Операції запису можуть бути виконані за допомогою [MongoDB\\\\Driver\\\\Manager::executeBulkWrite()](mongodb-driver-manager.executebulkwrite.md)\n\n### Список параметрів\n\n`options`(array)\n\n**options**\n\n| Опция | Тип | Опис | Значение по умолчанию |\n| --- | --- | --- | --- |\n| bypassDocumentValidation | bool |  |  |\n| Якщо **`true`**, дозволяє виконувати операції вставки або оновлення, щоб обійти перевірку рівня документа. |  |  |  |\n\nЦей параметр доступний у MongoDB 3.2+ та ігнорується у старіших версіях сервера, які не підтримують перевірку рівня сервера.\n\n**`false`**| | comment |[mixed](language.types.declarations.md#language.types.declarations.mixed)\n\nДовільний коментар, що допомагає відстежити операцію за допомогою профільника бази даних, виводу CurrentOp та журналів.\n\nОпція доступна в MongoDB 4.4+ і призведе до виключення під час виконання, якщо вказана для старої версії сервера.\n\n| | let | array|object |\n\nКарта імен та значень параметрів. Значення мають бути константами або закритими виразами, які посилаються на поля документа. До параметрів можна звертатися як до змінних у контексті агрегованого виразу (наприклад, `$$var`\n\nОпція доступна в MongoDB 5.0+ і призведе до виключення під час виконання, якщо вказана для старої версії сервера.\n\n| | ordered | bool | Відсортовані операції (**`true`**) виконується послідовно на сервері MongoDB, тоді як невідсортовані операції (**`false`**) відправляються на сервері у довільному порядку і можуть виконуватися паралельно. | **`true`**\n\n### Помилки\n\n-   При помилці парсингу аргумент кидає виняток[MongoDB\\\\Driver\\\\Exception\\\\InvalidArgumentException](class.mongodb-driver-exception-invalidargumentexception.md)\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL mongodb 1.14.0 | Додані опції `\"comment\"`и`\"let\"` |\n| PECL mongodb 1.1.0 | Добавлена опция`\"bypassDocumentValidation\"` |\n\n### Приклади\n\n**Приклад #1 Приклад використання** MongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct()\\*\\*\\*\\*\n\n```php\n<?php\n\n$bulk = new MongoDB\\Driver\\BulkWrite(['ordered' => true]);\n$bulk->delete([]);\n$bulk->insert(['_id' => 1, 'x' => 1]);\n$bulk->insert(['_id' => 2, 'x' => 2]);\n$bulk->update(\n    ['x' => 2],\n    ['$set' => ['x' => 1]],\n    ['limit' => 1, 'upsert' => false]\n);\n$bulk->delete(['x' => 1], ['limit' => 1]);\n$bulk->update(\n    ['_id' => 3],\n    ['$set' => ['x' => 3]],\n    ['limit' => 1, 'upsert' => true]\n);\n\n$manager = new MongoDB\\Driver\\Manager('mongodb://localhost:27017');\n$writeConcern = new MongoDB\\Driver\\WriteConcern(1);\n\ntry {\n    $result = $manager->executeBulkWrite('db.collection', $bulk, $writeConcern);\n} catch (MongoDB\\Driver\\Exception\\BulkWriteException $e) {\n    $result = $e->getWriteResult();\n\n    // Проверяем обеспечение гарантии записи\n    if ($writeConcernError = $result->getWriteConcernError()) {\n        printf(\"%s (%d): %s\\n\",\n            $writeConcernError->getMessage(),\n            $writeConcernError->getCode(),\n            var_export($writeConcernError->getInfo(), true)\n        );\n    }\n\n    // Проверяем, если какие-либо операции записи не были выполнены\n    foreach ($result->getWriteErrors() as $writeError) {\n        printf(\"Operation#%d: %s (%d)\\n\",\n            $writeError->getIndex(),\n            $writeError->getMessage(),\n            $writeError->getCode()\n        );\n    }\n} catch (MongoDB\\Driver\\Exception\\Exception $e) {\n    printf(\"Другая ошибка: %s\\n\", $e->getMessage());\n    exit;\n}\n\nprintf(\"Добавлено %d документ(ов)\\n\", $result->getInsertedCount());\nprintf(\"Обновлено  %d документ(ов)\\n\", $result->getModifiedCount());\nprintf(\"Слито %d документ(ов)\\n\", $result->getUpsertedCount());\nprintf(\"Удалено  %d документ(ов)\\n\", $result->getDeletedCount());\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nДобавлено 2 документ(ов)\nОбновлено 1 документ(ов)\nСлито 1 документ(ов)\nУдалено  1 документ(ов)\n```\n\n### Дивіться також\n\n-   [MongoDB\\\\Driver\\\\Manager::executeBulkWrite()](mongodb-driver-manager.executebulkwrite.md) \\- Виконує одну або кілька операцій запису\n-   [MongoDB\\\\Driver\\\\WriteResult](class.mongodb-driver-writeresult.md)\n","title":"MongoDB\\\\Driver\\\\BulkWrite::\\_\\_construct","contentType":2,"navigation":[{"class.mongodb-driver-bulkwrite.md":"« MongoDB\\\\Driver\\\\BulkWrite"},{"mongodb-driver-bulkwrite.count.md":"MongoDB\\\\Driver\\\\BulkWrite::count »"},{"index.md":"PHP Manual"},{"class.mongodb-driver-bulkwrite.md":"MongoDB\\\\Driver\\\\BulkWrite"}]}},"__N_SSG":true}