{"pageProps":{"page":{"slug":"install.unix.nginx.md","content":"## Встановлення Nginx 1.4.x на систему Unix\n\nЦя документація описує процес встановлення та налаштування PHP з PHP-FPM для Nginx 1.4.x HTTP сервера.\n\nДаний посібник має на увазі, що ви зібрали Nginx з вихідних кодів, отже, всі бінарні файли та файли конфігурації розташовуються в `/usr/local/nginx`. Якщо ні, і ви отримали Nginx іншим способом, тоді, будь ласка, зверніться до [» Nginx Wiki](https://www.nginx.com/resources/wiki/), щоб перекласти цей посібник для вашої установки.\n\nЦей посібник охоплює ази налаштування Nginx сервера, для обробки PHP додатків та відображення їх на порту 80. Рекомендується вивчити документацію Nginx і PHP-FPM, якщо ви хочете оптимізувати вашу установку за рамками даної документації.\n\nБудь ласка, зверніть увагу, що в цій документації номери версій були замінені на 'x', щоб ця документація залишалася коректною в майбутньому. Будь ласка, замініть 'x' на необхідний номер версії.\n\n1.  Рекомендується відвідати[» сторінку встановлення](https://www.nginx.com/resources/wiki/start/topics/tutorials/install/)на Nginx Wiki, для інформації про отримання та встановлення Nginx.\n    \n2.  Отримання та розпакування вихідні коди PHP:\n    \n    ```\n    tar zxf php-x.x.x\n    ```\n    \n3.  Налаштування та збирання PHP. У цьому розділі описано налаштування та збирання PHP з вихідних кодів. Запустіть ./configure --help, щоб отримати список доступних опцій. У нашому прикладі ми зробимо прості налаштування з PHP-FPM та підтримкою MySQLi.\n    \n    ```\n    cd ../php-x.x.x\n    ./configure --enable-fpm --with-mysqli\n    make\n    sudo make install\n    ```\n    \n4.  Переміщення файлів налаштування в потрібні директорії\n    \n    ```\n    cp php.ini-development /usr/local/php/php.ini\n    cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf\n    cp sapi/fpm/php-fpm /usr/local/bin\n    ```\n    \n5.  Важливо, що ми забороняємо Nginx від надсилати запити до бекенду PHP-FPM, якщо файл не існує, що допомагає уникнути атаки ін'єкції скрипта.\n    \n    Ми можемо виправити це шляхом встановлення директиви[cgi.fix\\_pathinfo](ini.core.md#ini.cgi.fix-pathinfo)рівною у нашому php.ini файлі.\n    \n    Редагування php.ini:\n    \n    ```\n    vim /usr/local/php/php.ini\n    ```\n    \n    Знайдіть опцію`cgi.fix_pathinfo=`і змініть її так:\n    \n    ```\n    cgi.fix_pathinfo=0\n    ```\n    \n6.  php-fpm.conf повинен бути модифікований, щоб точно визначити, що php-fpm повинен працювати під користувачем www-data та групою www-data до того, як ми запустимо сервіс:\n    \n    ```\n    vim /usr/local/etc/php-fpm.d/www.conf\n    ```\n    \n    Знайдіть та зміните наступне:\n    \n    ```\n    ; Unix user/group of processes\n    ; Примітка: Користувач є обов'язковим. Якщо групу не встановлено,\n    ; то буде використано стандартну групу користувача.\n    user = www-data\n    group = www-data\n    ```\n    \n    Тепер можна запускати сервіс php-fpm:\n    \n    ```\n    /usr/local/bin/php-fpm\n    ```\n    \n    Більше в цьому посібнику ми не будемо стосуватися налаштування php-fpm. Якщо вам необхідно зробити додаткові налаштування - зверніться до документації php-fpm.\n    \n7.  Тепер Nginx має бути налаштований на підтримку виконання PHP:\n    \n    ```\n    vim /usr/local/nginx/conf/nginx.conf\n    ```\n    \n    Змініть блок \"location\", заданий за умовчанням, так, щоб можна було обробляти .php файли:\n    \n    location / { root html; index index.php index.md index.htm; }\n    \n    Наступний крок - переконатися, що файли .php відправляються в бекенд PHP-FPM. Введіть наступне:\n    \n    location ~\\* \\\\.php$ { fastcgi\\_index index.php; fastcgi\\_pass 127.0.0.1:9000; include fastcgi\\_params; fastcgi\\_param SCRIPT\\_FILENAME $document\\_root$fastcgi\\_script\\_name; fastcgi\\_param SCRIPT\\_NAME $fastcgi\\_script\\_name; }\n    \n    Перезапустіть Nginx.\n    \n    ```\n    sudo /usr/local/nginx/sbin/nginx -s stop\n    sudo /usr/local/nginx/sbin/nginx\n    ```\n    \n8.  Створіть тестовий файл\n    \n    ```\n    rm /usr/local/nginx/html/index.md\n    echo \"<?php phpinfo(); ?>\" >> /usr/local/nginx/html/index.php\n    ```\n    \n    Тепер відкрийте у браузері[http://localhost](http://localhost). Відобразиться інформація phpinfo().\n    \n\nДотримуючись вищезгаданих кроків, ви отримаєте робочий Nginx сервер з підтримкою PHP як модуля `FPM` `SAPI`. Звичайно, доступна велика кількість опцій налаштувань для Nginx та PHP. Для більш детальної інформації наберіть **./configure --help** у відповідному дереві вихідних кодів.\n","title":"Встановлення Nginx 1.4.x на систему Unix","contentType":2,"navigation":[{"install.unix.apache2.md":"Apache 2.x на Unix системах"},{"install.unix.lighttpd-14.md":"Установка PHP на Lighttpd 1.4 на Unix-системах"},{"index.md":"PHP Manual"},{"install.unix.md":"Встановлення на Unix-системи"}]}},"__N_SSG":true}