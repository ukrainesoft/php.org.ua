{"pageProps":{"page":{"slug":"class.domtext.md","content":"# Клас DOMText\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nКласс**DOMText**наследуется от[DOMCharacterData](class.domcharacterdata.md) і представляє текстовий вміст [DOMElement](class.domelement.md) або [DOMAttr](class.domattr.md)\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class DOMText\n    \n\n    \n     extends\n      DOMCharacterData\n     {\n\n    /* Свойства */\n    \n     public\n     readonly\n     string\n      $wholeText;\n\n\n    /* Наследуемые свойства */\n    public\n     string\n      $data;\npublic\n     readonly\n     int\n      $length;\npublic\n     readonly\n     ?DOMElement\n      $previousElementSibling;\npublic\n     readonly\n     ?DOMElement\n      $nextElementSibling;\n\n    public\n     readonly\n     string\n      $nodeName;\npublic\n     ?string\n      $nodeValue;\npublic\n     readonly\n     int\n      $nodeType;\npublic\n     readonly\n     ?DOMNode\n      $parentNode;\npublic\n     readonly\n     ?DOMElement\n      $parentElement;\npublic\n     readonly\n     DOMNodeList\n      $childNodes;\npublic\n     readonly\n     ?DOMNode\n      $firstChild;\npublic\n     readonly\n     ?DOMNode\n      $lastChild;\npublic\n     readonly\n     ?DOMNode\n      $previousSibling;\npublic\n     readonly\n     ?DOMNode\n      $nextSibling;\npublic\n     readonly\n     ?DOMNamedNodeMap\n      $attributes;\npublic\n     readonly\n     bool\n      $isConnected;\npublic\n     readonly\n     ?DOMDocument\n      $ownerDocument;\npublic\n     readonly\n     ?string\n      $namespaceURI;\npublic\n     string\n      $prefix;\npublic\n     readonly\n     ?string\n      $localName;\npublic\n     readonly\n     ?string\n      $baseURI;\npublic\n     string\n      $textContent;\n\n\n    /* Методы */\n    \n   public __construct(string $data = \"\")\n\n    public isElementContentWhitespace(): bool\npublic isWhitespaceInElementContent(): bool\npublic splitText(int $offset): DOMText|false\n\n\n    /* Наследуемые методы */\n    public DOMCharacterData::after(DOMNode|string ...$nodes): void\npublic DOMCharacterData::appendData(string $data): true\npublic DOMCharacterData::before(DOMNode|string ...$nodes): void\npublic DOMCharacterData::deleteData(int $offset, int $count): bool\npublic DOMCharacterData::insertData(int $offset, string $data): bool\npublic DOMCharacterData::remove(): void\npublic DOMCharacterData::replaceData(int $offset, int $count, string $data): bool\npublic DOMCharacterData::replaceWith(DOMNode|string ...$nodes): void\npublic DOMCharacterData::substringData(int $offset, int $count): string|false\n\n    public DOMNode::appendChild(DOMNode $node): DOMNode|false\npublic DOMNode::C14N(    bool $exclusive = false,    bool $withComments = false,    ?array $xpath = null,    ?array $nsPrefixes = null): string|false\npublic DOMNode::C14NFile(    string $uri,    bool $exclusive = false,    bool $withComments = false,    ?array $xpath = null,    ?array $nsPrefixes = null): int|false\npublic DOMNode::cloneNode(bool $deep = false): DOMNode|false\npublic DOMNode::contains(DOMNode|DOMNameSpaceNode|null $other): bool\npublic DOMNode::getLineNo(): int\npublic DOMNode::getNodePath(): ?string\npublic DOMNode::getRootNode(array $options = null): DOMNode\npublic DOMNode::hasAttributes(): bool\npublic DOMNode::hasChildNodes(): bool\npublic DOMNode::insertBefore(DOMNode $node, ?DOMNode $child = null): DOMNode|false\npublic DOMNode::isDefaultNamespace(string $namespace): bool\npublic DOMNode::isEqualNode(?DOMNode $otherNode): bool\npublic DOMNode::isSameNode(DOMNode $otherNode): bool\npublic DOMNode::isSupported(string $feature, string $version): bool\npublic DOMNode::lookupNamespaceURI(?string $prefix): ?string\npublic DOMNode::lookupPrefix(string $namespace): ?string\npublic DOMNode::normalize(): void\npublic DOMNode::removeChild(DOMNode $child): DOMNode|false\npublic DOMNode::replaceChild(DOMNode $node, DOMNode $child): DOMNode|false\n\n   }\n```\n\n## Властивості\n\nwholeText\n\nМістить весь текст суміжних текстових вузлів (не розділені іншими елементами, коментарями або інструкціями).\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Нереалізований метод \\*\\*DOMText::replaceWholeText()\\*\\*був видалений. |\n\n## Зміст\n\n-   [DOMText::\\_\\_construct](domtext.construct.md)— Створює об'єкт класу DOMText\n-   [DOMText::isElementContentWhitespace](domtext.iselementcontentwhitespace.md)— Повертає, чи містить текстовий вузол пробіл у вмісті елемента\n-   [DOMText::isWhitespaceInElementContent](domtext.iswhitespaceinelementcontent.md)— Визначає, чи містить текстовий вузол пробіли у вмісті\n-   [DOMText::splitText](domtext.splittext.md)— Поділяє вузол на два, починаючи із заданої позиції\n","title":"Клас DOMText","contentType":2,"navigation":[{"domprocessinginstruction.construct.md":"« DOMProcessingInstruction::\\_\\_construct"},{"domtext.construct.md":"DOMText::\\_\\_construct »"},{"index.md":"PHP Manual"},{"book.dom.md":"DOM"}]}},"__N_SSG":true}