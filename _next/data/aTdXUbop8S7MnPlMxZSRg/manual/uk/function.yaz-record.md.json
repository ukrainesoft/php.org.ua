{"pageProps":{"page":{"slug":"function.yaz-record.md","content":"# yaz\\_record\n\n(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)\n\nyaz\\_record — Повертає запис\n\n### Опис\n\n```methodsynopsis\nyaz_record(resource $id, int $pos, string $type): string\n```\n\nФункция**yaz\\_record()** перевіряє запис у поточному результуючому наборі на позиції, визначеної параметром `pos`\n\n### Список параметрів\n\n`id`\n\nДескриптор з'єднання, що повертається [yaz\\_connect()](function.yaz-connect.md)\n\n`pos`\n\nПозиція запису. Записи в результуючому наборі нумеруються як 1, 2, ... $hits, де $hits - число записів у результуючому наборі, яке повертається функцією [yaz\\_hits()](function.yaz-hits.md)\n\n`type`\n\n`type` визначає форму запису, що повертається.\n\n> **Зауваження** :\n> \n> Тільки додаток несе відповідальність за достовірність того, що записи, що повертаються з сервера Z39.50/SRW у належному форматі. Тип, що задається, тільки визначає перетворення, яке має місце на стороні клієнта (в PHP/YAZ).\n\nКрім перетворення переданого запису в рядок/масив, PHP/YAZ також може конвертувати кодування запису. Особливо це актуально для форматів USMARC/MARC21, які рекомендується перетворювати, оскільки вони зазвичай повертаються в кодуванні MARC-8, яке не розуміють браузери та інші програми. Щоб визначити перетворення, додайте `; charset=`from`,` to, де від поточного кодування запису і to результуюче кодування, яке буде доступне PHP.\n\n`string`\n\nЗапис повертається як рядок для відображення. У цьому режимі всі MARC-записи перетворюються на строкове представлення, оскільки у форматі ISO2709 їх важко прочитати. Записи XML та SUTRS повертаються у їхньому рідному форматі. GRS-1 повертається у (потворному) постстроковому поданні.\n\nДаний формат застосовується для швидкого виведення записів на екран, для налагодження, або якщо коректне відображення неможливо.\n\n`xml`\n\nЗапис повертається як рядок XML, якщо це можливо. У цьому режимі всі MARC-записи перетворюються на формат [» MARCXML](http://www.loc.gov/standards/marcxml/). Записи XML та SUTRS повертаються у їхньому рідному форматі. GRS-1 не підтримується.\n\nЦей формат схожий `string`, за винятком того, що MARC-записи перетворюються на MARCXML.\n\nЦей формат застосовується, якщо запис буде передано парсеру XML або XSLT-процесору.\n\n`raw`\n\nЗапис повертається у вигляді рядка у вихідній формі. Цей тип застосовується для MARC, XML і SUTRS, але не працює для GRS-1.\n\nMARC-запис повертається у форматі ISO2709, XML та SUTRS повертаються як рядок.\n\n`syntax`\n\nСинтаксис запису, що повертається, наприклад `USmarc` `GRS-1` `XML`, та ін.\n\n`database`\n\nІм'я бази даних, зіставлене із записом.\n\n`array`\n\nЗапис повертається як масиву, зіставленого зі структурою GRS-1. Цей тип застосовується для MARC і GRS-1. XML, SUTRS не підтримуються і якщо вихідний запис у форматі XML або SUTRS повертається порожній рядок.\n\nМасив, що повертається, складається зі списку, який відповідає кожному внутрішньому вузлу або кінцевому елементу (leaf) формату GRS-1. Кожен список складається з підписку, першим елементом якого буде *шлях*и*дата*(если она доступна).\n\nШлях, представлений у вигляді рядка, містить список кожної компоненти дерева (для структури запису GRS-1) від кореневого до кінцевого елемента. Кожна компонента представлена ​​парою тип поля та значення, у формі (`тип` `значення`\n\nПочаткове поле зазвичай зіставлено типу 3. MARC-записи також можуть бути повернені як масиву (вони конвертуються в GRS-1).\n\n### Значення, що повертаються\n\nПовертає запис на позиції `pos` або порожній рядок, якщо на заданій позиції записів немає.\n\nЯкщо на заданій позиції в базі даних немає записів, буде повернено порожній рядок.\n\n### Приклади\n\n**Приклад #1 Масив для запису GRS-1**\n\nВізьмемо запис GRS-1, виду:\n\n(4,52)Robert M. Pirsig (4,70) (4,90) (2,7)Transworld Publishers, ltd.\n\nЦей запис містить два вузли на верхньому (кореневому) рівні. Перший елемент кореневого рівня (4,52) \\[тип 4, значення 52\\], і містить дані `Robert M. Pirsig`. Другий елемент кореневого рівня (4,70) містить піддерево з єдиним елементом (4,90). Елемент (4,90) у свою чергу містить піддерево (2,7) з даними `Transworld Publishers, ltd.`\n\nЯкщо цей запис знаходиться на позиції $p, тоді скрипт\n\n```php\n<?php\n\n$ar = yaz_record($id, $p, \"array\");\nprint_r($ar);\n\n?>\n```\n\nвиведе:\n\n```\nArray\n(\n    [0] => Array\n        (\n            [0] => (4,52)\n            [1] => Robert M. Pirsig\n        )\n    [1] => Array\n        (\n            [0] => (4,70)\n        )\n    [2] => Array\n        (\n            [0] => (4,70)(4,90)\n        )\n    [3] => Array\n        (\n            [0] => (4,70)(4,90)(2,7)\n            [1] => Transworld Publishers, ltd.\n        )\n)\n```\n\n**Приклад #2 Приклад роботи з MARCXML**\n\nСкрипт поверне запис MARC21/USMARC у форматі MARCXML. Вихідний запис буде повернено в кодуванні marc-8 (невідомий для більшості XML-парсерів), тому він перетворюється на UTF-8.\n\n```php\n<?php\n$rec = yaz_record($id, $p, \"xml; charset=marc-8,utf-8\");\n?>\n```\n\nЗапис `$rec` може бути оброблена процесором Sablotron XSLT так:\n\n```php\n<?php\n\n$xslfile = 'display.xsl';\n$processor = xslt_create();\n$parms = array('/_xml' => $rec);\n$res = xslt_process($processor, 'arg:/_xml', $xslfile, NULL, $parms);\nxslt_free($processor);\n$res = preg_replace(\"'</?html[^>]*>'\", '', $res);\necho $res;\n\n?>\n```\n","title":"yaz\\_record","contentType":2,"navigation":[{"function.yaz-range.md":"« yaz\\_range"},{"function.yaz-scan-result.md":"yaz\\_scan\\_result »"},{"index.md":"PHP Manual"},{"ref.yaz.md":"Функції YAZ"}]}},"__N_SSG":true}