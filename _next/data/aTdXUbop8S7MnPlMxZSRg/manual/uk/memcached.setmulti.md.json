{"pageProps":{"page":{"slug":"memcached.setmulti.md","content":"# Memcached::setMulti\n\n(PECL memcached >= 0.1.0)\n\nMemcached::setMulti — Зберігає кілька записів\n\n### Опис\n\n```methodsynopsis\npublic Memcached::setMulti(array $items, int $expiration = 0): bool\n```\n\n\\*\\*Memcached::setMulti()\\*\\*похож на метод[Memcached::set()](memcached.set.md), але замість однієї пари ключ/значення, працює з кількома записами, переданими в `items` у вигляді масиву. Параметр `expiration`, що встановлює термін зберігання запису, застосовується до всіх записів.\n\n### Список параметрів\n\n`items`\n\nЗберігається масив пар ключів/значень.\n\n`expiration`\n\nЧас зберігання об'єкта за промовчанням дорівнює 0. Для більш детальної інформації дивіться [Час зберігання об'єкту](memcached.expiration.md)\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки. Используйте при необходимости[Memcached::getResultCode()](memcached.getresultcode.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** Memcached::setMulti()\\*\\*\\*\\*\n\n```php\n<?php\n$m = new Memcached();\n$m->addServer('localhost', 11211);\n\n$items = array(\n    'key1' => 'value1',\n    'key2' => 'value2',\n    'key3' => 'value3'\n);\n$m->setMulti($items, time() + 300);\n?>\n```\n\n### Дивіться також\n\n-   [Memcached::setMultiByKey()](memcached.setmultibykey.md) \\- Зберігає кілька записів на вказаному сервері\n-   [Memcached::set()](memcached.set.md) \\- Зберігає запис\n","title":"Memcached::setMulti","contentType":2,"navigation":[{"memcached.setbykey.md":"« Memcached::setByKey"},{"memcached.setmultibykey.md":"Memcached::setMultiByKey »"},{"index.md":"PHP Manual"},{"class.memcached.md":"Memcached"}]}},"__N_SSG":true}