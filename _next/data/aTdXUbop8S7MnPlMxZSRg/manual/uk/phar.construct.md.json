{"pageProps":{"page":{"slug":"phar.construct.md","content":"# Phar::\\_\\_construct\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL phar >= 1.0.0)\n\nPhar::\\_\\_construct — Створює об'єкт Phar-архіву\n\n### Опис\n\npublic **Phar::\\_\\_construct**(string`$filename`, int`$flags`\\= FilesystemIterator::SKIP\\_DOTS | FilesystemIterator::UNIX\\_PATHS, ?string`$alias` **`null`**) .\n\n### Список параметрів\n\n`filename`\n\nШлях до вже існуючого Phar-архіву або до архіву, який має бути створений. Розширення імені файлу має містити .phar.\n\n`flags`\n\nПрапори, які мають бути передані до батьківського класу [RecursiveDirectoryIterator](class.recursivedirectoryiterator.md)\n\n`alias`\n\nПсевдонім, за допомогою якого повинні здійснюватися посилання на цей Phar-архів у викликах, пов'язаних із функціоналом потоків.\n\n### Помилки\n\nВикидає виняток [BadMethodCallException](class.badmethodcallexception.md), якщо був викликаний двічі, та виняток [UnexpectedValueException](class.unexpectedvalueexception.md)якщо phar-архів не може бути відкритий.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Phar::\\_\\_construct()\\*\\*\\*\\*\n\n```php\n<?php\ntry {\n    $p = new Phar('/путь/к/my.phar', FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::KEY_AS_FILENAME,\n                  'my.phar');\n} catch (UnexpectedValueException $e) {\n    die('Не удалось открыть my.phar');\n} catch (BadMethodCallException $e) {\n    echo 'Технически это не может произойти';\n}\n// это теперь работает\necho file_get_contents('phar://my.phar/example.txt');\n// и работает так же, как если бы мы ввели\necho file_get_contents('phar:///путь/к/my.phar/example.txt');\n?>\n```\n","title":"Phar::\\_\\_construct","contentType":2,"navigation":[{"phar.compressfiles.md":"« Phar::compressFiles"},{"phar.converttodata.md":"Phar::convertToData »"},{"index.md":"PHP Manual"},{"class.phar.md":"Phar"}]}},"__N_SSG":true}