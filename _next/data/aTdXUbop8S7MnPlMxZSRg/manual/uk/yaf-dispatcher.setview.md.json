{"pageProps":{"page":{"slug":"yaf-dispatcher.setview.md","content":"# Yaf\\_Dispatcher::setView\n\n(Yaf >=1.0.0)\n\nYaf\\_Dispatcher::setView — Встановлює механізм відображення.\n\n### Опис\n\n```methodsynopsis\npublic Yaf_Dispatcher::setView(Yaf_View_Interface $view): Yaf_Dispatcher\n```\n\nМетод надає рішення, якщо ви хочете використовувати власний механізм відображення замість [Yaf\\_View\\_Simple](class.yaf-view-simple.md)\n\n### Список параметрів\n\n`view`\n\nЕкземпляр [Yaf\\_View\\_Interface](class.yaf-view-interface.md)\n\n### Значення, що повертаються\n\n### Приклади\n\n**Приклад #1 Приклад використання** движка користувача відображення()\\*\\*\\*\\*\n\n```php\n<?php\nrequire \"/path/to/smarty/Smarty.class.php\";\n\nclass Smarty_Adapter implements Yaf_View_Interface\n{\n    /**\n     * Smarty object\n     * @var Smarty\n     */\n    public $_smarty;\n\n    /**\n     * Конструктор\n     *\n     * @param string $tmplPath\n     * @param array $extraParams\n     * @return void\n     */\n    public function __construct($tmplPath = null, $extraParams = array()) {\n        $this->_smarty = new Smarty;\n\n        if (null !== $tmplPath) {\n            $this->setScriptPath($tmplPath);\n        }\n\n        foreach ($extraParams as $key => $value) {\n            $this->_smarty->$key = $value;\n        }\n    }\n\n    /**\n     * Задайте путь к шаблонам\n     *\n     * @param string $path Каталог, который нужно задать в качестве пути.\n     * @return void\n     */\n    public function setScriptPath($path)\n    {\n        if (is_readable($path)) {\n            $this->_smarty->template_dir = $path;\n            return;\n        }\n\n        throw new Exception('Invalid path provided');\n    }\n\n    /**\n     * Назначьте переменную шаблону\n     *\n     * @param string $key Имя переменной\n     * @param mixed $val Значение переменной.\n     * @return void\n     */\n    public function __set($key, $val)\n    {\n        $this->_smarty->assign($key, $val);\n    }\n\n    /**\n     * Разрешает тестирование с empty() и isset()\n     *\n     * @param string $key\n     * @return boolean\n     */\n    public function __isset($key)\n    {\n        return (null !== $this->_smarty->get_template_vars($key));\n    }\n\n    /**\n     * Разрешает unset() для свойств объекта\n     *\n     * @param string $key\n     * @return void\n     */\n    public function __unset($key)\n    {\n        $this->_smarty->clear_assign($key);\n    }\n\n    /**\n     * Назначьте переменные шаблону\n     *\n     * Позволяет установить конкретный ключ для указанного значения\n     * ИЛИ передать массив пар ключ => значение для массовой установки.\n     *\n     * @see __set()\n     * @param string|array $spec Стратегия присваивания (ключ или массив пар ключ => значение)\n     * @param mixed $value (Optional) При присвоении именованной переменной используйте её как значение.\n     * @return void\n     */\n    public function assign($spec, $value = null) {\n        if (is_array($spec)) {\n            $this->_smarty->assign($spec);\n            return;\n        }\n\n        $this->_smarty->assign($spec, $value);\n    }\n\n    /**\n     * Очистить все присвоенные переменные\n     *\n     * Очищает все переменные, назначенные Yaf_View, либо через\n     * {@link assign()} или перезагрузку свойства\n     * ({@link __get()}/{@link __set()}).\n     *\n     * @return void\n     */\n    public function clearVars() {\n        $this->_smarty->clear_all_assign();\n    }\n\n    /**\n     * Обрабатывает шаблон и возвращает результат.\n     *\n     * @param string $name Шаблон для обработки.\n     * @return string Вывод.\n     */\n    public function render($name, $value = NULL) {\n        return $this->_smarty->fetch($name);\n    }\n\n    public function display($name, $value = NULL) {\n        echo $this->_smarty->fetch($name);\n    }\n\n}\n?>\n```\n\n**Приклад #2 Приклад використання** Yaf\\_Dispatcher::setView()\\*\\*\\*\\*\n\n```php\n<?php\nclass Bootstrap extends Yaf_Bootstrap_Abstract {\n\n    /**\n     * конфигурация для smarty в конфигурации:\n     *\n     * smarty.left_delimiter   = \"{{\"\n     * smarty.right_delimiter  = \"}}\"\n     * smarty.template_dir     = APPLICATION_PATH \"/views/scripts/\"\n     * smarty.compile_dir      = APPLICATION_PATH \"/views/templates_c/\"\n     * smarty.cache_dir        = APPLICATION_PATH \"/views/templates_d/\"\n     *\n     */\n    public function _initConfig() {\n        $config = Yaf_Application::app()->getConfig();\n        Yaf_Registry::set(\"config\", $config);\n    }\n\n    public function _initLocalName() {\n        /** мы помещаем класс Smarty_Adapter в каталог локальной библиотеки */\n        Yaf_Loader::getInstance()->registerLocalNamespace('Smarty');\n    }\n\n    public function _initSmarty(Yaf_Dispatcher $dispatcher) {\n        $smarty = new Smarty_Adapter(null, Yaf_Registry::get(\"config\")->get(\"smarty\"));\n        $dispatcher->setView($smarty);\n        /* теперь механизм отображения Smarty стал механизмом отображения по умолчанию для Yaf */\n    }\n}\n?>\n```\n\n### Дивіться також\n\n-   [Yaf\\_View\\_Interface](class.yaf-view-interface.md)\n-   [Yaf\\_View\\_Simple](class.yaf-view-simple.md)\n","title":"Yaf\\_Dispatcher::setView","contentType":2,"navigation":[{"yaf-dispatcher.setrequest.md":"« Yaf\\_Dispatcher::setRequest"},{"yaf-dispatcher.throwexception.md":"Yaf\\_Dispatcher::throwException »"},{"index.md":"PHP Manual"},{"class.yaf-dispatcher.md":"Yaf\\_Dispatcher"}]}},"__N_SSG":true}