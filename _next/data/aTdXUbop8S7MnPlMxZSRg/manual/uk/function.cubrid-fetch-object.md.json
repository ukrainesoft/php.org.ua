{"pageProps":{"page":{"slug":"function.cubrid-fetch-object.md","content":"# cubrid\\_fetch\\_object\n\n(PECL CUBRID >= 8.3.0)\n\ncubrid\\_fetch\\_object — Витягти наступний рядок як об'єкт\n\n### Опис\n\n```methodsynopsis\ncubrid_fetch_object(    resource $result,    string $class_name = ?,    array $params = ?,    int $type = ?): object\n```\n\nФункція повертає об'єкт із властивостями, імена яких дорівнюють іменам стовпців результуючого набору, а значення відповідно значенням.\n\n### Список параметрів\n\n`result`\n\n`Result` отриманий з [cubrid\\_execute()](function.cubrid-execute.md)\n\n`class_name`\n\nНазва класу, який буде використаний для створення об'єкта. Якщо не задано, то буде використано [stdClass](class.stdclass.md) (stdClass - базовий, порожній клас PHP, який використовується при перетворенні інших типів в об'єкти).\n\n`params`\n\nНеобов'язковий масив параметрів передачі в конструктор `class_name`\n\n`type`\n\nМоже містити лише CUBRID\\_LOB. Використовується під час роботи з об'єктами типу LOB.\n\n### Значення, що повертаються\n\nОб'єкт у разі успішного виконання.\n\n\\*\\*`false`\\*\\*якщо рядків більше немає; \\*\\*`null`\\*\\*коли процес завершується з помилкою.\n\n### Приклади\n\n**Приклад #1 Приклад використання** cubrid\\_fetch\\_object()\\*\\*\\*\\*\n\n```php\n<?php\n$conn = cubrid_connect(\"localhost\", 33000, \"demodb\");\n$res = cubrid_execute($conn, \"SELECT * FROM code\");\n\nvar_dump(cubrid_fetch_object($res));\n\n// В случае работы с LOB используйте cubrid_fetch_object($res, CUBRID_LOB)\n\nclass demodb_code {\n    public $s_name = null;\n    public $f_name = null;\n\n    public function toString() {\n        var_dump($this);\n    }\n}\n\nvar_dump(cubrid_fetch_object($res, \"demodb_code\"));\n\n// В случае работы с LOB используйте cubrid_fetch_object($res, \"demodb_code\", CUBRID_LOB)\n\nclass demodb_code_construct extends demodb_code {\n    public function __construct($s, $f) {\n        $this->s_name = $s;\n        $this->f_name = $f;\n    }\n}\n\nvar_dump(cubrid_fetch_object($res, 'demodb_code_construct', array('s_name', 'f_name')));\n\n// В случае работы с LOB используйте cubrid_fetch_object($res, 'demodb_code_construct', array('s_name', 'f_name'), CUBRID_LOB)\n\n\nvar_dump(cubrid_fetch_object($res));\n\ncubrid_close_request($res);\ncubrid_disconnect($conn);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nobject(stdClass)#1 (2) {\n  [\"s_name\"]=>\n  string(1) \"X\"\n  [\"f_name\"]=>\n  string(5) \"Mixed\"\n}\nobject(demodb_code)#1 (2) {\n  [\"s_name\"]=>\n  string(1) \"W\"\n  [\"f_name\"]=>\n  string(5) \"Woman\"\n}\nobject(demodb_code_construct)#1 (2) {\n  [\"s_name\"]=>\n  string(6) \"s_name\"\n  [\"f_name\"]=>\n  string(6) \"f_name\"\n}\nobject(stdClass)#1 (2) {\n  [\"s_name\"]=>\n  string(1) \"B\"\n  [\"f_name\"]=>\n  string(6) \"Bronze\"\n}\n```\n\n### Дивіться також\n\n-   [cubrid\\_execute()](function.cubrid-execute.md) \\- Виконує підготовлений SQL-оператор\n-   [cubrid\\_fetch()](function.cubrid-fetch.md) \\- Вибирає наступний рядок із набору результатів\n-   [cubrid\\_fetch\\_array()](function.cubrid-fetch-array.md) \\- Вилучення рядка з результуючого набору у вигляді асоціативного масиву, індексованого масиву або обох відразу\n-   [cubrid\\_fetch\\_assoc()](function.cubrid-fetch-assoc.md) \\- Витягти рядок із результуючого набору у вигляді асоціативного масиву\n-   [cubrid\\_fetch\\_row()](function.cubrid-fetch-row.md) \\- Витягти рядок із результуючого набору у вигляді індексованого масиву\n","title":"cubrid\\_fetch\\_object","contentType":2,"navigation":[{"function.cubrid-fetch-lengths.md":"« cubrid\\_fetch\\_lengths"},{"function.cubrid-fetch-row.md":"cubrid\\_fetch\\_row »"},{"index.md":"PHP Manual"},{"cubridmysql.cubrid.md":"Функції сумісності CUBRID MySQL"}]}},"__N_SSG":true}