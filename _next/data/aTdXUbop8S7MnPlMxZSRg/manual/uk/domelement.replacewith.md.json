{"pageProps":{"page":{"slug":"domelement.replacewith.md","content":"# DOMElement::replaceWith\n\n(PHP 8)\n\nDOMElement::replaceWith — Замінює елемент новими вузлами\n\n### Опис\n\n```methodsynopsis\npublic DOMElement::replaceWith(DOMNode|string ...$nodes): void\n```\n\nЗамінює елемент новими вузлами `nodes`\n\n### Список параметрів\n\n`nodes`\n\nВузли для заміни. Рядки автоматично перетворюються на текстові вузли.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Помилки\n\n**`DOM_HIERARCHY_REQUEST_ERR`**\n\nВиникає, якщо тип одного з переданих у параметрі `nodes` елементів не допускається в типі батьківського вузла, або якщо вузол, що додається, є одним з предків цього вузла або самим цим вузлом.\n\n**`DOM_WRONG_DOCUMENT_ERR`**\n\nВиникає, якщо один із переданих у параметрі `nodes` елементів було створено з документа, відмінного від цього, у якому було створено цей вузол.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Виклик методу на вузлі без батька тепер заборонено, щоб привести поведінку у відповідність до специфікації DOM. Раніше це викидало виняток [DOMException](class.domexception.md) з кодом **`DOM_HIERARCHY_REQUEST_ERR`** |\n\n### Приклади\n\n**Приклад #1 Приклад использования метода**DOMElement::replaceWith()\\*\\*\\*\\*\n\nЗаміна елемента на нові вузли.\n\n```php\n<?php\n$doc = new DOMDocument;\n$doc->loadXML(\"<container><hello/></container>\");\n$cdata = $doc->documentElement->firstChild;\n\n$cdata->replaceWith(\"beautiful\", $doc->createElement(\"world\"));\n\necho $doc->saveXML();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<?xml version=\"1.0\"?>\n<container>beautiful<world/></container>\n```\n\n### Дивіться також\n\n-   [DOMChildNode::replaceWith()](domchildnode.replacewith.md) \\- Замінює вузол на нові вузли\n-   [DOMElement::replaceChildren()](domelement.replacechildren.md) \\- Замінює дочірні елементи на елементі\n-   [DOMElement::after()](domelement.after.md) \\- Додає вузли після елемента\n-   [DOMElement::before()](domelement.before.md) \\- Додає вузли перед елементом\n-   [DOMElement::remove()](domelement.remove.md) \\- Видаляє елемент\n","title":"DOMElement::replaceWith","contentType":2,"navigation":[{"domelement.replacechildren.md":"« DOMElement::replaceChildren"},{"domelement.setattribute.md":"DOMElement::setAttribute »"},{"index.md":"PHP Manual"},{"class.domelement.md":"DOMElement"}]}},"__N_SSG":true}