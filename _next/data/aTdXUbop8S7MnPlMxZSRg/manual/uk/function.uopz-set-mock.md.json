{"pageProps":{"page":{"slug":"function.uopz-set-mock.md","content":"# uopz\\_set\\_mock\n\n(PECL uopz 5, PECL uopz 6, PECL uopz 7)\n\nuopz\\_set\\_mock — Використовувати імітатор замість класу для нових об'єктів\n\n### Опис\n\n```methodsynopsis\nuopz_set_mock(string $class, mixed $mock): void\n```\n\nЯкщо `mock` - це рядок, що містить ім'я класу, тоді він буде створений замість `class`. . `mock` також може бути об'єктом.\n\n> **Зауваження** :\n> \n> Тільки динамічний доступ до властивостей та методів буде використовувати об'єкт `mock`. Статичний доступ використовуватиме оригінальний `class`Смотрите[приклад](function.uopz-set-mock.md#uopz_set_mock.example.static) нижче.\n\n### Список параметрів\n\n`class`\n\nІм'я класу, який буде імітовано.\n\n`mock`\n\nІмітатор у вигляді рядка, що містить ім'я класу, що використовується, або об'єкт. Якщо передано рядок, він має містити абсолютне ім'я класу. У цьому випадку рекомендується використовувати магічну константу `::class`\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| uopz 6.0.0 | Імітування статичних функцій не підтримуються цієї функцією. Замість цього слід використовувати [uopz\\_redefine()](function.uopz-redefine.md) і [uopz\\_set\\_return()](function.uopz-set-return.md), или[Componere](book.componere.md) |\n\n### Приклади\n\n**Приклад #1 Приклад використання** uopz\\_set\\_mock()\\*\\*\\*\\*\n\n```php\n<?php\nclass A {\n    public function who() {\n        echo \"A\";\n    }\n}\n\nclass mockA {\n    public function who() {\n        echo \"mockA\";\n    }\n}\n\nuopz_set_mock(A::class, mockA::class);\n(new A)->who();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nmockA\n```\n\n**Приклад #2 Приклад використання** uopz\\_set\\_mock()\\*\\*\\*\\*\n\n```php\n<?php\nclass A {\n    public function who() {\n        echo \"A\";\n    }\n}\n\nuopz_set_mock(A::class, new class {\n                            public function who() {\n                                echo \"mockA\";\n                            }\n                        });\n(new A)->who();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nmockA\n```\n\n**Приклад #3**uopz\\_set\\_mock()\\*\\* та статичні члени класу\\*\\*\n\nПочинаючи з uopz 6.0.0, імітація статичних членів класу не підтримується.\n\n```php\n<?php\nclass A {\n    public static function who() {\n        echo \"A\";\n    }\n}\n\nuopz_set_mock(A::class, new class {\n                            const CON = 'mockA';\n                            public static function who() {\n                                echo \"mockA\";\n                            }\n                        });\necho A::CON, PHP_EOL;\nA::who();\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nA\nA\n```\n\nВисновок прикладу uopz 5:\n\n```\nmockA\nmockA\n```\n\n### Дивіться також\n\n-   [uopz\\_get\\_mock()](function.uopz-get-mock.md) \\- отримати поточний імітатор (mock) для класу\n-   [uopz\\_unset\\_mock()](function.uopz-unset-mock.md) \\- Видалити раніше встановлений імітатор\n","title":"uopz\\_set\\_mock","contentType":2,"navigation":[{"function.uopz-set-hook.md":"« uopz\\_set\\_hook"},{"function.uopz-set-property.md":"uopz\\_set\\_property »"},{"index.md":"PHP Manual"},{"ref.uopz.md":"Функції Uopz"}]}},"__N_SSG":true}