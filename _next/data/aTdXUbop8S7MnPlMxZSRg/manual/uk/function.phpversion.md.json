{"pageProps":{"page":{"slug":"function.phpversion.md","content":"# phpversion\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nphpversion — Отримує поточну версію PHP\n\n### Опис\n\n```methodsynopsis\nphpversion(?string $extension = null): string|false\n```\n\nПовертає рядок з номером версії PHP-інтерпретатора або модуля.\n\n### Список параметрів\n\n`extension`\n\nНеобов'язкове ім'я модуля.\n\n### Значення, що повертаються\n\nПовертає поточну версію PHP у вигляді рядка (string). Якщо у параметрі `extension`указано строковое значение (string),**phpversion()** поверне версію цього модуля або **`false`**, якщо немає інформації про версію або модуль не ввімкнено.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `extension` тепер допускає значення null. |\n\n### Приклади\n\n**Приклад #1 Приклад використання** phpversion()\\*\\*\\*\\*\n\n```php\n<?php\n// Выводит строку типа 'Текущая версия PHP: 4.1.1'\necho 'Текущая версия PHP: ' . phpversion();\n\n// Выводит строку типа '2.0' или ничего, если модуль не включён\necho phpversion('tidy');\n?>\n```\n\n**Приклад #2 Приклад використання** `PHP_VERSION_ID`\\*\\*\\*\\*\n\n```php\n<?php\n// PHP_VERSION_ID доступна в версиях PHP 5.2.7 и выше. Если\n// наша версия ниже, можно её сэмулировать\nif (!defined('PHP_VERSION_ID')) {\n    $version = explode('.', PHP_VERSION);\n\n    define('PHP_VERSION_ID', ($version[0] * 10000 + $version[1] * 100 + $version[2]));\n}\n\n// PHP_VERSION_ID определена как число. Чем больше число, тем новее\n// PHP. Эта константа задаётся по той же схеме, что приведена выше:\n//\n// $version_id = $major_version * 10000 + $minor_version * 100 + $release_version;\n//\n// Теперь с PHP_VERSION_ID можно проверять, какая функциональность есть в\n// текущей версии PHP. Не обязательно пользоваться version_compare()\n// каждый раз, когда требуется проверить, поддерживает ли PHP нужную\n// нам функцию.\n//\n// НаПриклад, мы можем задать значения констант PHP_VERSION_*,\n// которые недоступны в версиях ранее 5.2.7\n\nif (PHP_VERSION_ID < 50207) {\n    define('PHP_MAJOR_VERSION',   $version[0]);\n    define('PHP_MINOR_VERSION',   $version[1]);\n    define('PHP_RELEASE_VERSION', $version[2]);\n\n    // и так далее ...\n}\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Ця інформація також доступна через певну константу **`PHP_VERSION`**. Більш детальну інформацію можна отримати за допомогою констант **`PHP_VERSION_*`**\n\n> **Зауваження** :\n> \n> Деякі модулі можуть визначати власний номер версії. Однак більшість модулів, що входять до комплекту поставки, як номер версії використовують версію PHP.\n\n### Дивіться також\n\n-   [Константи PHP\\_VERSION](reserved.constants.md#reserved.constants.core)\n-   [version\\_compare()](function.version-compare.md) \\- Порівнює два «стандартизовані» рядки з номером версії PHP\n-   [phpinfo()](function.phpinfo.md) \\- Виводить інформацію про поточну конфігурацію PHP\n-   [phpcredits()](function.phpcredits.md) \\- Виводить список розробників PHP\n-   [zend\\_version()](function.zend-version.md) \\- Отримує версію двигуна Zend\n","title":"phpversion","contentType":2,"navigation":[{"function.phpinfo.md":"« phpinfo"},{"function.putenv.md":"putenv »"},{"index.md":"PHP Manual"},{"ref.info.md":"Опції PHP/інформаційні функції"}]}},"__N_SSG":true}