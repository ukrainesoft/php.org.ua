{"pageProps":{"page":{"slug":"control-structures.switch.md","content":"## switch\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nОператор`switch` схожий на низку операторів IF з однаковою умовою. У багатьох випадках вам може знадобитися порівнювати ту саму змінну (або вираз) з безліччю різних значень і виконувати різні ділянки коду в залежності від того, яке значення набуває ця змінна (або вираз). Це саме той випадок, для якого зручний оператор `switch`\n\n> **Зауваження**: Зверніть увагу, що на відміну від деяких інших мов, оператор [continue](control-structures.continue.md) застосовується у конструкціях `switch` і діє подібно до оператора `break`. Якщо у вас конструкція `switch` знаходиться всередині циклу, і вам необхідно перейти до наступної ітерації циклу, використовуйте `continue 2`\n\n> **Зауваження** :\n> \n> Зауважте, що конструкція switch/case використовує [не суворе порівняння (==)](types.comparisons.md#types.comparisions-loose)\n\nУ наступному прикладі кожен блок коду еквівалентний. В одному використовується серія операторів `if`и`elseif`, а в іншому - оператор `switch`. У кожному випадку результат той самий.\n\n**Приклад #1 Оператор `switch`**\n\n```php\n<?php\n// Оператор switch:\n\nswitch ($i) {\n    case 0:\n        echo \"i равно 0\";\n        break;\n    case 1:\n        echo \"i равно 1\";\n        break;\n    case 2:\n        echo \"i равно 2\";\n        break;\n}\n\n// Эквивалентно:\n\nif ($i == 0) {\n    echo \"i равно 0\";\n} elseif ($i == 1) {\n    echo \"i равно 1\";\n} elseif ($i == 2) {\n    echo \"i равно 2\";\n}\n?>\n```\n\n**Приклад #2 Оператор `switch` допускає порівняння з типом string**\n\n```php\n<?php\nswitch ($i) {\n    case \"яблоко\":\n        echo \"i это яблоко\";\n        break;\n    case \"шоколадка\":\n        echo \"i это шоколадка\";\n        break;\n    case \"пирог\":\n        echo \"i это пирог\";\n        break;\n}\n?>\n```\n\nВажливо зрозуміти, як оператор `switch` виконується, щоб уникнути помилок. Оператор `switch` виконує рядок за рядком (насправді вираз за виразом). Спочатку ніякий код не виконується. Тільки у разі знаходження оператора `case`значення якого збігається зі значенням виразу в операторі `switch`, PHP починає виконувати оператори. PHP продовжує виконувати оператори до кінця блоку `switch` або доти, доки не зустріне оператор `break`. Якщо ви не напишете оператор `break` наприкінці секції case, PHP продовжуватиме виконувати команди наступної секції case. Наприклад:\n\n```php\n<?php\nswitch ($i) {\n    case 0:\n        echo \"i равно 0\";\n    case 1:\n        echo \"i равно 1\";\n    case 2:\n        echo \"i равно 2\";\n}\n?>\n```\n\nУ цьому прикладі, якщо $i дорівнює 0, PHP виконає всі оператори echo! Якщо $i дорівнює 1, PHP виконає два останні оператори echo. Ви отримаєте очікувану поведінку оператора ('i дорівнює 2' буде відображено) тільки, якщо $i дорівнюватиме 2. Таким чином, важливо не забувати про операторів `break` (навіть якщо ви, можливо, хочете уникнути його використання за призначенням за певних обставин).\n\nВ операторі `switch` вираз обчислюється один раз і цей результат порівнюється з кожним оператором `case`. У виразі `elseif`, вираз обчислюється знову. Якщо ваша умова складніша, ніж просте порівняння та/або знаходиться в циклі, конструкція `switch` може працювати швидше.\n\nСписок операторів для виконання у секції case також може бути порожнім, що просто передає керування списку операторів у наступній секції case.\n\n```php\n<?php\nswitch ($i) {\n    case 0:\n    case 1:\n    case 2:\n        echo \"i меньше чем 3, но неотрицательный\";\n        break;\n    case 3:\n        echo \"i равно 3\";\n}\n?>\n```\n\nСпеціальний вид конструкції case - `default`. Сюди керування потрапляє тоді, коли не спрацював жоден з інших операторів case. Наприклад:\n\n```php\n<?php\nswitch ($i) {\n    case 0:\n        echo \"i равно 0\";\n        break;\n    case 1:\n        echo \"i равно 1\";\n        break;\n    case 2:\n        echo \"i равно 2\";\n        break;\n    default:\n       echo \"i не равно 0, 1 или 2\";\n}\n?>\n```\n\n> **Зауваження**: Декілька вказівок default викликають помилку **`E_COMPILE_ERROR`**\n\n> **Зауваження**: Формально конструкція `default` може бути перерахована будь-де. Вона використовуватиметься лише в тому випадку, якщо жоден інший варіант не підходить. Однак, за згодою, найкраще помістити її в кінець, як останню конструкцію.\n\nЯкщо жодна конструкція `case` не збігається і немає конструкції `default`, то код не буде виконано, якби жодне твердження `if` не було справжнім.\n\nЗначення case може бути задано у вигляді виразу. Однак цей вираз буде оцінений сам собою, а потім слабко зіставлений зі значенням switch. Це означає, що його не можна використовувати для складних оцінок значення switch. Наприклад:\n\n```php\n<?php\n$target = 1;\n$start = 3;\n\nswitch ($target) {\n    case $start - 1:\n        print \"A\";\n        break;\n    case $start - 2:\n        print \"B\";\n        break;\n    case $start - 3:\n        print \"C\";\n        break;\n    case $start - 4:\n        print \"D\";\n        break;\n}\n\n// Выведет \"B\"\n?>\n```\n\nДля більш складних порівнянь як значення switch може використовуватися значення **`true`**. Або, як варіант, замість `switch` використовувати блоки `if`\\-`else`\n\n```php\n<?php\n$offset = 1;\n$start = 3;\n\nswitch (true) {\n    case $start - $offset === 1:\n        print \"A\";\n        break;\n    case $start - $offset === 2:\n        print \"B\";\n        break;\n    case $start - $offset === 3:\n        print \"C\";\n        break;\n    case $start - $offset === 4:\n        print \"D\";\n        break;\n}\n\n// Выведет \"B\"\n?>\n```\n\nМожливий альтернативний синтаксис для керуючої структури switch. Для більш детальної інформації дивіться [Альтернативний синтаксис для керуючих структур](control-structures.alternative-syntax.md)\n\n```php\n<?php\nswitch ($i):\n    case 0:\n        echo \"i равно 0\";\n        break;\n    case 1:\n        echo \"i равно 1\";\n        break;\n    case 2:\n        echo \"i равно 2\";\n        break;\n    default:\n        echo \"i не равно 0, 1 или 2\";\nendswitch;\n?>\n```\n\nМожливе використання точки з комою замість двокрапки після оператора case. Наприклад :\n\n```php\n<?php\nswitch($beer)\n{\n    case 'tuborg';\n    case 'carlsberg';\n    case 'stella';\n    case 'heineken';\n        echo 'Хороший выбор';\n        break;\n    default;\n        echo 'Пожалуйста, сделайте новый выбор...';\n        break;\n}\n?>\n```\n\n### Дивіться також\n\n-   [match](control-structures.match.md)\n","title":"switch","contentType":2,"navigation":[{"control-structures.continue.md":"« continue"},{"control-structures.match.md":"match »"},{"index.md":"PHP Manual"},{"language.control-structures.md":"Керуючі конструкції"}]}},"__N_SSG":true}