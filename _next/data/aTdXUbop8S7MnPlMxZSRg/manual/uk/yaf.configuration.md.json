{"pageProps":{"page":{"slug":"yaf.configuration.md","content":"## Налаштування під час виконання\n\nПоведінка цих функцій залежить від установок у php.ini.\n\n**Опції налаштування Yaf**\n\n| Имя | По умолчанию | Место изменения | Список изменений |\n| --- | --- | --- | --- |\n| [yaf.library](yaf.configuration.md#ini.yaf.library) |  | **`INI_ALL`** |  |\n| [yaf.action\\_prefer](yaf.configuration.md#ini.yaf.action-prefer) |  | **`INI_ALL`** |  |\n| [yaf.lowcase\\_path](yaf.configuration.md#ini.yaf.lowcase-path) |  | **`INI_ALL`** |  |\n| [yaf.use\\_spl\\_autoload](yaf.configuration.md#ini.yaf.use-spl-autoload) |  | **`INI_ALL`** |  |\n| [yaf.forward\\_limit](yaf.configuration.md#ini.yaf.forward-limit) | 5 | **`INI_ALL`** |  |\n| [yaf.name\\_suffix](yaf.configuration.md#ini.yaf.name-suffix) |  | **`INI_ALL`** |  |\n| [yaf.name\\_separator](yaf.configuration.md#ini.yaf.name-separator) |  | **`INI_ALL`** |  |\n| [yaf.cache\\_config](yaf.configuration.md#ini.yaf.cache-config) |  | **`INI_SYSTEM`** |  |\n| [yaf.environ](yaf.configuration.md#ini.yaf.environ) | product | **`INI_SYSTEM`** |  |\n| [yaf.use\\_namespace](yaf.configuration.md#ini.yaf.use-namespace) |  | **`INI_SYSTEM`** |  |\n\nКоротке пояснення конфігураційних директив.\n\n`yaf.library`string\n\nШлях до глобальних бібліотек, Yaf\\_loader шукатиме глобальні бібліотеки тут.\n\n`yaf.action_prefer`int\n\nЯкщо у PATH\\_INFO тільки одна частина, її слід розглянути як контролер або дію.\n\nЯкщо задана як On, вона розглядатиметься як ім'я дії (Action).\n\n`yaf.lowcase_path`int\n\nЧи розглядати всі шляхи в нижньому регістрі під час автозавантаження класів.\n\n`yaf.use_spl_autoload`int\n\nЯкщо поставлено як On, то якщо [Yaf\\_Loader](class.yaf-loader.md) не може знайти клас, він поверне **`false`**, тим самим надаючи можливість виклику іншої функції автозавантаження.\n\nЯкщо поставлено як Off, то якщо [Yaf\\_Loader](class.yaf-loader.md) не знайде клас, він поверне **`true`** і перерве подальші дії з автозавантаження.\n\n> **Зауваження** :\n> \n> Yaf реєструє завантажувач класів під час створення екземпляра класу [Yaf\\_Application](class.yaf-application.md), так що будь-які інші автозавантажувачі, зареєстровані до інстанціації цього класу, будуть запущені до [Yaf\\_Loader::autoload()](yaf-loader.autoload.md)\n\nЕсли задано как Off(по умолчанию),[Yaf\\_Loader::autoload()](yaf-loader.autoload.md) завжди повертатиме **`true`**\n\n`yaf.forward_limit`int\n\nМаксимальна кількість перенаправлень, за замовчуванням 5. Це означає, що стек перенаправлень не може бути глибшим за 5.\n\nЦе зроблено для запобігання рекурсії у [Yaf\\_Controller\\_Abstract::forward()](yaf-controller-abstract.forward.md)\n\n`yaf.name_suffix`int\n\nЯкщо поставлено як On, Yaf\\_Loader ідентифікуватиме за його суфіксом, для визначення, чи є він класом MVC.\n\nЯкщо встановлено як Off, Yaf\\_Loader дивитиметься на префікс.\n\n`yaf.name_separator`string\n\nЯкщо не порожньо, Yaf\\_Loader, при ідентифікації класу, шукатиме суфікс з огляду на заданий символ як роздільник.\n\nНаприклад, якщо поставити рівним \"\\_\", Yaf\\_Loader ідентифікує Index\\_Controller як клас контролер, а IndexController як клас.\n\n`yaf.cache_config`int\n\nЯкщо встановлено як On, і в той же час ви використовуєте конфігураційний ini-файл як параметр **Yaf\\_Application()**, то результат компіляції цього файлу ini буде закеширован в процесі PHP.\n\n> **Зауваження** :\n> \n> Yaf перевіряє mtime ini-файлу і якщо значення змінилося з моменту останньої компіляції, перекомпілює його.\n\n**Увага**\n\nYaf використовує шлях до ini-файлу як ключ закешованого запису, тому рекомендується використовувати повні, абсолютні шляхи, щоб не сталося конфлікту між двома додатками, що використовують ini-файли з однаковими іменами, але різним вмістом.\n\n`yaf.environ`string\n\nЗа замовчуванням одно \"product\" і використовується Yaf для отримання потрібної секції з ini-файлу.\n\nОтже, якщо параметр дорівнює \"product\", Yaf використовуватиме секцію \"product\" в ini-файлі (перший параметр [Yaf\\_Application](class.yaf-application.md)) як конфігурація [Yaf\\_Application](class.yaf-application.md)\n\n`yaf.use_namespace`int\n\nЯкщо встановлено як On, всі класи Yaf іменуються з використанням просторів імен.\n\nНаПриклад:\n\n```\nYaf_Route_Rewrite => \\Yaf\\Route\\Rewrite\nYaf_Request_Http  => \\Yaf\\Request\\Http\n```\n\nЄ винятки для класів типу [Yaf\\_Controller\\_Abstract](class.yaf-controller-abstract.md). Останній компонент імені є ключовим словом PHP і не може використовуватися як ім'я класу, так що він буде виглядати так:\n\n```\nYaf_Controller_Abstract => \\Yaf\\Controller_Abstract\nYaf_Route_Static => \\Yaf\\Route_Static\n```\n","title":"Налаштування під час виконання","contentType":2,"navigation":[{"yaf.installation.md":"« Встановлення"},{"yaf.resources.md":"Типи ресурсів »"},{"index.md":"PHP Manual"},{"yaf.setup.md":"Встановлення та налаштування"}]}},"__N_SSG":true}