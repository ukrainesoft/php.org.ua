{"pageProps":{"page":{"slug":"random-engine-xoshiro256starstar.jump.md","content":"# Random\\\\Engine\\\\Xoshiro256StarStar::jump\n\n(PHP 8 >= 8.2.0)\n\nRandom\\\\Engine\\\\Xoshiro256StarStar::jump - Ефективно переміщає двигун вперед на 2^128 кроків\n\n### Опис\n\n```methodsynopsis\npublic Random\\Engine\\Xoshiro256StarStar::jump(): void\n```\n\nПереміщає стан алгоритму вперед на 2128 кроку, як метод [Random\\\\Engine\\\\Xoshiro256StarStar::generate()](random-engine-xoshiro256starstar.generate.md) був викликаний 2128 разів.\n\nМета способу - полегшити створення нового движка [Random\\\\Engine\\\\Xoshiro256StarStar](class.random-engine-xoshiro256starstar.md)из существующего заполненного движка[Random\\\\Engine\\\\Xoshiro256StarStar](class.random-engine-xoshiro256starstar.md). Заданий двигун діє як проект, який можна [клонувати](language.oop5.cloning.md) і повторно використовувати для створення 2128 послідовностей, що не перетинаються, з 2128 значеннями кожна.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Приклад використання** Random\\\\Engine\\\\Xoshiro256StarStar::jump()\\*\\*\\*\\*\n\n```php\n<?php\nuse Random\\Engine\\Xoshiro256StarStar;\nuse Random\\Randomizer;\n\n$blueprintRng = new Xoshiro256StarStar(0);\n\n$fibers = [];\nfor ($i = 0; $i < 8; $i++) {\n    $fiberRng = clone $blueprintRng;\n    $blueprintRng->jump();\n\n    $fiber = new Fiber(static function () use ($fiberRng, $i): void {\n        $randomizer = new Randomizer($fiberRng);\n\n        while (true) {\n            Fiber::suspend();\n            echo \"{$i}: \", $randomizer->getInt(0, 100), \"\\n\";\n        }\n    });\n    $fiber->start();\n\n    $fibers[] = $fiber;\n}\n\n\n// Даже если файберы выполняются в случайном порядке, они будут выводить одно и то же значение каждый раз,\n// потому что у каждого из них свой собственный уникальный экземпляр RNG.\n$randomizer = new Randomizer();\n\n$fibers = $randomizer->shuffleArray($fibers);\nforeach ($fibers as $fiber) {\n    $fiber->resume();\n}\n\n$fibers = $randomizer->shuffleArray($fibers);\nforeach ($fibers as $fiber) {\n    $fiber->resume();\n}\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\n4: 89\n3: 10\n2: 63\n1: 75\n6: 41\n5: 56\n0: 16\n7: 60\n7: 34\n6: 58\n1: 74\n4: 63\n3: 3\n5: 42\n2: 45\n0: 86\n```\n\n### Дивіться також\n\n-   [Random\\\\Engine\\\\Xoshiro256StarStar::jumpLong()](random-engine-xoshiro256starstar.jumplong.md) \\- Ефективно переміщає двигун вперед на 2^192 кроки\n","title":"Random\\\\Engine\\\\Xoshiro256StarStar::jump","contentType":2,"navigation":[{"random-engine-xoshiro256starstar.generate.md":"« Random\\\\Engine\\\\Xoshiro256StarStar::generate"},{"random-engine-xoshiro256starstar.jumplong.md":"Random\\\\Engine\\\\Xoshiro256StarStar::jumpLong »"},{"index.md":"PHP Manual"},{"class.random-engine-xoshiro256starstar.md":"Random\\\\Engine\\\\Xoshiro256StarStar"}]}},"__N_SSG":true}