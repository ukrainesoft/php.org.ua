{"pageProps":{"page":{"slug":"phptoken.tokenize.md","content":"# PhpToken::tokenize\n\n(PHP 8)\n\nPhpToken::tokenize — Розбирає заданий рядок, що містить програму на PHP, на масив об'єктів PhpToken\n\n### Опис\n\n```methodsynopsis\npublic static PhpToken::tokenize(string $code, int $flags = 0): array\n```\n\nПовертає масив об'єктів PhpToken, які представляють код `code`\n\n### Список параметрів\n\n`code`\n\nВихідний код мовою PHP.\n\n`flags`\n\nДопустимі прапори:\n\n-   \\*\\*`TOKEN_PARSE`\\*\\*- Допускає можливість використовувати зарезервовані слова у певних контекстах.\n\n### Значення, що повертаються\n\nМасив токенів PHP як об'єктів класу PhpToken чи його нащадків. Цей метод повертає static\\[\\]так що PhpToken можна вільно розширювати.\n\n### Приклади\n\n**Приклад #1 Приклад використання** PhpToken::tokenize()\\*\\*\\*\\*\n\n```php\n<?php\n$tokens = PhpToken::tokenize('<?php echo; ?>');\n\nforeach ($tokens as $token) {\n    echo \"Line {$token->line}: {$token->getTokenName()} ('{$token->text}')\", PHP_EOL;\n}\n```\n\nРезультат виконання наведених прикладів:\n\n```\nLine 1: T_OPEN_TAG ('<?php ')\nLine 1: T_ECHO ('echo')\nLine 1: ; (';')\nLine 1: T_WHITESPACE (' ')\nLine 1: T_CLOSE_TAG ('?>')\n```\n\n**Приклад #2 Розширення PhpToken**\n\n```php\n<?php\n\nclass MyPhpToken extends PhpToken {\n    public function getUpperText() {\n        return strtoupper($this->text);\n    }\n}\n\n$tokens = MyPhpToken::tokenize('<?php echo; ?>');\necho \"'{$tokens[0]->getUpperText()}'\";\n```\n\nРезультат виконання наведених прикладів:\n\n```\n'<?PHP '\n```\n\n### Дивіться також\n\n-   [token\\_get\\_all()](function.token-get-all.md) \\- Розбиває переданий вихідний код на PHP-лексеми\n","title":"PhpToken::tokenize","contentType":2,"navigation":[{"phptoken.tostring.md":"« PhpToken::\\_\\_function toString() { [native code] }"},{"ref.tokenizer.md":"Функції PHP-лексера (tokenizer) »"},{"index.md":"PHP Manual"},{"class.phptoken.md":"PhpToken"}]}},"__N_SSG":true}