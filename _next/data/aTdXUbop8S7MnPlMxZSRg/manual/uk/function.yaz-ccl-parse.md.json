{"pageProps":{"page":{"slug":"function.yaz-ccl-parse.md","content":"# yaz\\_ccl\\_parse\n\n(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)\n\nyaz\\_ccl\\_parse — Викликає парсер CCL\n\n### Опис\n\n```methodsynopsis\nyaz_ccl_parse(resource $id, string $query, array &$result): bool\n```\n\nФункція викликає синтаксичний аналізатор CCL. Він перетворює цей запит CCL FIND на запит RPN, який можна передати функції [yaz\\_search()](function.yaz-search.md) для пошуку.\n\nЩоб визначити набір допустимих полів CCL, викличте [yaz\\_ccl\\_conf()](function.yaz-ccl-conf.md) перед цією функцією.\n\n### Список параметрів\n\n`id`\n\nРесурс з'єднання, повернутий [yaz\\_connect()](function.yaz-connect.md)\n\n`query`\n\nЗапит CCL FIND.\n\n`result`\n\nЯкщо функцію було виконано успішно, це буде масив, що містить коректний запит RPN у ключі `rpn`\n\nПісля збою в цьому масиві встановлюються три індекси, що вказують на причину виникнення помилки:\n\n-   `errorcode`\\- код помилки CCL (ціле число)\n    \n-   `errorstring`\\- Рядок помилки CCL\n    \n-   `errorpos`\\- приблизна позиція у запиті помилки (ціле число – позиція символу)\n    \n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Розбір CCL**\n\nМи спробуємо пошукати за допомогою CCL. У наведеному нижче прикладі `$ccl` є запитом CCL.\n\n```php\n<?php\n\nyaz_ccl_conf($id, $fields);  // смотрите Приклад для yaz_ccl_conf\nif (!yaz_ccl_parse($id, $ccl, &$cclresult)) {\n    echo 'Ошибка: ' . $cclresult[\"errorstring\"];\n} else {\n    $rpn = $cclresult[\"rpn\"];\n    yaz_search($id, \"rpn\", $rpn);\n}\n?>\n```\n","title":"yaz\\_ccl\\_parse","contentType":2,"navigation":[{"function.yaz-ccl-conf.md":"« yaz\\_ccl\\_conf"},{"function.yaz-close.md":"yaz\\_close »"},{"index.md":"PHP Manual"},{"ref.yaz.md":"Функції YAZ"}]}},"__N_SSG":true}