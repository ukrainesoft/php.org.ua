{"pageProps":{"page":{"slug":"book.dom.md","content":"# Document Object Model\n\n-   [Вступ](intro.dom.md)\n-   [Встановлення та налаштування](dom.setup.md)\n    -   [Вимоги](dom.requirements.md)\n    -   [Установка](dom.installation.md)\n    -   [Налаштування під час виконання](dom.configuration.md)\n    -   [Типи ресурсів](dom.resources.md)\n-   [Обумовлені константи](dom.constants.md)\n-   [Приклади](dom.examples.md)\n-   [DOMAttr](class.domattr.md) \\- Клас DOMAttr\n    -   [DOMAttr::\\_\\_construct](domattr.construct.md) \\- Створює екземпляр класу DOMAttr\n    -   [DOMAttr::isId](domattr.isid.md)— Перевіряє, чи є атрибут певним ідентифікатором\n-   [DOMCdataSection](class.domcdatasection.md) \\- Клас DOMCdataSection\n    -   [DOMCdataSection::\\_\\_construct](domcdatasection.construct.md)— Створює новий екземпляр класу DOMCdataSection\n-   [DOMCharacterData](class.domcharacterdata.md) \\- Клас DOMCharacterData\n    -   [DOMCharacterData::after](domcharacterdata.after.md)— Додає вузли після символьних даних\n    -   [DOMCharacterData::appendData](domcharacterdata.appenddata.md)— Додати рядок до кінця символьних даних вузла\n    -   [DOMCharacterData::before](domcharacterdata.before.md) \\- Додає вузли перед вузлом\n    -   [DOMCharacterData::deleteData](domcharacterdata.deletedata.md)— Видалити діапазон символів із вузла\n    -   [DOMCharacterData::insertData](domcharacterdata.insertdata.md)— Вставити рядок у вказану 16-бітну позицію\n    -   [DOMCharacterData::remove](domcharacterdata.remove.md)— Видаляє символьні дані\n    -   [DOMCharacterData::replaceData](domcharacterdata.replacedata.md)— Замінити підрядок у вузлі типу DOMCharacterData\n    -   [DOMCharacterData::replaceWith](domcharacterdata.replacewith.md)— Замінює символьні дані новими вузлами\n    -   [DOMCharacterData::substringData](domcharacterdata.substringdata.md)— Витягує певний діапазон даних із вузла\n-   [DOMChildNode](class.domchildnode.md) \\- Інтерфейс DOMChildNode\n    -   [DOMChildNode::after](domchildnode.after.md) \\- Додає вузли після вузла\n    -   [DOMChildNode::before](domchildnode.before.md) \\- Додає вузли перед вузлом\n    -   [DOMChildNode::remove](domchildnode.remove.md) \\- Видаляє вузол\n    -   [DOMChildNode::replaceWith](domchildnode.replacewith.md) \\- Замінює вузол на нові вузли\n-   [DOMComment](class.domcomment.md) \\- Клас DOMComment\n    -   [DOMComment::\\_\\_construct](domcomment.construct.md)— Створює новий екземпляр класу DOMComment\n-   [DOMDocument](class.domdocument.md) \\- Клас DOMDocument\n    -   [DOMDocument::adoptNode](domdocument.adoptnode.md)— Переносить вузол із іншого документа\n    -   [DOMDocument::append](domdocument.append.md)— Додає вузли після останнього дочірнього вузла\n    -   [DOMDocument::\\_\\_construct](domdocument.construct.md)— Створює новий об'єкт DOMDocument\n    -   [DOMDocument::createAttribute](domdocument.createattribute.md) \\- Створює новий атрибут\n    -   [DOMDocument::createAttributeNS](domdocument.createattributens.md)— Створює новий атрибут вузла із відповідним простором імен\n    -   [DOMDocument::createCDATASection](domdocument.createcdatasection.md) \\- Створює новий вузол cdata\n    -   [DOMDocument::createComment](domdocument.createcomment.md) \\- Створити новий вузол коментаря\n    -   [DOMDocument::createDocumentFragment](domdocument.createdocumentfragment.md) \\- Створює новий фрагмент документа\n    -   [DOMDocument::createElement](domdocument.createelement.md) \\- Створює новий вузол елемента\n    -   [DOMDocument::createElementNS](domdocument.createelementns.md)— Створити новий вузол елемента із відповідним простором імен\n    -   [DOMDocument::createEntityReference](domdocument.createentityreference.md) \\- Створити новий вузол посилання на сутність\n    -   [DOMDocument::createProcessingInstruction](domdocument.createprocessinginstruction.md) \\- Створити новий PI-вузол\n    -   [DOMDocument::createTextNode](domdocument.createtextnode.md) \\- Створити новий текстовий вузол\n    -   [DOMDocument::getElementById](domdocument.getelementbyid.md)— Шукає елемент із певним ідентифікатором\n    -   [DOMDocument::getElementsByTagName](domdocument.getelementsbytagname.md)— Шукає всі елементи із заданим локальним ім'ям\n    -   [DOMDocument::getElementsByTagNameNS](domdocument.getelementsbytagnamens.md)— Шукає всі елементи із заданим ім'ям у вказаному просторі імен\n    -   [DOMDocument::importNode](domdocument.importnode.md)— Імпортувати вузол у поточний документ\n    -   [DOMDocument::load](domdocument.load.md)— Завантаження XML із файлу\n    -   [DOMDocument::loadHTML](domdocument.loadhtml.md)— Завантаження HTML із рядка\n    -   [DOMDocument::loadHTMLFile](domdocument.loadhtmlfile.md)— Завантаження HTML із файлу\n    -   [DOMDocument::loadXML](domdocument.loadxml.md)— Завантаження XML із рядка\n    -   [DOMDocument::normalizeDocument](domdocument.normalizedocument.md) \\- Нормалізує документ\n    -   [DOMDocument::prepend](domdocument.prepend.md) \\- Додає вузли перед першим дочірнім вузлом\n    -   [DOMDocument::registerNodeClass](domdocument.registernodeclass.md)— Реєстрація розширеного класу, який використовується для створення типу базового вузла\n    -   [DOMDocument::relaxNGValidate](domdocument.relaxngvalidate.md) \\- Здійснює перевірку документа на правильність побудови за допомогою relaxNG\n    -   [DOMDocument::relaxNGValidateSource](domdocument.relaxngvalidatesource.md) \\- Перевіряє документ за допомогою relaxNG\n    -   [DOMDocument::replaceChildren](domdocument.replacechildren.md)— Замінює дочірні вузли у документі\n    -   [DOMDocument::save](domdocument.save.md)— Зберігає XML-дерево із внутрішнього подання до файлу\n    -   [DOMDocument::saveHTML](domdocument.savehtml.md)— Зберігає документ із внутрішнього подання до рядка, використовуючи форматування HTML\n    -   [DOMDocument::saveHTMLFile](domdocument.savehtmlfile.md)— Зберігає документ із внутрішнього подання до файлу, використовуючи форматування HTML\n    -   [DOMDocument::saveXML](domdocument.savexml.md)— Зберігає XML-дерево з внутрішньої вистави у вигляді рядка\n    -   [DOMDocument::schemaValidate](domdocument.schemavalidate.md)— Перевіряє дійсність документа, ґрунтуючись на заданій схемі. Підтримується лише XML-схема 1.0.\n    -   [DOMDocument::schemaValidateSource](domdocument.schemavalidatesource.md)— Перевіряє дійсність документа, ґрунтуючись на схемі\n    -   [DOMDocument::validate](domdocument.validate.md)— Перевіряє документ на відповідність його DTD\n    -   [DOMDocument::xinclude](domdocument.xinclude.md)— Вставляє XInclude в об'єкті DOMDocument.\n-   [DOMDocumentFragment](class.domdocumentfragment.md) \\- Клас DOMDocumentFragment\n    -   [DOMDocumentFragment::append](domdocumentfragment.append.md)— Додає вузли після останнього дочірнього вузла\n    -   [DOMDocumentFragment::appendXML](domdocumentfragment.appendxml.md)— Додавання необроблених даних XML\n    -   [DOMDocumentFragment::\\_\\_construct](domdocumentfragment.construct.md) \\- Конструктор об'єкта DOMDocumentFragment\n    -   [DOMDocumentFragment::prepend](domdocumentfragment.prepend.md) \\- Додає вузли перед першим дочірнім вузлом\n    -   [DOMDocumentFragment::replaceChildren](domdocumentfragment.replacechildren.md)— Замінює дочірні елементи фрагмента\n-   [DOMDocumentType](class.domdocumenttype.md) \\- Клас DOMDocumentType\n-   [DOMElement](class.domelement.md) \\- Клас DOMElement\n    -   [DOMElement::after](domelement.after.md)— Додає вузли після елемента\n    -   [DOMElement::append](domelement.append.md)— Додає вузли після останнього дочірнього вузла\n    -   [DOMElement::before](domelement.before.md)— Додає вузли перед елементом\n    -   [DOMElement::\\_\\_construct](domelement.construct.md)— Створює новий екземпляр класу DOMElement\n    -   [DOMElement::getAttribute](domelement.getattribute.md)— Повертає значення атрибуту\n    -   [DOMElement::getAttributeNames](domelement.getattributenames.md)— Отримує імена атрибутів\n    -   [DOMElement::getAttributeNode](domelement.getattributenode.md) \\- Повертає вузол атрибуту\n    -   [DOMElement::getAttributeNodeNS](domelement.getattributenodens.md) \\- Повертає вузол атрибуту\n    -   [DOMElement::getAttributeNS](domelement.getattributens.md)— Повертає значення атрибуту\n    -   [DOMElement::getElementsByTagName](domelement.getelementsbytagname.md)— Повертає елементи на ім'я тега\n    -   [DOMElement::getElementsByTagNameNS](domelement.getelementsbytagnamens.md)— Отримує елементи локального імені в заданому просторі імен\n    -   [DOMElement::hasAttribute](domelement.hasattribute.md)— Перевіряє, чи існує атрибут\n    -   [DOMElement::hasAttributeNS](domelement.hasattributens.md) \\- Перевіряє, чи існує заданий атрибут\n    -   [DOMElement::insertAdjacentElement](domelement.insertadjacentelement.md) \\- Додає сусідній елемент\n    -   [DOMElement::insertAdjacentText](domelement.insertadjacenttext.md)— Додає сусідній текст\n    -   [DOMElement::prepend](domelement.prepend.md) \\- Додає вузли перед першим дочірнім вузлом\n    -   [DOMElement::remove](domelement.remove.md) \\- Видаляє елемент\n    -   [DOMElement::removeAttribute](domelement.removeattribute.md) \\- Видаляє атрибут\n    -   [DOMElement::removeAttributeNode](domelement.removeattributenode.md) \\- Видаляє атрибут\n    -   [DOMElement::removeAttributeNS](domelement.removeattributens.md) \\- Видаляє атрибут\n    -   [DOMElement::replaceChildren](domelement.replacechildren.md)— Замінює дочірні елементи елемента\n    -   [DOMElement::replaceWith](domelement.replacewith.md)— Замінює елемент новими вузлами\n    -   [DOMElement::setAttribute](domelement.setattribute.md)— Додає новий або змінює існуючий атрибут\n    -   [DOMElement::setAttributeNode](domelement.setattributenode.md)— Додає новий вузол атрибуту до елементу\n    -   [DOMElement::setAttributeNodeNS](domelement.setattributenodens.md)— Додає новий атрибут елемент\n    -   [DOMElement::setAttributeNS](domelement.setattributens.md) \\- Додає новий атрибут\n    -   [DOMElement::setIdAttribute](domelement.setidattribute.md)— Оголошує атрибут із зазначеним ім'ям тип ID\n    -   [DOMElement::setIdAttributeNode](domelement.setidattributenode.md)— Оголошує зазначений сайт атрибута тип ID\n    -   [DOMElement::setIdAttributeNS](domelement.setidattributens.md)— Оголошує атрибуту із зазначеними локальним ім'ям та URI простору імен тип ID\n    -   [DOMElement::toggleAttribute](domelement.toggleattribute.md) \\- Перемикає атрибут\n-   [DOMEntity](class.domentity.md) \\- Клас DOMEntity\n-   [DOMEntityReference](class.domentityreference.md) \\- Клас DOMEntityReference\n    -   [DOMEntityReference::\\_\\_construct](domentityreference.construct.md)— Створює новий об'єкт класу DOM EntityReference\n-   [DOMException](class.domexception.md) \\- Клас DOMException\n-   [DOMImplementation](class.domimplementation.md) \\- Клас DOMImplementation\n    -   [DOMImplementation::\\_\\_construct](domimplementation.construct.md)— Створює новий об'єкт класу DOMImplementation\n    -   [DOMImplementation::createDocument](domimplementation.createdocument.md)— Створює об'єкт класу DOMDocument заданого типу з його елементом.\n    -   [DOMImplementation::createDocumentType](domimplementation.createdocumenttype.md)— Створює порожній об'єкт класу DOMDocumentType\n    -   [DOMImplementation::hasFeature](domimplementation.hasfeature.md)— Перевірка, чи реалізована певна можливість у реалізації DOM\n-   [DOMNamedNodeMap](class.domnamednodemap.md)— Клас DOMNamedNodeMap\n    -   [DOMNamedNodeMap::count](domnamednodemap.count.md) \\- Кількість вузлів у відображенні\n    -   [DOMNamedNodeMap::getIterator](domnamednodemap.getiterator.md)— Отримує зовнішній ітератор\n    -   [DOMNamedNodeMap::getNamedItem](domnamednodemap.getnameditem.md)— Отримує вузол, вказаний на ім'я\n    -   [DOMNamedNodeMap::getNamedItemNS](domnamednodemap.getnameditemns.md)— Отримує вузол із заданим локальним ім'ям та URI простору імен\n    -   [DOMNamedNodeMap::item](domnamednodemap.item.md)— Отримує вузол із заданим індексом\n-   [DOMNameSpaceNode](class.domnamespacenode.md)— Клас DOMNameSpaceNode\n-   [DOMNode](class.domnode.md) \\- Клас DOMNode\n    -   [DOMNode::appendChild](domnode.appendchild.md)— Додає новий дочірній вузол до кінця списку нащадків.\n    -   [DOMNode::C14N](domnode.c14n.md) \\- Канонізувати вузли в рядок\n    -   [DOMNode::C14NFile](domnode.c14nfile.md) \\- Канонізувати вузли у файл\n    -   [DOMNode::cloneNode](domnode.clonenode.md) \\- Клонує вузол\n    -   [DOMNode::contains](domnode.contains.md)— Перевіряє, чи містить вузол інший вузол\n    -   [DOMNode::getLineNo](domnode.getlineno.md)— Отримує номер рядка вузла\n    -   [DOMNode::getNodePath](domnode.getnodepath.md) \\- Отримання XPath вузла\n    -   [DOMNode::getRootNode](domnode.getrootnode.md)— Отримує кореневий вузол\n    -   [DOMNode::hasAttributes](domnode.hasattributes.md)— Перевіряє, чи цей вузол має атрибути.\n    -   [DOMNode::hasChildNodes](domnode.haschildnodes.md)— Перевіряє, чи цей вузол має нащадків.\n    -   [DOMNode::insertBefore](domnode.insertbefore.md)— Додає новий дочірній вузол перед вказаним вузлом\n    -   [DOMNode::isDefaultNamespace](domnode.isdefaultnamespace.md)— Перевіряє, чи вказаний URI простору імен вузла є простором імен за умовчанням чи ні\n    -   [DOMNode::isEqualNode](domnode.isequalnode.md)— Перевіряє, що обидва вузли ідентичні\n    -   [DOMNode::isSameNode](domnode.issamenode.md)— Вказує, чи є два вузли одним і тим самим вузлом\n    -   [DOMNode::isSupported](domnode.issupported.md)— Перевіряє, чи підтримується можливість у певній версії\n    -   [DOMNode::lookupNamespaceURI](domnode.lookupnamespaceuri.md)— Отримує URI простору імен вузла за префіксом\n    -   [DOMNode::lookupPrefix](domnode.lookupprefix.md)— Повертає префікс простору імен вузла із URI простору імен\n    -   [DOMNode::normalize](domnode.normalize.md) \\- Нормалізує вузол\n    -   [DOMNode::removeChild](domnode.removechild.md) \\- Видаляє дочірній вузол зі списку нащадків.\n    -   [DOMNode::replaceChild](domnode.replacechild.md) \\- Замінює дочірній вузол\n-   [DOMNodeList](class.domnodelist.md) \\- Клас DOMNodeList\n    -   [DOMNodeList::count](domnodelist.count.md)— Отримати кількість вузлів у списку\n    -   [DOMNodeList::getIterator](domnodelist.getiterator.md)— Отримує зовнішній ітератор\n    -   [DOMNodeList::item](domnodelist.item.md)— Отримує вузол із заданим індексом\n-   [DOMNotation](class.domnotation.md) \\- Клас DOMNotation\n-   [DOMParentNode](class.domparentnode.md) \\- Інтерфейс DOMParentNode\n    -   [DOMParentNode::append](domparentnode.append.md)— Додає вузли після останнього дочірнього вузла\n    -   [DOMParentNode::prepend](domparentnode.prepend.md) \\- Додає вузли перед першим дочірнім вузлом\n    -   [DOMParentNode::replaceChildren](domparentnode.replacechildren.md)— Замінює нащадків у вузлі\n-   [DOMProcessingInstruction](class.domprocessinginstruction.md) \\- Клас DOMProcessingInstruction\n    -   [DOMProcessingInstruction::\\_\\_construct](domprocessinginstruction.construct.md)— Створює новий об'єкт класу DOMProcessingInstruction\n-   [DOMText](class.domtext.md) \\- Клас DOMText\n    -   [DOMText::\\_\\_construct](domtext.construct.md)— Створює об'єкт класу DOMText\n    -   [DOMText::isElementContentWhitespace](domtext.iselementcontentwhitespace.md)— Повертає, чи містить текстовий вузол пробіл у вмісті елемента\n    -   [DOMText::isWhitespaceInElementContent](domtext.iswhitespaceinelementcontent.md)— Визначає, чи містить текстовий вузол пробіли у вмісті\n    -   [DOMText::splitText](domtext.splittext.md)— Поділяє вузол на два, починаючи із заданої позиції\n-   [DOMXPath](class.domxpath.md) \\- Клас DOMXPath\n    -   [DOMXPath::\\_\\_construct](domxpath.construct.md)— Створює новий об'єкт класу DOMXPath\n    -   [DOMXPath::evaluate](domxpath.evaluate.md)— Обчислює переданий вираз XPath і повертає типізований результат, якщо можливо\n    -   [DOMXPath::query](domxpath.query.md)— Виконує заданий вираз XPath\n    -   [DOMXPath::registerNamespace](domxpath.registernamespace.md)— Реєструє простір імен з об'єктом DOMXPath\n    -   [DOMXPath::registerPhpFunctions](domxpath.registerphpfunctions.md) \\- Реєстрація PHP-функцій як функцій XPath\n-   [Функції DOM](ref.dom.md)\n    -   [dom\\_import\\_simplexml](function.dom-import-simplexml.md)— Отримує об'єкт класу DOMElement із об'єкта класу SimpleXMLElement\n","title":"Document Object Model","contentType":2,"navigation":[{"refs.xml.md":"« Обробка XML"},{"intro.dom.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.xml.md":"Обробка XML"}]}},"__N_SSG":true}