{"pageProps":{"page":{"slug":"intldateformatter.setlenient.md","content":"# IntlDateFormatter::setLenient\n\n# datefmt\\_set\\_lenient\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\nIntlDateFormatter::setLenient -- datefmt\\_set\\_lenient — Встановлює м'який режим аналізатора\n\n### Опис\n\nОб'єктно-орієнтований стиль\n\n```methodsynopsis\npublic IntlDateFormatter::setLenient(bool $lenient): void\n```\n\nПроцедурний стиль\n\n```methodsynopsis\ndatefmt_set_lenient(IntlDateFormatter $formatter, bool $lenient): void\n```\n\nВизначає, чи є режим аналізатора строгим чи м'яким при інтерпретації вхідних даних, які точно не відповідають шаблону. Увімкнення м'якого синтаксичного аналізу дозволяє синтаксичному аналізатору приймати помилкові шаблони дати або часу, аналізуючи якнайбільше для отримання значення. Зайва пропуск, нерозпізнані токени або неприпустимі значення (\"February 30th\") не приймаються.\n\n### Список параметрів\n\n`formatter`\n\nРесурс засобу форматування.\n\n`lenient`\n\nВстановлює, чи аналізатор vzurbv чи ні, за замовчуванням **`true`**(мягкий).\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\n**Приклад #1 Приклад використання** datefmt\\_set\\_lenient()\\*\\*\\*\\*\n\n```php\n<?php\n$fmt = datefmt_create(\n    'en_US',\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'America/Los_Angeles',\n    IntlDateFormatter::GREGORIAN,\n    'dd/MM/yyyy'\n);\necho 'Мягкий режим средства форматирования : ';\nif ($fmt->isLenient()) {\n    echo 'ДА';\n} else {\n    echo 'НЕТ';\n}\ndatefmt_parse($fmt, '35/13/1971');\necho \"\\nПопытка разобрать '35/13/1971'.\\nРезультат : \" . datefmt_parse($fmt, '35/13/1971');\nif (intl_get_error_code() != 0) {\n    echo \"\\nСообщение об ошибке : \" . intl_get_error_message();\n    echo \"\\nКод ошибки : \" . intl_get_error_code();\n}\ndatefmt_set_lenient($fmt, false);\necho \"\\nТеперь мягкий режим средства форматирования : \";\nif ($fmt->isLenient()) {\n    echo 'ДА';\n} else {\n    echo 'НЕТ';\n}\ndatefmt_parse($fmt, '35/13/1971');\necho \"\\nПопытка разобрать '35/13/1971'.\\nРезультат : \" . datefmt_parse($fmt, '35/13/1971');\nif (intl_get_error_code() != 0) {\n    echo \"\\nСообщение об ошибке : \".intl_get_error_message();\n    echo \"\\nКод ошибки : \".intl_get_error_code();\n}\n\n?>\n```\n\n**Приклад #2 Приклад використання в об'єктно-орієнтованому стилі**\n\n```php\n<?php\n$fmt = new IntlDateFormatter(\n    'en_US',\n    IntlDateFormatter::FULL,\n    IntlDateFormatter::FULL,\n    'America/Los_Angeles',\n    IntlDateFormatter::GREGORIAN,\n    'dd/MM/yyyy'\n);\necho 'Мягкий режим средства форматирования : ';\nif ($fmt->isLenient()) {\n    echo 'ДА';\n} else {\n    echo 'НЕТ';\n}\n$fmt->parse('35/13/1971');\necho \"\\nПопытка разобрать '35/13/1971'.\\nРезультат : \" . $fmt->parse('35/13/1971');\nif (intl_get_error_code() != 0) {\n    echo \"\\nСообщение об ошибке : \" . intl_get_error_message();\n    echo \"\\nКод ошибки : \" . intl_get_error_code();\n}\n\n$fmt->setLenient(FALSE);\necho \"\\nТеперь мягкий режим средства форматирования : \";\nif ($fmt->isLenient()) {\n    echo 'ДА';\n} else {\n    echo 'НЕТ';\n}\n$fmt->parse('35/13/1971');\necho \"\\nПопытка разобрать '35/13/1971'.\\nРезультат : \" . $fmt->parse('35/13/1971');\nif (intl_get_error_code() != 0) {\n    echo \"\\nСообщение об ошибке : \" . intl_get_error_message();\n    echo \"\\nКод ошибки : \" . intl_get_error_code();\n}\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nМягкий режим средства форматирования : ДА\nПопытка разобрать '35/13/1971'.\nРезультат : 66038400\nТеперь мягкий режим средства форматирования : НЕТ\nПопытка разобрать '35/13/1971'.\nРезультат :\nСообщение об ошибке : Date parsing failed: U_PARSE_ERROR\nКод ошибки : 9\n```\n\n### Дивіться також\n\n-   [datefmt\\_is\\_lenient()](intldateformatter.islenient.md) \\- Отримує поблажливість, що використовується для IntlDateFormatter\n-   [datefmt\\_create()](intldateformatter.create.md) \\- Створює засіб форматування дати\n","title":"IntlDateFormatter::setLenient","contentType":2,"navigation":[{"intldateformatter.setcalendar.md":"« IntlDateFormatter::setCalendar"},{"intldateformatter.setpattern.md":"IntlDateFormatter::setPattern »"},{"index.md":"PHP Manual"},{"class.intldateformatter.md":"IntlDateFormatter"}]}},"__N_SSG":true}