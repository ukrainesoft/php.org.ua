{"pageProps":{"page":{"slug":"ds-set.diff.md","content":"# Ds\\\\Set::diff\n\n(PECL ds >= 1.0.0)\n\nDs\\\\Set::diff — Створює новий набір з елементами, яких немає в іншому наборі\n\n### Опис\n\n```methodsynopsis\npublic Ds\\Set::diff(Ds\\Set $set): Ds\\Set\n```\n\nСтворює новий набір із елементами, яких немає в іншому наборі.\n\n`A \\ B = {x ∈ A | x ∉ B}`\n\n### Список параметрів\n\n`set`\n\nНабір містить елементи, які треба виключити з нового набору.\n\n### Значення, що повертаються\n\nНовий набір, що містить всі елементи, які є в поточному наборі і відсутні в переданому `set`\n\n### Дивіться також\n\n-   [» Різниця множин](https://en.wikipedia.org/wiki/Complement_(set_theory))на Вікіпедія\n\n### Приклади\n\n**Приклад #1 Приклад використання**Ds\\\\Set::diff()\\*\\*\\*\\*\n\n```php\n<?php\n$a = new \\Ds\\Set([1, 2, 3]);\n$b = new \\Ds\\Set([3, 4, 5]);\n\nvar_dump($a->diff($b));\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nobject(Ds\\Set)#3 (2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n```\n","title":"Ds\\\\Set::diff","contentType":2,"navigation":[{"ds-set.count.md":"« Ds\\\\Set::count"},{"ds-set.filter.md":"Ds\\\\Set::filter »"},{"index.md":"PHP Manual"},{"class.ds-set.md":"Ds\\\\Set"}]}},"__N_SSG":true}