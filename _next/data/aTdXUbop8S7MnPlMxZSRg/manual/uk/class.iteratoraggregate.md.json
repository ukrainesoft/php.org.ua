{"pageProps":{"page":{"slug":"class.iteratoraggregate.md","content":"# Інтерфейс IteratorAggregate\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nІнтерфейс створення зовнішнього ітератора.\n\n## Огляд інтерфейсів\n\n```classsynopsis\n\n    \n     interface IteratorAggregate\n\n    extends\n      Traversable {\n\n    /* Методы */\n    \n   public getIterator(): Traversable\n\n   }\n```\n\n**Приклад #1 Основи використання**\n\n```php\n<?php\nclass myData implements IteratorAggregate {\n    public $property1 = \"Первое общедоступное свойство\";\n    public $property2 = \"Второе общедоступное свойство\";\n    public $property3 = \"Третье общедоступное свойство\";\n    public $property4 = \"\";\n\n    public function __construct() {\n        $this->property4 = \"последнее свойство\";\n    }\n\n    public function getIterator(): Traversable {\n        return new ArrayIterator($this);\n    }\n}\n\n$obj = new myData;\n\nforeach($obj as $key => $value) {\n    var_dump($key, $value);\n    echo \"\\n\";\n}\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nstring(9) \"property1\"\nstring(56) \"Первое общедоступное свойство\"\n\nstring(9) \"property2\"\nstring(56) \"Второе общедоступное свойство\"\n\nstring(9) \"property3\"\nstring(56) \"Третье общедоступное свойство\"\n\nstring(9) \"property4\"\nstring(35) \"последнее свойство\"\n```\n\n## Зміст\n\n-   [IteratorAggregate::getIterator](iteratoraggregate.getiterator.md)— Отримує зовнішній ітератор\n","title":"Інтерфейс IteratorAggregate","contentType":2,"navigation":[{"iterator.valid.md":"« Iterator::valid"},{"iteratoraggregate.getiterator.md":"IteratorAggregate::getIterator »"},{"index.md":"PHP Manual"},{"reserved.interfaces.md":"Вбудовані інтерфейси та класи"}]}},"__N_SSG":true}