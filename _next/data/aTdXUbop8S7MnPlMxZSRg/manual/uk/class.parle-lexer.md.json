{"pageProps":{"page":{"slug":"class.parle-lexer.md","content":"# Клас Parle\\\\Lexer\n\n(PECL parle >= 0.5.1)\n\n## Вступ\n\nКлас лексера з одним станом. Лексеми можна визначати на льоту. Якщо конкретний екземпляр лексера призначений для використання з [Parle\\\\Parser](class.parle-parser.md)Ідентифікатори токенів повинні бути взяті звідти. В іншому випадку можуть бути надані довільні ідентифікатори токенів. Лексер може дати певну перевагу у продуктивності в порівнянні з [Parle\\\\RLexer](class.parle-rlexer.md)якщо не потрібно кілька станів. Зверніть увагу, що [Parle\\\\RParser](class.parle-rparser.md) несумісний із цим лексером.\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     \n      class Parle\\Lexer\n     \n     {\n\n    /* Константы */\n    \n     const\n     int\n      ICASE = 1;\n\n    const\n     int\n      DOT_NOT_LF = 2;\n\n    const\n     int\n      DOT_NOT_CRLF = 4;\n\n    const\n     int\n      SKIP_WS = 8;\n\n    const\n     int\n      MATCH_ZERO_LEN = 16;\n\n\n    /* Свойства */\n    public\n     bool\n      $bol = false;\n\n    public\n     int\n      $flags = 0;\n\n    public\n     int\n      $state = 0;\n\n    public\n     int\n      $marker = 0;\n\n    public\n     int\n      $cursor = 0;\n\n\n    /* Методы */\n    \n   public advance(): void\npublic build(): void\npublic callout(int $id, callable $callback): void\npublic consume(string $data): void\npublic dump(): void\npublic getToken(): Parle\\Token\npublic insertMacro(string $name, string $regex): void\npublic push(string $regex, int $id): void\npublic reset(int $pos): void\n\n   }\n```\n\n## Обумовлені константи\n\n**`Parle\\Lexer::ICASE`**\n\n**`Parle\\Lexer::DOT_NOT_LF`**\n\n**`Parle\\Lexer::DOT_NOT_CRLF`**\n\n**`Parle\\Lexer::SKIP_WS`**\n\n**`Parle\\Lexer::MATCH_ZERO_LEN`**\n\n## Властивості\n\nbol\n\nПрапор початку введення.\n\nflags\n\nПрапори лексера.\n\nstate\n\nПоточний стан лексера доступний тільки для читання.\n\nmarker\n\nПозиція останнього збігу токена доступна тільки для читання.\n\ncursor\n\nПоточне зміщення введення доступне тільки для читання.\n\n## Зміст\n\n-   [Parle\\\\Lexer::advance](parle-lexer.advance.md) \\- Обробляє таке правило лексера\n-   [Parle\\\\Lexer::build](parle-lexer.build.md) \\- Завершує набір правил лексера\n-   [Parle\\\\Lexer::callout](parle-lexer.callout.md) \\- Визначає callback-функцію токена\n-   [Parle\\\\Lexer::consume](parle-lexer.consume.md) \\- Передає дані на обробку\n-   [Parle\\\\Lexer::dump](parle-lexer.dump.md) \\- Виводить стан пристрою\n-   [Parle\\\\Lexer::getToken](parle-lexer.gettoken.md)— Отримує поточний токен\n-   [Parle\\\\Lexer::insertMacro](parle-lexer.insertmacro.md)— Вставляє макрос регулярного виразу\n-   [Parle\\\\Lexer::push](parle-lexer.push.md) \\- Додає правило лексера\n-   [Parle\\\\Lexer::reset](parle-lexer.reset.md) \\- скидає лексер\n","title":"Клас Parle\\\\Lexer","contentType":2,"navigation":[{"parle.examples.parser.md":"« Приклад використання парсеру"},{"parle-lexer.advance.md":"Parle\\\\Lexer::advance »"},{"index.md":"PHP Manual"},{"book.parle.md":"Parle"}]}},"__N_SSG":true}