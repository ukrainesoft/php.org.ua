{"pageProps":{"page":{"slug":"function.array-splice.md","content":"# array\\_splice\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\narray\\_splice — Видаляє частину масиву і замінює її чимось ще\n\n### Опис\n\n```methodsynopsis\narray_splice(    array &$array,    int $offset,    ?int $length = null,    mixed $replacement = []): array\n```\n\nВидаляє `length` елементів, розташованих на відстані `offset`из массива`array`, та замінює їх елементами масиву `replacement`, якщо він передано як параметр.\n\n> **Зауваження** :\n> \n> Зверніть увагу, що числові ключі в масиві `array` не зберігаються.\n\n> **Зауваження**: Якщо параметр `replacement` не є масивом, він буде [перетворено](language.types.array.md#language.types.array.casting) до нього (тобто `(array) $parameter`). Це може призвести до несподіваних результатів під час використання об'єкта або **`null`** в якості `replacement`\n\n### Список параметрів\n\n`array`\n\nВхідний масив\n\n`offset`\n\nЯкщо параметр `offset` позитивний, будуть видалені елементи, що знаходяться на відстані offset від початку `array`\n\nЯкщо `offset` негативний, будуть видалені елементи, що знаходяться на відстані offset від кінця `array`\n\n`length`\n\nЯкщо параметр `length` опущено, будуть видалені всі елементи, починаючи з позиції `offset`и до конца массива.\n\nЯкщо `length` вказаний і він позитивний, буде видалено саме стільки елементів.\n\nЯкщо параметр `length` від'ємний, то кінець частини елементів, що видаляється, буде відстояти на цю кількість від кінця масиву.\n\nЯкщо `length` заданий як 0, нічого видалено не буде.\n\n**Підказка**\n\nПорада: щоб видалити всі елементи масиву, починаючи з позиції `offset`до конца массива, в то время как указан параметр`replacement`, используйте`count($input)` як параметр `length`\n\n`replacement`\n\nЯкщо передано масив `replacement` як аргумент, тоді видалені елементи будуть замінені елементами цього масиву.\n\nЯкщо параметри `offset`и`length` такі, що з вихідного масиву нічого очікувати видалено, тоді елементи масиву `replacement` буде вставлено на позицію `offset`\n\n> **Зауваження** :\n> \n> Обратите внимание, что ключи массива`replacement` не зберігаються.\n\nПорада: якщо `replacement` є просто одним елементом, немає необхідності укладати його в `array()` або квадратні дужки, якщо тільки цей елемент сам не є масивом, об'єктом або **`null`**\n\n### Значення, що повертаються\n\nПовертає масив, що містить видалені елементи.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `length` тепер допускає значення null. |\n\n### Приклади\n\n**Приклад #1 Приклади використання **array\\_splice()****\n\n```php\n<?php\n$input = array(\"red\", \"green\", \"blue\", \"yellow\");\narray_splice($input, 2);\nvar_dump($input);\n\n$input = array(\"red\", \"green\", \"blue\", \"yellow\");\narray_splice($input, 1, -1);\nvar_dump($input);\n\n$input = array(\"red\", \"green\", \"blue\", \"yellow\");\narray_splice($input, 1, count($input), \"orange\");\nvar_dump($input);\n\n$input = array(\"red\", \"green\", \"blue\", \"yellow\");\narray_splice($input, -1, 1, array(\"black\", \"maroon\"));\nvar_dump($input);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\narray(2) {\n  [0]=>\n  string(3) \"red\"\n  [1]=>\n  string(5) \"green\"\n}\narray(2) {\n  [0]=>\n  string(3) \"red\"\n  [1]=>\n  string(6) \"yellow\"\n}\narray(2) {\n  [0]=>\n  string(3) \"red\"\n  [1]=>\n  string(6) \"orange\"\n}\narray(5) {\n  [0]=>\n  string(3) \"red\"\n  [1]=>\n  string(5) \"green\"\n  [2]=>\n  string(4) \"blue\"\n  [3]=>\n  string(5) \"black\"\n  [4]=>\n  string(6) \"maroon\"\n}\n```\n\n**Приклад #2 Приклади використання **array\\_splice()****\n\nНаступні вирази еквівалентні:\n\n```php\n<?php\n\n// добавить два элемента в $input\narray_push($input, $x, $y);\narray_splice($input, count($input), 0, array($x, $y));\n\n\n// удалить последний элемент из $input\narray_pop($input);\narray_splice($input, -1);\n\n\n// удалить первый элемент из $input\narray_shift($input);\narray_splice($input, 0, 1);\n\n\n// добавить элемент в начало $input\narray_unshift($input, $x, $y);\narray_splice($input, 0, 0, array($x, $y));\n\n\n// заменить в $input элемент с индексом $x на значение $y\n$input[$x] = $y; // для массивов, где ключ равен смещению\narray_splice($input, $x, 1, $y);\n?>\n```\n\n### Дивіться також\n\n-   [array\\_merge()](function.array-merge.md) \\- Зливає один або більше масивів\n-   [array\\_slice()](function.array-slice.md) \\- Вибирає зріз масиву\n-   [unset()](function.unset.md) \\- Видаляє змінну\n","title":"array\\_splice","contentType":2,"navigation":[{"function.array-slice.md":"« array\\_slice"},{"function.array-sum.md":"array\\_sum »"},{"index.md":"PHP Manual"},{"ref.array.md":"Функції для роботи з масивами"}]}},"__N_SSG":true}