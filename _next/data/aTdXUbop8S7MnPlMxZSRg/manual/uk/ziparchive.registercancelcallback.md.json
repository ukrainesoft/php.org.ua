{"pageProps":{"page":{"slug":"ziparchive.registercancelcallback.md","content":"# ZipArchive::registerCancelCallback\n\n(PHP >= 8.0.0, PECL zip >= 1.17.0)\n\nZipArchive::registerCancelCallback — Реєструє callback-функцію для дозволу скасування під час закриття архіву\n\n### Опис\n\n```methodsynopsis\npublic ZipArchive::registerCancelCallback(callable $callback): bool\n```\n\nРеєструє `callback`\\-функцію для дозволу скасування під час закриття архіву.\n\n### Список параметрів\n\n`callback`\n\nЯкщо функція поверне 0, операція продовжиться, при іншому значенні її буде скасовано.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Приклади\n\nУ цьому прикладі створюється ZIP-архів php.zip і скасовується операція за певних умов запуску.\n\n**Приклад #1 Архівація файлу**\n\n```php\n<?php\n$zip = new ZipArchive();\nif ($zip->open('php.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE)) {\n    $zip->addFile(PHP_BINARY, 'php');\n    $zip->registerCancelCallback(function () {\n        return ($someruncondition ? -1 : 0);\n    });\n    $zip->close();\n}\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Функція доступна, якщо PHP скомпільовано з libzip ≥ 1.6.0.\n\n### Дивіться також\n\n-   [ZipArchive::registerProgressCallback()](ziparchive.registerprogresscallback.md) \\- Реєструє callback-функцію для надання оновлень під час закриття архіву\n","title":"ZipArchive::registerCancelCallback","contentType":2,"navigation":[{"ziparchive.open.md":"« ZipArchive::open"},{"ziparchive.registerprogresscallback.md":"ZipArchive::registerProgressCallback »"},{"index.md":"PHP Manual"},{"class.ziparchive.md":"ZipArchive"}]}},"__N_SSG":true}