{"pageProps":{"page":{"slug":"simplexml.examples-basic.md","content":"## Базове використання SimpleXML\n\nДеякі приклади цього посібника включають рядок XML. Замість того, щоб повторювати її в кожному прикладі, покладіть цей рядок у файл, який включайте в кожному прикладі. Цей рядок наведено у наступному прикладі. Крім цього, можна створити XML-документ і зчитувати його функцією [simplexml\\_load\\_file()](function.simplexml-load-file.md)\n\n**Приклад #1 Файл example.php з рядком XML**\n\n```php\n<?php\n$xmlstr = <<<XML\n<?xml version='1.0' standalone='yes'?>\n<movies>\n <movie>\n  <title>PHP: Появление Парсера</title>\n  <characters>\n   <character>\n    <name>Ms. Coder</name>\n    <actor>Onlivia Actora</actor>\n   </character>\n   <character>\n    <name>Mr. Coder</name>\n    <actor>El Act&#211;r</actor>\n   </character>\n  </characters>\n  <plot>\n   Таким образом, это язык. Это всё равно язык программирования. Или\n   это скриптовый язык? Все раскрывается в этом документальном фильме,\n   похожем на фильм ужасов.\n  </plot>\n  <great-lines>\n   <line>PHP решает все мои проблемы в вебе</line>\n  </great-lines>\n  <rating type=\"thumbs\">7</rating>\n  <rating type=\"stars\">5</rating>\n </movie>\n</movies>\nXML;\n?>\n```\n\nSimpleXML користуватися дуже просто! Спробуйте отримати якийсь рядок чи число з базового документа XML.\n\n**Приклад #2 Получение части документа`<plot>`**\n\n```php\n<?php\ninclude 'example.php';\n\n$movies = new SimpleXMLElement($xmlstr);\n\necho $movies->movie[0]->plot;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nТаким образом, это язык. Это всё равно язык программирования. Или\n   это скриптовый язык? Все раскрывается в этом документальном фильме,\n   похожем на фильм ужасов.\n```\n\nУ PHP отримати доступ до елемента в XML документі, що містить у назві неприпустимі символи (наприклад, дефіс), можна шляхом укладання цього імені елемента у фігурні дужки та апострофи.\n\n**Приклад #3 Получение строки`<line>`**\n\n```php\n<?php\ninclude 'example.php';\n\n$movies = new SimpleXMLElement($xmlstr);\n\necho $movies->movie->{'great-lines'}->line;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nPHP решает все мои проблемы в вебе\n```\n\n**Приклад #4 Доступ до неунікальних елементів SimpleXML**\n\nЯкщо існує кілька екземплярів дочірніх елементів в одному батьківському елементі, то потрібно застосовувати стандартні методи ітерації.\n\n```php\n<?php\ninclude 'example.php';\n\n$movies = new SimpleXMLElement($xmlstr);\n\n/* Для каждого узла <character>, мы отдельно выведем имя <name>. */\nforeach ($movies->movie->characters->character as $character) {\n   echo $character->name, ' играет ', $character->actor, PHP_EOL;\n}\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nMs. Coder играет Onlivia Actora\nMr. Coder играет El ActÓr\n```\n\n> **Зауваження** :\n> \n> Властивості (`$movies->movie` у попередньому прикладі) не є масивами. Це [ітерований](class.iterator.md) об'єкт [у вигляді масиву](class.arrayaccess.md)\n\n**Приклад #5 Використання атрибутів**\n\nДосі ми лише отримували назви та значення елементів. SimpleXML може також отримати доступ до атрибутів елемента. Отримати доступ до атрибуту елемента можна так само, як і до елементів масиву (array).\n\n```php\n<?php\ninclude 'example.php';\n\n$movies = new SimpleXMLElement($xmlstr);\n\n/* Доступ к узлу <rating> первого фильма.\n * Так же выведем шкалу оценок. */\nforeach ($movies->movie[0]->rating as $rating) {\n    switch((string) $rating['type']) { // Получение атрибутов элемента по индексу\n    case 'thumbs':\n        echo $rating, ' thumbs up';\n        break;\n    case 'stars':\n        echo $rating, ' stars';\n        break;\n    }\n}\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n7 thumbs up5 stars\n```\n\n**Приклад #6 Порівняння елементів та атрибутів з текстом**\n\nДля порівняння елемента або атрибута з рядком або для передачі в функцію як текст, необхідно привести його до рядка, використовуючи `(string)`. В іншому випадку, PHP розглядатиме елемент як об'єкт.\n\n```php\n<?php\ninclude 'example.php';\n\n$movies = new SimpleXMLElement($xmlstr);\n\nif ((string) $movies->movie->title == 'PHP: Появление Парсера') {\n    print 'Мой любимый фильм.';\n}\n\necho htmlentities((string) $movies->movie->title);\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nМой любимый фильм.PHP: Появление Парсера\n```\n\n**Приклад #7 Порівняння двох елементів**\n\nДва елементи SimpleXMLElements вважаються різними, навіть якщо вони вказують на той самий об'єкт.\n\n```php\n<?php\ninclude 'example.php';\n\n$movies1 = new SimpleXMLElement($xmlstr);\n$movies2 = new SimpleXMLElement($xmlstr);\nvar_dump($movies1 == $movies2); // false\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(false)\n```\n\n**Приклад #8 Використання XPath**\n\nSimpleXML включає вбудовану підтримку XPath. Пошук усіх елементів `<character>` :\n\n```php\n<?php\ninclude 'example.php';\n\n$movies = new SimpleXMLElement($xmlstr);\n\nforeach ($movies->xpath('//character') as $character) {\n    echo $character->name, ' играет ', $character->actor, PHP_EOL;\n}\n?>\n```\n\n'`//`' служить як шаблон. Для вказівки абсолютного шляху опустіть одну з косих рис.\n\nРезультат виконання наведеного прикладу:\n\n```\nMs. Coder играет Onlivia Actora\nMr. Coder играет by El ActÓr\n```\n\n**Приклад #9 Встановлення значень**\n\nДані SimpleXML не обов'язково повинні бути незмінними. Об'єкт дозволяє маніпулювати всіма елементами.\n\n```php\n<?php\ninclude 'example.php';\n$movies = new SimpleXMLElement($xmlstr);\n\n$movies->movie[0]->characters->character[0]->name = 'Miss Coder';\n\necho $movies->asXML();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<movies>\n <movie>\n  <title>PHP: Появление Парсера</title>\n  <characters>\n   <character>\n    <name>Miss Coder</name>\n    <actor>Onlivia Actora</actor>\n   </character>\n   <character>\n    <name>Mr. Coder</name>\n    <actor>El Act&#xD3;r</actor>\n   </character>\n  </characters>\n  <plot>\n   Таким образом, это язык. Это всё равно язык программирования. Или\n   это скриптовый язык? Все раскрывается в этом документальном фильме,\n   похожем на фильм ужасов.\n  </plot>\n  <great-lines>\n   <line>PHP решает все мои задачи в web</line>\n  </great-lines>\n  <rating type=\"thumbs\">7</rating>\n  <rating type=\"stars\">5</rating>\n </movie>\n</movies>\n```\n\n**Приклад #10 Додавання елементів та атрибутів**\n\nSimpleXML має можливість легко додавати дочірні елементи та атрибути.\n\n```php\n<?php\ninclude 'example.php';\n$movies = new SimpleXMLElement($xmlstr);\n\n$character = $movies->movie[0]->characters->addChild('character');\n$character->addChild('name', 'Mr. Parser');\n$character->addChild('actor', 'John Doe');\n\n$rating = $movies->movie[0]->addChild('rating', 'PG');\n$rating->addAttribute('type', 'mpaa');\n\necho $movies->asXML();\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<movies>\n <movie>\n  <title>PHP: Появление Парсера</title>\n  <characters>\n   <character>\n    <name>Ms. Coder</name>\n    <actor>Onlivia Actora</actor>\n   </character>\n   <character>\n    <name>Mr. Coder</name>\n    <actor>El Act&#xD3;r</actor>\n   </character>\n  <character><name>Mr. Parser</name><actor>John Doe</actor></character></characters>\n  <plot>\n   Таким образом, это язык. Это всё равно язык программирования. Или\n   это скриптовый язык? Все раскрывается в этом документальном фильме,\n   похожем на фильм ужасов.\n  </plot>\n  <great-lines>\n   <line>PHP решает все мои задачи в web</line>\n  </great-lines>\n  <rating type=\"thumbs\">7</rating>\n  <rating type=\"stars\">5</rating>\n <rating type=\"mpaa\">PG</rating></movie>\n</movies>\n```\n\n**Приклад #11 Взаємодія з DOM**\n\nPHP може перетворювати XML-вузли з SimpleXML у формат DOM і навпаки. Цей приклад показує, як можна змінити DOM-елемент у SimpleXML.\n\n```php\n<?php\n$dom = new DOMDocument;\n$dom->loadXML('<books><book><title>чепуха</title></book></books>');\nif (!$dom) {\n    echo 'Ошибка при разборе документа';\n    exit;\n}\n\n$books = simplexml_import_dom($dom);\n\necho $books->book[0]->title;\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nчепуха\n```\n","title":"Базове використання SimpleXML","contentType":2,"navigation":[{"simplexml.examples.md":"« Приклади"},{"simplexml.examples-errors.md":"Робота з помилками XML »"},{"index.md":"PHP Manual"},{"simplexml.examples.md":"Приклади"}]}},"__N_SSG":true}