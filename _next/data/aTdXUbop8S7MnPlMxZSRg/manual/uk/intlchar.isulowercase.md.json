{"pageProps":{"page":{"slug":"intlchar.isulowercase.md","content":"# IntlChar::isULowercase\n\n(PHP 7, PHP 8)\n\nIntlChar::isULowercase — Перевірити, чи символ символу в нижньому регістрі\n\n### Опис\n\n```methodsynopsis\npublic static IntlChar::isULowercase(int|string $codepoint): ?bool\n```\n\nПеревіряє, чи символ є символом у нижньому регістрі.\n\nТе саме, що й `IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_LOWERCASE)`\n\n> **Зауваження** :\n> \n> Відрізняється від [IntlChar::islower()](intlchar.islower.md) і повертає **`true`** для більшої кількості символів.\n\n### Список параметрів\n\n`codepoint`\n\nЦелочисленное (int) задание кода символа (наПриклад`0x2603`для*U+2603 СНІГОВИКА*), або символ закодований рядок UTF-8 (наприклад `\"\\u{2603}\"`) .\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо `codepoint` має властивість \"Lowercase\", **`false`** - якщо ні. У разі виникнення помилки повертає **`null`**\n\n### Приклади\n\n**Приклад #1 Тестування різних способів завдання**\n\n```php\n<?php\nvar_dump(IntlChar::isULowercase(\"A\"));\nvar_dump(IntlChar::isULowercase(\"a\"));\nvar_dump(IntlChar::isULowercase(\"Φ\"));\nvar_dump(IntlChar::isULowercase(\"φ\"));\nvar_dump(IntlChar::isULowercase(\"1\"));\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(false)\nbool(true)\nbool(false)\nbool(true)\nbool(false)\n```\n\n### Дивіться також\n\n-   [IntlChar::islower()](intlchar.islower.md) \\- Перевірити, чи в нижньому регістрі символ\n-   [IntlChar::hasBinaryProperty()](intlchar.hasbinaryproperty.md) \\- Перевірити бінарну властивість Unicode для символу\n-   **`IntlChar::PROPERTY_LOWERCASE`**\n","title":"IntlChar::isULowercase","contentType":2,"navigation":[{"intlchar.isualphabetic.md":"« IntlChar::isUAlphabetic"},{"intlchar.isupper.md":"IntlChar::isupper »"},{"index.md":"PHP Manual"},{"class.intlchar.md":"IntlChar"}]}},"__N_SSG":true}