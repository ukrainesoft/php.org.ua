{"pageProps":{"page":{"slug":"class.reflectionfunction.md","content":"# Клас ReflectionFunction\n\n(PHP 5, PHP 7, PHP 8)\n\n## Вступ\n\nКласс**ReflectionFunction** повідомляє інформацію про функції.\n\n## Огляд класів\n\n```classsynopsis\n\n    \n     class ReflectionFunction\n    \n\n    \n     extends\n      ReflectionFunctionAbstract\n     {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      IS_DEPRECATED;\n\n\n    /* Наследуемые свойства */\n    public\n     string\n      $name;\n\n\n    /* Методы */\n    \n   public __construct(Closure|string $function)\n\n    public static export(string $name, string $return = ?): string\npublic getClosure(): Closure\npublic invoke(mixed ...$args): mixed\npublic invokeArgs(array $args): mixed\npublic isAnonymous(): bool\npublic isDisabled(): bool\npublic __toString(): string\n\n\n    /* Наследуемые методы */\n    private ReflectionFunctionAbstract::__clone(): void\npublic ReflectionFunctionAbstract::getAttributes(?string $name = null, int $flags = 0): array\npublic ReflectionFunctionAbstract::getClosureScopeClass(): ?ReflectionClass\npublic ReflectionFunctionAbstract::getClosureThis(): ?object\npublic ReflectionFunctionAbstract::getClosureUsedVariables(): array\npublic ReflectionFunctionAbstract::getDocComment(): string|false\npublic ReflectionFunctionAbstract::getEndLine(): int|false\npublic ReflectionFunctionAbstract::getExtension(): ?ReflectionExtension\npublic ReflectionFunctionAbstract::getExtensionName(): string|false\npublic ReflectionFunctionAbstract::getFileName(): string|false\npublic ReflectionFunctionAbstract::getName(): string\npublic ReflectionFunctionAbstract::getNamespaceName(): string\npublic ReflectionFunctionAbstract::getNumberOfParameters(): int\npublic ReflectionFunctionAbstract::getNumberOfRequiredParameters(): int\npublic ReflectionFunctionAbstract::getParameters(): array\npublic ReflectionFunctionAbstract::getReturnType(): ?ReflectionType\npublic ReflectionFunctionAbstract::getShortName(): string\npublic ReflectionFunctionAbstract::getStartLine(): int|false\npublic ReflectionFunctionAbstract::getStaticVariables(): array\npublic ReflectionFunctionAbstract::getTentativeReturnType(): ?ReflectionType\npublic ReflectionFunctionAbstract::hasReturnType(): bool\npublic ReflectionFunctionAbstract::hasTentativeReturnType(): bool\npublic ReflectionFunctionAbstract::inNamespace(): bool\npublic ReflectionFunctionAbstract::isClosure(): bool\npublic ReflectionFunctionAbstract::isDeprecated(): bool\npublic ReflectionFunctionAbstract::isGenerator(): bool\npublic ReflectionFunctionAbstract::isInternal(): bool\npublic ReflectionFunctionAbstract::isStatic(): bool\npublic ReflectionFunctionAbstract::isUserDefined(): bool\npublic ReflectionFunctionAbstract::isVariadic(): bool\npublic ReflectionFunctionAbstract::returnsReference(): bool\nabstract public ReflectionFunctionAbstract::__toString(): void\n\n   }\n```\n\n## Обумовлені константи\n\n## Модифікатори ReflectionFunction\n\n**`ReflectionFunction::IS_DEPRECATED`**\n\nВказує, що функція застаріла (deprecated).\n\n## список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Метод[ReflectionFunction::export()](reflectionfunction.export.md)був видалений. |\n\n## Зміст\n\n-   [ReflectionFunction::\\_\\_construct](reflectionfunction.construct.md) \\- Конструктор класу ReflectionFunction\n-   [ReflectionFunction::export](reflectionfunction.export.md) \\- Експортує функції\n-   [ReflectionFunction::getClosure](reflectionfunction.getclosure.md)— Повертає динамічно створене замикання функції\n-   [ReflectionFunction::invoke](reflectionfunction.invoke.md) \\- Викликає функцію\n-   [ReflectionFunction::invokeArgs](reflectionfunction.invokeargs.md) \\- Виклик функції з передачею аргументів\n-   [ReflectionFunction::isAnonymous](reflectionfunction.isanonymous.md)— Перевіряє, чи є функція анонімною\n-   [ReflectionFunction::isDisabled](reflectionfunction.isdisabled.md)— Перевіряє, що функцію вимкнено\n-   [ReflectionFunction::\\_\\_function toString() { \\[native code\\] }](reflectionfunction.tostring.md)— Повертає рядкову виставу об'єкта ReflectionFunction\n","title":"Клас ReflectionFunction","contentType":2,"navigation":[{"reflectionextension.tostring.md":"« ReflectionExtension::\\_\\_function toString() { [native code] }"},{"reflectionfunction.construct.md":"ReflectionFunction::\\_\\_construct »"},{"index.md":"PHP Manual"},{"book.reflection.md":"Reflection"}]}},"__N_SSG":true}