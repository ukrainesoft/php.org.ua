{"pageProps":{"page":{"slug":"class.intldateformatter.md","content":"# Клас IntlDateFormatter\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8, PECL intl >= 1.0.0)\n\n## Вступ\n\nЦе клас, який дозволяє форматувати/розбирати дати відповідно до налаштувань локалі, використовуючи рядкові та/або бібліотечні шаблони.\n\nКлас надає функціональність форматування дат ICU. Він дозволяє користувачам відображати дати у форматі, прийнятому в їхній локалі. Або розбирати значення дат, використовуючи рядкові та/або бібліотечні шаблони.\n\n## Синопсис класу\n\n```classsynopsis\n\n    \n     class IntlDateFormatter\n     {\n\n    /* Константы */\n    \n     public\n     const\n     int\n      FULL;\n\n    public\n     const\n     int\n      LONG;\n\n    public\n     const\n     int\n      MEDIUM;\n\n    public\n     const\n     int\n      SHORT;\n\n    public\n     const\n     int\n      NONE;\n\n    public\n     const\n     int\n      RELATIVE_FULL;\n\n    public\n     const\n     int\n      RELATIVE_LONG;\n\n    public\n     const\n     int\n      RELATIVE_MEDIUM;\n\n    public\n     const\n     int\n      RELATIVE_SHORT;\n\n    public\n     const\n     int\n      GREGORIAN;\n\n    public\n     const\n     int\n      TRADITIONAL;\n\n\n    /* Методы */\n    \n   public __construct(    ?string $locale,    int $dateType = IntlDateFormatter::FULL,    int $timeType = IntlDateFormatter::FULL,    IntlTimeZone|DateTimeZone|string|null $timezone = null,    IntlCalendar|int|null $calendar = null,    ?string $pattern = null)\n\n    public static create(    ?string $locale,    int $dateType = IntlDateFormatter::FULL,    int $timeType = IntlDateFormatter::FULL,    IntlTimeZone|DateTimeZone|string|null $timezone = null,    IntlCalendar|int|null $calendar = null,    ?string $pattern = null): ?IntlDateFormatter\npublic format(IntlCalendar|DateTimeInterface|array|string|int|float $datetime): string|false\npublic static formatObject(IntlCalendar|DateTimeInterface $datetime, array|int|string|null $format = null, ?string $locale = null): string|false\npublic getCalendar(): int|false\npublic getDateType(): int|false\npublic getErrorCode(): int\npublic getErrorMessage(): string\npublic getLocale(int $type = ULOC_ACTUAL_LOCALE): string|false\npublic getPattern(): string|false\npublic getTimeType(): int|false\npublic getTimeZoneId(): string|false\npublic getCalendarObject(): IntlCalendar|false|null\npublic getTimeZone(): IntlTimeZone|false\npublic isLenient(): bool\npublic localtime(string $string, int &$offset = null): array|false\npublic parse(string $string, int &$offset = null): int|float|false\npublic setCalendar(IntlCalendar|int|null $calendar): bool\npublic setLenient(bool $lenient): void\npublic setPattern(string $pattern): bool\npublic setTimeZone(IntlTimeZone|DateTimeZone|string|null $timezone): bool\n\n   }\n```\n\n## Дивіться також\n\n-   [» Форматування дат ICU](https://unicode-org.github.io/icu-docs/apidoc/dev/icu4c/udat_8h.md)\n    \n-   [» Формати дат ICU](https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax)\n    \n\n## Обумовлені константи\n\nЦі константи використовуються для завдання формату в конструкторах DateType та TimeType.\n\n**`IntlDateFormatter::NONE`**\n\nНе вмикати цей елемент\n\n**`IntlDateFormatter::FULL`**\n\nПовний формат (Tuesday, April 12, 1952 AD or 3:30:42pm PST)\n\n**`IntlDateFormatter::LONG`**\n\nДовгий формат (January 12, 1952 or 3:30:32pm)\n\n**`IntlDateFormatter::MEDIUM`**\n\nСередній формат (Jan 12, 1952)\n\n**`IntlDateFormatter::SHORT`**\n\nНайбільш скорочений формат, тільки найнеобхідніші дані (12/13/52 або 3:30pm)\n\n**`IntlDateFormatter::RELATIVE_FULL`**\n\nТе саме, що і **`IntlDateFormatter::FULL`**, але \"вчора\", \"сьогодні\" та \"завтра\" виводяться як `yesterday` `today`и`tomorrow`. Доступно з PHP 8.0.0 тільки для `dateType`\n\n**`IntlDateFormatter::RELATIVE_LONG`**\n\nТе саме, що і **`IntlDateFormatter::LONG`**, але \"вчора\", \"сьогодні\" та \"завтра\" виводяться як `yesterday` `today`и`tomorrow`. Доступно з PHP 8.0.0 тільки для `dateType`\n\n**`IntlDateFormatter::RELATIVE_MEDIUM`**\n\nТе саме, що і **`IntlDateFormatter::MEDIUM`**, але \"вчора\", \"сьогодні\" та \"завтра\" виводяться як `yesterday` `today`и`tomorrow`. Доступно з PHP 8.0.0 тільки для `dateType`\n\n**`IntlDateFormatter::RELATIVE_SHORT`**\n\nТе саме, що і **`IntlDateFormatter::SHORT`**, але \"вчора\", \"сьогодні\" та \"завтра\" виводяться як `yesterday` `today`и`tomorrow`. Доступно з PHP 8.0.0 тільки для `dateType`\n\nНаступні константи використовуються для визначення типу календаря. Ці календарі зав'язані прямо на Григоріанський календар. Не Григоріанський календар має бути заданий у локалі. Наприклад, locale=\"hi@calendar=BUDDHIST\".\n\n**`IntlDateFormatter::TRADITIONAL`**\n\nЧи не Григоріанський календар\n\n**`IntlDateFormatter::GREGORIAN`**\n\nГригоріанський календар\n\n## Зміст\n\n-   [IntlDateFormatter::create](intldateformatter.create.md)— Створює засіб форматування дати\n-   [IntlDateFormatter::format](intldateformatter.format.md)— Форматує значення дати/часу у вигляді рядка\n-   [IntlDateFormatter::formatObject](intldateformatter.formatobject.md) \\- Форматує об'єкт\n-   [IntlDateFormatter::getCalendar](intldateformatter.getcalendar.md)— Отримує тип календаря для об'єкта IntlDateFormatter\n-   [IntlDateFormatter::getDateType](intldateformatter.getdatetype.md)— Отримує тип дати, який використовується IntlDateFormatter\n-   [IntlDateFormatter::getErrorCode](intldateformatter.geterrorcode.md)— Отримує код помилки останньої операції\n-   [IntlDateFormatter::getErrorMessage](intldateformatter.geterrormessage.md)— Отримує текст помилки останньої операції\n-   [IntlDateFormatter::getLocale](intldateformatter.getlocale.md)— Отримує мовний стандарт, який використовується засобом форматування\n-   [IntlDateFormatter::getPattern](intldateformatter.getpattern.md)— Отримує шаблон, який використовується IntlDateFormatter\n-   [IntlDateFormatter::getTimeType](intldateformatter.gettimetype.md)— Отримує тип часу, який використовується IntlDateFormatter\n-   [IntlDateFormatter::getTimeZoneId](intldateformatter.gettimezoneid.md)— Отримує ідентифікатор часового поясу, який використовується IntlDateFormatter\n-   [IntlDateFormatter::getCalendarObject](intldateformatter.getcalendarobject.md)— Отримує копію об'єкта календаря засобу форматування\n-   [IntlDateFormatter::getTimeZone](intldateformatter.gettimezone.md)— Отримує часовий пояс засобу форматування\n-   [IntlDateFormatter::isLenient](intldateformatter.islenient.md)— Отримує поблажливість, яка використовується для IntlDateFormatter\n-   [IntlDateFormatter::localtime](intldateformatter.localtime.md)— Перетворює рядок на значення часу на основі поля\n-   [IntlDateFormatter::parse](intldateformatter.parse.md)— Перетворює рядок на значення позначки часу\n-   [IntlDateFormatter::setCalendar](intldateformatter.setcalendar.md)— Встановлює тип календаря за допомогою форматування.\n-   [IntlDateFormatter::setLenient](intldateformatter.setlenient.md) \\- Встановлює м'який режим аналізатора\n-   [IntlDateFormatter::setPattern](intldateformatter.setpattern.md)— Встановлює шаблон, який використовується IntlDateFormatter\n-   [IntlDateFormatter::setTimeZone](intldateformatter.settimezone.md)— Встановлює часовий пояс засобу форматування\n","title":"Клас IntlDateFormatter","contentType":2,"navigation":[{"intltimezone.usedaylighttime.md":"« IntlTimeZone::useDaylightTime"},{"intldateformatter.create.md":"IntlDateFormatter::create »"},{"index.md":"PHP Manual"},{"book.intl.md":"intl"}]}},"__N_SSG":true}