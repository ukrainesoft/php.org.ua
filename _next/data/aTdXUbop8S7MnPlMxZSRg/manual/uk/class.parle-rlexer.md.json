{"pageProps":{"page":{"slug":"class.parle-rlexer.md","content":"# Клас Parle\\\\RLexer\n\n(PECL parle >= 0.5.1)\n\n## Вступ\n\nКлас лексера з кількома станами. Лексеми можна визначати на льоту. Якщо конкретний екземпляр лексера призначений для використання з [Parle\\\\RParser](class.parle-rparser.md)Ідентифікатори токенів повинні бути взяті звідти. В іншому випадку можуть бути надані довільні ідентифікатори токенів. Зверніть увагу, що [Parle\\\\Parser](class.parle-parser.md) несумісний із цим лексером.\n\n## Огляд класів\n\n```classsynopsis\n\n\n\n    \n     \n      class Parle\\RLexer\n     \n     {\n\n    /* Константы */\n    \n     const\n     int\n      ICASE = 1;\n\n    const\n     int\n      DOT_NOT_LF = 2;\n\n    const\n     int\n      DOT_NOT_CRLF = 4;\n\n    const\n     int\n      SKIP_WS = 8;\n\n    const\n     int\n      MATCH_ZERO_LEN = 16;\n\n\n    /* Свойства */\n    public\n     bool\n      $bol = false;\n\n    public\n     int\n      $flags = 0;\n\n    public\n     int\n      $state = 0;\n\n    public\n     int\n      $marker = 0;\n\n    public\n     int\n      $cursor = 0;\n\n\n    /* Методы */\n    \n   public advance(): void\npublic build(): void\npublic callout(int $id, callable $callback): void\npublic consume(string $data): void\npublic dump(): void\npublic getToken(): Parle\\Token\npublic insertMacro(string $name, string $regex): void\npublic push(string $regex, int $id): void\npublic push(    string $state,    string $regex,    int $id,    string $newState): void\npublic push(string $state, string $regex, string $newState): void\npublic pushState(string $state): int\npublic reset(int $pos): void\n\n   }\n```\n\n## Обумовлені константи\n\n**`Parle\\RLexer::ICASE`**\n\n**`Parle\\RLexer::DOT_NOT_LF`**\n\n**`Parle\\RLexer::DOT_NOT_CRLF`**\n\n**`Parle\\RLexer::SKIP_WS`**\n\n**`Parle\\RLexer::MATCH_ZERO_LEN`**\n\n## Властивості\n\nbol\n\nПрапор початку введення.\n\nflags\n\nПрапори лексера.\n\nstate\n\nПоточний стан лексера, лише читання.\n\nmarker\n\nПозиція останнього збігу токена, лише читання.\n\ncursor\n\nПоточне усунення введення, тільки для читання.\n\n## Зміст\n\n-   [Parle\\\\RLexer::advance](parle-rlexer.advance.md) \\- Обробка наступного правила лексера\n-   [Parle\\\\RLexer::build](parle-rlexer.build.md) \\- Завершує набір правил лексера\n-   [Parle\\\\RLexer::callout](parle-rlexer.callout.md) \\- Визначає callback-функцію токена\n-   [Parle\\\\RLexer::consume](parle-rlexer.consume.md)— Передає дані для обробки\n-   [Parle\\\\RLexer::dump](parle-rlexer.dump.md)— Вивантажує стан пристрою\n-   [Parle\\\\RLexer::getToken](parle-rlexer.gettoken.md)— v\n-   [Parle\\\\RLexer::insertMacro](parle-rlexer.insertmacro.md)— Вставляє макрос регулярного виразу\n-   [Parle\\\\RLexer::push](parle-rlexer.push.md) \\- Додає правило лексера\n-   [Parle\\\\RLexer::pushState](parle-rlexer.pushstate.md) \\- Просуває новий початковий стан\n-   [Parle\\\\RLexer::reset](parle-rlexer.reset.md) \\- скидає лексер\n","title":"Клас Parle\\\\RLexer","contentType":2,"navigation":[{"parle-lexer.reset.md":"« Parle\\\\Lexer::reset"},{"parle-rlexer.advance.md":"Parle\\\\RLexer::advance »"},{"index.md":"PHP Manual"},{"book.parle.md":"Parle"}]}},"__N_SSG":true}