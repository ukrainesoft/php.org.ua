{"pageProps":{"page":{"slug":"parallel-runtime.run.md","content":"# parallel\\\\Runtime::run\n\n(0.8.0)\n\nparallel\\\\Runtime::run — Виконання\n\n### Опис\n\n```methodsynopsis\npublic parallel\\Runtime::run(Closure $task): ?Future\n```\n\nПланує паралельне виконання `task`\n\n```methodsynopsis\npublic parallel\\Runtime::run(Closure $task, array $argv): ?Future\n```\n\nПланує паралельне виконання `task`, передавая`argv` під час виконання.\n\n### Список параметрів\n\n`task`\n\nЗамикання ([Closure](class.closure.md)) зі специфічними характеристиками.\n\n`argv`\n\nМасив (array) аргументів із конкретними характеристиками, які будуть передані `task` під час виконання.\n\n### Характеристики задачі\n\nЗамикання, заплановані для паралельного виконання, не повинні:\n\n-   приймати або повертати значення за посиланням\n-   приймати чи повертати внутрішні об'єкти (дивіться примітки)\n-   виконувати обмежений набір інструкцій\n\nУ замиканнях, призначених для паралельного виконання, заборонено такі інструкції:\n\n-   yield\n-   use by-reference\n-   declare class\n-   declare named function\n\n> **Зауваження** :\n> \n> Вкладені замикання можуть використовувати yield або передачу значення посилання, але не повинні містити оголошення класів або іменованих функцій.\n\n> **Зауваження** :\n> \n> Жодні інструкції не заборонені у файлах, які можуть включати завдання.\n\n### Аргументи характеристик\n\nАргументи не повинні:\n\n-   містити посилання\n-   утримувати ресурси\n-   містити внутрішні об'єкти (дивіться примітки)\n\n> **Зауваження** :\n> \n> У разі ресурсів файлового потоку ресурс буде перетворено на файловий дескриптор і передано як ціле число (int), де це можливо, не підтримується у Windows.\n\n### Примітки до внутрішніх об'єктів\n\nВнутрішні об'єкти зазвичай використовують структуру, що налаштовується, яку не можна безпечно скопіювати за значенням, в PHP в даний час відсутній механізм для цього (без серіалізації), і тому можуть використовуватися тільки об'єкти, які не використовують структуру, що налаштовується.\n\nДеякі внутрішні об'єкти не використовують структуру, що настроюється, наприклад, [parallel\\\\Events\\\\Event](class.parallel-events-event.md) і тому можуть використовуватись спільно.\n\nЗамикання - це особливий вид внутрішнього об'єкта, який підтримує копіювання за значенням, тому може використовуватись спільно.\n\nКанали відіграють ключову роль у написанні паралельного коду і за потреби підтримують одночасний доступ і виконання, тому можуть використовуватися спільно.\n\n**Увага**\n\nКористувальницький клас, що розширює внутрішній клас, може використовувати структуру, що налаштовується, визначену внутрішнім класом, і в цьому випадку вони не можуть бути безпечно скопійовані за значенням і тому не можуть використовуватися спільно.\n\n### Значення, що повертаються\n\n**Увага**\n\nНе можна ігнорувати повертається [parallel\\\\Future](class.parallel-future.md)якщо завдання містить оператор return або throw.\n\n### Винятки\n\n**Увага**\n\nВикидає parallel\\\\Runtime\\\\Error\\\\Closed, якщо [parallel\\\\Runtime](class.parallel-runtime.md) було закрито.\n\n**Увага**\n\nВикидає parallel\\\\Runtime\\\\Error\\\\IllegalFunction, если`task` є замиканням, створеним із внутрішньої функції.\n\n**Увага**\n\nВикидає parallel\\\\Runtime\\\\Error\\\\IllegalInstruction, если`task` містить неприпустимі інструкції.\n\n**Увага**\n\nВикидає parallel\\\\Runtime\\\\Error\\\\IllegalParameter, если`task` приймає або `argv` містить неприпустимі змінні.\n\n**Увага**\n\nВикидає parallel\\\\Runtime\\\\Error\\\\IllegalReturn, если`task` повертається некоректно.\n","title":"parallel\\\\Runtime::run","contentType":2,"navigation":[{"parallel-runtime.construct.md":"« parallel\\\\Runtime::\\_\\_construct"},{"parallel-runtime.close.md":"parallel\\\\Runtime::close »"},{"index.md":"PHP Manual"},{"class.parallel-runtime.md":"parallel\\\\Runtime"}]}},"__N_SSG":true}