{"pageProps":{"page":{"slug":"domnodelist.item.md","content":"# DOMNodeList::item\n\n(PHP 5, PHP 7, PHP 8)\n\nDOMNodeList::item — Отримує вузол із заданим індексом\n\n### Опис\n\n```methodsynopsis\npublic DOMNodeList::item(int $index): DOMElement|DOMNode|DOMNameSpaceNode|null\n```\n\nВитягує вузол із заданим індексом `index` з об'єкту класу [DOMNodeList](class.domnodelist.md)\n\n**Підказка**\n\nЯкщо потрібно дізнатися кількість вузлів у колекції, використовуйте властивість `length` об'єкта класу [DOMNodeList](class.domnodelist.md)\n\n### Список параметрів\n\n`index`\n\nІндекс вузла в колекції.\n\n### Значення, що повертаються\n\nВузол, що знаходиться в позиції `index` об'єкта [DOMNodeList](class.domnodelist.md), или\\*\\*`null`\\*\\*якщо цей індекс неприпустимий.\n\n### Приклади\n\n**Приклад #1 Виведення вмісту таблиці**\n\n```php\n<?php\n\n$doc = new DOMDocument;\n$doc->load('book.xml');\n\n$items = $doc->getElementsByTagName('entry');\n\nfor ($i = 0; $i < $items->length; $i++) {\n    echo $items->item($i)->nodeValue . \"\\n\";\n}\n\n?>\n```\n\nКрім того, можна скористатися [foreach](control-structures.foreach.md);, що буде набагато зручніше:\n\n```php\n<?php\n\nforeach ($items as $item) {\n    echo $item->nodeValue . \"\\n\";\n}\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nTitle\nAuthor\nLanguage\nISBN\nThe Grapes of Wrath\nJohn Steinbeck\nen\n0140186409\nThe Pearl\nJohn Steinbeck\nen\n014017737X\nSamarcande\nAmine Maalouf\nfr\n2253051209\n```\n","title":"DOMNodeList::item","contentType":2,"navigation":[{"domnodelist.getiterator.md":"« DOMNodeList::getIterator"},{"class.domnotation.md":"DOMNotation »"},{"index.md":"PHP Manual"},{"class.domnodelist.md":"DOMNodeList"}]}},"__N_SSG":true}