{"pageProps":{"page":{"slug":"mongodb-driver-server.getinfo.md","content":"# MongoDB\\\\Driver\\\\Server::getInfo\n\n(mongodb >=1.0.0)\n\nMongoDB\\\\Driver\\\\Server::getInfo — Повертає масив інформації, що описує сервер\n\n### Опис\n\n```methodsynopsis\nfinal public MongoDB\\Driver\\Server::getInfo(): array\n```\n\nПовертає масив інформації, що описує сервер. Цей масив отримано з останньої відповіді команди [» hello](https://www.mongodb.com/docs/manual/reference/command/hello/), полученного с помощью[» моніторингу сервера](https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst)\n\n> **Зауваження** :\n> \n> Коли драйвер підключено до балансувальника навантаження, метод поверне відповідь на команду [» hello](https://www.mongodb.com/docs/manual/reference/command/hello/) від резервного сервера під час початкового підтвердження з'єднання. Це відрізняється від інших методів (наприклад, [MongoDB\\\\Driver\\\\Server::getType()](mongodb-driver-server.gettype.md)), які повертають інформацію про самого балансувальника навантаження.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає масив інформації, що описує сервер.\n\n### Помилки\n\n-   При помилці парсингу аргумент кидає виняток[MongoDB\\\\Driver\\\\Exception\\\\InvalidArgumentException](class.mongodb-driver-exception-invalidargumentexception.md)\n\n### Приклади\n\n**Приклад #1 Приклад використання** MongoDB\\\\Driver\\\\Server::getInfo()\\*\\*\\*\\*\n\n```php\n<?php\n\n$manager = new MongoDB\\Driver\\Manager('mongodb://localhost:27017/');\n\n$rp = new MongoDB\\Driver\\ReadPreference('primary');\n$server = $manager->selectServer($rp);\n\nvar_dump($server->getInfo());\n\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\narray(23) {\n  [\"helloOk\"]=>\n  bool(true)\n  [\"topologyVersion\"]=>\n  array(2) {\n    [\"processId\"]=>\n    object(MongoDB\\BSON\\ObjectId)#4 (1) {\n      [\"oid\"]=>\n      string(24) \"617b6d696a3a89d2f77e6df0\"\n    }\n    [\"counter\"]=>\n    int(6)\n  }\n  [\"hosts\"]=>\n  array(1) {\n    [0]=>\n    string(15) \"localhost:27017\"\n  }\n  [\"setName\"]=>\n  string(3) \"rs0\"\n  [\"setVersion\"]=>\n  int(1)\n  [\"ismaster\"]=>\n  bool(true)\n  [\"secondary\"]=>\n  bool(false)\n  [\"primary\"]=>\n  string(15) \"localhost:27017\"\n  [\"me\"]=>\n  string(15) \"localhost:27017\"\n  [\"electionId\"]=>\n  object(MongoDB\\BSON\\ObjectId)#5 (1) {\n    [\"oid\"]=>\n    string(24) \"7fffffff0000000000000001\"\n  }\n  [\"lastWrite\"]=>\n  array(4) {\n    [\"opTime\"]=>\n    array(2) {\n      [\"ts\"]=>\n      object(MongoDB\\BSON\\Timestamp)#6 (2) {\n        [\"increment\"]=>\n        string(1) \"1\"\n        [\"timestamp\"]=>\n        string(10) \"1635478989\"\n      }\n      [\"t\"]=>\n      int(1)\n    }\n    [\"lastWriteDate\"]=>\n    object(MongoDB\\BSON\\UTCDateTime)#7 (1) {\n      [\"milliseconds\"]=>\n      string(13) \"1635478989000\"\n    }\n    [\"majorityOpTime\"]=>\n    array(2) {\n      [\"ts\"]=>\n      object(MongoDB\\BSON\\Timestamp)#8 (2) {\n        [\"increment\"]=>\n        string(1) \"1\"\n        [\"timestamp\"]=>\n        string(10) \"1635478989\"\n      }\n      [\"t\"]=>\n      int(1)\n    }\n    [\"majorityWriteDate\"]=>\n    object(MongoDB\\BSON\\UTCDateTime)#9 (1) {\n      [\"milliseconds\"]=>\n      string(13) \"1635478989000\"\n    }\n  }\n  [\"maxBsonObjectSize\"]=>\n  int(16777216)\n  [\"maxMessageSizeBytes\"]=>\n  int(48000000)\n  [\"maxWriteBatchSize\"]=>\n  int(100000)\n  [\"localTime\"]=>\n  object(MongoDB\\BSON\\UTCDateTime)#10 (1) {\n    [\"milliseconds\"]=>\n    string(13) \"1635478992136\"\n  }\n  [\"logicalSessionTimeoutMinutes\"]=>\n  int(30)\n  [\"connectionId\"]=>\n  int(3)\n  [\"minWireVersion\"]=>\n  int(0)\n  [\"maxWireVersion\"]=>\n  int(13)\n  [\"readOnly\"]=>\n  bool(false)\n  [\"ok\"]=>\n  float(1)\n  [\"$clusterTime\"]=>\n  array(2) {\n    [\"clusterTime\"]=>\n    object(MongoDB\\BSON\\Timestamp)#11 (2) {\n      [\"increment\"]=>\n      string(1) \"1\"\n      [\"timestamp\"]=>\n      string(10) \"1635478989\"\n    }\n    [\"signature\"]=>\n    array(2) {\n      [\"hash\"]=>\n      object(MongoDB\\BSON\\Binary)#12 (2) {\n        [\"data\"]=>\n        string(20) \"\"\n        [\"type\"]=>\n        int(0)\n      }\n      [\"keyId\"]=>\n      int(0)\n    }\n  }\n  [\"operationTime\"]=>\n  object(MongoDB\\BSON\\Timestamp)#13 (2) {\n    [\"increment\"]=>\n    string(1) \"1\"\n    [\"timestamp\"]=>\n    string(10) \"1635478989\"\n  }\n}\n```\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| PECL mongodb 1.11.0 | Коли драйвер підключено до системи балансування навантаження, метод повертає відповідь на команду. `hello` допоміжного сервера під час початкового підтвердження з'єднання. |\n\n### Дивіться також\n\n-   [MongoDB\\\\Driver\\\\ServerDescription::getHelloResponse()](mongodb-driver-serverdescription.gethelloresponse.md) - Повертає останню відповідь сервера \"hello\"\n-   Команда[» hello](https://www.mongodb.com/docs/manual/reference/command/hello/)у посібнику MongoDB\n-   [» Посібник з виявлення та моніторингу серверів](https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst)\n","title":"MongoDB\\\\Driver\\\\Server::getInfo","contentType":2,"navigation":[{"mongodb-driver-server.gethost.md":"« MongoDB\\\\Driver\\\\Server::getHost"},{"mongodb-driver-server.getlatency.md":"MongoDB\\\\Driver\\\\Server::getLatency »"},{"index.md":"PHP Manual"},{"class.mongodb-driver-server.md":"MongoDB\\\\Driver\\\\Server"}]}},"__N_SSG":true}