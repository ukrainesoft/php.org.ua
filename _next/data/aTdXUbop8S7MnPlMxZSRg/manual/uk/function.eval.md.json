{"pageProps":{"page":{"slug":"function.eval.md","content":"# eval\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\neval - Розцінює рядок як PHP-код і виконує його\n\n### Опис\n\n```methodsynopsis\neval(string $code): mixed\n```\n\nВиконує передану у параметрі `code` рядок як код PHP.\n\nВиконуваний код успадковує ту ж [область видимості змінної](language.variables.scope.md), що і рядок, на якому мовна конструкція **eval()** була викликана. Будь-які доступні на цьому рядку змінні будуть доступні для читання та зміни у коді, що виконується. Однак усі оголошені у цьому коді функції та класи отримають глобальну область видимості. Говорячи інакше, компілятор розцінить виконуваний код так, якби це був [підключений](function.include.md)файл.\n\n**Застереження**\n\nМовна конструкція **eval()** може бути *дуже небезпечною*оскільки може виконувати довільний код . *Тому від роботи з нею утримуються*. Якщо ретельний пошук інших рішень показав, що альтернативи немає, уважно перевіряють, щоб до неї *не передавалися дані користувача* без їхньої правильної попередньої перевірки.\n\n### Список параметрів\n\n`code`\n\nРядок коду PHP, що виконується.\n\nКод не повинен бути обгорнутий таким, що відкривається і закривається [тегами PHP](language.basic-syntax.phpmode.md), тобто рядок повинен бути, наприклад, такий: `'echo \"Привіт!\";`, але не такий `''`. Можна перемикатися між режимами PHP- та HTML-коду, наприклад: `'echo \"Код PHP!\"; ?>Код HTML`\n\n``Код, що передається, повинен бути вірним виконуваним кодом PHP. Це означає, що оператори мають бути розділені крапкою з комою (;). При виконанні рядка `'echo \"Привіт!\"'`будет сгенерирована ошибка, а строка`'echo \"Привіт!\";` буде успішно виконано. Указание в строке кода ключевого слова`return` припиняє виконання. Код з рядка буде виконаний у тій області видимості, в якій викликана конструкція **eval()**. Тому змінні, які визначені чи змінені у ній, збережуть видимість після завершення виклику конструкції **eval()** ### Значення, що повертаються Мовна конструкція **eval()** повертає значення **`null`**, або значення, яке повернув оператор, що викликаний у виконуваному коді, `return`. Починаючи з PHP 7, якщо у коді, що виконується, присутня помилка, то конструкція **eval()** викликає виняток \"ParseError\". До PHP 7 у таких випадках поверталося логічне значення **`false`** і тривало нормальне виконання наступного коду. Неможливо зловити помилку парсера у конструкції **eval()** функцією [set_error_handler()](function.set-error-handler.md) ### Приклади **Приклад #1 Приклад функції **eval()**— простое слияние текста** ```php <?php $string = 'чашка'; $name = 'кофе'; $str = 'Это $string с моим $name.'; echo $str. \"\\n\"; eval(\"\\$str = \\\"$str\\\";\"); echo $str. \"\\n\"; ?> ``` Результат виконання наведеного прикладу: ``` Это $string с моим $name. Это чашка с моим кофе. ``` ### Примітки > **Зауваження**: Оскільки це мовна конструкція, а не функція, її не можна викликати як [змінну функцію](functions.variable-functions.md) або передавати як [іменований аргумент](functions.arguments.md#functions.named-arguments) **Підказка** Як і все, що виводить результат у браузер, [функції контролю виведення](book.outcontrol.md) можна викликати, щоб перехопити дані, що виводяться цією функцією, і зберігати їх, наприклад у рядок (string). > **Зауваження** : > > У разі фатальної помилки у коді, що виконується, припиняється виконання всього скрипту. ### Дивіться також - [call_user_func()](function.call-user-func.md) - Викликає callback-функцію, задану у першому параметрі``\n","title":"eval","contentType":2,"navigation":[{"function.die.md":"« die"},{"function.exit.md":"exit »"},{"index.md":"PHP Manual"},{"ref.misc.md":"Різні функції"}]}},"__N_SSG":true}