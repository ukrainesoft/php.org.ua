{"pageProps":{"page":{"slug":"reflectionfunctionabstract.hasreturntype.md","content":"# ReflectionFunctionAbstract::hasReturnType\n\n(PHP 7, PHP 8)\n\nReflectionFunctionAbstract::hasReturnType — Перевіряє, чи має функція оголошений тип значення, що повертається\n\n### Опис\n\n```methodsynopsis\npublic ReflectionFunctionAbstract::hasReturnType(): bool\n```\n\nПеревіряє, чи має функція оголошений тип значення, що повертається.\n\n### Список параметрів\n\nЦя функція не має параметрів.\n\n### Значення, що повертаються\n\nПовертає **`true`**, якщо функція має оголошений тип значення, що повертається, **`false`** в іншому випадку.\n\n### Приклади\n\n**Приклад #1 Приклад**ReflectionFunctionAbstract::hasReturnType()\\*\\*\\*\\*\n\n```php\n<?php\n\nfunction to_int($param) : int {\n    return (int) $param;\n}\n\n$reflection1 = new ReflectionFunction('to_int');\nvar_dump($reflection1->hasReturnType());\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(true)\n```\n\n**Приклад #2 Застосування до вбудованих функцій**\n\n```php\n<?php\n\n$reflection2 = new ReflectionFunction('array_merge');\n\nvar_dump($reflection2->hasReturnType());\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nbool(false)\n```\n\nЦе відбувається через те, що багато внутрішніх функцій не мають оголошених типів для аргументів або значення, що повертається. Тому краще уникати використання цього методу на внутрішніх функціях.\n\n### Дивіться також\n\n-   [ReflectionFunctionAbstract::getReturnType()](reflectionfunctionabstract.getreturntype.md) \\- Отримує оголошений тип значення, що повертається функцією значення\n","title":"ReflectionFunctionAbstract::hasReturnType","contentType":2,"navigation":[{"reflectionfunctionabstract.gettentativereturntype.md":"« ReflectionFunctionAbstract::getTentativeReturnType"},{"reflectionfunctionabstract.hastentativereturntype.md":"ReflectionFunctionAbstract::hasTentativeReturnType »"},{"index.md":"PHP Manual"},{"class.reflectionfunctionabstract.md":"ReflectionFunctionAbstract"}]}},"__N_SSG":true}