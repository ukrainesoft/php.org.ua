{"pageProps":{"page":{"slug":"language.namespaces.nsconstants.md","content":"## Ключове слово namespace та магічна константа \\_\\_NAMESPACE\\_\\_\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nPHP підтримує два способи абстрактного доступу до елементів у поточному просторі імен: магічна константа \\*\\*`__NAMESPACE__`\\*\\*и ключевое слово`namespace`\n\nЗначення константи **`__NAMESPACE__`** - Це рядок, який містить ім'я поточного простору імен. У глобальному просторі поза межами імен вона містить порожній рядок.\n\n**Приклад #1 Приклад використання константи \\_\\_NAMESPACE\\_\\_ у коді з простором імен**\n\n```php\n<?php\n\nnamespace MyProject;\n\necho '\"', __NAMESPACE__, '\"'; // выводит «MyProject»\n\n?>\n```\n\n**Приклад #2 Приклад використання константи \\_\\_NAMESPACE\\_\\_ у глобальному просторі**\n\n```php\n<?php\n\necho '\"', __NAMESPACE__, '\"'; // выводит \"\"\n?>\n```\n\nКонстанта\\*\\*`__NAMESPACE__`\\*\\* корисна для динамічно конструйованих імен, наприклад:\n\n**Приклад #3 Використання константи \\_\\_NAMESPACE\\_\\_ для динамічного конструювання імені**\n\n```php\n<?php\n\nnamespace MyProject;\n\nfunction get($classname)\n{\n    $a = __NAMESPACE__ . '\\\\' . $classname;\n    return new $a;\n}\n\n?>\n```\n\nКлючевое слово`namespace` дозволено вказувати для явного запиту елемента з поточного простору імен або підпростору. Це еквівалент ключового слова `self` для класів у просторі імен.\n\n**Приклад #4 Ключове слово namespace всередині простору імен**\n\n```php\n<?php\n\nnamespace MyProject;\n\nuse blah\\blah as mine; // смотрите «Пространства имён: псевдонимирование и импорт»\n\nblah\\mine(); // вызывает функцию MyProject\\blah\\mine()\nnamespace\\blah\\mine(); // вызывает функцию MyProject\\blah\\mine()\n\nnamespace\\func(); // вызывает функцию MyProject\\func()\nnamespace\\sub\\func(); // вызывает функцию MyProject\\sub\\func()\nnamespace\\cname::method(); // вызывает статический метод \"method\" класса MyProject\\cname\n$a = new namespace\\sub\\cname(); // Создаёт экземпляр класса MyProject\\sub\\cname\n$b = namespace\\CONSTANT; // присваивает значение константы MyProject\\CONSTANT переменной $b\n\n?>\n```\n\n**Приклад #5 Ключове слово namespace у глобальному коді**\n\n```php\n<?php\n\nnamespace\\func(); // Вызывает функцию func()\nnamespace\\sub\\func(); // Вызывает функцию sub\\func()\nnamespace\\cname::method(); // Вызывает статический метод «method» класса cname\n$a = new namespace\\sub\\cname(); // Создаёт экземпляр класса sub\\cname\n$b = namespace\\CONSTANT; // Присваивает значение константы CONSTANT переменной $b\n\n?>\n```\n","title":"Ключове слово namespace та магічна константа \\_\\_NAMESPACE\\_\\_","contentType":2,"navigation":[{"language.namespaces.dynamic.md":"« Простори імен та динамічні особливості мови"},{"language.namespaces.importing.md":"Псевдонімування та імпорт »"},{"index.md":"PHP Manual"},{"language.namespaces.md":"Простори імен"}]}},"__N_SSG":true}