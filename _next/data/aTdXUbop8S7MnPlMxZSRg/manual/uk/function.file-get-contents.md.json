{"pageProps":{"page":{"slug":"function.file-get-contents.md","content":"# file\\_get\\_contents\n\n(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)\n\nfile\\_get\\_contents — Читає вміст файлу в рядок\n\n### Опис\n\n```methodsynopsis\nfile_get_contents(    string $filename,    bool $use_include_path = false,    ?resource $context = null,    int $offset = 0,    ?int $length = null): string|false\n```\n\nДанная функция похожа на функцию[file()](function.file.md) з тією лише різницею, що **file\\_get\\_contents()** повертає вміст файлу в рядку, починаючи з вказаного усунення `offset`и до`length`байт. В случае неудачи,**file\\_get\\_contents()** поверне **`false`**\n\nИспользование функции**file\\_get\\_contents()** найкраще в разі необхідності отримати вміст файлу повністю, оскільки для поліпшення продуктивності функція використовує техніку відображення файлу в пам'ять (memory mapping), якщо вона підтримується вашою операційною системою.\n\n> **Зауваження** :\n> \n> Якщо ви відкриваєте URI, що містить спецсимволи, такі як пропуск, вам потрібно закодувати URI за допомогою [urlencode()](function.urlencode.md)\n\n### Список параметрів\n\n`filename`\n\nІм'я файлу, що читається.\n\n`use_include_path`\n\n> **Зауваження** :\n> \n> Можна використовувати константу \\*\\*`FILE_USE_INCLUDE_PATH`\\*\\*для поиска файла в[include path](ini.core.md#ini.include-path). Тільки пам'ятайте, що якщо ви використовуєте [строгу типізацію](language.types.declarations.md#language.types.declarations.strict), то так зробити не вийде, оскільки **`FILE_USE_INCLUDE_PATH`** має тип int. У такому разі використовуйте **`true`**\n\n`context`\n\nКоректний ресурс контексту, створений за допомогою функції [stream\\_context\\_create()](function.stream-context-create.md). Якщо у використанні особливого контексту немає необхідності, можна пропустити цей параметр, передавши в нього значення **`null`**\n\n`offset`\n\nУсунення, з якого почнеться читання оригінального потоку. Негативне значення усунення буде відраховуватися з кінця потоку.\n\nПошук усунення (`offset`) не підтримується під час роботи з віддаленими файлами. Спроба пошуку усунення на нелокальних файлах може працювати при невеликих усуненнях, але результат буде непередбачуваним, оскільки функція працює на буферизованому потоці.\n\n`length`\n\nМаксимальний розмір даних, що читаються. За промовчанням читання здійснюється доки не буде досягнуто кінець файлу. Зверніть увагу, що цей параметр застосовується і до потоку з фільтрами.\n\n### Значення, що повертаються\n\nФункція повертає прочитані дані або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n**Увага**\n\nЦя функція може повертати як логічне значення \\*\\*`false`\\*\\*так і значення не типу boolean, яке наводиться до **`false`**. За більш детальною інформацією зверніться до розділу [Логічний тип](language.types.boolean.md)Используйте[оператор ===](language.operators.comparison.md) для перевірки значення, яке повертається цією функцією.\n\n### Помилки\n\nБуде згенеровано помилку рівня **`E_WARNING`** у випадках, якщо не вдасться знайти `filename`, задан`length` менше нуля, або пошук по зміщенню `offset` у потоці завершиться невдало.\n\nКогда**file\\_get\\_contents()** викликається у каталозі, у Windows помилка генерується **`E_WARNING`**, а з PHP 7.4 також в інших операційних системах.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | Параметр`length` тепер припускає значення **`null`** |\n| 7.1.0 | Додано підтримку негативних значень `offset` |\n\n### Приклади\n\n**Приклад #1 Отримати та вивести вихідний код домашньої сторінки сайту**\n\n```php\n<?php\n$homepage = file_get_contents('http://www.example.com/');\necho $homepage;\n?>\n```\n\n**Приклад #2 Пошук файлів у include\\_path**\n\n```php\n<?php\n// Если включены строгие типы, то есть объявлено (strict_types=1);\n$file = file_get_contents('./people.txt', true);\n// Иначе\n$file = file_get_contents('./people.txt', FILE_USE_INCLUDE_PATH);\n?>\n```\n\n**Приклад #3 Читання розділу файлу**\n\n```php\n<?php\n// Читаем 14 символов, начиная с 21 символа\n$section = file_get_contents('./people.txt', FALSE, NULL, 20, 14);\nvar_dump($section);\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nstring(14) \"lle Bjori Ro\"\n```\n\n**Приклад #4 Використання потокових контекстів**\n\n```php\n<?php\n// Создаём поток\n$opts = array(\n  'http'=>array(\n    'method'=>\"GET\",\n    'header'=>\"Accept-language: en\\r\\n\" .\n              \"Cookie: foo=bar\\r\\n\"\n  )\n);\n\n$context = stream_context_create($opts);\n\n// Открываем файл с помощью установленных выше HTTP-заголовков\n$file = file_get_contents('http://www.example.com/', false, $context);\n?>\n```\n\n### Примітки\n\n> **Зауваження**: Ця функція безпечна для обробки даних у двійковій формі.\n\n**Підказка**\n\nУ цю функцію як ім'я файлу можна передавати URL-адреси, якщо була включена директива [fopen wrappers](filesystem.configuration.md#ini.allow-url-fopen). Докладніше про те, як вказати ім'я файлу, описано в описі функції [fopen()](function.fopen.md). В розділі \"[Підтримувані протоколи та обгортки](wrappers.md)» також дано посилання на інформацію про можливості підтримуваних обгорток, зауваження щодо роботи з ними та список визначених змінних, які вони дають.\n\n**Увага**\n\nПри використанні SSL Microsoft IIS порушує протокол, закриваючи з'єднання без надсилання індикатора `close_notify`. PHP повідомить про це як \"SSL: Fatal Protocol Error\" в той момент, коли буде досягнуто кінця даних. Щоб обійти це, потрібно встановити директиву [error\\_reporting](errorfunc.configuration.md#ini.error-reporting)на уровень, исключающий E\\_WARNING. PHP вміє визначати, що на стороні сервера проблемний IIS при відкритті потоку обгорткою `https://` та не виводить попередження. Якщо розробник створює сокет `ssl://` через виклик функції [fsockopen()](function.fsockopen.md), він сам відповідає за визначення та придушення цього попередження.\n\n### Дивіться також\n\n-   [file()](function.file.md) \\- Читає вміст файлу та поміщає його в масив\n-   [fgets()](function.fgets.md) \\- Читає рядок із файлу\n-   [fread()](function.fread.md) \\- Бінарно-безпечне читання файлу\n-   [readfile()](function.readfile.md) \\- Виводить файл\n-   [file\\_put\\_contents()](function.file-put-contents.md) \\- Пише дані у файл\n-   [stream\\_get\\_contents()](function.stream-get-contents.md) \\- Читає частину потоку, що залишилася, в рядок\n-   [stream\\_context\\_create()](function.stream-context-create.md) \\- Створює контекст потоку\n-   [$http\\_response\\_header](reserved.variables.httpresponseheader.md)\n","title":"file\\_get\\_contents","contentType":2,"navigation":[{"function.file-exists.md":"« file\\_exists"},{"function.file-put-contents.md":"file\\_put\\_contents »"},{"index.md":"PHP Manual"},{"ref.filesystem.md":"Функції файлової системи"}]}},"__N_SSG":true}