{"pageProps":{"page":{"slug":"install.unix.lighttpd-14.md","content":"## Встановлення PHP на Lighttpd 1.4 на Unix-системах\n\nЦей розділ містить інформацію про встановлення PHP на Unix-системи з сервером Lighttpd 1.4.\n\nПрочитайте, пожалуйста, инструкции по установке Lighttpd в[» документації по Lighttpd](http://trac.lighttpd.net/trac/)перед установкой PHP.\n\nFastCGI - інтерфейс для зв'язку PHP і Lighttpd. FastCGI доступний за замовчуванням у php-cgi.\n\n### Управління процесами php через Lighttpd\n\nДля налаштування Lighttpd на з'єднання з PHP та створення процесів FastCGI необхідно відредагувати конфігураційний файл lighttpd.conf. Переважно підключатися до процесів FastCGI, використовуючи Unix-сокети.\n\n**Приклад #1 Приклад частини файлу lighttpd.conf**\n\n```\nserver.modules += ( \"mod_fastcgi\" )\n\nfastcgi.server = ( \".php\" =>\n  ((\n    \"socket\" => \"/tmp/php.socket\",\n    \"bin-path\" => \"/usr/local/bin/php-cgi\",\n    \"bin-environment\" => (\n      \"PHP_FCGI_CHILDREN\" => \"16\",\n      \"PHP_FCGI_MAX_REQUESTS\" => \"10000\"\n    ),\n    \"min-procs\" => 1,\n    \"max-procs\" => 1,\n    \"idle-timeout\" => 20\n  ))\n)\n```\n\nДиректива bin-path дозволяє lighttpd динамічно запускати процеси FastCGI. Lighttpd буде динамічно створювати дочірні процеси php, відповідно до змінного оточення PHP\\_FCGI\\_CHILDREN. Директива`bin-environment` задає параметри для дочірніх процесів. PHP\\_FCGI\\_MAX\\_REQUESTS визначає поріг, при досягненні якого PHP завершить дочірній процес. Директив `min-procs`и`max-procs` зазвичай варто уникати. PHP керує лише своїми дочірніми процесами, і інструменти кешування в байт-код (наприклад, APC) будуть використовуватися лише у цих дочірніх процесах. Якщо значення `min-procs`установлено больше , загальна кількість процесів, що обробляють запити, дорівнюватиме PHP\\_FCGI\\_CHILDREN\\*min-procs.\n\n### Управління процесами за допомогою spawn-fcgi\n\nLighttpd надає програму spawn-fcgi для полегшення керування дочірніми процесами FastCGI.\n\n### Управління процесами за допомогою php-cgi\n\nКерувати процесами можна і без spawn-fcgi, але це вимагатиме деяких доробок. Змінне оточення PHP\\_FCGI\\_CHILDREN вказує кількість дочірніх процесів, що запускаються PHP для обробки запитів. Змінна PHP\\_FCGI\\_MAX\\_REQUESTS відповідає за кількість запитів, які опрацьовує один процес. Нижче наведено простий bash-скрипт, що полегшує створення дочірніх процесів.\n\n**Приклад #2 Створення FastCGI-обробників**\n\n```\n#!/bin/sh\n\n# Местоположение бинарного файла php-cgi\nPHP=/usr/local/bin/php-cgi\n\n# Местоположение PID-файла\nPHP_PID=/tmp/php.pid\n\n# Привязка к адресу\n#FCGI_BIND_ADDRESS=10.0.1.1:10000\n# Привязка к сокету\nFCGI_BIND_ADDRESS=/tmp/php.sock\n\nPHP_FCGI_CHILDREN=16\nPHP_FCGI_MAX_REQUESTS=10000\n\nenv -i PHP_FCGI_CHILDREN=$PHP_FCGI_CHILDREN \\\n       PHP_FCGI_MAX_REQUESTS=$PHP_FCGI_MAX_REQUESTS \\\n       $PHP -b $FCGI_BIND_ADDRESS &\n\necho $! > \"$PHP_PID\"\n```\n\n### Підключення до віддалених процесів FCGI\n\nОбробники FastCGI можуть бути на декількох окремих машинах для масштабування навантаження.\n\n**Приклад #3 Підключення до віддалених процесів fastcgi**\n\n```\nfastcgi.server = ( \".php\" =>\n   (( \"host\" => \"10.0.0.2\", \"port\" => 1030 ),\n    ( \"host\" => \"10.0.0.3\", \"port\" => 1030 ))\n)\n```\n","title":"Встановлення PHP на Lighttpd 1.4 на Unix-системах","contentType":2,"navigation":[{"install.unix.nginx.md":"Встановлення Nginx 1.4.x на систему Unix"},{"install.unix.litespeed.md":"Веб-сервер LiteSpeed/OpenLiteSpeed ​​на системах Unix »"},{"index.md":"PHP Manual"},{"install.unix.md":"Встановлення на Unix-системи"}]}},"__N_SSG":true}