{"pageProps":{"page":{"slug":"pdostatement.execute.md","content":"# PDOStatement::execute\n\n(PHP 5 >= 5.1.0, PHP 7, PHP 8, PECL pdo >= 0.1.0)\n\nPDOStatement::execute — Запускає підготовлений запит на виконання\n\n### Опис\n\n```methodsynopsis\npublic PDOStatement::execute(?array $params = null): bool\n```\n\nЗапускає [підготовлений запит](pdo.prepared-statements.md). Якщо запит містить маркери параметрів (псевдозмінні), ви повинні:\n\n-   викликати[PDOStatement::bindParam()](pdostatement.bindparam.md)и/или[PDOStatement::bindValue()](pdostatement.bindvalue.md), щоб зв'язати ці маркери, відповідно, зі змінними чи значеннями. Пов'язані змінні передають свої значення як вхідні дані та отримують вихідні значення\n    \n-   або передати масив значень лише на вхід\n    \n\n### Список параметрів\n\n`params`\n\nМасив значень містить стільки елементів, скільки параметрів заявлено в SQL-запиті. Усі значення будуть прийняті як такі, що мають тип **`PDO::PARAM_STR`**\n\nНе можна прив'язати кілька значень одного параметра; наприклад, не можна прив'язати два значення до іменованого параметра у виразі IN().\n\nНе можна прив'язати більше значень, ніж заявлено у запиті; якщо в масиві `params` більше елементів, ніж заявлено у SQL-запиті методом [PDO::prepare()](pdo.prepare.md), виконання запиту завершиться невдачею та буде викликана помилка.\n\n### Значення, що повертаються\n\nПовертає **`true`** у разі успішного виконання або \\*\\*`false`\\*\\*в случае возникновения ошибки.\n\n### Помилки\n\nВидає помилку рівня **`E_WARNING`**, якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_WARNING`**\n\nВикидає виняток [PDOException](class.pdoexception.md), якщо атрибуту **`PDO::ATTR_ERRMODE`**установлено значение**`PDO::ERRMODE_EXCEPTION`**\n\n### Приклади\n\n**Приклад #1 Виконання підготовленого запиту з прив'язкою змінних та значень**\n\n```php\n<?php\n/* Выполнение подготовленного запроса с привязкой переменных и значений */\n$calories = 150;\n$colour = 'gre';\n$sth = $dbh->prepare('SELECT name, colour, calories\n    FROM fruit\n    WHERE calories < :calories AND colour LIKE :colour');\n$sth->bindParam('calories', $calories, PDO::PARAM_INT);\n/* Имена также могут начинаться с двоеточия \":\" (необязательно) */\n$sth->bindValue(':colour', \"%$colour%\");\n$sth->execute();\n?>\n```\n\n**Приклад #2 Виконання підготовленого запиту з масивом іменованих значень**\n\n```php\n<?php\n/* Выполнение подготовленного запроса с передачей массива входных значений */\n$calories = 150;\n$colour = 'red';\n$sth = $dbh->prepare('SELECT name, colour, calories\n    FROM fruit\n    WHERE calories < :calories AND colour = :colour');\n$sth->execute(array('calories' => $calories, 'colour' => $colour));\n/* Ключи массива также могут начинаться с двоеточия \":\" (необязательно) */\n$sth->execute(array(':calories' => $calories, ':colour' => $colour));\n?>\n```\n\n**Приклад #3 Виконання підготовленого запиту з масивом значень позицій**\n\n```php\n<?php\n/* Выполнение подготовленного запроса с передачей массива входных значений */\n$calories = 150;\n$colour = 'red';\n$sth = $dbh->prepare('SELECT name, colour, calories\n    FROM fruit\n    WHERE calories < ? AND colour = ?');\n$sth->execute(array($calories, $colour));\n?>\n```\n\n**Приклад #4 Виконання підготовленого запиту зі змінними, прив'язаними до позиційних заповнювачів**\n\n```php\n<?php\n/* Выполнение подготовленного запроса с привязкой PHP переменных */\n$calories = 150;\n$colour = 'red';\n$sth = $dbh->prepare('SELECT name, colour, calories\n    FROM fruit\n    WHERE calories < ? AND colour = ?');\n$sth->bindParam(1, $calories, PDO::PARAM_INT);\n$sth->bindParam(2, $colour, PDO::PARAM_STR, 12);\n$sth->execute();\n?>\n```\n\n**Приклад #5 Виконання підготовленого запиту з використанням масиву для вираження IN**\n\n```php\n<?php\n/* Выполнение подготовленного запроса с использованием массива для выражения IN */\n$params = array(1, 21, 63, 171);\n/* Создаём строку из знаков вопроса (?) в количестве, равном количеству параметров */\n$place_holders = implode(',', array_fill(0, count($params), '?'));\n\n/*\n    В этом Прикладе подготавливается запрос с достаточным количеством неименованных\n    псевдопеременных (?) для каждого значения из массива $params. Когда запрос будет\n    выполняться, эти знаки вопроса будут заменены на элементы массива. Это не то же\n    самое, что использовать PDOStatement::bindParam(), где привязка осуществляется по\n    ссылке на переменную. PDOStatement::execute() связывает параметры по значению.\n*/\n$sth = $dbh->prepare(\"SELECT id, name FROM contacts WHERE id IN ($place_holders)\");\n$sth->execute($params);\n?>\n```\n\n### Примітки\n\n> **Зауваження** :\n> \n> Для деяких драйверів потрібно [закривати курсор](pdostatement.closecursor.md), перш ніж виконувати наступний запит.\n\n### Дивіться також\n\n-   [PDO::prepare()](pdo.prepare.md) \\- готує запит до виконання та повертає пов'язаний із цим запитом об'єкт\n-   [PDOStatement::bindParam()](pdostatement.bindparam.md) \\- Прив'язує параметр запиту до змінної\n-   [PDOStatement::fetch()](pdostatement.fetch.md) \\- Вилучення наступного рядка з результуючого набору\n-   [PDOStatement::fetchAll()](pdostatement.fetchall.md) \\- Вибирає рядки, що залишилися, з набору результатів\n-   [PDOStatement::fetchColumn()](pdostatement.fetchcolumn.md) \\- Повертає дані одного стовпця наступного рядка результуючого набору\n","title":"PDOStatement::execute","contentType":2,"navigation":[{"pdostatement.errorinfo.md":"« PDOStatement::errorInfo"},{"pdostatement.fetch.md":"PDOStatement::fetch »"},{"index.md":"PHP Manual"},{"class.pdostatement.md":"PDOStatement"}]}},"__N_SSG":true}