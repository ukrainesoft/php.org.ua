{"pageProps":{"page":{"slug":"eio.examples.md","content":"# Приклади\n\n**Приклад #1 Скасування запиту**\n\n```php\n<?php\n /* Вызывается после завершения eio_nop() */\n function my_nop_cb($data, $result) {\n  echo \"my_nop \", $data, \"\\n\";\n }\n\n// Этот eio_nop() будет отменён\n$req = eio_nop(EIO_PRI_DEFAULT, \"my_nop_cb\", \"1\");\nvar_dump($req);\neio_cancel($req);\n\n// Этот eio_nop() будет выполнен\neio_nop(EIO_PRI_DEFAULT, \"my_nop_cb\", \"2\");\n\n// Выполнение запросов\neio_event_loop();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nresource(4) of type (EIO Request Descriptor)\nmy_nop 2\n```\n\n**Приклад #2 [eio\\_chmod()](function.eio-chmod.md)**\n\n```php\n<?php\n$temp_filename = dirname(__FILE__) .\"/eio-temp-file.tmp\";\ntouch($temp_filename);\n\n/* Вызывается после завершения eio_chmod() */\nfunction my_chmod_callback($data, $result) {\n    global $temp_filename;\n\n    if ($result == 0 && !is_readable($temp_filename) && is_writable($temp_filename)) {\n        echo \"eio_chmod_ok\";\n    }\n\n    @unlink($temp_filename);\n}\n\neio_chmod($temp_filename, 0200, EIO_PRI_DEFAULT, \"my_chmod_callback\");\neio_event_loop();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\neio_chmod_ok\n```\n\n**Приклад #3 Створення запиту користувача**\n\n```php\n<?php\n/* Пользовательская функция обратного вызова */\nfunction my_custom_callback($data, $result) {\n    var_dump($data);\n    var_dump(count($result));\n    var_dump($result['data_modified']);\n    var_dump($result['result']);\n}\n\n/* Пользовательский запрос */\nfunction my_custom($data) {\n    var_dump($data);\n\n    $result  = array(\n        'result'        => 1001,\n        'data_modified' => \"my custom data\",\n    );\n\n    return $result;\n}\n\n$data = \"my_custom_data\";\n$req = eio_custom(\"my_custom\", EIO_PRI_DEFAULT, \"my_custom_callback\", $data);\nvar_dump($req);\neio_event_loop();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nresource(4) of type (EIO Request Descriptor)\nstring(14) \"my_custom_data\"\nstring(14) \"my_custom_data\"\nint(2)\nstring(14) \"my custom data\"\nint(1001)\n```\n\n**Приклад #4 Угруповання запитів**\n\n```php\n<?php\n/*\n * Создание группы запросов для открытия, чтения и закрытия файла\n */\n\n$temp_filename = dirname(__FILE__) .\"/eio-file.tmp\";\n$fp = fopen($temp_filename, \"w\");\nfwrite($fp, \"some data\");\nfclose($fp);\n\n/* Вызывается, когда группа запросов будет выполнена */\nfunction my_grp_done($data, $result) {\n global $temp_filename;\n var_dump($result == 0);\n @unlink($temp_filename);\n}\n\n/* Вызывается после выполнения eio_open() */\nfunction my_grp_file_opened_callback($data, $result) {\n global $my_file_fd, $grp;\n\n $my_file_fd = $result;\n\n var_dump($result > 0);\n\n // Создание запроса eio_read() и добавление в группу\n $req = eio_read($my_file_fd, 4, 0, EIO_PRI_DEFAULT, \"my_grp_file_read_callback\");\n eio_grp_add($grp, $req);\n}\n\n/* Вызывается после выполнения eio_read() */\nfunction my_grp_file_read_callback($data, $result) {\n global $my_file_fd, $grp;\n\n var_dump($result);\n\n // Создание запроса eio_close() и добавление в группу\n $req = eio_close($my_file_fd);\n eio_grp_add($grp, $req);\n}\n\n$grp = eio_grp(\"my_grp_done\", \"my_grp_data\");\n\n// Создание запроса eio_open() и добавление в группу\n$req = eio_open($temp_filename, EIO_O_RDWR | EIO_O_APPEND , NULL,\n  EIO_PRI_DEFAULT, \"my_grp_file_opened_callback\", NULL);\neio_grp_add($grp, $req);\nvar_dump($grp);\n\neio_event_loop();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nresource(6) of type (EIO Group Descriptor)\nbool(true)\nstring(4) \"some\"\nbool(true)\n```\n\n**Приклад #5 Використання eio спільно з модулем libevent**\n\n```php\n<?php\nfunction my_eio_poll($fd, $events, $arg) {\n    /* Некоторые действия с libevent могут быть здесь */\n    if (eio_nreqs()) {\n        eio_poll();\n    }\n    /* .. и здесь */\n}\n\nfunction my_nop_cb($d, $r) {\n    var_dump($r); var_dump($d);\n}\n\n$base = event_base_new();\n$event = event_new();\n\n$fd = eio_get_event_stream();\nvar_dump($fd);\n\neio_nop(EIO_PRI_DEFAULT, \"my_nop_cb\", \"nop data\");\neio_mkdir(\"/tmp/abc-eio-temp\", 0750, EIO_PRI_DEFAULT, \"my_nop_cb\", \"nop data\");\n/* Прочие eio_* запросы  ... */\n\n\n// Установка флагов события\nevent_set($event, $fd, EV_READ /*| EV_PERSIST*/, \"my_eio_poll\", array($event, $base));\n\n// Установка основы события\nevent_base_set($event, $base);\n\n// Включение события\nevent_add($event);\n\n// Запуск цикла обработки\nevent_base_loop($base);\n\n/* То же самое доступно через интерфейс буфера libevent */\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nint(3)\nint(0)\nstring(8) \"nop data\"\nint(0)\nstring(10) \"mkdir data\"\n```\n\n**Приклад #6 Використання eio з модулем event**\n\n```php\n<?php\n$base = new EventBase();\n\n// Получаем поток опроса eio.\n// Обратите внимание, что эта переменная должна быть жива все время\n// пока запущен цикл событий\n$eio_stream = eio_get_event_stream();\n\n// Связываем поток опроса eio polling с циклом событий.\n$poll_event = new Event($base, $eio_stream, Event::READ, function () {\n  if (eio_nreqs()) {\n    eio_poll();\n  }\n});\n$poll_event->add();\n\n// Добавляем задачу eio\neio_nop(EIO_PRI_DEFAULT, function () {\n  echo \"eio_nop\\n\";\n});\n\n// Добавляем события\n$timer = Event::timer($base, function () {\n  echo \"прошло 2 секунды\\n\";\n});\n$timer->add(2);\n\n// Отправляем события\n$base->dispatch();\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\neio_nop\nпрошло 2 секунды\n```\n","title":"Приклади","contentType":2,"navigation":[{"eio.constants.md":"« Зумовлені константи"},{"ref.eio.md":"Eio Функції »"},{"index.md":"PHP Manual"},{"book.eio.md":"Eio"}]}},"__N_SSG":true}