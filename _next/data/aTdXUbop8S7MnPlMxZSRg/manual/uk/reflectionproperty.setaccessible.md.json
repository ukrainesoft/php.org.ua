{"pageProps":{"page":{"slug":"reflectionproperty.setaccessible.md","content":"# ReflectionProperty::setAccessible\n\n(PHP 5 >= 5.3.0, PHP 7, PHP 8)\n\nReflectionProperty::setAccessible — Робить властивість доступним\n\n### Опис\n\n```methodsynopsis\npublic ReflectionProperty::setAccessible(bool $accessible): void\n```\n\nЗабезпечує доступ до захищеної або закритої властивості за допомогою методів [ReflectionProperty::getValue()](reflectionproperty.getvalue.md) і [ReflectionProperty::setValue()](reflectionproperty.setvalue.md)\n\n> **Зауваження**: Починаючи з PHP 8.1.0, виклик методу не має сенсу; всі методи викликаються за умовчанням.\n\n### Список параметрів\n\n`accessible`\n\n**`true`** робить властивість доступною, **`false`** - Закриває доступ до властивості.\n\n### Значення, що повертаються\n\nФункція не повертає значення після виконання.\n\n### Приклади\n\n**Приклад #1 Визначення простого класу**\n\n```php\n<?php\nclass MyClass\n{\n    private $foo = 'bar';\n}\n\n$property = new ReflectionProperty(\"MyClass\", \"foo\");\n$property->setAccessible(true);\n\n$obj = new MyClass();\necho $property->getValue($obj);\necho $obj->foo;\n?>\n```\n\nВисновок наведеного прикладу буде схожим на:\n\n```\nbar\nFatal error: Uncaught Error: Cannot access private property MyClass::$foo in /in/WJqTv:12\n```\n\n### Дивіться також\n\n-   [ReflectionProperty::isPrivate()](reflectionproperty.isprivate.md) \\- Перевіряє, чи властивість закрита\n-   [ReflectionProperty::isProtected()](reflectionproperty.isprotected.md) \\- Перевіряє, чи властивість захищена\n","title":"ReflectionProperty::setAccessible","contentType":2,"navigation":[{"reflectionproperty.isstatic.md":"« ReflectionProperty::isStatic"},{"reflectionproperty.setvalue.md":"ReflectionProperty::setValue »"},{"index.md":"PHP Manual"},{"class.reflectionproperty.md":"ReflectionProperty"}]}},"__N_SSG":true}