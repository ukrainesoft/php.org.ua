{"pageProps":{"page":{"slug":"function.strtok.md","content":"# strtok\n\n(PHP 4, PHP 5, PHP 7, PHP 8)\n\nstrtok — Розбиває рядок на токени\n\n### Опис\n\n```methodsynopsis\nstrtok(string $string, string $token): string|false\n```\n\nАльтернативна сигнатура (не підтримується з іменованими аргументами):\n\n```methodsynopsis\nstrtok(string $token): string|false\n```\n\nФункция**strtok()** розбиває рядок (`string`) на підрядки (токени), використовуючи як роздільники символи з `token`. Наприклад, рядок \"This is an example string\" можна розбити на окремі слова з пробілом як роздільник (`token`\n\nЗауважте, що вихідний рядок (`string`) передається лише при першому виклику цієї функції. Черговим дзвінкам передаються тільки роздільники (`token`), оскільки ця функція зберігає вихідний рядок та запам'ятовує позицію у цьому рядку між викликами. Для роботи з новим рядком (`string`) потрібно знову викликати функцію з двома аргументами. Зверніть увагу, що у параметрі `token` дозволено вказувати кілька розділів. Рядок буде ділитися за будь-яким знайденим символом, який міститься в параметрі (`token`\n\n> **Зауваження** :\n> \n> Функція поводиться трохи інакше, ніж можна було б очікувати, знайомлячись з [explode()](function.explode.md). По-перше, послідовність із двох або більше суміжних символів `token` у аналізованому рядку визнається одним роздільником. Ігнорується та `token` на початку чи наприкінці рядка. Наприклад, якщо вказано рядок `«;aaa;;bbb;»`, послідовні виклики функції **strtok()** із символом `«;»`в качестве значения параметра`token` повернуть рядки «aaa» та «bbb», а потім **`false`**. Результатом буде те, що рядок буде поділено лише на два елементи, а виклик `explode(\";\", $string)` поверне масив із 5 елементів.\n\n### Список параметрів\n\n`string`\n\nРядок (string), що розбивається на підрядки (токени).\n\n`token`\n\nРозділювач рядка `string`\n\n### Значення, що повертаються\n\nПовертає токен у вигляді рядка (string) або \\*\\*`false`\\*\\*якщо токенів більше немає.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.3.0 | Тепер видає помилку рівня **`E_WARNING`**, когда параметр`token` не вказано. |\n\n### Приклади\n\n**Приклад #1 Приклад використання функції** strtok()\\*\\*\\*\\*\n\n```php\n<?php\n\n$string = \"This is\\tan example\\nstring\";\n/* В качестве разделителей указываем пробел, табуляцию и перевод строки */\n$tok = strtok($string, \" \\n\\t\");\n\nwhile ($tok !== false) {\n    echo \"Word=$tok<br />\";\n    $tok = strtok(\" \\n\\t\");\n}\n\n?>\n```\n\n**Приклад #2 Спосіб обробки порожніх підрядок функцією **strtok()****\n\n```php\n<?php\n\n$first_token  = strtok('/something', '/');\n$second_token = strtok('/');\nvar_dump($first_token, $second_token);\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\nstring(9) \"something\"\n    bool(false)\n```\n\n**Приклад #3 Відмінність функції **strtok()** від функції [explode()](function.explode.md)**\n\n```php\n<?php\n\n$string = \";aaa;;bbb;\";\n\n$parts = [];\n$tok = strtok($string, \";\");\nwhile ($tok !== false) {\n    $parts[] = $tok;\n    $tok = strtok(\";\");\n}\necho json_encode($parts),\"\\n\";\n\n$parts = explode(\";\", $string);\necho json_encode($parts),\"\\n\";\n\n?>\n```\n\nРезультат виконання наведеного прикладу:\n\n```\n[\"aaa\",\"bbb\"]\n[\"\",\"aaa\",\"\",\"bbb\",\"\"]\n```\n\n### Примітки\n\n**Увага**\n\nЦя функція може повертати як логічне значення \\*\\*`false`\\*\\*так і значення не типу boolean, яке наводиться до **`false`**. За більш детальною інформацією зверніться до розділу [Логічний тип](language.types.boolean.md)Используйте[оператор ===](language.operators.comparison.md) для перевірки значення, яке повертається цією функцією.\n\n### Дивіться також\n\n-   [explode()](function.explode.md) \\- Розбиває рядок за допомогою роздільника\n","title":"strtok","contentType":2,"navigation":[{"function.strstr.md":"« strstr"},{"function.strtolower.md":"strtolower »"},{"index.md":"PHP Manual"},{"ref.strings.md":"Функції для роботи з рядками"}]}},"__N_SSG":true}