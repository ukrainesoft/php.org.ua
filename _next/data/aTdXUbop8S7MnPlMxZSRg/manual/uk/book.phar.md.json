{"pageProps":{"page":{"slug":"book.phar.md","content":"# Phar\n\n-   [Вступ](intro.phar.md)\n-   [Встановлення та налаштування](phar.setup.md)\n    -   [Вимоги](phar.requirements.md)\n    -   [Установка](phar.installation.md)\n    -   [Налаштування під час виконання](phar.configuration.md)\n    -   [Типи ресурсів](phar.resources.md)\n-   [Обумовлені константи](phar.constants.md)\n-   [Використання Phar-архівів](phar.using.md)\n    -   [Використання Phar-архівів: Вступ](phar.using.intro.md)\n    -   [Використання Phar-архівів: обгортка потоку phar](phar.using.stream.md)\n    -   [Використання Phar-архівів: класи Phar та PharData](phar.using.object.md)\n-   [Створення Phar-архівів](phar.creating.md)\n    -   [Створення Phar-архівів: Вступ](phar.creating.intro.md)\n-   [Чим відрізняється phar від tar-або zip-архіву?](phar.fileformat.md)\n    -   [Складові всіх Phar-архівів незалежно від формату файлу](phar.fileformat.ingredients.md)\n    -   [Заглушка Phar-файлу](phar.fileformat.stub.md)\n    -   [Порівняння Phar, Tar та Zip](phar.fileformat.comparison.md)\n    -   [Phar-архіви, засновані на tar](phar.fileformat.tar.md)\n    -   [Phar-архіви на основі zip](phar.fileformat.zip.md)\n    -   [Формат файлу phar](phar.fileformat.phar.md)\n    -   [Прапори глобальної бітової карти Phar](phar.fileformat.flags.md)\n    -   [Опис запису файлу в маніфесті Phar](phar.fileformat.manifestfile.md)\n    -   [Формат підпису Phar](phar.fileformat.signature.md)\n-   [Phar](class.phar.md) \\- Клас Phar\n    -   [Phar::addEmptyDir](phar.addemptydir.md)— Додає в phar-архів порожню директорію\n    -   [Phar::addFile](phar.addfile.md)— Додає в phar-архів файл із файлової системи\n    -   [Phar::addFromString](phar.addfromstring.md)— Додає в phar-архів файл із рядка\n    -   [Phar::apiVersion](phar.apiversion.md)— Повертає версію API\n    -   [Phar::buildFromDirectory](phar.buildfromdirectory.md)— Створює phar-архів із файлів, розташованих усередині директорії\n    -   [Phar::buildFromIterator](phar.buildfromiterator.md) \\- Створює phar-архів з ітератора\n    -   [Phar::canCompress](phar.cancompress.md)— Перевіряє, чи модуль phar підтримує стиснення з використанням zlib або bzip2\n    -   [Phar::canWrite](phar.canwrite.md)— Перевіряє, чи підтримує модуль phar збереження та створення phar-архівів\n    -   [Phar::compress](phar.compress.md) \\- Стискає весь Phar-архів за допомогою Gzip- або Bzip2-стиснення\n    -   [Phar::compressFiles](phar.compressfiles.md)— Стискає всі файли у поточному Phar-архіві\n    -   [Phar::\\_\\_construct](phar.construct.md)— Створює об'єкт Phar-архіву\n    -   [Phar::convertToData](phar.converttodata.md)— Конвертує phar-архів у tar-або zip-файл, що не виконується.\n    -   [Phar::convertToExecutable](phar.converttoexecutable.md)— Конвертує phar-архів в інший формат файлу, що виконується.\n    -   [Phar::copy](phar.copy.md)— Копіює один файл усередині phar-архіву в інший новий файл усередині phar-архіву\n    -   [Phar::count](phar.count.md)— Повертає кількість записів (файлів) у Phar-архіві\n    -   [Phar::createDefaultStub](phar.createdefaultstub.md)— Створити заглушку у форматі phar-архіву\n    -   [Phar::decompress](phar.decompress.md) \\- Розпаковує весь Phar-архів\n    -   [Phar::decompressFiles](phar.decompressfiles.md)— Розпаковує всі файли в поточному Phar-архіві\n    -   [Phar::delMetadata](phar.delmetadata.md)— Видалити глобальні метадані в архіві phar\n    -   [Phar::delete](phar.delete.md)— Видаляє файл усередині phar-архіву\n    -   [Phar::\\_\\_destruct](phar.destruct.md)— Знищує об'єкт архіву Phar\n    -   [Phar::extractTo](phar.extractto.md)— Витягти вміст phar-архіву в директорію\n    -   [Phar::getAlias](phar.getalias.md) \\- Отримати псевдонім для Phar\n    -   [Phar::getMetadata](phar.getmetadata.md)— Витягти метадані phar-архіву\n    -   [Phar::getModified](phar.getmodified.md)— Визначити, чи змінювався phar-архів\n    -   [Phar::getPath](phar.getpath.md)— Отримати реальний шлях до Phar-архіву на диску\n    -   [Phar::getSignature](phar.getsignature.md)— Отримати MD5/SHA1/SHA256/SHA512/OpenSSL підпис Phar-архіву\n    -   [Phar::getStub](phar.getstub.md)— Отримати завантажувач PHP або завантажувач заглушки Phar-архіву\n    -   [Phar::getSupportedCompression](phar.getsupportedcompression.md)— Повертає масив підтримуваних алгоритмів стиснення.\n    -   [Phar::getSupportedSignatures](phar.getsupportedsignatures.md)— Отримати масив підтримуваних алгоритмів підпису архіву\n    -   [Phar::getVersion](phar.getversion.md)— Отримати версію Phar-архіву\n    -   [Phar::hasMetadata](phar.hasmetadata.md)— Перевірити, чи містить phar-архів глобальні метадані\n    -   [Phar::interceptFileFuncs](phar.interceptfilefuncs.md) \\- Вказує phar перехоплювати fopen, file\\_get\\_contents, opendir та всі stat-функції\n    -   [Phar::isBuffering](phar.isbuffering.md)— Перевірити, чи будуть операції з Phar-архівом буферизовані чи записані безпосередньо на диск\n    -   [Phar::isCompressed](phar.iscompressed.md) \\- Повертає Phar::GZ або PHAR::BZ2, якщо phar-архів стиснутий повністю (.tar.gz/tar.bz і так далі)\n    -   [Phar::isFileFormat](phar.isfileformat.md)— Перевірити, що phar-архів має заданий формат (tar/phar/zip)\n    -   [Phar::isValidPharFilename](phar.isvalidpharfilename.md)— Перевіряє, що ім'я файлу є коректним ім'ям phar-архіву.\n    -   [Phar::isWritable](phar.iswritable.md) \\- Перевіряє, чи можна модифікувати phar-архів\n    -   [Phar::loadPhar](phar.loadphar.md)— Завантажити phar-архів із псевдонімом\n    -   [Phar::mapPhar](phar.mapphar.md)— Прочитати поточний запущений phar-архів та зареєструвати його маніфест\n    -   [Phar::mount](phar.mount.md)— Монтування зовнішнього шляху або файлу до віртуального шляху в phar-архіві\n    -   [Phar::mungServer](phar.mungserver.md) \\- Визначити список до чотирьох $\\_SERVER-змінних, які мають бути змінені для запуску\n    -   [Phar::offsetExists](phar.offsetexists.md)— Визначити, чи є файл у архіві\n    -   [Phar::offsetGet](phar.offsetget.md)— Отримати PharFileInfo об'єкт для конкретного файлу\n    -   [Phar::offsetSet](phar.offsetset.md)— Зміна вмісту файлу\n    -   [Phar::offsetUnset](phar.offsetunset.md)— Видалити файл із phar-архіву\n    -   [Phar::running](phar.running.md)— Отримати повний шлях на диску або повний URL запущеного Phar-архіву\n    -   [Phar::setAlias](phar.setalias.md)— Встановити псевдонім для Phar-архіву\n    -   [Phar::setDefaultStub](phar.setdefaultstub.md)— Встановити завантажувач PHP або початкову заглушку Phar-архіву в завантажувач за замовчуванням\n    -   [Phar::setMetadata](phar.setmetadata.md)— Встановити метадані phar-архіву\n    -   [Phar::setSignatureAlgorithm](phar.setsignaturealgorithm.md)— Встановити алгоритм підписання phar-архіву та застосування його\n    -   [Phar::setStub](phar.setstub.md)— Встановити завантажувач або заглушку в Phar-архів\n    -   [Phar::startBuffering](phar.startbuffering.md)— Запуск буферизації операцій запису, відключаючи запис змін Phar-архіву на диск\n    -   [Phar::stopBuffering](phar.stopbuffering.md)— Зупиняє буферизацію та записує всі зміни на диск\n    -   [Phar::unlinkArchive](phar.unlinkarchive.md)— Повністю видалити архів із пам'яті та з диска\n    -   [Phar::webPhar](phar.webphar.md)— Надсилає запит із браузера у внутрішній файл у phar-архіві\n-   [PharData](class.phardata.md) \\- Клас PharData\n    -   [PharData::addEmptyDir](phardata.addemptydir.md)— Додати порожню директорію до tar/zip-архіву\n    -   [PharData::addFile](phardata.addfile.md)— Додати існуючі файли до tar/zip-архіву\n    -   [PharData::addFromString](phardata.addfromstring.md)— Додає файл із рядка до архіву tar/zip\n    -   [PharData::buildFromDirectory](phardata.buildfromdirectory.md)— Створює tar/zip-архів із файлів у директорії\n    -   [PharData::buildFromIterator](phardata.buildfromiterator.md)— Створення tar/zip-архіву за допомогою ітератора\n    -   [PharData::compress](phardata.compress.md)— Стискає весь архів tar/zip, використовуючи стиск Gzip або Bzip2\n    -   [PharData::compressFiles](phardata.compressfiles.md)— Стиснути всі файли у поточному tar/zip-архіві\n    -   [PharData::\\_\\_construct](phardata.construct.md) \\- Конструктор об'єкта PharData\n    -   [PharData::convertToData](phardata.converttodata.md)— Конвертація phar-архіву в tar/zip-архів, що не запускається.\n    -   [PharData::convertToExecutable](phardata.converttoexecutable.md)— Конвертація tar/zip-архіву з даними в phar-архів, що запускається\n    -   [PharData::copy](phardata.copy.md)— Скопіювати файл із tar/zip-архіву в новий файл усередині нього ж\n    -   [PharData::decompress](phardata.decompress.md) \\- Розпакувати весь Phar-архів\n    -   [PharData::decompressFiles](phardata.decompressfiles.md)— Розпакувати всі файли у поточному zip-архіві\n    -   [PharData::delMetadata](phardata.delmetadata.md)— Видалити глобальні метадані для zip-архіву\n    -   [PharData::delete](phardata.delete.md)— Видалити файл із tar/zip-архіву\n    -   [PharData::\\_\\_destruct](phardata.destruct.md)— Знищує об'єкт архіву tar або zip, що не виконується.\n    -   [PharData::extractTo](phardata.extractto.md)— Витягти вміст tar/zip-архіву в директорію\n    -   [PharData::isWritable](phardata.iswritable.md)— Перевірити, чи можна модифікувати tar/zip-архів\n    -   [PharData::offsetSet](phardata.offsetset.md)— Зміна вмісту файлу\n    -   [PharData::offsetUnset](phardata.offsetunset.md)— Видалити файл із tar/zip-архіву\n    -   [PharData::setAlias](phardata.setalias.md)— Функція заглушка (Phar::setAlias ​​не можна використовувати для PharData)\n    -   [PharData::setDefaultStub](phardata.setdefaultstub.md)— Функція заглушка (Phar::setDefaultStub не можна використовувати для PharData)\n    -   [PharData::setMetadata](phardata.setmetadata.md)— Встановити метадані phar-архіву\n    -   [PharData::setSignatureAlgorithm](phardata.setsignaturealgorithm.md)— Встановити алгоритм підписання phar-архіву та застосування його\n    -   [PharData::setStub](phardata.setstub.md)— Функція заглушка (Phar::setStub не можна використовувати для PharData)\n-   [PharFileInfo](class.pharfileinfo.md) \\- Клас PharFileInfo\n    -   [PharFileInfo::chmod](pharfileinfo.chmod.md)— Встановлення прав доступу\n    -   [PharFileInfo::compress](pharfileinfo.compress.md)— Стиснути поточний файл за допомогою zlib або bzip2\n    -   [PharFileInfo::\\_\\_construct](pharfileinfo.construct.md) \\- Конструктор об'єкта PharFileInfo\n    -   [PharFileInfo::decompress](pharfileinfo.decompress.md)— Розтискає поточний файл\n    -   [PharFileInfo::delMetadata](pharfileinfo.delmetadata.md)— Видалити метадані файлу\n    -   [PharFileInfo::\\_\\_destruct](pharfileinfo.destruct.md) \\- Знищує вхідний об'єкт Phar\n    -   [PharFileInfo::getCRC32](pharfileinfo.getcrc32.md)— Отримати контрольну суму CRC32\n    -   [PharFileInfo::getCompressedSize](pharfileinfo.getcompressedsize.md)— Отримати реальний розмір, що займає файл, на диску з урахуванням стиснення\n    -   [PharFileInfo::getContent](pharfileinfo.getcontent.md)— Отримати повний вміст файлу запису\n    -   [PharFileInfo::getMetadata](pharfileinfo.getmetadata.md)— Отримати метадані, пов'язані з файлом\n    -   [PharFileInfo::getPharFlags](pharfileinfo.getpharflags.md)— Отримати прапори файлу в phar-архіві\n    -   [PharFileInfo::hasMetadata](pharfileinfo.hasmetadata.md)— Перевірити, чи є у файлу метадані\n    -   [PharFileInfo::isCRCChecked](pharfileinfo.iscrcchecked.md)— Визначити, чи файл пройшов перевірку CRC\n    -   [PharFileInfo::isCompressed](pharfileinfo.iscompressed.md)— Перевірити, чи файл стиснутий.\n    -   [PharFileInfo::setMetadata](pharfileinfo.setmetadata.md)— Встановлення метаданих для файлу\n-   [PharException](class.pharexception.md) \\- Клас PharException\n","title":"Phar","contentType":2,"navigation":[{"function.lzf-optimized-for.md":"« lzf\\_optimized\\_for"},{"intro.phar.md":"Вступ \""},{"index.md":"PHP Manual"},{"refs.compression.md":"Модулі для стиснення та архівації"}]}},"__N_SSG":true}