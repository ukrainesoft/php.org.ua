{"pageProps":{"page":{"slug":"function.openssl-x509-verify.md","content":"# openssl\\_x509\\_verify\n\n(PHP 7 >= 7.4.0, PHP 8)\n\nopenssl\\_x509\\_verify — Перевірити цифровий підпис сертифіката x509 за допомогою публічного ключа\n\n### Опис\n\n```methodsynopsis\nopenssl_x509_verify(OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key): int\n```\n\n**openssl\\_x509\\_verify()** перевіряє, що сертифікат `certificate` був підписаний приватним ключем, що відповідає публічному ключу `public_key`\n\n### Список параметрів\n\n`x509`\n\nДля списку коректних значень дивіться [Параметри ключів/сертифікатів](openssl.certparams.md)\n\n`public_key`\n\n[OpenSSLAsymmetricKey](class.opensslasymmetrickey.md) - ключ, повернутий функцією [openssl\\_get\\_publickey()](function.openssl-get-publickey.md)\n\nstring - ключ у форматі PEM, такого виду: `-----BEGIN PUBLIC KEY----- MIIBCgK...`\n\n### Значення, що повертаються\n\nПовертає 1, якщо підпис коректний, 0, якщо ні, та -1 у разі виникнення помилки.\n\n### список змін\n\n| Версия | Опис |\n| --- | --- |\n| 8.0.0 | `certificate` тепер приймає екземпляр [OpenSSLCertificate](class.opensslcertificate.md); раніше приймався ресурс ([resource](language.types.resource.md)) типу`OpenSSL X.509` |\n| 8.0.0 | `public_key` тепер приймає екземпляр [OpenSSLAsymmetricKey](class.opensslasymmetrickey.md) або [OpenSSLCertificate](class.opensslcertificate.md); раніше приймався ресурс ([resource](language.types.resource.md)) типу`OpenSSL key`или`OpenSSL X.509` |\n\n### Приклади\n\n**Приклад #1 Приклад використання** openssl\\_x509\\_verify()\\*\\*\\*\\*\n\n```php\n<?php\n$hostname = \"news.php.net\";\n$ssloptions = array(\n    \"capture_peer_cert\" => true,\n    \"capture_peer_cert_chain\" => true,\n    \"allow_self_signed\"=> false,\n    \"CN_match\" => $hostname,\n    \"verify_peer\" => true,\n    \"SNI_enabled\" => true,\n    \"SNI_server_name\" => $hostname,\n);\n\n$ctx = stream_context_create( array(\"ssl\" => $ssloptions) );\n$result = stream_socket_client(\"ssl://$hostname:443\", $errno, $errstr, 30, STREAM_CLIENT_CONNECT, $ctx);\n$cont = stream_context_get_params($result);\n$x509 = $cont[\"options\"][\"ssl\"][\"peer_certificate\"];\n$certparsed = openssl_x509_parse($x509);\n\nforeach($cont[\"options\"][\"ssl\"][\"peer_certificate_chain\"] as $chaincert)\n{\n    $chainparsed = openssl_x509_parse($chaincert);\n    $chain_public_key = openssl_get_publickey($chaincert);\n    $r = openssl_x509_verify($x509, $chain_public_key);\n    if ($r==1)\n    {\n        echo $certparsed['subject']['CN'];\n        echo \" was digitally signed by \";\n        echo $chainparsed['subject']['CN'].\"\\n\";\n    }\n}\n?>\n```\n\n### Дивіться також\n\n-   [openssl\\_verify()](function.openssl-verify.md) \\- Звіряння сигнатури\n-   [openssl\\_get\\_publickey()](function.openssl-get-publickey.md) \\- Псевдонім openssl\\_pkey\\_get\\_public\n","title":"openssl\\_x509\\_verify","contentType":2,"navigation":[{"function.openssl-x509-read.md":"« openssl\\_x509\\_read"},{"class.opensslcertificate.md":"OpenSSLCertificate »"},{"index.md":"PHP Manual"},{"ref.openssl.md":"Функції OpenSSL"}]}},"__N_SSG":true}